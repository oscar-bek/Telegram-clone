From 00d90618b45e5494e6f21dd1fd687cd526030cfc Mon Sep 17 00:00:00 2001
From: oscar-bek <salamov.behzod@gmail.com>
Date: Tue, 22 Jul 2025 15:42:22 +0900
Subject: [PATCH 01/16] Initial commit from Create Next App

---
 .gitignore          |   41 +
 README.md           |   36 +
 app/favicon.ico     |  Bin 0 -> 25931 bytes
 app/globals.css     |   42 +
 app/layout.tsx      |   32 +
 app/page.module.css |  167 ++
 app/page.tsx        |   95 +
 eslint.config.mjs   |   16 +
 next.config.ts      |    7 +
 package-lock.json   | 5389 +++++++++++++++++++++++++++++++++++++++++++
 package.json        |   25 +
 public/file.svg     |    1 +
 public/globe.svg    |    1 +
 public/next.svg     |    1 +
 public/vercel.svg   |    1 +
 public/window.svg   |    1 +
 tsconfig.json       |   27 +
 17 files changed, 5882 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 README.md
 create mode 100644 app/favicon.ico
 create mode 100644 app/globals.css
 create mode 100644 app/layout.tsx
 create mode 100644 app/page.module.css
 create mode 100644 app/page.tsx
 create mode 100644 eslint.config.mjs
 create mode 100644 next.config.ts
 create mode 100644 package-lock.json
 create mode 100644 package.json
 create mode 100644 public/file.svg
 create mode 100644 public/globe.svg
 create mode 100644 public/next.svg
 create mode 100644 public/vercel.svg
 create mode 100644 public/window.svg
 create mode 100644 tsconfig.json

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..5ef6a52
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,41 @@
+# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.
+
+# dependencies
+/node_modules
+/.pnp
+.pnp.*
+.yarn/*
+!.yarn/patches
+!.yarn/plugins
+!.yarn/releases
+!.yarn/versions
+
+# testing
+/coverage
+
+# next.js
+/.next/
+/out/
+
+# production
+/build
+
+# misc
+.DS_Store
+*.pem
+
+# debug
+npm-debug.log*
+yarn-debug.log*
+yarn-error.log*
+.pnpm-debug.log*
+
+# env files (can opt-in for committing if needed)
+.env*
+
+# vercel
+.vercel
+
+# typescript
+*.tsbuildinfo
+next-env.d.ts
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..e215bc4
--- /dev/null
+++ b/README.md
@@ -0,0 +1,36 @@
+This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).
+
+## Getting Started
+
+First, run the development server:
+
+```bash
+npm run dev
+# or
+yarn dev
+# or
+pnpm dev
+# or
+bun dev
+```
+
+Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.
+
+You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.
+
+This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.
+
+## Learn More
+
+To learn more about Next.js, take a look at the following resources:
+
+- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
+- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.
+
+You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!
+
+## Deploy on Vercel
+
+The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.
+
+Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.
diff --git a/app/favicon.ico b/app/favicon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..718d6fea4835ec2d246af9800eddb7ffb276240c
GIT binary patch
literal 25931
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
LrJugUA?W`A8`#=m

literal 0
HcmV?d00001

diff --git a/app/globals.css b/app/globals.css
new file mode 100644
index 0000000..e3734be
--- /dev/null
+++ b/app/globals.css
@@ -0,0 +1,42 @@
+:root {
+  --background: #ffffff;
+  --foreground: #171717;
+}
+
+@media (prefers-color-scheme: dark) {
+  :root {
+    --background: #0a0a0a;
+    --foreground: #ededed;
+  }
+}
+
+html,
+body {
+  max-width: 100vw;
+  overflow-x: hidden;
+}
+
+body {
+  color: var(--foreground);
+  background: var(--background);
+  font-family: Arial, Helvetica, sans-serif;
+  -webkit-font-smoothing: antialiased;
+  -moz-osx-font-smoothing: grayscale;
+}
+
+* {
+  box-sizing: border-box;
+  padding: 0;
+  margin: 0;
+}
+
+a {
+  color: inherit;
+  text-decoration: none;
+}
+
+@media (prefers-color-scheme: dark) {
+  html {
+    color-scheme: dark;
+  }
+}
diff --git a/app/layout.tsx b/app/layout.tsx
new file mode 100644
index 0000000..42fc323
--- /dev/null
+++ b/app/layout.tsx
@@ -0,0 +1,32 @@
+import type { Metadata } from "next";
+import { Geist, Geist_Mono } from "next/font/google";
+import "./globals.css";
+
+const geistSans = Geist({
+  variable: "--font-geist-sans",
+  subsets: ["latin"],
+});
+
+const geistMono = Geist_Mono({
+  variable: "--font-geist-mono",
+  subsets: ["latin"],
+});
+
+export const metadata: Metadata = {
+  title: "Create Next App",
+  description: "Generated by create next app",
+};
+
+export default function RootLayout({
+  children,
+}: Readonly<{
+  children: React.ReactNode;
+}>) {
+  return (
+    <html lang="en">
+      <body className={`${geistSans.variable} ${geistMono.variable}`}>
+        {children}
+      </body>
+    </html>
+  );
+}
diff --git a/app/page.module.css b/app/page.module.css
new file mode 100644
index 0000000..58c71af
--- /dev/null
+++ b/app/page.module.css
@@ -0,0 +1,167 @@
+.page {
+  --gray-rgb: 0, 0, 0;
+  --gray-alpha-200: rgba(var(--gray-rgb), 0.08);
+  --gray-alpha-100: rgba(var(--gray-rgb), 0.05);
+
+  --button-primary-hover: #383838;
+  --button-secondary-hover: #f2f2f2;
+
+  display: grid;
+  grid-template-rows: 20px 1fr 20px;
+  align-items: center;
+  justify-items: center;
+  min-height: 100svh;
+  padding: 80px;
+  gap: 64px;
+  font-family: var(--font-geist-sans);
+}
+
+@media (prefers-color-scheme: dark) {
+  .page {
+    --gray-rgb: 255, 255, 255;
+    --gray-alpha-200: rgba(var(--gray-rgb), 0.145);
+    --gray-alpha-100: rgba(var(--gray-rgb), 0.06);
+
+    --button-primary-hover: #ccc;
+    --button-secondary-hover: #1a1a1a;
+  }
+}
+
+.main {
+  display: flex;
+  flex-direction: column;
+  gap: 32px;
+  grid-row-start: 2;
+}
+
+.main ol {
+  font-family: var(--font-geist-mono);
+  padding-left: 0;
+  margin: 0;
+  font-size: 14px;
+  line-height: 24px;
+  letter-spacing: -0.01em;
+  list-style-position: inside;
+}
+
+.main li:not(:last-of-type) {
+  margin-bottom: 8px;
+}
+
+.main code {
+  font-family: inherit;
+  background: var(--gray-alpha-100);
+  padding: 2px 4px;
+  border-radius: 4px;
+  font-weight: 600;
+}
+
+.ctas {
+  display: flex;
+  gap: 16px;
+}
+
+.ctas a {
+  appearance: none;
+  border-radius: 128px;
+  height: 48px;
+  padding: 0 20px;
+  border: 1px solid transparent;
+  transition:
+    background 0.2s,
+    color 0.2s,
+    border-color 0.2s;
+  cursor: pointer;
+  display: flex;
+  align-items: center;
+  justify-content: center;
+  font-size: 16px;
+  line-height: 20px;
+  font-weight: 500;
+}
+
+a.primary {
+  background: var(--foreground);
+  color: var(--background);
+  gap: 8px;
+}
+
+a.secondary {
+  border-color: var(--gray-alpha-200);
+  min-width: 158px;
+}
+
+.footer {
+  grid-row-start: 3;
+  display: flex;
+  gap: 24px;
+}
+
+.footer a {
+  display: flex;
+  align-items: center;
+  gap: 8px;
+}
+
+.footer img {
+  flex-shrink: 0;
+}
+
+/* Enable hover only on non-touch devices */
+@media (hover: hover) and (pointer: fine) {
+  a.primary:hover {
+    background: var(--button-primary-hover);
+    border-color: transparent;
+  }
+
+  a.secondary:hover {
+    background: var(--button-secondary-hover);
+    border-color: transparent;
+  }
+
+  .footer a:hover {
+    text-decoration: underline;
+    text-underline-offset: 4px;
+  }
+}
+
+@media (max-width: 600px) {
+  .page {
+    padding: 32px;
+    padding-bottom: 80px;
+  }
+
+  .main {
+    align-items: center;
+  }
+
+  .main ol {
+    text-align: center;
+  }
+
+  .ctas {
+    flex-direction: column;
+  }
+
+  .ctas a {
+    font-size: 14px;
+    height: 40px;
+    padding: 0 16px;
+  }
+
+  a.secondary {
+    min-width: auto;
+  }
+
+  .footer {
+    flex-wrap: wrap;
+    align-items: center;
+    justify-content: center;
+  }
+}
+
+@media (prefers-color-scheme: dark) {
+  .logo {
+    filter: invert();
+  }
+}
diff --git a/app/page.tsx b/app/page.tsx
new file mode 100644
index 0000000..52bd15e
--- /dev/null
+++ b/app/page.tsx
@@ -0,0 +1,95 @@
+import Image from "next/image";
+import styles from "./page.module.css";
+
+export default function Home() {
+  return (
+    <div className={styles.page}>
+      <main className={styles.main}>
+        <Image
+          className={styles.logo}
+          src="/next.svg"
+          alt="Next.js logo"
+          width={180}
+          height={38}
+          priority
+        />
+        <ol>
+          <li>
+            Get started by editing <code>app/page.tsx</code>.
+          </li>
+          <li>Save and see your changes instantly.</li>
+        </ol>
+
+        <div className={styles.ctas}>
+          <a
+            className={styles.primary}
+            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=appdir-template&utm_campaign=create-next-app"
+            target="_blank"
+            rel="noopener noreferrer"
+          >
+            <Image
+              className={styles.logo}
+              src="/vercel.svg"
+              alt="Vercel logomark"
+              width={20}
+              height={20}
+            />
+            Deploy now
+          </a>
+          <a
+            href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=appdir-template&utm_campaign=create-next-app"
+            target="_blank"
+            rel="noopener noreferrer"
+            className={styles.secondary}
+          >
+            Read our docs
+          </a>
+        </div>
+      </main>
+      <footer className={styles.footer}>
+        <a
+          href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=appdir-template&utm_campaign=create-next-app"
+          target="_blank"
+          rel="noopener noreferrer"
+        >
+          <Image
+            aria-hidden
+            src="/file.svg"
+            alt="File icon"
+            width={16}
+            height={16}
+          />
+          Learn
+        </a>
+        <a
+          href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=appdir-template&utm_campaign=create-next-app"
+          target="_blank"
+          rel="noopener noreferrer"
+        >
+          <Image
+            aria-hidden
+            src="/window.svg"
+            alt="Window icon"
+            width={16}
+            height={16}
+          />
+          Examples
+        </a>
+        <a
+          href="https://nextjs.org?utm_source=create-next-app&utm_medium=appdir-template&utm_campaign=create-next-app"
+          target="_blank"
+          rel="noopener noreferrer"
+        >
+          <Image
+            aria-hidden
+            src="/globe.svg"
+            alt="Globe icon"
+            width={16}
+            height={16}
+          />
+          Go to nextjs.org →
+        </a>
+      </footer>
+    </div>
+  );
+}
diff --git a/eslint.config.mjs b/eslint.config.mjs
new file mode 100644
index 0000000..c85fb67
--- /dev/null
+++ b/eslint.config.mjs
@@ -0,0 +1,16 @@
+import { dirname } from "path";
+import { fileURLToPath } from "url";
+import { FlatCompat } from "@eslint/eslintrc";
+
+const __filename = fileURLToPath(import.meta.url);
+const __dirname = dirname(__filename);
+
+const compat = new FlatCompat({
+  baseDirectory: __dirname,
+});
+
+const eslintConfig = [
+  ...compat.extends("next/core-web-vitals", "next/typescript"),
+];
+
+export default eslintConfig;
diff --git a/next.config.ts b/next.config.ts
new file mode 100644
index 0000000..e9ffa30
--- /dev/null
+++ b/next.config.ts
@@ -0,0 +1,7 @@
+import type { NextConfig } from "next";
+
+const nextConfig: NextConfig = {
+  /* config options here */
+};
+
+export default nextConfig;
diff --git a/package-lock.json b/package-lock.json
new file mode 100644
index 0000000..a3c058c
--- /dev/null
+++ b/package-lock.json
@@ -0,0 +1,5389 @@
+{
+  "name": "client",
+  "version": "0.1.0",
+  "lockfileVersion": 3,
+  "requires": true,
+  "packages": {
+    "": {
+      "name": "client",
+      "version": "0.1.0",
+      "dependencies": {
+        "next": "15.4.2",
+        "react": "19.1.0",
+        "react-dom": "19.1.0"
+      },
+      "devDependencies": {
+        "@eslint/eslintrc": "^3",
+        "@types/node": "^20",
+        "@types/react": "^19",
+        "@types/react-dom": "^19",
+        "eslint": "^9",
+        "eslint-config-next": "15.4.2",
+        "typescript": "^5"
+      }
+    },
+    "node_modules/@emnapi/core": {
+      "version": "1.4.5",
+      "resolved": "https://registry.npmjs.org/@emnapi/core/-/core-1.4.5.tgz",
+      "integrity": "sha512-XsLw1dEOpkSX/WucdqUhPWP7hDxSvZiY+fsUC14h+FtQ2Ifni4znbBt8punRX+Uj2JG/uDb8nEHVKvrVlvdZ5Q==",
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "@emnapi/wasi-threads": "1.0.4",
+        "tslib": "^2.4.0"
+      }
+    },
+    "node_modules/@emnapi/runtime": {
+      "version": "1.4.5",
+      "resolved": "https://registry.npmjs.org/@emnapi/runtime/-/runtime-1.4.5.tgz",
+      "integrity": "sha512-++LApOtY0pEEz1zrd9vy1/zXVaVJJ/EbAF3u0fXIzPJEDtnITsBGbbK0EkM72amhl/R5b+5xx0Y/QhcVOpuulg==",
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "tslib": "^2.4.0"
+      }
+    },
+    "node_modules/@emnapi/wasi-threads": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/@emnapi/wasi-threads/-/wasi-threads-1.0.4.tgz",
+      "integrity": "sha512-PJR+bOmMOPH8AtcTGAyYNiuJ3/Fcoj2XN/gBEWzDIKh254XO+mM9XoXHk5GNEhodxeMznbg7BlRojVbKN+gC6g==",
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "tslib": "^2.4.0"
+      }
+    },
+    "node_modules/@eslint-community/eslint-utils": {
+      "version": "4.7.0",
+      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz",
+      "integrity": "sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "eslint-visitor-keys": "^3.4.3"
+      },
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      },
+      "peerDependencies": {
+        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
+      }
+    },
+    "node_modules/@eslint-community/eslint-utils/node_modules/eslint-visitor-keys": {
+      "version": "3.4.3",
+      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
+      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/@eslint-community/regexpp": {
+      "version": "4.12.1",
+      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
+      "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
+      }
+    },
+    "node_modules/@eslint/config-array": {
+      "version": "0.21.0",
+      "resolved": "https://registry.npmjs.org/@eslint/config-array/-/config-array-0.21.0.tgz",
+      "integrity": "sha512-ENIdc4iLu0d93HeYirvKmrzshzofPw6VkZRKQGe9Nv46ZnWUzcF1xV01dcvEg/1wXUR61OmmlSfyeyO7EvjLxQ==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@eslint/object-schema": "^2.1.6",
+        "debug": "^4.3.1",
+        "minimatch": "^3.1.2"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      }
+    },
+    "node_modules/@eslint/config-helpers": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/@eslint/config-helpers/-/config-helpers-0.3.0.tgz",
+      "integrity": "sha512-ViuymvFmcJi04qdZeDc2whTHryouGcDlaxPqarTD0ZE10ISpxGUVZGZDx4w01upyIynL3iu6IXH2bS1NhclQMw==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      }
+    },
+    "node_modules/@eslint/core": {
+      "version": "0.15.1",
+      "resolved": "https://registry.npmjs.org/@eslint/core/-/core-0.15.1.tgz",
+      "integrity": "sha512-bkOp+iumZCCbt1K1CmWf0R9pM5yKpDv+ZXtvSyQpudrI9kuFLp+bM2WOPXImuD/ceQuaa8f5pj93Y7zyECIGNA==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@types/json-schema": "^7.0.15"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      }
+    },
+    "node_modules/@eslint/eslintrc": {
+      "version": "3.3.1",
+      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.3.1.tgz",
+      "integrity": "sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ajv": "^6.12.4",
+        "debug": "^4.3.2",
+        "espree": "^10.0.1",
+        "globals": "^14.0.0",
+        "ignore": "^5.2.0",
+        "import-fresh": "^3.2.1",
+        "js-yaml": "^4.1.0",
+        "minimatch": "^3.1.2",
+        "strip-json-comments": "^3.1.1"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/@eslint/js": {
+      "version": "9.31.0",
+      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-9.31.0.tgz",
+      "integrity": "sha512-LOm5OVt7D4qiKCqoiPbA7LWmI+tbw1VbTUowBcUMgQSuM6poJufkFkYDcQpo5KfgD39TnNySV26QjOh7VFpSyw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "url": "https://eslint.org/donate"
+      }
+    },
+    "node_modules/@eslint/object-schema": {
+      "version": "2.1.6",
+      "resolved": "https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgz",
+      "integrity": "sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      }
+    },
+    "node_modules/@eslint/plugin-kit": {
+      "version": "0.3.4",
+      "resolved": "https://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.3.4.tgz",
+      "integrity": "sha512-Ul5l+lHEcw3L5+k8POx6r74mxEYKG5kOb6Xpy2gCRW6zweT6TEhAf8vhxGgjhqrd/VO/Dirhsb+1hNpD1ue9hw==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@eslint/core": "^0.15.1",
+        "levn": "^0.4.1"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      }
+    },
+    "node_modules/@humanfs/core": {
+      "version": "0.19.1",
+      "resolved": "https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz",
+      "integrity": "sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": ">=18.18.0"
+      }
+    },
+    "node_modules/@humanfs/node": {
+      "version": "0.16.6",
+      "resolved": "https://registry.npmjs.org/@humanfs/node/-/node-0.16.6.tgz",
+      "integrity": "sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@humanfs/core": "^0.19.1",
+        "@humanwhocodes/retry": "^0.3.0"
+      },
+      "engines": {
+        "node": ">=18.18.0"
+      }
+    },
+    "node_modules/@humanfs/node/node_modules/@humanwhocodes/retry": {
+      "version": "0.3.1",
+      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.1.tgz",
+      "integrity": "sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": ">=18.18"
+      },
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/nzakas"
+      }
+    },
+    "node_modules/@humanwhocodes/module-importer": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
+      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": ">=12.22"
+      },
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/nzakas"
+      }
+    },
+    "node_modules/@humanwhocodes/retry": {
+      "version": "0.4.3",
+      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.4.3.tgz",
+      "integrity": "sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": ">=18.18"
+      },
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/nzakas"
+      }
+    },
+    "node_modules/@img/sharp-darwin-arm64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-darwin-arm64/-/sharp-darwin-arm64-0.34.3.tgz",
+      "integrity": "sha512-ryFMfvxxpQRsgZJqBd4wsttYQbCxsJksrv9Lw/v798JcQ8+w84mBWuXwl+TT0WJ/WrYOLaYpwQXi3sA9nTIaIg==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-darwin-arm64": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-darwin-x64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-darwin-x64/-/sharp-darwin-x64-0.34.3.tgz",
+      "integrity": "sha512-yHpJYynROAj12TA6qil58hmPmAwxKKC7reUqtGLzsOHfP7/rniNGTL8tjWX6L3CTV4+5P4ypcS7Pp+7OB+8ihA==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-darwin-x64": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-libvips-darwin-arm64": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-darwin-arm64/-/sharp-libvips-darwin-arm64-1.2.0.tgz",
+      "integrity": "sha512-sBZmpwmxqwlqG9ueWFXtockhsxefaV6O84BMOrhtg/YqbTaRdqDE7hxraVE3y6gVM4eExmfzW4a8el9ArLeEiQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-libvips-darwin-x64": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-darwin-x64/-/sharp-libvips-darwin-x64-1.2.0.tgz",
+      "integrity": "sha512-M64XVuL94OgiNHa5/m2YvEQI5q2cl9d/wk0qFTDVXcYzi43lxuiFTftMR1tOnFQovVXNZJ5TURSDK2pNe9Yzqg==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-libvips-linux-arm": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-arm/-/sharp-libvips-linux-arm-1.2.0.tgz",
+      "integrity": "sha512-mWd2uWvDtL/nvIzThLq3fr2nnGfyr/XMXlq8ZJ9WMR6PXijHlC3ksp0IpuhK6bougvQrchUAfzRLnbsen0Cqvw==",
+      "cpu": [
+        "arm"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-libvips-linux-arm64": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-arm64/-/sharp-libvips-linux-arm64-1.2.0.tgz",
+      "integrity": "sha512-RXwd0CgG+uPRX5YYrkzKyalt2OJYRiJQ8ED/fi1tq9WQW2jsQIn0tqrlR5l5dr/rjqq6AHAxURhj2DVjyQWSOA==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-libvips-linux-ppc64": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-ppc64/-/sharp-libvips-linux-ppc64-1.2.0.tgz",
+      "integrity": "sha512-Xod/7KaDDHkYu2phxxfeEPXfVXFKx70EAFZ0qyUdOjCcxbjqyJOEUpDe6RIyaunGxT34Anf9ue/wuWOqBW2WcQ==",
+      "cpu": [
+        "ppc64"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-libvips-linux-s390x": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-s390x/-/sharp-libvips-linux-s390x-1.2.0.tgz",
+      "integrity": "sha512-eMKfzDxLGT8mnmPJTNMcjfO33fLiTDsrMlUVcp6b96ETbnJmd4uvZxVJSKPQfS+odwfVaGifhsB07J1LynFehw==",
+      "cpu": [
+        "s390x"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-libvips-linux-x64": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-x64/-/sharp-libvips-linux-x64-1.2.0.tgz",
+      "integrity": "sha512-ZW3FPWIc7K1sH9E3nxIGB3y3dZkpJlMnkk7z5tu1nSkBoCgw2nSRTFHI5pB/3CQaJM0pdzMF3paf9ckKMSE9Tg==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-libvips-linuxmusl-arm64": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-arm64/-/sharp-libvips-linuxmusl-arm64-1.2.0.tgz",
+      "integrity": "sha512-UG+LqQJbf5VJ8NWJ5Z3tdIe/HXjuIdo4JeVNADXBFuG7z9zjoegpzzGIyV5zQKi4zaJjnAd2+g2nna8TZvuW9Q==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-libvips-linuxmusl-x64": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-x64/-/sharp-libvips-linuxmusl-x64-1.2.0.tgz",
+      "integrity": "sha512-SRYOLR7CXPgNze8akZwjoGBoN1ThNZoqpOgfnOxmWsklTGVfJiGJoC/Lod7aNMGA1jSsKWM1+HRX43OP6p9+6Q==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-linux-arm": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-linux-arm/-/sharp-linux-arm-0.34.3.tgz",
+      "integrity": "sha512-oBK9l+h6KBN0i3dC8rYntLiVfW8D8wH+NPNT3O/WBHeW0OQWCjfWksLUaPidsrDKpJgXp3G3/hkmhptAW0I3+A==",
+      "cpu": [
+        "arm"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-linux-arm": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-linux-arm64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-linux-arm64/-/sharp-linux-arm64-0.34.3.tgz",
+      "integrity": "sha512-QdrKe3EvQrqwkDrtuTIjI0bu6YEJHTgEeqdzI3uWJOH6G1O8Nl1iEeVYRGdj1h5I21CqxSvQp1Yv7xeU3ZewbA==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-linux-arm64": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-linux-ppc64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-linux-ppc64/-/sharp-linux-ppc64-0.34.3.tgz",
+      "integrity": "sha512-GLtbLQMCNC5nxuImPR2+RgrviwKwVql28FWZIW1zWruy6zLgA5/x2ZXk3mxj58X/tszVF69KK0Is83V8YgWhLA==",
+      "cpu": [
+        "ppc64"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-linux-ppc64": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-linux-s390x": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-linux-s390x/-/sharp-linux-s390x-0.34.3.tgz",
+      "integrity": "sha512-3gahT+A6c4cdc2edhsLHmIOXMb17ltffJlxR0aC2VPZfwKoTGZec6u5GrFgdR7ciJSsHT27BD3TIuGcuRT0KmQ==",
+      "cpu": [
+        "s390x"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-linux-s390x": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-linux-x64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-linux-x64/-/sharp-linux-x64-0.34.3.tgz",
+      "integrity": "sha512-8kYso8d806ypnSq3/Ly0QEw90V5ZoHh10yH0HnrzOCr6DKAPI6QVHvwleqMkVQ0m+fc7EH8ah0BB0QPuWY6zJQ==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-linux-x64": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-linuxmusl-arm64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-linuxmusl-arm64/-/sharp-linuxmusl-arm64-0.34.3.tgz",
+      "integrity": "sha512-vAjbHDlr4izEiXM1OTggpCcPg9tn4YriK5vAjowJsHwdBIdx0fYRsURkxLG2RLm9gyBq66gwtWI8Gx0/ov+JKQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-linuxmusl-arm64": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-linuxmusl-x64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-linuxmusl-x64/-/sharp-linuxmusl-x64-0.34.3.tgz",
+      "integrity": "sha512-gCWUn9547K5bwvOn9l5XGAEjVTTRji4aPTqLzGXHvIr6bIDZKNTA34seMPgM0WmSf+RYBH411VavCejp3PkOeQ==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "Apache-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-libvips-linuxmusl-x64": "1.2.0"
+      }
+    },
+    "node_modules/@img/sharp-wasm32": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-wasm32/-/sharp-wasm32-0.34.3.tgz",
+      "integrity": "sha512-+CyRcpagHMGteySaWos8IbnXcHgfDn7pO2fiC2slJxvNq9gDipYBN42/RagzctVRKgxATmfqOSulgZv5e1RdMg==",
+      "cpu": [
+        "wasm32"
+      ],
+      "license": "Apache-2.0 AND LGPL-3.0-or-later AND MIT",
+      "optional": true,
+      "dependencies": {
+        "@emnapi/runtime": "^1.4.4"
+      },
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-win32-arm64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-win32-arm64/-/sharp-win32-arm64-0.34.3.tgz",
+      "integrity": "sha512-MjnHPnbqMXNC2UgeLJtX4XqoVHHlZNd+nPt1kRPmj63wURegwBhZlApELdtxM2OIZDRv/DFtLcNhVbd1z8GYXQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "Apache-2.0 AND LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-win32-ia32": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-win32-ia32/-/sharp-win32-ia32-0.34.3.tgz",
+      "integrity": "sha512-xuCdhH44WxuXgOM714hn4amodJMZl3OEvf0GVTm0BEyMeA2to+8HEdRPShH0SLYptJY1uBw+SCFP9WVQi1Q/cw==",
+      "cpu": [
+        "ia32"
+      ],
+      "license": "Apache-2.0 AND LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@img/sharp-win32-x64": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/@img/sharp-win32-x64/-/sharp-win32-x64-0.34.3.tgz",
+      "integrity": "sha512-OWwz05d++TxzLEv4VnsTz5CmZ6mI6S05sfQGEMrNrQcOEERbX46332IvE7pO/EUiw7jUrrS40z/M7kPyjfl04g==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "Apache-2.0 AND LGPL-3.0-or-later",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      }
+    },
+    "node_modules/@napi-rs/wasm-runtime": {
+      "version": "0.2.12",
+      "resolved": "https://registry.npmjs.org/@napi-rs/wasm-runtime/-/wasm-runtime-0.2.12.tgz",
+      "integrity": "sha512-ZVWUcfwY4E/yPitQJl481FjFo3K22D6qF0DuFH6Y/nbnE11GY5uguDxZMGXPQ8WQ0128MXQD7TnfHyK4oWoIJQ==",
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "@emnapi/core": "^1.4.3",
+        "@emnapi/runtime": "^1.4.3",
+        "@tybys/wasm-util": "^0.10.0"
+      }
+    },
+    "node_modules/@next/env": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/env/-/env-15.4.2.tgz",
+      "integrity": "sha512-kd7MvW3pAP7tmk1NaiX4yG15xb2l4gNhteKQxt3f+NGR22qwPymn9RBuv26QKfIKmfo6z2NpgU8W2RT0s0jlvg==",
+      "license": "MIT"
+    },
+    "node_modules/@next/eslint-plugin-next": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/eslint-plugin-next/-/eslint-plugin-next-15.4.2.tgz",
+      "integrity": "sha512-k0rjdWjXBY6tAOty1ckrMETE6Mx66d85NsgcAIdDp7/cXOsTJ93ywmbg3uUcpxX5TUHFEcCWI5mb8nPhwCe9jg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "fast-glob": "3.3.1"
+      }
+    },
+    "node_modules/@next/swc-darwin-arm64": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/swc-darwin-arm64/-/swc-darwin-arm64-15.4.2.tgz",
+      "integrity": "sha512-ovqjR8NjCBdBf1U+R/Gvn0RazTtXS9n6wqs84iFaCS1NHbw9ksVE4dfmsYcLoyUVd9BWE0bjkphOWrrz8uz/uw==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@next/swc-darwin-x64": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/swc-darwin-x64/-/swc-darwin-x64-15.4.2.tgz",
+      "integrity": "sha512-I8d4W7tPqbdbHRI4z1iBfaoJIBrEG4fnWKIe+Rj1vIucNZ5cEinfwkBt3RcDF00bFRZRDpvKuDjgMFD3OyRBnw==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@next/swc-linux-arm64-gnu": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-gnu/-/swc-linux-arm64-gnu-15.4.2.tgz",
+      "integrity": "sha512-lvhz02dU3Ec5thzfQ2RCUeOFADjNkS/px1W7MBt7HMhf0/amMfT8Z/aXOwEA+cVWN7HSDRSUc8hHILoHmvajsg==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@next/swc-linux-arm64-musl": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-musl/-/swc-linux-arm64-musl-15.4.2.tgz",
+      "integrity": "sha512-v+5PPfL8UP+KKHS3Mox7QMoeFdMlaV0zeNMIF7eLC4qTiVSO0RPNnK0nkBZSD5BEkkf//c+vI9s/iHxddCZchA==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@next/swc-linux-x64-gnu": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-gnu/-/swc-linux-x64-gnu-15.4.2.tgz",
+      "integrity": "sha512-PHLYOC9W2cu6I/JEKo77+LW4uPNvyEQiSkVRUQPsOIsf01PRr8PtPhwtz3XNnC9At8CrzPkzqQ9/kYDg4R4Inw==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@next/swc-linux-x64-musl": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-musl/-/swc-linux-x64-musl-15.4.2.tgz",
+      "integrity": "sha512-lpmUF9FfLFns4JbTu+5aJGA8aR9dXaA12eoNe9CJbVkGib0FDiPa4kBGTwy0xDxKNGlv3bLDViyx1U+qafmuJQ==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@next/swc-win32-arm64-msvc": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/swc-win32-arm64-msvc/-/swc-win32-arm64-msvc-15.4.2.tgz",
+      "integrity": "sha512-aMjogoGnRepas0LQ/PBPsvvUzj+IoXw2IoDSEShEtrsu2toBiaxEWzOQuPZ8nie8+1iF7TA63S7rlp3YWAjNEg==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@next/swc-win32-x64-msvc": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/@next/swc-win32-x64-msvc/-/swc-win32-x64-msvc-15.4.2.tgz",
+      "integrity": "sha512-FxwauyexSFu78wEqR/+NB9MnqXVj6SxJKwcVs2CRjeSX/jBagDCgtR2W36PZUYm0WPgY1pQ3C1+nn7zSnwROuw==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@nodelib/fs.scandir": {
+      "version": "2.1.5",
+      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
+      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@nodelib/fs.stat": "2.0.5",
+        "run-parallel": "^1.1.9"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/@nodelib/fs.stat": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
+      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/@nodelib/fs.walk": {
+      "version": "1.2.8",
+      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
+      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@nodelib/fs.scandir": "2.1.5",
+        "fastq": "^1.6.0"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/@nolyfill/is-core-module": {
+      "version": "1.0.39",
+      "resolved": "https://registry.npmjs.org/@nolyfill/is-core-module/-/is-core-module-1.0.39.tgz",
+      "integrity": "sha512-nn5ozdjYQpUCZlWGuxcJY/KpxkWQs4DcbMCmKojjyrYDEAGy4Ce19NN4v5MduafTwJlbKc99UA8YhSVqq9yPZA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=12.4.0"
+      }
+    },
+    "node_modules/@rtsao/scc": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/@rtsao/scc/-/scc-1.1.0.tgz",
+      "integrity": "sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@rushstack/eslint-patch": {
+      "version": "1.12.0",
+      "resolved": "https://registry.npmjs.org/@rushstack/eslint-patch/-/eslint-patch-1.12.0.tgz",
+      "integrity": "sha512-5EwMtOqvJMMa3HbmxLlF74e+3/HhwBTMcvt3nqVJgGCozO6hzIPOBlwm8mGVNR9SN2IJpxSnlxczyDjcn7qIyw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@swc/helpers": {
+      "version": "0.5.15",
+      "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.5.15.tgz",
+      "integrity": "sha512-JQ5TuMi45Owi4/BIMAJBoSQoOJu12oOk/gADqlcUL9JEdHB8vyjUSsxqeNXnmXHjYKMi2WcYtezGEEhqUI/E2g==",
+      "license": "Apache-2.0",
+      "dependencies": {
+        "tslib": "^2.8.0"
+      }
+    },
+    "node_modules/@tybys/wasm-util": {
+      "version": "0.10.0",
+      "resolved": "https://registry.npmjs.org/@tybys/wasm-util/-/wasm-util-0.10.0.tgz",
+      "integrity": "sha512-VyyPYFlOMNylG45GoAe0xDoLwWuowvf92F9kySqzYh8vmYm7D2u4iUJKa1tOUpS70Ku13ASrOkS4ScXFsTaCNQ==",
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "tslib": "^2.4.0"
+      }
+    },
+    "node_modules/@types/estree": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
+      "integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@types/json-schema": {
+      "version": "7.0.15",
+      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
+      "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@types/json5": {
+      "version": "0.0.29",
+      "resolved": "https://registry.npmjs.org/@types/json5/-/json5-0.0.29.tgz",
+      "integrity": "sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@types/node": {
+      "version": "20.19.9",
+      "resolved": "https://registry.npmjs.org/@types/node/-/node-20.19.9.tgz",
+      "integrity": "sha512-cuVNgarYWZqxRJDQHEB58GEONhOK79QVR/qYx4S7kcUObQvUwvFnYxJuuHUKm2aieN9X3yZB4LZsuYNU1Qphsw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "undici-types": "~6.21.0"
+      }
+    },
+    "node_modules/@types/react": {
+      "version": "19.1.8",
+      "resolved": "https://registry.npmjs.org/@types/react/-/react-19.1.8.tgz",
+      "integrity": "sha512-AwAfQ2Wa5bCx9WP8nZL2uMZWod7J7/JSplxbTmBQ5ms6QpqNYm672H0Vu9ZVKVngQ+ii4R/byguVEUZQyeg44g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "csstype": "^3.0.2"
+      }
+    },
+    "node_modules/@types/react-dom": {
+      "version": "19.1.6",
+      "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-19.1.6.tgz",
+      "integrity": "sha512-4hOiT/dwO8Ko0gV1m/TJZYk3y0KBnY9vzDh7W+DH17b2HFSOGgdj33dhihPeuy3l0q23+4e+hoXHV6hCC4dCXw==",
+      "dev": true,
+      "license": "MIT",
+      "peerDependencies": {
+        "@types/react": "^19.0.0"
+      }
+    },
+    "node_modules/@typescript-eslint/eslint-plugin": {
+      "version": "8.38.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.38.0.tgz",
+      "integrity": "sha512-CPoznzpuAnIOl4nhj4tRr4gIPj5AfKgkiJmGQDaq+fQnRJTYlcBjbX3wbciGmpoPf8DREufuPRe1tNMZnGdanA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@eslint-community/regexpp": "^4.10.0",
+        "@typescript-eslint/scope-manager": "8.38.0",
+        "@typescript-eslint/type-utils": "8.38.0",
+        "@typescript-eslint/utils": "8.38.0",
+        "@typescript-eslint/visitor-keys": "8.38.0",
+        "graphemer": "^1.4.0",
+        "ignore": "^7.0.0",
+        "natural-compare": "^1.4.0",
+        "ts-api-utils": "^2.1.0"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/typescript-eslint"
+      },
+      "peerDependencies": {
+        "@typescript-eslint/parser": "^8.38.0",
+        "eslint": "^8.57.0 || ^9.0.0",
+        "typescript": ">=4.8.4 <5.9.0"
+      }
+    },
+    "node_modules/@typescript-eslint/eslint-plugin/node_modules/ignore": {
+      "version": "7.0.5",
+      "resolved": "https://registry.npmjs.org/ignore/-/ignore-7.0.5.tgz",
+      "integrity": "sha512-Hs59xBNfUIunMFgWAbGX5cq6893IbWg4KnrjbYwX3tx0ztorVgTDA6B2sxf8ejHJ4wz8BqGUMYlnzNBer5NvGg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 4"
+      }
+    },
+    "node_modules/@typescript-eslint/parser": {
+      "version": "8.38.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.38.0.tgz",
+      "integrity": "sha512-Zhy8HCvBUEfBECzIl1PKqF4p11+d0aUJS1GeUiuqK9WmOug8YCmC4h4bjyBvMyAMI9sbRczmrYL5lKg/YMbrcQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@typescript-eslint/scope-manager": "8.38.0",
+        "@typescript-eslint/types": "8.38.0",
+        "@typescript-eslint/typescript-estree": "8.38.0",
+        "@typescript-eslint/visitor-keys": "8.38.0",
+        "debug": "^4.3.4"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/typescript-eslint"
+      },
+      "peerDependencies": {
+        "eslint": "^8.57.0 || ^9.0.0",
+        "typescript": ">=4.8.4 <5.9.0"
+      }
+    },
+    "node_modules/@typescript-eslint/project-service": {
+      "version": "8.38.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/project-service/-/project-service-8.38.0.tgz",
+      "integrity": "sha512-dbK7Jvqcb8c9QfH01YB6pORpqX1mn5gDZc9n63Ak/+jD67oWXn3Gs0M6vddAN+eDXBCS5EmNWzbSxsn9SzFWWg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@typescript-eslint/tsconfig-utils": "^8.38.0",
+        "@typescript-eslint/types": "^8.38.0",
+        "debug": "^4.3.4"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/typescript-eslint"
+      },
+      "peerDependencies": {
+        "typescript": ">=4.8.4 <5.9.0"
+      }
+    },
+    "node_modules/@typescript-eslint/scope-manager": {
+      "version": "8.38.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.38.0.tgz",
+      "integrity": "sha512-WJw3AVlFFcdT9Ri1xs/lg8LwDqgekWXWhH3iAF+1ZM+QPd7oxQ6jvtW/JPwzAScxitILUIFs0/AnQ/UWHzbATQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@typescript-eslint/types": "8.38.0",
+        "@typescript-eslint/visitor-keys": "8.38.0"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/typescript-eslint"
+      }
+    },
+    "node_modules/@typescript-eslint/tsconfig-utils": {
+      "version": "8.38.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/tsconfig-utils/-/tsconfig-utils-8.38.0.tgz",
+      "integrity": "sha512-Lum9RtSE3EroKk/bYns+sPOodqb2Fv50XOl/gMviMKNvanETUuUcC9ObRbzrJ4VSd2JalPqgSAavwrPiPvnAiQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/typescript-eslint"
+      },
+      "peerDependencies": {
+        "typescript": ">=4.8.4 <5.9.0"
+      }
+    },
+    "node_modules/@typescript-eslint/type-utils": {
+      "version": "8.38.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.38.0.tgz",
+      "integrity": "sha512-c7jAvGEZVf0ao2z+nnz8BUaHZD09Agbh+DY7qvBQqLiz8uJzRgVPj5YvOh8I8uEiH8oIUGIfHzMwUcGVco/SJg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@typescript-eslint/types": "8.38.0",
+        "@typescript-eslint/typescript-estree": "8.38.0",
+        "@typescript-eslint/utils": "8.38.0",
+        "debug": "^4.3.4",
+        "ts-api-utils": "^2.1.0"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/typescript-eslint"
+      },
+      "peerDependencies": {
+        "eslint": "^8.57.0 || ^9.0.0",
+        "typescript": ">=4.8.4 <5.9.0"
+      }
+    },
+    "node_modules/@typescript-eslint/types": {
+      "version": "8.38.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-8.38.0.tgz",
+      "integrity": "sha512-wzkUfX3plUqij4YwWaJyqhiPE5UCRVlFpKn1oCRn2O1bJ592XxWJj8ROQ3JD5MYXLORW84063z3tZTb/cs4Tyw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/typescript-eslint"
+      }
+    },
+    "node_modules/@typescript-eslint/typescript-estree": {
+      "version": "8.38.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.38.0.tgz",
+      "integrity": "sha512-fooELKcAKzxux6fA6pxOflpNS0jc+nOQEEOipXFNjSlBS6fqrJOVY/whSn70SScHrcJ2LDsxWrneFoWYSVfqhQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@typescript-eslint/project-service": "8.38.0",
+        "@typescript-eslint/tsconfig-utils": "8.38.0",
+        "@typescript-eslint/types": "8.38.0",
+        "@typescript-eslint/visitor-keys": "8.38.0",
+        "debug": "^4.3.4",
+        "fast-glob": "^3.3.2",
+        "is-glob": "^4.0.3",
+        "minimatch": "^9.0.4",
+        "semver": "^7.6.0",
+        "ts-api-utils": "^2.1.0"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/typescript-eslint"
+      },
+      "peerDependencies": {
+        "typescript": ">=4.8.4 <5.9.0"
+      }
+    },
+    "node_modules/@typescript-eslint/typescript-estree/node_modules/brace-expansion": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
+      "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "balanced-match": "^1.0.0"
+      }
+    },
+    "node_modules/@typescript-eslint/typescript-estree/node_modules/fast-glob": {
+      "version": "3.3.3",
+      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
+      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@nodelib/fs.stat": "^2.0.2",
+        "@nodelib/fs.walk": "^1.2.3",
+        "glob-parent": "^5.1.2",
+        "merge2": "^1.3.0",
+        "micromatch": "^4.0.8"
+      },
+      "engines": {
+        "node": ">=8.6.0"
+      }
+    },
+    "node_modules/@typescript-eslint/typescript-estree/node_modules/glob-parent": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
+      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "is-glob": "^4.0.1"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
+    "node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch": {
+      "version": "9.0.5",
+      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
+      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "brace-expansion": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=16 || 14 >=14.17"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
+    "node_modules/@typescript-eslint/utils": {
+      "version": "8.38.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.38.0.tgz",
+      "integrity": "sha512-hHcMA86Hgt+ijJlrD8fX0j1j8w4C92zue/8LOPAFioIno+W0+L7KqE8QZKCcPGc/92Vs9x36w/4MPTJhqXdyvg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@eslint-community/eslint-utils": "^4.7.0",
+        "@typescript-eslint/scope-manager": "8.38.0",
+        "@typescript-eslint/types": "8.38.0",
+        "@typescript-eslint/typescript-estree": "8.38.0"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/typescript-eslint"
+      },
+      "peerDependencies": {
+        "eslint": "^8.57.0 || ^9.0.0",
+        "typescript": ">=4.8.4 <5.9.0"
+      }
+    },
+    "node_modules/@typescript-eslint/visitor-keys": {
+      "version": "8.38.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.38.0.tgz",
+      "integrity": "sha512-pWrTcoFNWuwHlA9CvlfSsGWs14JxfN1TH25zM5L7o0pRLhsoZkDnTsXfQRJBEWJoV5DL0jf+Z+sxiud+K0mq1g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@typescript-eslint/types": "8.38.0",
+        "eslint-visitor-keys": "^4.2.1"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/typescript-eslint"
+      }
+    },
+    "node_modules/@unrs/resolver-binding-android-arm-eabi": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-android-arm-eabi/-/resolver-binding-android-arm-eabi-1.11.1.tgz",
+      "integrity": "sha512-ppLRUgHVaGRWUx0R0Ut06Mjo9gBaBkg3v/8AxusGLhsIotbBLuRk51rAzqLC8gq6NyyAojEXglNjzf6R948DNw==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-android-arm64": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-android-arm64/-/resolver-binding-android-arm64-1.11.1.tgz",
+      "integrity": "sha512-lCxkVtb4wp1v+EoN+HjIG9cIIzPkX5OtM03pQYkG+U5O/wL53LC4QbIeazgiKqluGeVEeBlZahHalCaBvU1a2g==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-darwin-arm64": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-darwin-arm64/-/resolver-binding-darwin-arm64-1.11.1.tgz",
+      "integrity": "sha512-gPVA1UjRu1Y/IsB/dQEsp2V1pm44Of6+LWvbLc9SDk1c2KhhDRDBUkQCYVWe6f26uJb3fOK8saWMgtX8IrMk3g==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-darwin-x64": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-darwin-x64/-/resolver-binding-darwin-x64-1.11.1.tgz",
+      "integrity": "sha512-cFzP7rWKd3lZaCsDze07QX1SC24lO8mPty9vdP+YVa3MGdVgPmFc59317b2ioXtgCMKGiCLxJ4HQs62oz6GfRQ==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-freebsd-x64": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-freebsd-x64/-/resolver-binding-freebsd-x64-1.11.1.tgz",
+      "integrity": "sha512-fqtGgak3zX4DCB6PFpsH5+Kmt/8CIi4Bry4rb1ho6Av2QHTREM+47y282Uqiu3ZRF5IQioJQ5qWRV6jduA+iGw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-linux-arm-gnueabihf": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm-gnueabihf/-/resolver-binding-linux-arm-gnueabihf-1.11.1.tgz",
+      "integrity": "sha512-u92mvlcYtp9MRKmP+ZvMmtPN34+/3lMHlyMj7wXJDeXxuM0Vgzz0+PPJNsro1m3IZPYChIkn944wW8TYgGKFHw==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-linux-arm-musleabihf": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm-musleabihf/-/resolver-binding-linux-arm-musleabihf-1.11.1.tgz",
+      "integrity": "sha512-cINaoY2z7LVCrfHkIcmvj7osTOtm6VVT16b5oQdS4beibX2SYBwgYLmqhBjA1t51CarSaBuX5YNsWLjsqfW5Cw==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-linux-arm64-gnu": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm64-gnu/-/resolver-binding-linux-arm64-gnu-1.11.1.tgz",
+      "integrity": "sha512-34gw7PjDGB9JgePJEmhEqBhWvCiiWCuXsL9hYphDF7crW7UgI05gyBAi6MF58uGcMOiOqSJ2ybEeCvHcq0BCmQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-linux-arm64-musl": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm64-musl/-/resolver-binding-linux-arm64-musl-1.11.1.tgz",
+      "integrity": "sha512-RyMIx6Uf53hhOtJDIamSbTskA99sPHS96wxVE/bJtePJJtpdKGXO1wY90oRdXuYOGOTuqjT8ACccMc4K6QmT3w==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-linux-ppc64-gnu": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-ppc64-gnu/-/resolver-binding-linux-ppc64-gnu-1.11.1.tgz",
+      "integrity": "sha512-D8Vae74A4/a+mZH0FbOkFJL9DSK2R6TFPC9M+jCWYia/q2einCubX10pecpDiTmkJVUH+y8K3BZClycD8nCShA==",
+      "cpu": [
+        "ppc64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-linux-riscv64-gnu": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-riscv64-gnu/-/resolver-binding-linux-riscv64-gnu-1.11.1.tgz",
+      "integrity": "sha512-frxL4OrzOWVVsOc96+V3aqTIQl1O2TjgExV4EKgRY09AJ9leZpEg8Ak9phadbuX0BA4k8U5qtvMSQQGGmaJqcQ==",
+      "cpu": [
+        "riscv64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-linux-riscv64-musl": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-riscv64-musl/-/resolver-binding-linux-riscv64-musl-1.11.1.tgz",
+      "integrity": "sha512-mJ5vuDaIZ+l/acv01sHoXfpnyrNKOk/3aDoEdLO/Xtn9HuZlDD6jKxHlkN8ZhWyLJsRBxfv9GYM2utQ1SChKew==",
+      "cpu": [
+        "riscv64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-linux-s390x-gnu": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-s390x-gnu/-/resolver-binding-linux-s390x-gnu-1.11.1.tgz",
+      "integrity": "sha512-kELo8ebBVtb9sA7rMe1Cph4QHreByhaZ2QEADd9NzIQsYNQpt9UkM9iqr2lhGr5afh885d/cB5QeTXSbZHTYPg==",
+      "cpu": [
+        "s390x"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-linux-x64-gnu": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-x64-gnu/-/resolver-binding-linux-x64-gnu-1.11.1.tgz",
+      "integrity": "sha512-C3ZAHugKgovV5YvAMsxhq0gtXuwESUKc5MhEtjBpLoHPLYM+iuwSj3lflFwK3DPm68660rZ7G8BMcwSro7hD5w==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-linux-x64-musl": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-x64-musl/-/resolver-binding-linux-x64-musl-1.11.1.tgz",
+      "integrity": "sha512-rV0YSoyhK2nZ4vEswT/QwqzqQXw5I6CjoaYMOX0TqBlWhojUf8P94mvI7nuJTeaCkkds3QE4+zS8Ko+GdXuZtA==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-wasm32-wasi": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-wasm32-wasi/-/resolver-binding-wasm32-wasi-1.11.1.tgz",
+      "integrity": "sha512-5u4RkfxJm+Ng7IWgkzi3qrFOvLvQYnPBmjmZQ8+szTK/b31fQCnleNl1GgEt7nIsZRIf5PLhPwT0WM+q45x/UQ==",
+      "cpu": [
+        "wasm32"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "@napi-rs/wasm-runtime": "^0.2.11"
+      },
+      "engines": {
+        "node": ">=14.0.0"
+      }
+    },
+    "node_modules/@unrs/resolver-binding-win32-arm64-msvc": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-arm64-msvc/-/resolver-binding-win32-arm64-msvc-1.11.1.tgz",
+      "integrity": "sha512-nRcz5Il4ln0kMhfL8S3hLkxI85BXs3o8EYoattsJNdsX4YUU89iOkVn7g0VHSRxFuVMdM4Q1jEpIId1Ihim/Uw==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-win32-ia32-msvc": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-ia32-msvc/-/resolver-binding-win32-ia32-msvc-1.11.1.tgz",
+      "integrity": "sha512-DCEI6t5i1NmAZp6pFonpD5m7i6aFrpofcp4LA2i8IIq60Jyo28hamKBxNrZcyOwVOZkgsRp9O2sXWBWP8MnvIQ==",
+      "cpu": [
+        "ia32"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ]
+    },
+    "node_modules/@unrs/resolver-binding-win32-x64-msvc": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-x64-msvc/-/resolver-binding-win32-x64-msvc-1.11.1.tgz",
+      "integrity": "sha512-lrW200hZdbfRtztbygyaq/6jP6AKE8qQN2KvPcJ+x7wiD038YtnYtZ82IMNJ69GJibV7bwL3y9FgK+5w/pYt6g==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ]
+    },
+    "node_modules/acorn": {
+      "version": "8.15.0",
+      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
+      "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "acorn": "bin/acorn"
+      },
+      "engines": {
+        "node": ">=0.4.0"
+      }
+    },
+    "node_modules/acorn-jsx": {
+      "version": "5.3.2",
+      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
+      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
+      "dev": true,
+      "license": "MIT",
+      "peerDependencies": {
+        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
+      }
+    },
+    "node_modules/ajv": {
+      "version": "6.12.6",
+      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
+      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "fast-deep-equal": "^3.1.1",
+        "fast-json-stable-stringify": "^2.0.0",
+        "json-schema-traverse": "^0.4.1",
+        "uri-js": "^4.2.2"
+      },
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/epoberezkin"
+      }
+    },
+    "node_modules/ansi-styles": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
+      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "color-convert": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
+      }
+    },
+    "node_modules/argparse": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
+      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
+      "dev": true,
+      "license": "Python-2.0"
+    },
+    "node_modules/aria-query": {
+      "version": "5.3.2",
+      "resolved": "https://registry.npmjs.org/aria-query/-/aria-query-5.3.2.tgz",
+      "integrity": "sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/array-buffer-byte-length": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.2.tgz",
+      "integrity": "sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "is-array-buffer": "^3.0.5"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array-includes": {
+      "version": "3.1.9",
+      "resolved": "https://registry.npmjs.org/array-includes/-/array-includes-3.1.9.tgz",
+      "integrity": "sha512-FmeCCAenzH0KH381SPT5FZmiA/TmpndpcaShhfgEN9eCVjnFBqq3l1xrI42y8+PPLI6hypzou4GXw00WHmPBLQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.4",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.24.0",
+        "es-object-atoms": "^1.1.1",
+        "get-intrinsic": "^1.3.0",
+        "is-string": "^1.1.1",
+        "math-intrinsics": "^1.1.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array.prototype.findlast": {
+      "version": "1.2.5",
+      "resolved": "https://registry.npmjs.org/array.prototype.findlast/-/array.prototype.findlast-1.2.5.tgz",
+      "integrity": "sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.2",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.0.0",
+        "es-shim-unscopables": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array.prototype.findlastindex": {
+      "version": "1.2.6",
+      "resolved": "https://registry.npmjs.org/array.prototype.findlastindex/-/array.prototype.findlastindex-1.2.6.tgz",
+      "integrity": "sha512-F/TKATkzseUExPlfvmwQKGITM3DGTK+vkAsCZoDc5daVygbJBnjEUCbgkAvVFsgfXfX4YIqZ/27G3k3tdXrTxQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.4",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.9",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.1.1",
+        "es-shim-unscopables": "^1.1.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array.prototype.flat": {
+      "version": "1.3.3",
+      "resolved": "https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.3.tgz",
+      "integrity": "sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.5",
+        "es-shim-unscopables": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array.prototype.flatmap": {
+      "version": "1.3.3",
+      "resolved": "https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.3.tgz",
+      "integrity": "sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.5",
+        "es-shim-unscopables": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array.prototype.tosorted": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/array.prototype.tosorted/-/array.prototype.tosorted-1.1.4.tgz",
+      "integrity": "sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.3",
+        "es-errors": "^1.3.0",
+        "es-shim-unscopables": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/arraybuffer.prototype.slice": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.4.tgz",
+      "integrity": "sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "array-buffer-byte-length": "^1.0.1",
+        "call-bind": "^1.0.8",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.5",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.6",
+        "is-array-buffer": "^3.0.4"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/ast-types-flow": {
+      "version": "0.0.8",
+      "resolved": "https://registry.npmjs.org/ast-types-flow/-/ast-types-flow-0.0.8.tgz",
+      "integrity": "sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/async-function": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/async-function/-/async-function-1.0.0.tgz",
+      "integrity": "sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/available-typed-arrays": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz",
+      "integrity": "sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "possible-typed-array-names": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/axe-core": {
+      "version": "4.10.3",
+      "resolved": "https://registry.npmjs.org/axe-core/-/axe-core-4.10.3.tgz",
+      "integrity": "sha512-Xm7bpRXnDSX2YE2YFfBk2FnF0ep6tmG7xPh8iHee8MIcrgq762Nkce856dYtJYLkuIoYZvGfTs/PbZhideTcEg==",
+      "dev": true,
+      "license": "MPL-2.0",
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/axobject-query": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/axobject-query/-/axobject-query-4.1.0.tgz",
+      "integrity": "sha512-qIj0G9wZbMGNLjLmg1PT6v2mE9AH2zlnADJD/2tC6E00hgmhUOfEB6greHPAfLRSufHqROIUTkw6E+M3lH0PTQ==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/balanced-match": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
+      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/brace-expansion": {
+      "version": "1.1.12",
+      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
+      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "balanced-match": "^1.0.0",
+        "concat-map": "0.0.1"
+      }
+    },
+    "node_modules/braces": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
+      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "fill-range": "^7.1.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/call-bind": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz",
+      "integrity": "sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind-apply-helpers": "^1.0.0",
+        "es-define-property": "^1.0.0",
+        "get-intrinsic": "^1.2.4",
+        "set-function-length": "^1.2.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/call-bind-apply-helpers": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
+      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "function-bind": "^1.1.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/call-bound": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
+      "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind-apply-helpers": "^1.0.2",
+        "get-intrinsic": "^1.3.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/callsites": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
+      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/caniuse-lite": {
+      "version": "1.0.30001727",
+      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001727.tgz",
+      "integrity": "sha512-pB68nIHmbN6L/4C6MH1DokyR3bYqFwjaSs/sWDHGj4CTcFtQUQMuJftVwWkXq7mNWOybD3KhUv3oWHoGxgP14Q==",
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/browserslist"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "CC-BY-4.0"
+    },
+    "node_modules/chalk": {
+      "version": "4.1.2",
+      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
+      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ansi-styles": "^4.1.0",
+        "supports-color": "^7.1.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/chalk?sponsor=1"
+      }
+    },
+    "node_modules/client-only": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/client-only/-/client-only-0.0.1.tgz",
+      "integrity": "sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==",
+      "license": "MIT"
+    },
+    "node_modules/color": {
+      "version": "4.2.3",
+      "resolved": "https://registry.npmjs.org/color/-/color-4.2.3.tgz",
+      "integrity": "sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==",
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "color-convert": "^2.0.1",
+        "color-string": "^1.9.0"
+      },
+      "engines": {
+        "node": ">=12.5.0"
+      }
+    },
+    "node_modules/color-convert": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
+      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
+      "devOptional": true,
+      "license": "MIT",
+      "dependencies": {
+        "color-name": "~1.1.4"
+      },
+      "engines": {
+        "node": ">=7.0.0"
+      }
+    },
+    "node_modules/color-name": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
+      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
+      "devOptional": true,
+      "license": "MIT"
+    },
+    "node_modules/color-string": {
+      "version": "1.9.1",
+      "resolved": "https://registry.npmjs.org/color-string/-/color-string-1.9.1.tgz",
+      "integrity": "sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==",
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "color-name": "^1.0.0",
+        "simple-swizzle": "^0.2.2"
+      }
+    },
+    "node_modules/concat-map": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
+      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/cross-spawn": {
+      "version": "7.0.6",
+      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
+      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "path-key": "^3.1.0",
+        "shebang-command": "^2.0.0",
+        "which": "^2.0.1"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/csstype": {
+      "version": "3.1.3",
+      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
+      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/damerau-levenshtein": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/damerau-levenshtein/-/damerau-levenshtein-1.0.8.tgz",
+      "integrity": "sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==",
+      "dev": true,
+      "license": "BSD-2-Clause"
+    },
+    "node_modules/data-view-buffer": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.2.tgz",
+      "integrity": "sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "es-errors": "^1.3.0",
+        "is-data-view": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/data-view-byte-length": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.2.tgz",
+      "integrity": "sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "es-errors": "^1.3.0",
+        "is-data-view": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/inspect-js"
+      }
+    },
+    "node_modules/data-view-byte-offset": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.1.tgz",
+      "integrity": "sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "es-errors": "^1.3.0",
+        "is-data-view": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/debug": {
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
+      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ms": "^2.1.3"
+      },
+      "engines": {
+        "node": ">=6.0"
+      },
+      "peerDependenciesMeta": {
+        "supports-color": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/deep-is": {
+      "version": "0.1.4",
+      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
+      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/define-data-property": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
+      "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "es-define-property": "^1.0.0",
+        "es-errors": "^1.3.0",
+        "gopd": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/define-properties": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz",
+      "integrity": "sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "define-data-property": "^1.0.1",
+        "has-property-descriptors": "^1.0.0",
+        "object-keys": "^1.1.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/detect-libc": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
+      "integrity": "sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==",
+      "license": "Apache-2.0",
+      "optional": true,
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/doctrine": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
+      "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "esutils": "^2.0.2"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/dunder-proto": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
+      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind-apply-helpers": "^1.0.1",
+        "es-errors": "^1.3.0",
+        "gopd": "^1.2.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/emoji-regex": {
+      "version": "9.2.2",
+      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
+      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/es-abstract": {
+      "version": "1.24.0",
+      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.24.0.tgz",
+      "integrity": "sha512-WSzPgsdLtTcQwm4CROfS5ju2Wa1QQcVeT37jFjYzdFz1r9ahadC8B8/a4qxJxM+09F18iumCdRmlr96ZYkQvEg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "array-buffer-byte-length": "^1.0.2",
+        "arraybuffer.prototype.slice": "^1.0.4",
+        "available-typed-arrays": "^1.0.7",
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.4",
+        "data-view-buffer": "^1.0.2",
+        "data-view-byte-length": "^1.0.2",
+        "data-view-byte-offset": "^1.0.1",
+        "es-define-property": "^1.0.1",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.1.1",
+        "es-set-tostringtag": "^2.1.0",
+        "es-to-primitive": "^1.3.0",
+        "function.prototype.name": "^1.1.8",
+        "get-intrinsic": "^1.3.0",
+        "get-proto": "^1.0.1",
+        "get-symbol-description": "^1.1.0",
+        "globalthis": "^1.0.4",
+        "gopd": "^1.2.0",
+        "has-property-descriptors": "^1.0.2",
+        "has-proto": "^1.2.0",
+        "has-symbols": "^1.1.0",
+        "hasown": "^2.0.2",
+        "internal-slot": "^1.1.0",
+        "is-array-buffer": "^3.0.5",
+        "is-callable": "^1.2.7",
+        "is-data-view": "^1.0.2",
+        "is-negative-zero": "^2.0.3",
+        "is-regex": "^1.2.1",
+        "is-set": "^2.0.3",
+        "is-shared-array-buffer": "^1.0.4",
+        "is-string": "^1.1.1",
+        "is-typed-array": "^1.1.15",
+        "is-weakref": "^1.1.1",
+        "math-intrinsics": "^1.1.0",
+        "object-inspect": "^1.13.4",
+        "object-keys": "^1.1.1",
+        "object.assign": "^4.1.7",
+        "own-keys": "^1.0.1",
+        "regexp.prototype.flags": "^1.5.4",
+        "safe-array-concat": "^1.1.3",
+        "safe-push-apply": "^1.0.0",
+        "safe-regex-test": "^1.1.0",
+        "set-proto": "^1.0.0",
+        "stop-iteration-iterator": "^1.1.0",
+        "string.prototype.trim": "^1.2.10",
+        "string.prototype.trimend": "^1.0.9",
+        "string.prototype.trimstart": "^1.0.8",
+        "typed-array-buffer": "^1.0.3",
+        "typed-array-byte-length": "^1.0.3",
+        "typed-array-byte-offset": "^1.0.4",
+        "typed-array-length": "^1.0.7",
+        "unbox-primitive": "^1.1.0",
+        "which-typed-array": "^1.1.19"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/es-define-property": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
+      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-errors": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
+      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-iterator-helpers": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/es-iterator-helpers/-/es-iterator-helpers-1.2.1.tgz",
+      "integrity": "sha512-uDn+FE1yrDzyC0pCo961B2IHbdM8y/ACZsKD4dG6WqrjV53BADjwa7D+1aom2rsNVfLyDgU/eigvlJGJ08OQ4w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.3",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.6",
+        "es-errors": "^1.3.0",
+        "es-set-tostringtag": "^2.0.3",
+        "function-bind": "^1.1.2",
+        "get-intrinsic": "^1.2.6",
+        "globalthis": "^1.0.4",
+        "gopd": "^1.2.0",
+        "has-property-descriptors": "^1.0.2",
+        "has-proto": "^1.2.0",
+        "has-symbols": "^1.1.0",
+        "internal-slot": "^1.1.0",
+        "iterator.prototype": "^1.1.4",
+        "safe-array-concat": "^1.1.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-object-atoms": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
+      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-set-tostringtag": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
+      "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.6",
+        "has-tostringtag": "^1.0.2",
+        "hasown": "^2.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-shim-unscopables": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.1.0.tgz",
+      "integrity": "sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "hasown": "^2.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-to-primitive": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.3.0.tgz",
+      "integrity": "sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-callable": "^1.2.7",
+        "is-date-object": "^1.0.5",
+        "is-symbol": "^1.0.4"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/escape-string-regexp": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
+      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/eslint": {
+      "version": "9.31.0",
+      "resolved": "https://registry.npmjs.org/eslint/-/eslint-9.31.0.tgz",
+      "integrity": "sha512-QldCVh/ztyKJJZLr4jXNUByx3gR+TDYZCRXEktiZoUR3PGy4qCmSbkxcIle8GEwGpb5JBZazlaJ/CxLidXdEbQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@eslint-community/eslint-utils": "^4.2.0",
+        "@eslint-community/regexpp": "^4.12.1",
+        "@eslint/config-array": "^0.21.0",
+        "@eslint/config-helpers": "^0.3.0",
+        "@eslint/core": "^0.15.0",
+        "@eslint/eslintrc": "^3.3.1",
+        "@eslint/js": "9.31.0",
+        "@eslint/plugin-kit": "^0.3.1",
+        "@humanfs/node": "^0.16.6",
+        "@humanwhocodes/module-importer": "^1.0.1",
+        "@humanwhocodes/retry": "^0.4.2",
+        "@types/estree": "^1.0.6",
+        "@types/json-schema": "^7.0.15",
+        "ajv": "^6.12.4",
+        "chalk": "^4.0.0",
+        "cross-spawn": "^7.0.6",
+        "debug": "^4.3.2",
+        "escape-string-regexp": "^4.0.0",
+        "eslint-scope": "^8.4.0",
+        "eslint-visitor-keys": "^4.2.1",
+        "espree": "^10.4.0",
+        "esquery": "^1.5.0",
+        "esutils": "^2.0.2",
+        "fast-deep-equal": "^3.1.3",
+        "file-entry-cache": "^8.0.0",
+        "find-up": "^5.0.0",
+        "glob-parent": "^6.0.2",
+        "ignore": "^5.2.0",
+        "imurmurhash": "^0.1.4",
+        "is-glob": "^4.0.0",
+        "json-stable-stringify-without-jsonify": "^1.0.1",
+        "lodash.merge": "^4.6.2",
+        "minimatch": "^3.1.2",
+        "natural-compare": "^1.4.0",
+        "optionator": "^0.9.3"
+      },
+      "bin": {
+        "eslint": "bin/eslint.js"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "url": "https://eslint.org/donate"
+      },
+      "peerDependencies": {
+        "jiti": "*"
+      },
+      "peerDependenciesMeta": {
+        "jiti": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/eslint-config-next": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/eslint-config-next/-/eslint-config-next-15.4.2.tgz",
+      "integrity": "sha512-rAeZyTWn1/36Y+S+KpJ/W+RAUmM6fpBWsON4Uci+5l9DIKrhkMK0rgAZQ45ktx+xFk5tyYwkTBGit/9jalsHrw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@next/eslint-plugin-next": "15.4.2",
+        "@rushstack/eslint-patch": "^1.10.3",
+        "@typescript-eslint/eslint-plugin": "^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0",
+        "@typescript-eslint/parser": "^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0",
+        "eslint-import-resolver-node": "^0.3.6",
+        "eslint-import-resolver-typescript": "^3.5.2",
+        "eslint-plugin-import": "^2.31.0",
+        "eslint-plugin-jsx-a11y": "^6.10.0",
+        "eslint-plugin-react": "^7.37.0",
+        "eslint-plugin-react-hooks": "^5.0.0"
+      },
+      "peerDependencies": {
+        "eslint": "^7.23.0 || ^8.0.0 || ^9.0.0",
+        "typescript": ">=3.3.1"
+      },
+      "peerDependenciesMeta": {
+        "typescript": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/eslint-import-resolver-node": {
+      "version": "0.3.9",
+      "resolved": "https://registry.npmjs.org/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.9.tgz",
+      "integrity": "sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "debug": "^3.2.7",
+        "is-core-module": "^2.13.0",
+        "resolve": "^1.22.4"
+      }
+    },
+    "node_modules/eslint-import-resolver-node/node_modules/debug": {
+      "version": "3.2.7",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
+      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ms": "^2.1.1"
+      }
+    },
+    "node_modules/eslint-import-resolver-typescript": {
+      "version": "3.10.1",
+      "resolved": "https://registry.npmjs.org/eslint-import-resolver-typescript/-/eslint-import-resolver-typescript-3.10.1.tgz",
+      "integrity": "sha512-A1rHYb06zjMGAxdLSkN2fXPBwuSaQ0iO5M/hdyS0Ajj1VBaRp0sPD3dn1FhME3c/JluGFbwSxyCfqdSbtQLAHQ==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "@nolyfill/is-core-module": "1.0.39",
+        "debug": "^4.4.0",
+        "get-tsconfig": "^4.10.0",
+        "is-bun-module": "^2.0.0",
+        "stable-hash": "^0.0.5",
+        "tinyglobby": "^0.2.13",
+        "unrs-resolver": "^1.6.2"
+      },
+      "engines": {
+        "node": "^14.18.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint-import-resolver-typescript"
+      },
+      "peerDependencies": {
+        "eslint": "*",
+        "eslint-plugin-import": "*",
+        "eslint-plugin-import-x": "*"
+      },
+      "peerDependenciesMeta": {
+        "eslint-plugin-import": {
+          "optional": true
+        },
+        "eslint-plugin-import-x": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/eslint-module-utils": {
+      "version": "2.12.1",
+      "resolved": "https://registry.npmjs.org/eslint-module-utils/-/eslint-module-utils-2.12.1.tgz",
+      "integrity": "sha512-L8jSWTze7K2mTg0vos/RuLRS5soomksDPoJLXIslC7c8Wmut3bx7CPpJijDcBZtxQ5lrbUdM+s0OlNbz0DCDNw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "debug": "^3.2.7"
+      },
+      "engines": {
+        "node": ">=4"
+      },
+      "peerDependenciesMeta": {
+        "eslint": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/eslint-module-utils/node_modules/debug": {
+      "version": "3.2.7",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
+      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ms": "^2.1.1"
+      }
+    },
+    "node_modules/eslint-plugin-import": {
+      "version": "2.32.0",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-import/-/eslint-plugin-import-2.32.0.tgz",
+      "integrity": "sha512-whOE1HFo/qJDyX4SnXzP4N6zOWn79WhnCUY/iDR0mPfQZO8wcYE4JClzI2oZrhBnnMUCBCHZhO6VQyoBU95mZA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@rtsao/scc": "^1.1.0",
+        "array-includes": "^3.1.9",
+        "array.prototype.findlastindex": "^1.2.6",
+        "array.prototype.flat": "^1.3.3",
+        "array.prototype.flatmap": "^1.3.3",
+        "debug": "^3.2.7",
+        "doctrine": "^2.1.0",
+        "eslint-import-resolver-node": "^0.3.9",
+        "eslint-module-utils": "^2.12.1",
+        "hasown": "^2.0.2",
+        "is-core-module": "^2.16.1",
+        "is-glob": "^4.0.3",
+        "minimatch": "^3.1.2",
+        "object.fromentries": "^2.0.8",
+        "object.groupby": "^1.0.3",
+        "object.values": "^1.2.1",
+        "semver": "^6.3.1",
+        "string.prototype.trimend": "^1.0.9",
+        "tsconfig-paths": "^3.15.0"
+      },
+      "engines": {
+        "node": ">=4"
+      },
+      "peerDependencies": {
+        "eslint": "^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 || ^9"
+      }
+    },
+    "node_modules/eslint-plugin-import/node_modules/debug": {
+      "version": "3.2.7",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
+      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ms": "^2.1.1"
+      }
+    },
+    "node_modules/eslint-plugin-import/node_modules/semver": {
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
+      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
+      "dev": true,
+      "license": "ISC",
+      "bin": {
+        "semver": "bin/semver.js"
+      }
+    },
+    "node_modules/eslint-plugin-jsx-a11y": {
+      "version": "6.10.2",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-jsx-a11y/-/eslint-plugin-jsx-a11y-6.10.2.tgz",
+      "integrity": "sha512-scB3nz4WmG75pV8+3eRUQOHZlNSUhFNq37xnpgRkCCELU3XMvXAxLk1eqWWyE22Ki4Q01Fnsw9BA3cJHDPgn2Q==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "aria-query": "^5.3.2",
+        "array-includes": "^3.1.8",
+        "array.prototype.flatmap": "^1.3.2",
+        "ast-types-flow": "^0.0.8",
+        "axe-core": "^4.10.0",
+        "axobject-query": "^4.1.0",
+        "damerau-levenshtein": "^1.0.8",
+        "emoji-regex": "^9.2.2",
+        "hasown": "^2.0.2",
+        "jsx-ast-utils": "^3.3.5",
+        "language-tags": "^1.0.9",
+        "minimatch": "^3.1.2",
+        "object.fromentries": "^2.0.8",
+        "safe-regex-test": "^1.0.3",
+        "string.prototype.includes": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=4.0"
+      },
+      "peerDependencies": {
+        "eslint": "^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9"
+      }
+    },
+    "node_modules/eslint-plugin-react": {
+      "version": "7.37.5",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.37.5.tgz",
+      "integrity": "sha512-Qteup0SqU15kdocexFNAJMvCJEfa2xUKNV4CC1xsVMrIIqEy3SQ/rqyxCWNzfrd3/ldy6HMlD2e0JDVpDg2qIA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "array-includes": "^3.1.8",
+        "array.prototype.findlast": "^1.2.5",
+        "array.prototype.flatmap": "^1.3.3",
+        "array.prototype.tosorted": "^1.1.4",
+        "doctrine": "^2.1.0",
+        "es-iterator-helpers": "^1.2.1",
+        "estraverse": "^5.3.0",
+        "hasown": "^2.0.2",
+        "jsx-ast-utils": "^2.4.1 || ^3.0.0",
+        "minimatch": "^3.1.2",
+        "object.entries": "^1.1.9",
+        "object.fromentries": "^2.0.8",
+        "object.values": "^1.2.1",
+        "prop-types": "^15.8.1",
+        "resolve": "^2.0.0-next.5",
+        "semver": "^6.3.1",
+        "string.prototype.matchall": "^4.0.12",
+        "string.prototype.repeat": "^1.0.0"
+      },
+      "engines": {
+        "node": ">=4"
+      },
+      "peerDependencies": {
+        "eslint": "^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7"
+      }
+    },
+    "node_modules/eslint-plugin-react-hooks": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-5.2.0.tgz",
+      "integrity": "sha512-+f15FfK64YQwZdJNELETdn5ibXEUQmW1DZL6KXhNnc2heoy/sg9VJJeT7n8TlMWouzWqSWavFkIhHyIbIAEapg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=10"
+      },
+      "peerDependencies": {
+        "eslint": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0 || ^9.0.0"
+      }
+    },
+    "node_modules/eslint-plugin-react/node_modules/resolve": {
+      "version": "2.0.0-next.5",
+      "resolved": "https://registry.npmjs.org/resolve/-/resolve-2.0.0-next.5.tgz",
+      "integrity": "sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-core-module": "^2.13.0",
+        "path-parse": "^1.0.7",
+        "supports-preserve-symlinks-flag": "^1.0.0"
+      },
+      "bin": {
+        "resolve": "bin/resolve"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/eslint-plugin-react/node_modules/semver": {
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
+      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
+      "dev": true,
+      "license": "ISC",
+      "bin": {
+        "semver": "bin/semver.js"
+      }
+    },
+    "node_modules/eslint-scope": {
+      "version": "8.4.0",
+      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-8.4.0.tgz",
+      "integrity": "sha512-sNXOfKCn74rt8RICKMvJS7XKV/Xk9kA7DyJr8mJik3S7Cwgy3qlkkmyS2uQB3jiJg6VNdZd/pDBJu0nvG2NlTg==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "esrecurse": "^4.3.0",
+        "estraverse": "^5.2.0"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/eslint-visitor-keys": {
+      "version": "4.2.1",
+      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.1.tgz",
+      "integrity": "sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/espree": {
+      "version": "10.4.0",
+      "resolved": "https://registry.npmjs.org/espree/-/espree-10.4.0.tgz",
+      "integrity": "sha512-j6PAQ2uUr79PZhBjP5C5fhl8e39FmRnOjsD5lGnWrFU8i2G776tBK7+nP8KuQUTTyAZUwfQqXAgrVH5MbH9CYQ==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "acorn": "^8.15.0",
+        "acorn-jsx": "^5.3.2",
+        "eslint-visitor-keys": "^4.2.1"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/esquery": {
+      "version": "1.6.0",
+      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
+      "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
+      "dev": true,
+      "license": "BSD-3-Clause",
+      "dependencies": {
+        "estraverse": "^5.1.0"
+      },
+      "engines": {
+        "node": ">=0.10"
+      }
+    },
+    "node_modules/esrecurse": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
+      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "estraverse": "^5.2.0"
+      },
+      "engines": {
+        "node": ">=4.0"
+      }
+    },
+    "node_modules/estraverse": {
+      "version": "5.3.0",
+      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
+      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "engines": {
+        "node": ">=4.0"
+      }
+    },
+    "node_modules/esutils": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
+      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/fast-deep-equal": {
+      "version": "3.1.3",
+      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
+      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/fast-glob": {
+      "version": "3.3.1",
+      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.1.tgz",
+      "integrity": "sha512-kNFPyjhh5cKjrUltxs+wFx+ZkbRaxxmZ+X0ZU31SOsxCEtP9VPgtq2teZw1DebupL5GmDaNQ6yKMMVcM41iqDg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@nodelib/fs.stat": "^2.0.2",
+        "@nodelib/fs.walk": "^1.2.3",
+        "glob-parent": "^5.1.2",
+        "merge2": "^1.3.0",
+        "micromatch": "^4.0.4"
+      },
+      "engines": {
+        "node": ">=8.6.0"
+      }
+    },
+    "node_modules/fast-glob/node_modules/glob-parent": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
+      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "is-glob": "^4.0.1"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
+    "node_modules/fast-json-stable-stringify": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
+      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/fast-levenshtein": {
+      "version": "2.0.6",
+      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
+      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/fastq": {
+      "version": "1.19.1",
+      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
+      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "reusify": "^1.0.4"
+      }
+    },
+    "node_modules/file-entry-cache": {
+      "version": "8.0.0",
+      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
+      "integrity": "sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "flat-cache": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=16.0.0"
+      }
+    },
+    "node_modules/fill-range": {
+      "version": "7.1.1",
+      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
+      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "to-regex-range": "^5.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/find-up": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
+      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "locate-path": "^6.0.0",
+        "path-exists": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/flat-cache": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-4.0.1.tgz",
+      "integrity": "sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "flatted": "^3.2.9",
+        "keyv": "^4.5.4"
+      },
+      "engines": {
+        "node": ">=16"
+      }
+    },
+    "node_modules/flatted": {
+      "version": "3.3.3",
+      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
+      "integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/for-each": {
+      "version": "0.3.5",
+      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz",
+      "integrity": "sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-callable": "^1.2.7"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/function-bind": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
+      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
+      "dev": true,
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/function.prototype.name": {
+      "version": "1.1.8",
+      "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.8.tgz",
+      "integrity": "sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.3",
+        "define-properties": "^1.2.1",
+        "functions-have-names": "^1.2.3",
+        "hasown": "^2.0.2",
+        "is-callable": "^1.2.7"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/functions-have-names": {
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
+      "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==",
+      "dev": true,
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/get-intrinsic": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
+      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind-apply-helpers": "^1.0.2",
+        "es-define-property": "^1.0.1",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.1.1",
+        "function-bind": "^1.1.2",
+        "get-proto": "^1.0.1",
+        "gopd": "^1.2.0",
+        "has-symbols": "^1.1.0",
+        "hasown": "^2.0.2",
+        "math-intrinsics": "^1.1.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/get-proto": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
+      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "dunder-proto": "^1.0.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/get-symbol-description": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.1.0.tgz",
+      "integrity": "sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.6"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/get-tsconfig": {
+      "version": "4.10.1",
+      "resolved": "https://registry.npmjs.org/get-tsconfig/-/get-tsconfig-4.10.1.tgz",
+      "integrity": "sha512-auHyJ4AgMz7vgS8Hp3N6HXSmlMdUyhSUrfBF16w153rxtLIEOE+HGqaBppczZvnHLqQJfiHotCYpNhl0lUROFQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "resolve-pkg-maps": "^1.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/privatenumber/get-tsconfig?sponsor=1"
+      }
+    },
+    "node_modules/glob-parent": {
+      "version": "6.0.2",
+      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
+      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "is-glob": "^4.0.3"
+      },
+      "engines": {
+        "node": ">=10.13.0"
+      }
+    },
+    "node_modules/globals": {
+      "version": "14.0.0",
+      "resolved": "https://registry.npmjs.org/globals/-/globals-14.0.0.tgz",
+      "integrity": "sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=18"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/globalthis": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz",
+      "integrity": "sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "define-properties": "^1.2.1",
+        "gopd": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/gopd": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
+      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/graphemer": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
+      "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/has-bigints": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.1.0.tgz",
+      "integrity": "sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-flag": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
+      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/has-property-descriptors": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
+      "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "es-define-property": "^1.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-proto": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.2.0.tgz",
+      "integrity": "sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "dunder-proto": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-symbols": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
+      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-tostringtag": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
+      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has-symbols": "^1.0.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/hasown": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
+      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "function-bind": "^1.1.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/ignore": {
+      "version": "5.3.2",
+      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
+      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 4"
+      }
+    },
+    "node_modules/import-fresh": {
+      "version": "3.3.1",
+      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
+      "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "parent-module": "^1.0.0",
+        "resolve-from": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=6"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/imurmurhash": {
+      "version": "0.1.4",
+      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
+      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.8.19"
+      }
+    },
+    "node_modules/internal-slot": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz",
+      "integrity": "sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "hasown": "^2.0.2",
+        "side-channel": "^1.1.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/is-array-buffer": {
+      "version": "3.0.5",
+      "resolved": "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.5.tgz",
+      "integrity": "sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.3",
+        "get-intrinsic": "^1.2.6"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-arrayish": {
+      "version": "0.3.2",
+      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz",
+      "integrity": "sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==",
+      "license": "MIT",
+      "optional": true
+    },
+    "node_modules/is-async-function": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/is-async-function/-/is-async-function-2.1.1.tgz",
+      "integrity": "sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "async-function": "^1.0.0",
+        "call-bound": "^1.0.3",
+        "get-proto": "^1.0.1",
+        "has-tostringtag": "^1.0.2",
+        "safe-regex-test": "^1.1.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-bigint": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/is-bigint/-/is-bigint-1.1.0.tgz",
+      "integrity": "sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has-bigints": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-boolean-object": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.2.tgz",
+      "integrity": "sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "has-tostringtag": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-bun-module": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/is-bun-module/-/is-bun-module-2.0.0.tgz",
+      "integrity": "sha512-gNCGbnnnnFAUGKeZ9PdbyeGYJqewpmc2aKHUEMO5nQPWU9lOmv7jcmQIv+qHD8fXW6W7qfuCwX4rY9LNRjXrkQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "semver": "^7.7.1"
+      }
+    },
+    "node_modules/is-callable": {
+      "version": "1.2.7",
+      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
+      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-core-module": {
+      "version": "2.16.1",
+      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
+      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "hasown": "^2.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-data-view": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.2.tgz",
+      "integrity": "sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "get-intrinsic": "^1.2.6",
+        "is-typed-array": "^1.1.13"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-date-object": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.1.0.tgz",
+      "integrity": "sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "has-tostringtag": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-extglob": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
+      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/is-finalizationregistry": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.1.1.tgz",
+      "integrity": "sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-generator-function": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.1.0.tgz",
+      "integrity": "sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "get-proto": "^1.0.0",
+        "has-tostringtag": "^1.0.2",
+        "safe-regex-test": "^1.1.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-glob": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
+      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-extglob": "^2.1.1"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/is-map": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz",
+      "integrity": "sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-negative-zero": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.3.tgz",
+      "integrity": "sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-number": {
+      "version": "7.0.0",
+      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
+      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.12.0"
+      }
+    },
+    "node_modules/is-number-object": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/is-number-object/-/is-number-object-1.1.1.tgz",
+      "integrity": "sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "has-tostringtag": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-regex": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.2.1.tgz",
+      "integrity": "sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "gopd": "^1.2.0",
+        "has-tostringtag": "^1.0.2",
+        "hasown": "^2.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-set": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz",
+      "integrity": "sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-shared-array-buffer": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.4.tgz",
+      "integrity": "sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-string": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.1.1.tgz",
+      "integrity": "sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "has-tostringtag": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-symbol": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.1.1.tgz",
+      "integrity": "sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "has-symbols": "^1.1.0",
+        "safe-regex-test": "^1.1.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-typed-array": {
+      "version": "1.1.15",
+      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.15.tgz",
+      "integrity": "sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "which-typed-array": "^1.1.16"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-weakmap": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz",
+      "integrity": "sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-weakref": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.1.tgz",
+      "integrity": "sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-weakset": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.4.tgz",
+      "integrity": "sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "get-intrinsic": "^1.2.6"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/isarray": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
+      "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/isexe": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
+      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/iterator.prototype": {
+      "version": "1.1.5",
+      "resolved": "https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.5.tgz",
+      "integrity": "sha512-H0dkQoCa3b2VEeKQBOxFph+JAbcrQdE7KC0UkqwpLmv2EC4P41QXP+rqo9wYodACiG5/WM5s9oDApTU8utwj9g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "define-data-property": "^1.1.4",
+        "es-object-atoms": "^1.0.0",
+        "get-intrinsic": "^1.2.6",
+        "get-proto": "^1.0.0",
+        "has-symbols": "^1.1.0",
+        "set-function-name": "^2.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/js-tokens": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
+      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/js-yaml": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
+      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "argparse": "^2.0.1"
+      },
+      "bin": {
+        "js-yaml": "bin/js-yaml.js"
+      }
+    },
+    "node_modules/json-buffer": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
+      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/json-schema-traverse": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
+      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/json-stable-stringify-without-jsonify": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
+      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/json5": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/json5/-/json5-1.0.2.tgz",
+      "integrity": "sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "minimist": "^1.2.0"
+      },
+      "bin": {
+        "json5": "lib/cli.js"
+      }
+    },
+    "node_modules/jsx-ast-utils": {
+      "version": "3.3.5",
+      "resolved": "https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-3.3.5.tgz",
+      "integrity": "sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "array-includes": "^3.1.6",
+        "array.prototype.flat": "^1.3.1",
+        "object.assign": "^4.1.4",
+        "object.values": "^1.1.6"
+      },
+      "engines": {
+        "node": ">=4.0"
+      }
+    },
+    "node_modules/keyv": {
+      "version": "4.5.4",
+      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
+      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "json-buffer": "3.0.1"
+      }
+    },
+    "node_modules/language-subtag-registry": {
+      "version": "0.3.23",
+      "resolved": "https://registry.npmjs.org/language-subtag-registry/-/language-subtag-registry-0.3.23.tgz",
+      "integrity": "sha512-0K65Lea881pHotoGEa5gDlMxt3pctLi2RplBb7Ezh4rRdLEOtgi7n4EwK9lamnUCkKBqaeKRVebTq6BAxSkpXQ==",
+      "dev": true,
+      "license": "CC0-1.0"
+    },
+    "node_modules/language-tags": {
+      "version": "1.0.9",
+      "resolved": "https://registry.npmjs.org/language-tags/-/language-tags-1.0.9.tgz",
+      "integrity": "sha512-MbjN408fEndfiQXbFQ1vnd+1NoLDsnQW41410oQBXiyXDMYH5z505juWa4KUE1LqxRC7DgOgZDbKLxHIwm27hA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "language-subtag-registry": "^0.3.20"
+      },
+      "engines": {
+        "node": ">=0.10"
+      }
+    },
+    "node_modules/levn": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
+      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "prelude-ls": "^1.2.1",
+        "type-check": "~0.4.0"
+      },
+      "engines": {
+        "node": ">= 0.8.0"
+      }
+    },
+    "node_modules/locate-path": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
+      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "p-locate": "^5.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/lodash.merge": {
+      "version": "4.6.2",
+      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
+      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/loose-envify": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
+      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "js-tokens": "^3.0.0 || ^4.0.0"
+      },
+      "bin": {
+        "loose-envify": "cli.js"
+      }
+    },
+    "node_modules/math-intrinsics": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
+      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/merge2": {
+      "version": "1.4.1",
+      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
+      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/micromatch": {
+      "version": "4.0.8",
+      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
+      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "braces": "^3.0.3",
+        "picomatch": "^2.3.1"
+      },
+      "engines": {
+        "node": ">=8.6"
+      }
+    },
+    "node_modules/minimatch": {
+      "version": "3.1.2",
+      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
+      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "brace-expansion": "^1.1.7"
+      },
+      "engines": {
+        "node": "*"
+      }
+    },
+    "node_modules/minimist": {
+      "version": "1.2.8",
+      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
+      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
+      "dev": true,
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/ms": {
+      "version": "2.1.3",
+      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
+      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/nanoid": {
+      "version": "3.3.11",
+      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
+      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "bin": {
+        "nanoid": "bin/nanoid.cjs"
+      },
+      "engines": {
+        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
+      }
+    },
+    "node_modules/napi-postinstall": {
+      "version": "0.3.2",
+      "resolved": "https://registry.npmjs.org/napi-postinstall/-/napi-postinstall-0.3.2.tgz",
+      "integrity": "sha512-tWVJxJHmBWLy69PvO96TZMZDrzmw5KeiZBz3RHmiM2XZ9grBJ2WgMAFVVg25nqp3ZjTFUs2Ftw1JhscL3Teliw==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "napi-postinstall": "lib/cli.js"
+      },
+      "engines": {
+        "node": "^12.20.0 || ^14.18.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/napi-postinstall"
+      }
+    },
+    "node_modules/natural-compare": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
+      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/next": {
+      "version": "15.4.2",
+      "resolved": "https://registry.npmjs.org/next/-/next-15.4.2.tgz",
+      "integrity": "sha512-oH1rmFso+84NIkocfuxaGKcXIjMUTmnzV2x0m8qsYtB4gD6iflLMESXt5XJ8cFgWMBei4v88rNr/j+peNg72XA==",
+      "license": "MIT",
+      "dependencies": {
+        "@next/env": "15.4.2",
+        "@swc/helpers": "0.5.15",
+        "caniuse-lite": "^1.0.30001579",
+        "postcss": "8.4.31",
+        "styled-jsx": "5.1.6"
+      },
+      "bin": {
+        "next": "dist/bin/next"
+      },
+      "engines": {
+        "node": "^18.18.0 || ^19.8.0 || >= 20.0.0"
+      },
+      "optionalDependencies": {
+        "@next/swc-darwin-arm64": "15.4.2",
+        "@next/swc-darwin-x64": "15.4.2",
+        "@next/swc-linux-arm64-gnu": "15.4.2",
+        "@next/swc-linux-arm64-musl": "15.4.2",
+        "@next/swc-linux-x64-gnu": "15.4.2",
+        "@next/swc-linux-x64-musl": "15.4.2",
+        "@next/swc-win32-arm64-msvc": "15.4.2",
+        "@next/swc-win32-x64-msvc": "15.4.2",
+        "sharp": "^0.34.3"
+      },
+      "peerDependencies": {
+        "@opentelemetry/api": "^1.1.0",
+        "@playwright/test": "^1.51.1",
+        "babel-plugin-react-compiler": "*",
+        "react": "^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0",
+        "react-dom": "^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0",
+        "sass": "^1.3.0"
+      },
+      "peerDependenciesMeta": {
+        "@opentelemetry/api": {
+          "optional": true
+        },
+        "@playwright/test": {
+          "optional": true
+        },
+        "babel-plugin-react-compiler": {
+          "optional": true
+        },
+        "sass": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/object-assign": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
+      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/object-inspect": {
+      "version": "1.13.4",
+      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
+      "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/object-keys": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
+      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/object.assign": {
+      "version": "4.1.7",
+      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.7.tgz",
+      "integrity": "sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.3",
+        "define-properties": "^1.2.1",
+        "es-object-atoms": "^1.0.0",
+        "has-symbols": "^1.1.0",
+        "object-keys": "^1.1.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/object.entries": {
+      "version": "1.1.9",
+      "resolved": "https://registry.npmjs.org/object.entries/-/object.entries-1.1.9.tgz",
+      "integrity": "sha512-8u/hfXFRBD1O0hPUjioLhoWFHRmt6tKA4/vZPyckBr18l1KE9uHrFaFaUi8MDRTpi4uak2goyPTSNJLXX2k2Hw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.4",
+        "define-properties": "^1.2.1",
+        "es-object-atoms": "^1.1.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/object.fromentries": {
+      "version": "2.0.8",
+      "resolved": "https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.8.tgz",
+      "integrity": "sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.2",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/object.groupby": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/object.groupby/-/object.groupby-1.0.3.tgz",
+      "integrity": "sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/object.values": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/object.values/-/object.values-1.2.1.tgz",
+      "integrity": "sha512-gXah6aZrcUxjWg2zR2MwouP2eHlCBzdV4pygudehaKXSGW4v2AsRQUK+lwwXhii6KFZcunEnmSUoYp5CXibxtA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.3",
+        "define-properties": "^1.2.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/optionator": {
+      "version": "0.9.4",
+      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
+      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "deep-is": "^0.1.3",
+        "fast-levenshtein": "^2.0.6",
+        "levn": "^0.4.1",
+        "prelude-ls": "^1.2.1",
+        "type-check": "^0.4.0",
+        "word-wrap": "^1.2.5"
+      },
+      "engines": {
+        "node": ">= 0.8.0"
+      }
+    },
+    "node_modules/own-keys": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/own-keys/-/own-keys-1.0.1.tgz",
+      "integrity": "sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "get-intrinsic": "^1.2.6",
+        "object-keys": "^1.1.1",
+        "safe-push-apply": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/p-limit": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
+      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "yocto-queue": "^0.1.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/p-locate": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
+      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "p-limit": "^3.0.2"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/parent-module": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
+      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "callsites": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/path-exists": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
+      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/path-key": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
+      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/path-parse": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
+      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/picocolors": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
+      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
+      "license": "ISC"
+    },
+    "node_modules/picomatch": {
+      "version": "2.3.1",
+      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
+      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8.6"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/jonschlinkert"
+      }
+    },
+    "node_modules/possible-typed-array-names": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.1.0.tgz",
+      "integrity": "sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/postcss": {
+      "version": "8.4.31",
+      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.31.tgz",
+      "integrity": "sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==",
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/postcss/"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/postcss"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "nanoid": "^3.3.6",
+        "picocolors": "^1.0.0",
+        "source-map-js": "^1.0.2"
+      },
+      "engines": {
+        "node": "^10 || ^12 || >=14"
+      }
+    },
+    "node_modules/prelude-ls": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
+      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.8.0"
+      }
+    },
+    "node_modules/prop-types": {
+      "version": "15.8.1",
+      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
+      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "loose-envify": "^1.4.0",
+        "object-assign": "^4.1.1",
+        "react-is": "^16.13.1"
+      }
+    },
+    "node_modules/punycode": {
+      "version": "2.3.1",
+      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
+      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/queue-microtask": {
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
+      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "license": "MIT"
+    },
+    "node_modules/react": {
+      "version": "19.1.0",
+      "resolved": "https://registry.npmjs.org/react/-/react-19.1.0.tgz",
+      "integrity": "sha512-FS+XFBNvn3GTAWq26joslQgWNoFu08F4kl0J4CgdNKADkdSGXQyTCnKteIAJy96Br6YbpEU1LSzV5dYtjMkMDg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/react-dom": {
+      "version": "19.1.0",
+      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-19.1.0.tgz",
+      "integrity": "sha512-Xs1hdnE+DyKgeHJeJznQmYMIBG3TKIHJJT95Q58nHLSrElKlGQqDTR2HQ9fx5CN/Gk6Vh/kupBTDLU11/nDk/g==",
+      "license": "MIT",
+      "dependencies": {
+        "scheduler": "^0.26.0"
+      },
+      "peerDependencies": {
+        "react": "^19.1.0"
+      }
+    },
+    "node_modules/react-is": {
+      "version": "16.13.1",
+      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
+      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/reflect.getprototypeof": {
+      "version": "1.0.10",
+      "resolved": "https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.10.tgz",
+      "integrity": "sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.9",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.0.0",
+        "get-intrinsic": "^1.2.7",
+        "get-proto": "^1.0.1",
+        "which-builtin-type": "^1.2.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/regexp.prototype.flags": {
+      "version": "1.5.4",
+      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.4.tgz",
+      "integrity": "sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "define-properties": "^1.2.1",
+        "es-errors": "^1.3.0",
+        "get-proto": "^1.0.1",
+        "gopd": "^1.2.0",
+        "set-function-name": "^2.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/resolve": {
+      "version": "1.22.10",
+      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
+      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-core-module": "^2.16.0",
+        "path-parse": "^1.0.7",
+        "supports-preserve-symlinks-flag": "^1.0.0"
+      },
+      "bin": {
+        "resolve": "bin/resolve"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/resolve-from": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
+      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/resolve-pkg-maps": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/resolve-pkg-maps/-/resolve-pkg-maps-1.0.0.tgz",
+      "integrity": "sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==",
+      "dev": true,
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/privatenumber/resolve-pkg-maps?sponsor=1"
+      }
+    },
+    "node_modules/reusify": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
+      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "iojs": ">=1.0.0",
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/run-parallel": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
+      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "queue-microtask": "^1.2.2"
+      }
+    },
+    "node_modules/safe-array-concat": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.3.tgz",
+      "integrity": "sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.2",
+        "get-intrinsic": "^1.2.6",
+        "has-symbols": "^1.1.0",
+        "isarray": "^2.0.5"
+      },
+      "engines": {
+        "node": ">=0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/safe-push-apply": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/safe-push-apply/-/safe-push-apply-1.0.0.tgz",
+      "integrity": "sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "isarray": "^2.0.5"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/safe-regex-test": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.1.0.tgz",
+      "integrity": "sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "es-errors": "^1.3.0",
+        "is-regex": "^1.2.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/scheduler": {
+      "version": "0.26.0",
+      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.26.0.tgz",
+      "integrity": "sha512-NlHwttCI/l5gCPR3D1nNXtWABUmBwvZpEQiD4IXSbIDq8BzLIK/7Ir5gTFSGZDUu37K5cMNp0hFtzO38sC7gWA==",
+      "license": "MIT"
+    },
+    "node_modules/semver": {
+      "version": "7.7.2",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
+      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
+      "devOptional": true,
+      "license": "ISC",
+      "bin": {
+        "semver": "bin/semver.js"
+      },
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/set-function-length": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
+      "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "define-data-property": "^1.1.4",
+        "es-errors": "^1.3.0",
+        "function-bind": "^1.1.2",
+        "get-intrinsic": "^1.2.4",
+        "gopd": "^1.0.1",
+        "has-property-descriptors": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/set-function-name": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz",
+      "integrity": "sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "define-data-property": "^1.1.4",
+        "es-errors": "^1.3.0",
+        "functions-have-names": "^1.2.3",
+        "has-property-descriptors": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/set-proto": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/set-proto/-/set-proto-1.0.0.tgz",
+      "integrity": "sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "dunder-proto": "^1.0.1",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/sharp": {
+      "version": "0.34.3",
+      "resolved": "https://registry.npmjs.org/sharp/-/sharp-0.34.3.tgz",
+      "integrity": "sha512-eX2IQ6nFohW4DbvHIOLRB3MHFpYqaqvXd3Tp5e/T/dSH83fxaNJQRvDMhASmkNTsNTVF2/OOopzRCt7xokgPfg==",
+      "hasInstallScript": true,
+      "license": "Apache-2.0",
+      "optional": true,
+      "dependencies": {
+        "color": "^4.2.3",
+        "detect-libc": "^2.0.4",
+        "semver": "^7.7.2"
+      },
+      "engines": {
+        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/libvips"
+      },
+      "optionalDependencies": {
+        "@img/sharp-darwin-arm64": "0.34.3",
+        "@img/sharp-darwin-x64": "0.34.3",
+        "@img/sharp-libvips-darwin-arm64": "1.2.0",
+        "@img/sharp-libvips-darwin-x64": "1.2.0",
+        "@img/sharp-libvips-linux-arm": "1.2.0",
+        "@img/sharp-libvips-linux-arm64": "1.2.0",
+        "@img/sharp-libvips-linux-ppc64": "1.2.0",
+        "@img/sharp-libvips-linux-s390x": "1.2.0",
+        "@img/sharp-libvips-linux-x64": "1.2.0",
+        "@img/sharp-libvips-linuxmusl-arm64": "1.2.0",
+        "@img/sharp-libvips-linuxmusl-x64": "1.2.0",
+        "@img/sharp-linux-arm": "0.34.3",
+        "@img/sharp-linux-arm64": "0.34.3",
+        "@img/sharp-linux-ppc64": "0.34.3",
+        "@img/sharp-linux-s390x": "0.34.3",
+        "@img/sharp-linux-x64": "0.34.3",
+        "@img/sharp-linuxmusl-arm64": "0.34.3",
+        "@img/sharp-linuxmusl-x64": "0.34.3",
+        "@img/sharp-wasm32": "0.34.3",
+        "@img/sharp-win32-arm64": "0.34.3",
+        "@img/sharp-win32-ia32": "0.34.3",
+        "@img/sharp-win32-x64": "0.34.3"
+      }
+    },
+    "node_modules/shebang-command": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
+      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "shebang-regex": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/shebang-regex": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
+      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/side-channel": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
+      "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "object-inspect": "^1.13.3",
+        "side-channel-list": "^1.0.0",
+        "side-channel-map": "^1.0.1",
+        "side-channel-weakmap": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/side-channel-list": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
+      "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "object-inspect": "^1.13.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/side-channel-map": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
+      "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.5",
+        "object-inspect": "^1.13.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/side-channel-weakmap": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
+      "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.5",
+        "object-inspect": "^1.13.3",
+        "side-channel-map": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/simple-swizzle": {
+      "version": "0.2.2",
+      "resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",
+      "integrity": "sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==",
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "is-arrayish": "^0.3.1"
+      }
+    },
+    "node_modules/source-map-js": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
+      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
+      "license": "BSD-3-Clause",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/stable-hash": {
+      "version": "0.0.5",
+      "resolved": "https://registry.npmjs.org/stable-hash/-/stable-hash-0.0.5.tgz",
+      "integrity": "sha512-+L3ccpzibovGXFK+Ap/f8LOS0ahMrHTf3xu7mMLSpEGU0EO9ucaysSylKo9eRDFNhWve/y275iPmIZ4z39a9iA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/stop-iteration-iterator": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/stop-iteration-iterator/-/stop-iteration-iterator-1.1.0.tgz",
+      "integrity": "sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "internal-slot": "^1.1.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/string.prototype.includes": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/string.prototype.includes/-/string.prototype.includes-2.0.1.tgz",
+      "integrity": "sha512-o7+c9bW6zpAdJHTtujeePODAhkuicdAryFsfVKwA+wGw89wJ4GTY484WTucM9hLtDEOpOvI+aHnzqnC5lHp4Rg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/string.prototype.matchall": {
+      "version": "4.0.12",
+      "resolved": "https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.12.tgz",
+      "integrity": "sha512-6CC9uyBL+/48dYizRf7H7VAYCMCNTBeM78x/VTUe9bFEaxBepPJDa1Ow99LqI/1yF7kuy7Q3cQsYMrcjGUcskA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.3",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.6",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.0.0",
+        "get-intrinsic": "^1.2.6",
+        "gopd": "^1.2.0",
+        "has-symbols": "^1.1.0",
+        "internal-slot": "^1.1.0",
+        "regexp.prototype.flags": "^1.5.3",
+        "set-function-name": "^2.0.2",
+        "side-channel": "^1.1.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/string.prototype.repeat": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/string.prototype.repeat/-/string.prototype.repeat-1.0.0.tgz",
+      "integrity": "sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.5"
+      }
+    },
+    "node_modules/string.prototype.trim": {
+      "version": "1.2.10",
+      "resolved": "https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.10.tgz",
+      "integrity": "sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.2",
+        "define-data-property": "^1.1.4",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.5",
+        "es-object-atoms": "^1.0.0",
+        "has-property-descriptors": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/string.prototype.trimend": {
+      "version": "1.0.9",
+      "resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.9.tgz",
+      "integrity": "sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.2",
+        "define-properties": "^1.2.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/string.prototype.trimstart": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz",
+      "integrity": "sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/strip-bom": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
+      "integrity": "sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/strip-json-comments": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
+      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/styled-jsx": {
+      "version": "5.1.6",
+      "resolved": "https://registry.npmjs.org/styled-jsx/-/styled-jsx-5.1.6.tgz",
+      "integrity": "sha512-qSVyDTeMotdvQYoHWLNGwRFJHC+i+ZvdBRYosOFgC+Wg1vx4frN2/RG/NA7SYqqvKNLf39P2LSRA2pu6n0XYZA==",
+      "license": "MIT",
+      "dependencies": {
+        "client-only": "0.0.1"
+      },
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "peerDependencies": {
+        "react": ">= 16.8.0 || 17.x.x || ^18.0.0-0 || ^19.0.0-0"
+      },
+      "peerDependenciesMeta": {
+        "@babel/core": {
+          "optional": true
+        },
+        "babel-plugin-macros": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/supports-color": {
+      "version": "7.2.0",
+      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
+      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has-flag": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/supports-preserve-symlinks-flag": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
+      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/tinyglobby": {
+      "version": "0.2.14",
+      "resolved": "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.14.tgz",
+      "integrity": "sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "fdir": "^6.4.4",
+        "picomatch": "^4.0.2"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/SuperchupuDev"
+      }
+    },
+    "node_modules/tinyglobby/node_modules/fdir": {
+      "version": "6.4.6",
+      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.4.6.tgz",
+      "integrity": "sha512-hiFoqpyZcfNm1yc4u8oWCf9A2c4D3QjCrks3zmoVKVxpQRzmPNar1hUJcBG2RQHvEVGDN+Jm81ZheVLAQMK6+w==",
+      "dev": true,
+      "license": "MIT",
+      "peerDependencies": {
+        "picomatch": "^3 || ^4"
+      },
+      "peerDependenciesMeta": {
+        "picomatch": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/tinyglobby/node_modules/picomatch": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz",
+      "integrity": "sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/jonschlinkert"
+      }
+    },
+    "node_modules/to-regex-range": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
+      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-number": "^7.0.0"
+      },
+      "engines": {
+        "node": ">=8.0"
+      }
+    },
+    "node_modules/ts-api-utils": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-2.1.0.tgz",
+      "integrity": "sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=18.12"
+      },
+      "peerDependencies": {
+        "typescript": ">=4.8.4"
+      }
+    },
+    "node_modules/tsconfig-paths": {
+      "version": "3.15.0",
+      "resolved": "https://registry.npmjs.org/tsconfig-paths/-/tsconfig-paths-3.15.0.tgz",
+      "integrity": "sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@types/json5": "^0.0.29",
+        "json5": "^1.0.2",
+        "minimist": "^1.2.6",
+        "strip-bom": "^3.0.0"
+      }
+    },
+    "node_modules/tslib": {
+      "version": "2.8.1",
+      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
+      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
+      "license": "0BSD"
+    },
+    "node_modules/type-check": {
+      "version": "0.4.0",
+      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
+      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "prelude-ls": "^1.2.1"
+      },
+      "engines": {
+        "node": ">= 0.8.0"
+      }
+    },
+    "node_modules/typed-array-buffer": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.3.tgz",
+      "integrity": "sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "es-errors": "^1.3.0",
+        "is-typed-array": "^1.1.14"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/typed-array-byte-length": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.3.tgz",
+      "integrity": "sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "for-each": "^0.3.3",
+        "gopd": "^1.2.0",
+        "has-proto": "^1.2.0",
+        "is-typed-array": "^1.1.14"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/typed-array-byte-offset": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.4.tgz",
+      "integrity": "sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "available-typed-arrays": "^1.0.7",
+        "call-bind": "^1.0.8",
+        "for-each": "^0.3.3",
+        "gopd": "^1.2.0",
+        "has-proto": "^1.2.0",
+        "is-typed-array": "^1.1.15",
+        "reflect.getprototypeof": "^1.0.9"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/typed-array-length": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.7.tgz",
+      "integrity": "sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "for-each": "^0.3.3",
+        "gopd": "^1.0.1",
+        "is-typed-array": "^1.1.13",
+        "possible-typed-array-names": "^1.0.0",
+        "reflect.getprototypeof": "^1.0.6"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/typescript": {
+      "version": "5.8.3",
+      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz",
+      "integrity": "sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "bin": {
+        "tsc": "bin/tsc",
+        "tsserver": "bin/tsserver"
+      },
+      "engines": {
+        "node": ">=14.17"
+      }
+    },
+    "node_modules/unbox-primitive": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.1.0.tgz",
+      "integrity": "sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.3",
+        "has-bigints": "^1.0.2",
+        "has-symbols": "^1.1.0",
+        "which-boxed-primitive": "^1.1.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/undici-types": {
+      "version": "6.21.0",
+      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz",
+      "integrity": "sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/unrs-resolver": {
+      "version": "1.11.1",
+      "resolved": "https://registry.npmjs.org/unrs-resolver/-/unrs-resolver-1.11.1.tgz",
+      "integrity": "sha512-bSjt9pjaEBnNiGgc9rUiHGKv5l4/TGzDmYw3RhnkJGtLhbnnA/5qJj7x3dNDCRx/PJxu774LlH8lCOlB4hEfKg==",
+      "dev": true,
+      "hasInstallScript": true,
+      "license": "MIT",
+      "dependencies": {
+        "napi-postinstall": "^0.3.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/unrs-resolver"
+      },
+      "optionalDependencies": {
+        "@unrs/resolver-binding-android-arm-eabi": "1.11.1",
+        "@unrs/resolver-binding-android-arm64": "1.11.1",
+        "@unrs/resolver-binding-darwin-arm64": "1.11.1",
+        "@unrs/resolver-binding-darwin-x64": "1.11.1",
+        "@unrs/resolver-binding-freebsd-x64": "1.11.1",
+        "@unrs/resolver-binding-linux-arm-gnueabihf": "1.11.1",
+        "@unrs/resolver-binding-linux-arm-musleabihf": "1.11.1",
+        "@unrs/resolver-binding-linux-arm64-gnu": "1.11.1",
+        "@unrs/resolver-binding-linux-arm64-musl": "1.11.1",
+        "@unrs/resolver-binding-linux-ppc64-gnu": "1.11.1",
+        "@unrs/resolver-binding-linux-riscv64-gnu": "1.11.1",
+        "@unrs/resolver-binding-linux-riscv64-musl": "1.11.1",
+        "@unrs/resolver-binding-linux-s390x-gnu": "1.11.1",
+        "@unrs/resolver-binding-linux-x64-gnu": "1.11.1",
+        "@unrs/resolver-binding-linux-x64-musl": "1.11.1",
+        "@unrs/resolver-binding-wasm32-wasi": "1.11.1",
+        "@unrs/resolver-binding-win32-arm64-msvc": "1.11.1",
+        "@unrs/resolver-binding-win32-ia32-msvc": "1.11.1",
+        "@unrs/resolver-binding-win32-x64-msvc": "1.11.1"
+      }
+    },
+    "node_modules/uri-js": {
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
+      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "punycode": "^2.1.0"
+      }
+    },
+    "node_modules/which": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
+      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "isexe": "^2.0.0"
+      },
+      "bin": {
+        "node-which": "bin/node-which"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/which-boxed-primitive": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.1.1.tgz",
+      "integrity": "sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-bigint": "^1.1.0",
+        "is-boolean-object": "^1.2.1",
+        "is-number-object": "^1.1.1",
+        "is-string": "^1.1.1",
+        "is-symbol": "^1.1.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/which-builtin-type": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.2.1.tgz",
+      "integrity": "sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "function.prototype.name": "^1.1.6",
+        "has-tostringtag": "^1.0.2",
+        "is-async-function": "^2.0.0",
+        "is-date-object": "^1.1.0",
+        "is-finalizationregistry": "^1.1.0",
+        "is-generator-function": "^1.0.10",
+        "is-regex": "^1.2.1",
+        "is-weakref": "^1.0.2",
+        "isarray": "^2.0.5",
+        "which-boxed-primitive": "^1.1.0",
+        "which-collection": "^1.0.2",
+        "which-typed-array": "^1.1.16"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/which-collection": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz",
+      "integrity": "sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-map": "^2.0.3",
+        "is-set": "^2.0.3",
+        "is-weakmap": "^2.0.2",
+        "is-weakset": "^2.0.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/which-typed-array": {
+      "version": "1.1.19",
+      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.19.tgz",
+      "integrity": "sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "available-typed-arrays": "^1.0.7",
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.4",
+        "for-each": "^0.3.5",
+        "get-proto": "^1.0.1",
+        "gopd": "^1.2.0",
+        "has-tostringtag": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/word-wrap": {
+      "version": "1.2.5",
+      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
+      "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/yocto-queue": {
+      "version": "0.1.0",
+      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
+      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    }
+  }
+}
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..0fcfbd1
--- /dev/null
+++ b/package.json
@@ -0,0 +1,25 @@
+{
+  "name": "client",
+  "version": "0.1.0",
+  "private": true,
+  "scripts": {
+    "dev": "next dev --turbopack",
+    "build": "next build",
+    "start": "next start",
+    "lint": "next lint"
+  },
+  "dependencies": {
+    "react": "19.1.0",
+    "react-dom": "19.1.0",
+    "next": "15.4.2"
+  },
+  "devDependencies": {
+    "typescript": "^5",
+    "@types/node": "^20",
+    "@types/react": "^19",
+    "@types/react-dom": "^19",
+    "eslint": "^9",
+    "eslint-config-next": "15.4.2",
+    "@eslint/eslintrc": "^3"
+  }
+}
diff --git a/public/file.svg b/public/file.svg
new file mode 100644
index 0000000..004145c
--- /dev/null
+++ b/public/file.svg
@@ -0,0 +1 @@
+<svg fill="none" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 13.5V5.41a1 1 0 0 0-.3-.7L9.8.29A1 1 0 0 0 9.08 0H1.5v13.5A2.5 2.5 0 0 0 4 16h8a2.5 2.5 0 0 0 2.5-2.5m-1.5 0v-7H8v-5H3v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1M9.5 5V2.12L12.38 5zM5.13 5h-.62v1.25h2.12V5zm-.62 3h7.12v1.25H4.5zm.62 3h-.62v1.25h7.12V11z" clip-rule="evenodd" fill="#666" fill-rule="evenodd"/></svg>
\ No newline at end of file
diff --git a/public/globe.svg b/public/globe.svg
new file mode 100644
index 0000000..567f17b
--- /dev/null
+++ b/public/globe.svg
@@ -0,0 +1 @@
+<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g clip-path="url(#a)"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.27 14.1a6.5 6.5 0 0 0 3.67-3.45q-1.24.21-2.7.34-.31 1.83-.97 3.1M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.48-1.52a7 7 0 0 1-.96 0H7.5a4 4 0 0 1-.84-1.32q-.38-.89-.63-2.08a40 40 0 0 0 3.92 0q-.25 1.2-.63 2.08a4 4 0 0 1-.84 1.31zm2.94-4.76q1.66-.15 2.95-.43a7 7 0 0 0 0-2.58q-1.3-.27-2.95-.43a18 18 0 0 1 0 3.44m-1.27-3.54a17 17 0 0 1 0 3.64 39 39 0 0 1-4.3 0 17 17 0 0 1 0-3.64 39 39 0 0 1 4.3 0m1.1-1.17q1.45.13 2.69.34a6.5 6.5 0 0 0-3.67-3.44q.65 1.26.98 3.1M8.48 1.5l.01.02q.41.37.84 1.31.38.89.63 2.08a40 40 0 0 0-3.92 0q.25-1.2.63-2.08a4 4 0 0 1 .85-1.32 7 7 0 0 1 .96 0m-2.75.4a6.5 6.5 0 0 0-3.67 3.44 29 29 0 0 1 2.7-.34q.31-1.83.97-3.1M4.58 6.28q-1.66.16-2.95.43a7 7 0 0 0 0 2.58q1.3.27 2.95.43a18 18 0 0 1 0-3.44m.17 4.71q-1.45-.12-2.69-.34a6.5 6.5 0 0 0 3.67 3.44q-.65-1.27-.98-3.1" fill="#666"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs></svg>
\ No newline at end of file
diff --git a/public/next.svg b/public/next.svg
new file mode 100644
index 0000000..5174b28
--- /dev/null
+++ b/public/next.svg
@@ -0,0 +1 @@
+<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>
\ No newline at end of file
diff --git a/public/vercel.svg b/public/vercel.svg
new file mode 100644
index 0000000..7705396
--- /dev/null
+++ b/public/vercel.svg
@@ -0,0 +1 @@
+<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1155 1000"><path d="m577.3 0 577.4 1000H0z" fill="#fff"/></svg>
\ No newline at end of file
diff --git a/public/window.svg b/public/window.svg
new file mode 100644
index 0000000..b2b2a44
--- /dev/null
+++ b/public/window.svg
@@ -0,0 +1 @@
+<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5h13v10a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1zM0 1h16v11.5a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 12.5zm3.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M7 4.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m1.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5" fill="#666"/></svg>
\ No newline at end of file
diff --git a/tsconfig.json b/tsconfig.json
new file mode 100644
index 0000000..d8b9323
--- /dev/null
+++ b/tsconfig.json
@@ -0,0 +1,27 @@
+{
+  "compilerOptions": {
+    "target": "ES2017",
+    "lib": ["dom", "dom.iterable", "esnext"],
+    "allowJs": true,
+    "skipLibCheck": true,
+    "strict": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "module": "esnext",
+    "moduleResolution": "bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "jsx": "preserve",
+    "incremental": true,
+    "plugins": [
+      {
+        "name": "next"
+      }
+    ],
+    "paths": {
+      "@/*": ["./*"]
+    }
+  },
+  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
+  "exclude": ["node_modules"]
+}
-- 
2.41.0


From 697664104e988b124d3d0e4519339d4f097e5ba0 Mon Sep 17 00:00:00 2001
From: oscar-bek <salamov.behzod@gmail.com>
Date: Tue, 22 Jul 2025 16:26:18 +0900
Subject: [PATCH 02/16] feat: Telegram-clone app init

---
 app/favicon.ico     | Bin 25931 -> 0 bytes
 app/globals.css     | 143 ++++++--
 app/layout.tsx      |   4 +-
 app/page.module.css | 167 ---------
 app/page.tsx        |  98 +-----
 components.json     |  21 ++
 lib/utils.ts        |   6 +
 package-lock.json   | 833 +++++++++++++++++++++++++++++++++++++++++++-
 package.json        |  15 +-
 postcss.config.mjs  |   5 +
 10 files changed, 988 insertions(+), 304 deletions(-)
 delete mode 100644 app/favicon.ico
 delete mode 100644 app/page.module.css
 create mode 100644 components.json
 create mode 100644 lib/utils.ts
 create mode 100644 postcss.config.mjs

diff --git a/app/favicon.ico b/app/favicon.ico
deleted file mode 100644
index 718d6fea4835ec2d246af9800eddb7ffb276240c..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 25931
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
LrJugUA?W`A8`#=m

diff --git a/app/globals.css b/app/globals.css
index e3734be..a798131 100644
--- a/app/globals.css
+++ b/app/globals.css
@@ -1,42 +1,123 @@
-:root {
-  --background: #ffffff;
-  --foreground: #171717;
-}
+@import "tailwindcss";
+@import "tw-animate-css";
 
-@media (prefers-color-scheme: dark) {
-  :root {
-    --background: #0a0a0a;
-    --foreground: #ededed;
-  }
-}
+@custom-variant dark (&:is(.dark *));
 
-html,
-body {
-  max-width: 100vw;
-  overflow-x: hidden;
+@theme inline {
+  --color-background: var(--background);
+  --color-foreground: var(--foreground);
+  --font-sans: var(--font-geist-sans);
+  --font-mono: var(--font-geist-mono);
+  --color-sidebar-ring: var(--sidebar-ring);
+  --color-sidebar-border: var(--sidebar-border);
+  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
+  --color-sidebar-accent: var(--sidebar-accent);
+  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
+  --color-sidebar-primary: var(--sidebar-primary);
+  --color-sidebar-foreground: var(--sidebar-foreground);
+  --color-sidebar: var(--sidebar);
+  --color-chart-5: var(--chart-5);
+  --color-chart-4: var(--chart-4);
+  --color-chart-3: var(--chart-3);
+  --color-chart-2: var(--chart-2);
+  --color-chart-1: var(--chart-1);
+  --color-ring: var(--ring);
+  --color-input: var(--input);
+  --color-border: var(--border);
+  --color-destructive: var(--destructive);
+  --color-accent-foreground: var(--accent-foreground);
+  --color-accent: var(--accent);
+  --color-muted-foreground: var(--muted-foreground);
+  --color-muted: var(--muted);
+  --color-secondary-foreground: var(--secondary-foreground);
+  --color-secondary: var(--secondary);
+  --color-primary-foreground: var(--primary-foreground);
+  --color-primary: var(--primary);
+  --color-popover-foreground: var(--popover-foreground);
+  --color-popover: var(--popover);
+  --color-card-foreground: var(--card-foreground);
+  --color-card: var(--card);
+  --radius-sm: calc(var(--radius) - 4px);
+  --radius-md: calc(var(--radius) - 2px);
+  --radius-lg: var(--radius);
+  --radius-xl: calc(var(--radius) + 4px);
 }
 
-body {
-  color: var(--foreground);
-  background: var(--background);
-  font-family: Arial, Helvetica, sans-serif;
-  -webkit-font-smoothing: antialiased;
-  -moz-osx-font-smoothing: grayscale;
+:root {
+  --radius: 0.65rem;
+  --background: oklch(1 0 0);
+  --foreground: oklch(0.141 0.005 285.823);
+  --card: oklch(1 0 0);
+  --card-foreground: oklch(0.141 0.005 285.823);
+  --popover: oklch(1 0 0);
+  --popover-foreground: oklch(0.141 0.005 285.823);
+  --primary: oklch(0.623 0.214 259.815);
+  --primary-foreground: oklch(0.97 0.014 254.604);
+  --secondary: oklch(0.967 0.001 286.375);
+  --secondary-foreground: oklch(0.21 0.006 285.885);
+  --muted: oklch(0.967 0.001 286.375);
+  --muted-foreground: oklch(0.552 0.016 285.938);
+  --accent: oklch(0.967 0.001 286.375);
+  --accent-foreground: oklch(0.21 0.006 285.885);
+  --destructive: oklch(0.577 0.245 27.325);
+  --border: oklch(0.92 0.004 286.32);
+  --input: oklch(0.92 0.004 286.32);
+  --ring: oklch(0.623 0.214 259.815);
+  --chart-1: oklch(0.646 0.222 41.116);
+  --chart-2: oklch(0.6 0.118 184.704);
+  --chart-3: oklch(0.398 0.07 227.392);
+  --chart-4: oklch(0.828 0.189 84.429);
+  --chart-5: oklch(0.769 0.188 70.08);
+  --sidebar: oklch(0.985 0 0);
+  --sidebar-foreground: oklch(0.141 0.005 285.823);
+  --sidebar-primary: oklch(0.623 0.214 259.815);
+  --sidebar-primary-foreground: oklch(0.97 0.014 254.604);
+  --sidebar-accent: oklch(0.967 0.001 286.375);
+  --sidebar-accent-foreground: oklch(0.21 0.006 285.885);
+  --sidebar-border: oklch(0.92 0.004 286.32);
+  --sidebar-ring: oklch(0.623 0.214 259.815);
 }
 
-* {
-  box-sizing: border-box;
-  padding: 0;
-  margin: 0;
+.dark {
+  --background: oklch(0.141 0.005 285.823);
+  --foreground: oklch(0.985 0 0);
+  --card: oklch(0.21 0.006 285.885);
+  --card-foreground: oklch(0.985 0 0);
+  --popover: oklch(0.21 0.006 285.885);
+  --popover-foreground: oklch(0.985 0 0);
+  --primary: oklch(0.546 0.245 262.881);
+  --primary-foreground: oklch(0.379 0.146 265.522);
+  --secondary: oklch(0.274 0.006 286.033);
+  --secondary-foreground: oklch(0.985 0 0);
+  --muted: oklch(0.274 0.006 286.033);
+  --muted-foreground: oklch(0.705 0.015 286.067);
+  --accent: oklch(0.274 0.006 286.033);
+  --accent-foreground: oklch(0.985 0 0);
+  --destructive: oklch(0.704 0.191 22.216);
+  --border: oklch(1 0 0 / 10%);
+  --input: oklch(1 0 0 / 15%);
+  --ring: oklch(0.488 0.243 264.376);
+  --chart-1: oklch(0.488 0.243 264.376);
+  --chart-2: oklch(0.696 0.17 162.48);
+  --chart-3: oklch(0.769 0.188 70.08);
+  --chart-4: oklch(0.627 0.265 303.9);
+  --chart-5: oklch(0.645 0.246 16.439);
+  --sidebar: oklch(0.21 0.006 285.885);
+  --sidebar-foreground: oklch(0.985 0 0);
+  --sidebar-primary: oklch(0.546 0.245 262.881);
+  --sidebar-primary-foreground: oklch(0.379 0.146 265.522);
+  --sidebar-accent: oklch(0.274 0.006 286.033);
+  --sidebar-accent-foreground: oklch(0.985 0 0);
+  --sidebar-border: oklch(1 0 0 / 10%);
+  --sidebar-ring: oklch(0.488 0.243 264.376);
 }
 
-a {
-  color: inherit;
-  text-decoration: none;
-}
 
-@media (prefers-color-scheme: dark) {
-  html {
-    color-scheme: dark;
+@layer base {
+  * {
+    @apply border-border outline-ring/50;
+  }
+  body {
+    @apply bg-background text-foreground;
   }
 }
diff --git a/app/layout.tsx b/app/layout.tsx
index 42fc323..f7fa87e 100644
--- a/app/layout.tsx
+++ b/app/layout.tsx
@@ -24,7 +24,9 @@ export default function RootLayout({
 }>) {
   return (
     <html lang="en">
-      <body className={`${geistSans.variable} ${geistMono.variable}`}>
+      <body
+        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
+      >
         {children}
       </body>
     </html>
diff --git a/app/page.module.css b/app/page.module.css
deleted file mode 100644
index 58c71af..0000000
--- a/app/page.module.css
+++ /dev/null
@@ -1,167 +0,0 @@
-.page {
-  --gray-rgb: 0, 0, 0;
-  --gray-alpha-200: rgba(var(--gray-rgb), 0.08);
-  --gray-alpha-100: rgba(var(--gray-rgb), 0.05);
-
-  --button-primary-hover: #383838;
-  --button-secondary-hover: #f2f2f2;
-
-  display: grid;
-  grid-template-rows: 20px 1fr 20px;
-  align-items: center;
-  justify-items: center;
-  min-height: 100svh;
-  padding: 80px;
-  gap: 64px;
-  font-family: var(--font-geist-sans);
-}
-
-@media (prefers-color-scheme: dark) {
-  .page {
-    --gray-rgb: 255, 255, 255;
-    --gray-alpha-200: rgba(var(--gray-rgb), 0.145);
-    --gray-alpha-100: rgba(var(--gray-rgb), 0.06);
-
-    --button-primary-hover: #ccc;
-    --button-secondary-hover: #1a1a1a;
-  }
-}
-
-.main {
-  display: flex;
-  flex-direction: column;
-  gap: 32px;
-  grid-row-start: 2;
-}
-
-.main ol {
-  font-family: var(--font-geist-mono);
-  padding-left: 0;
-  margin: 0;
-  font-size: 14px;
-  line-height: 24px;
-  letter-spacing: -0.01em;
-  list-style-position: inside;
-}
-
-.main li:not(:last-of-type) {
-  margin-bottom: 8px;
-}
-
-.main code {
-  font-family: inherit;
-  background: var(--gray-alpha-100);
-  padding: 2px 4px;
-  border-radius: 4px;
-  font-weight: 600;
-}
-
-.ctas {
-  display: flex;
-  gap: 16px;
-}
-
-.ctas a {
-  appearance: none;
-  border-radius: 128px;
-  height: 48px;
-  padding: 0 20px;
-  border: 1px solid transparent;
-  transition:
-    background 0.2s,
-    color 0.2s,
-    border-color 0.2s;
-  cursor: pointer;
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  font-size: 16px;
-  line-height: 20px;
-  font-weight: 500;
-}
-
-a.primary {
-  background: var(--foreground);
-  color: var(--background);
-  gap: 8px;
-}
-
-a.secondary {
-  border-color: var(--gray-alpha-200);
-  min-width: 158px;
-}
-
-.footer {
-  grid-row-start: 3;
-  display: flex;
-  gap: 24px;
-}
-
-.footer a {
-  display: flex;
-  align-items: center;
-  gap: 8px;
-}
-
-.footer img {
-  flex-shrink: 0;
-}
-
-/* Enable hover only on non-touch devices */
-@media (hover: hover) and (pointer: fine) {
-  a.primary:hover {
-    background: var(--button-primary-hover);
-    border-color: transparent;
-  }
-
-  a.secondary:hover {
-    background: var(--button-secondary-hover);
-    border-color: transparent;
-  }
-
-  .footer a:hover {
-    text-decoration: underline;
-    text-underline-offset: 4px;
-  }
-}
-
-@media (max-width: 600px) {
-  .page {
-    padding: 32px;
-    padding-bottom: 80px;
-  }
-
-  .main {
-    align-items: center;
-  }
-
-  .main ol {
-    text-align: center;
-  }
-
-  .ctas {
-    flex-direction: column;
-  }
-
-  .ctas a {
-    font-size: 14px;
-    height: 40px;
-    padding: 0 16px;
-  }
-
-  a.secondary {
-    min-width: auto;
-  }
-
-  .footer {
-    flex-wrap: wrap;
-    align-items: center;
-    justify-content: center;
-  }
-}
-
-@media (prefers-color-scheme: dark) {
-  .logo {
-    filter: invert();
-  }
-}
diff --git a/app/page.tsx b/app/page.tsx
index 52bd15e..af8f665 100644
--- a/app/page.tsx
+++ b/app/page.tsx
@@ -1,95 +1,9 @@
-import Image from "next/image";
-import styles from "./page.module.css";
+import React from 'react'
 
-export default function Home() {
+const HomePage = () => {
   return (
-    <div className={styles.page}>
-      <main className={styles.main}>
-        <Image
-          className={styles.logo}
-          src="/next.svg"
-          alt="Next.js logo"
-          width={180}
-          height={38}
-          priority
-        />
-        <ol>
-          <li>
-            Get started by editing <code>app/page.tsx</code>.
-          </li>
-          <li>Save and see your changes instantly.</li>
-        </ol>
-
-        <div className={styles.ctas}>
-          <a
-            className={styles.primary}
-            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=appdir-template&utm_campaign=create-next-app"
-            target="_blank"
-            rel="noopener noreferrer"
-          >
-            <Image
-              className={styles.logo}
-              src="/vercel.svg"
-              alt="Vercel logomark"
-              width={20}
-              height={20}
-            />
-            Deploy now
-          </a>
-          <a
-            href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=appdir-template&utm_campaign=create-next-app"
-            target="_blank"
-            rel="noopener noreferrer"
-            className={styles.secondary}
-          >
-            Read our docs
-          </a>
-        </div>
-      </main>
-      <footer className={styles.footer}>
-        <a
-          href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=appdir-template&utm_campaign=create-next-app"
-          target="_blank"
-          rel="noopener noreferrer"
-        >
-          <Image
-            aria-hidden
-            src="/file.svg"
-            alt="File icon"
-            width={16}
-            height={16}
-          />
-          Learn
-        </a>
-        <a
-          href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=appdir-template&utm_campaign=create-next-app"
-          target="_blank"
-          rel="noopener noreferrer"
-        >
-          <Image
-            aria-hidden
-            src="/window.svg"
-            alt="Window icon"
-            width={16}
-            height={16}
-          />
-          Examples
-        </a>
-        <a
-          href="https://nextjs.org?utm_source=create-next-app&utm_medium=appdir-template&utm_campaign=create-next-app"
-          target="_blank"
-          rel="noopener noreferrer"
-        >
-          <Image
-            aria-hidden
-            src="/globe.svg"
-            alt="Globe icon"
-            width={16}
-            height={16}
-          />
-          Go to nextjs.org →
-        </a>
-      </footer>
-    </div>
-  );
+    <div>Home Page</div>
+  )
 }
+
+export default HomePage;
\ No newline at end of file
diff --git a/components.json b/components.json
new file mode 100644
index 0000000..335484f
--- /dev/null
+++ b/components.json
@@ -0,0 +1,21 @@
+{
+  "$schema": "https://ui.shadcn.com/schema.json",
+  "style": "new-york",
+  "rsc": true,
+  "tsx": true,
+  "tailwind": {
+    "config": "",
+    "css": "app/globals.css",
+    "baseColor": "neutral",
+    "cssVariables": true,
+    "prefix": ""
+  },
+  "aliases": {
+    "components": "@/components",
+    "utils": "@/lib/utils",
+    "ui": "@/components/ui",
+    "lib": "@/lib",
+    "hooks": "@/hooks"
+  },
+  "iconLibrary": "lucide"
+}
\ No newline at end of file
diff --git a/lib/utils.ts b/lib/utils.ts
new file mode 100644
index 0000000..bd0c391
--- /dev/null
+++ b/lib/utils.ts
@@ -0,0 +1,6 @@
+import { clsx, type ClassValue } from "clsx"
+import { twMerge } from "tailwind-merge"
+
+export function cn(...inputs: ClassValue[]) {
+  return twMerge(clsx(inputs))
+}
diff --git a/package-lock.json b/package-lock.json
index a3c058c..6e4ef1e 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -8,20 +8,54 @@
       "name": "client",
       "version": "0.1.0",
       "dependencies": {
+        "class-variance-authority": "^0.7.1",
+        "clsx": "^2.1.1",
+        "lucide-react": "^0.525.0",
         "next": "15.4.2",
         "react": "19.1.0",
-        "react-dom": "19.1.0"
+        "react-dom": "19.1.0",
+        "tailwind-merge": "^3.3.1"
       },
       "devDependencies": {
         "@eslint/eslintrc": "^3",
+        "@tailwindcss/postcss": "^4",
         "@types/node": "^20",
         "@types/react": "^19",
         "@types/react-dom": "^19",
         "eslint": "^9",
         "eslint-config-next": "15.4.2",
+        "tailwindcss": "^4",
+        "tw-animate-css": "^1.3.5",
         "typescript": "^5"
       }
     },
+    "node_modules/@alloc/quick-lru": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
+      "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/@ampproject/remapping": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
+      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@jridgewell/gen-mapping": "^0.3.5",
+        "@jridgewell/trace-mapping": "^0.3.24"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
     "node_modules/@emnapi/core": {
       "version": "1.4.5",
       "resolved": "https://registry.npmjs.org/@emnapi/core/-/core-1.4.5.tgz",
@@ -680,6 +714,58 @@
         "url": "https://opencollective.com/libvips"
       }
     },
+    "node_modules/@isaacs/fs-minipass": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/@isaacs/fs-minipass/-/fs-minipass-4.0.1.tgz",
+      "integrity": "sha512-wgm9Ehl2jpeqP3zw/7mo3kRHFp5MEDhqAdwy1fTGkHAwnkGOVsgpvQhL8B5n1qlb01jV3n/bI0ZfZp5lWA1k4w==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "minipass": "^7.0.4"
+      },
+      "engines": {
+        "node": ">=18.0.0"
+      }
+    },
+    "node_modules/@jridgewell/gen-mapping": {
+      "version": "0.3.12",
+      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.12.tgz",
+      "integrity": "sha512-OuLGC46TjB5BbN1dH8JULVVZY4WTdkF7tV9Ys6wLL1rubZnCMstOhNHueU5bLCrnRuDhKPDM4g6sw4Bel5Gzqg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/sourcemap-codec": "^1.5.0",
+        "@jridgewell/trace-mapping": "^0.3.24"
+      }
+    },
+    "node_modules/@jridgewell/resolve-uri": {
+      "version": "3.1.2",
+      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
+      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@jridgewell/sourcemap-codec": {
+      "version": "1.5.4",
+      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.4.tgz",
+      "integrity": "sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@jridgewell/trace-mapping": {
+      "version": "0.3.29",
+      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.29.tgz",
+      "integrity": "sha512-uw6guiW/gcAGPDhLmd77/6lW8QLeiV5RUTsAX46Db6oLhGaVj4lhnPwb184s1bkc8kdVg/+h988dro8GRDpmYQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/resolve-uri": "^3.1.0",
+        "@jridgewell/sourcemap-codec": "^1.4.14"
+      }
+    },
     "node_modules/@napi-rs/wasm-runtime": {
       "version": "0.2.12",
       "resolved": "https://registry.npmjs.org/@napi-rs/wasm-runtime/-/wasm-runtime-0.2.12.tgz",
@@ -908,6 +994,282 @@
         "tslib": "^2.8.0"
       }
     },
+    "node_modules/@tailwindcss/node": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/node/-/node-4.1.11.tgz",
+      "integrity": "sha512-yzhzuGRmv5QyU9qLNg4GTlYI6STedBWRE7NjxP45CsFYYq9taI0zJXZBMqIC/c8fViNLhmrbpSFS57EoxUmD6Q==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@ampproject/remapping": "^2.3.0",
+        "enhanced-resolve": "^5.18.1",
+        "jiti": "^2.4.2",
+        "lightningcss": "1.30.1",
+        "magic-string": "^0.30.17",
+        "source-map-js": "^1.2.1",
+        "tailwindcss": "4.1.11"
+      }
+    },
+    "node_modules/@tailwindcss/oxide": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide/-/oxide-4.1.11.tgz",
+      "integrity": "sha512-Q69XzrtAhuyfHo+5/HMgr1lAiPP/G40OMFAnws7xcFEYqcypZmdW8eGXaOUIeOl1dzPJBPENXgbjsOyhg2nkrg==",
+      "dev": true,
+      "hasInstallScript": true,
+      "license": "MIT",
+      "dependencies": {
+        "detect-libc": "^2.0.4",
+        "tar": "^7.4.3"
+      },
+      "engines": {
+        "node": ">= 10"
+      },
+      "optionalDependencies": {
+        "@tailwindcss/oxide-android-arm64": "4.1.11",
+        "@tailwindcss/oxide-darwin-arm64": "4.1.11",
+        "@tailwindcss/oxide-darwin-x64": "4.1.11",
+        "@tailwindcss/oxide-freebsd-x64": "4.1.11",
+        "@tailwindcss/oxide-linux-arm-gnueabihf": "4.1.11",
+        "@tailwindcss/oxide-linux-arm64-gnu": "4.1.11",
+        "@tailwindcss/oxide-linux-arm64-musl": "4.1.11",
+        "@tailwindcss/oxide-linux-x64-gnu": "4.1.11",
+        "@tailwindcss/oxide-linux-x64-musl": "4.1.11",
+        "@tailwindcss/oxide-wasm32-wasi": "4.1.11",
+        "@tailwindcss/oxide-win32-arm64-msvc": "4.1.11",
+        "@tailwindcss/oxide-win32-x64-msvc": "4.1.11"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-android-arm64": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-android-arm64/-/oxide-android-arm64-4.1.11.tgz",
+      "integrity": "sha512-3IfFuATVRUMZZprEIx9OGDjG3Ou3jG4xQzNTvjDoKmU9JdmoCohQJ83MYd0GPnQIu89YoJqvMM0G3uqLRFtetg==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-darwin-arm64": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-arm64/-/oxide-darwin-arm64-4.1.11.tgz",
+      "integrity": "sha512-ESgStEOEsyg8J5YcMb1xl8WFOXfeBmrhAwGsFxxB2CxY9evy63+AtpbDLAyRkJnxLy2WsD1qF13E97uQyP1lfQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-darwin-x64": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-x64/-/oxide-darwin-x64-4.1.11.tgz",
+      "integrity": "sha512-EgnK8kRchgmgzG6jE10UQNaH9Mwi2n+yw1jWmof9Vyg2lpKNX2ioe7CJdf9M5f8V9uaQxInenZkOxnTVL3fhAw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-freebsd-x64": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-freebsd-x64/-/oxide-freebsd-x64-4.1.11.tgz",
+      "integrity": "sha512-xdqKtbpHs7pQhIKmqVpxStnY1skuNh4CtbcyOHeX1YBE0hArj2romsFGb6yUmzkq/6M24nkxDqU8GYrKrz+UcA==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-linux-arm-gnueabihf": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm-gnueabihf/-/oxide-linux-arm-gnueabihf-4.1.11.tgz",
+      "integrity": "sha512-ryHQK2eyDYYMwB5wZL46uoxz2zzDZsFBwfjssgB7pzytAeCCa6glsiJGjhTEddq/4OsIjsLNMAiMlHNYnkEEeg==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-linux-arm64-gnu": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-gnu/-/oxide-linux-arm64-gnu-4.1.11.tgz",
+      "integrity": "sha512-mYwqheq4BXF83j/w75ewkPJmPZIqqP1nhoghS9D57CLjsh3Nfq0m4ftTotRYtGnZd3eCztgbSPJ9QhfC91gDZQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-linux-arm64-musl": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-musl/-/oxide-linux-arm64-musl-4.1.11.tgz",
+      "integrity": "sha512-m/NVRFNGlEHJrNVk3O6I9ggVuNjXHIPoD6bqay/pubtYC9QIdAMpS+cswZQPBLvVvEF6GtSNONbDkZrjWZXYNQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-linux-x64-gnu": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-gnu/-/oxide-linux-x64-gnu-4.1.11.tgz",
+      "integrity": "sha512-YW6sblI7xukSD2TdbbaeQVDysIm/UPJtObHJHKxDEcW2exAtY47j52f8jZXkqE1krdnkhCMGqP3dbniu1Te2Fg==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-linux-x64-musl": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-musl/-/oxide-linux-x64-musl-4.1.11.tgz",
+      "integrity": "sha512-e3C/RRhGunWYNC3aSF7exsQkdXzQ/M+aYuZHKnw4U7KQwTJotnWsGOIVih0s2qQzmEzOFIJ3+xt7iq67K/p56Q==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-wasm32-wasi": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-wasm32-wasi/-/oxide-wasm32-wasi-4.1.11.tgz",
+      "integrity": "sha512-Xo1+/GU0JEN/C/dvcammKHzeM6NqKovG+6921MR6oadee5XPBaKOumrJCXvopJ/Qb5TH7LX/UAywbqrP4lax0g==",
+      "bundleDependencies": [
+        "@napi-rs/wasm-runtime",
+        "@emnapi/core",
+        "@emnapi/runtime",
+        "@tybys/wasm-util",
+        "@emnapi/wasi-threads",
+        "tslib"
+      ],
+      "cpu": [
+        "wasm32"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "@emnapi/core": "^1.4.3",
+        "@emnapi/runtime": "^1.4.3",
+        "@emnapi/wasi-threads": "^1.0.2",
+        "@napi-rs/wasm-runtime": "^0.2.11",
+        "@tybys/wasm-util": "^0.9.0",
+        "tslib": "^2.8.0"
+      },
+      "engines": {
+        "node": ">=14.0.0"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-win32-arm64-msvc": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-arm64-msvc/-/oxide-win32-arm64-msvc-4.1.11.tgz",
+      "integrity": "sha512-UgKYx5PwEKrac3GPNPf6HVMNhUIGuUh4wlDFR2jYYdkX6pL/rn73zTq/4pzUm8fOjAn5L8zDeHp9iXmUGOXZ+w==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-win32-x64-msvc": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-x64-msvc/-/oxide-win32-x64-msvc-4.1.11.tgz",
+      "integrity": "sha512-YfHoggn1j0LK7wR82TOucWc5LDCguHnoS879idHekmmiR7g9HUtMw9MI0NHatS28u/Xlkfi9w5RJWgz2Dl+5Qg==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/postcss": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/postcss/-/postcss-4.1.11.tgz",
+      "integrity": "sha512-q/EAIIpF6WpLhKEuQSEVMZNMIY8KhWoAemZ9eylNAih9jxMGAYPPWBn3I9QL/2jZ+e7OEz/tZkX5HwbBR4HohA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@alloc/quick-lru": "^5.2.0",
+        "@tailwindcss/node": "4.1.11",
+        "@tailwindcss/oxide": "4.1.11",
+        "postcss": "^8.4.41",
+        "tailwindcss": "4.1.11"
+      }
+    },
     "node_modules/@tybys/wasm-util": {
       "version": "0.10.0",
       "resolved": "https://registry.npmjs.org/@tybys/wasm-util/-/wasm-util-0.10.0.tgz",
@@ -1941,12 +2303,43 @@
         "url": "https://github.com/chalk/chalk?sponsor=1"
       }
     },
+    "node_modules/chownr": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/chownr/-/chownr-3.0.0.tgz",
+      "integrity": "sha512-+IxzY9BZOQd/XuYPRmrvEVjF/nqj5kgT4kEq7VofrDoM1MxoRjEWkrCC3EtLi59TVawxTAn+orJwFQcrqEN1+g==",
+      "dev": true,
+      "license": "BlueOak-1.0.0",
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/class-variance-authority": {
+      "version": "0.7.1",
+      "resolved": "https://registry.npmjs.org/class-variance-authority/-/class-variance-authority-0.7.1.tgz",
+      "integrity": "sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==",
+      "license": "Apache-2.0",
+      "dependencies": {
+        "clsx": "^2.1.1"
+      },
+      "funding": {
+        "url": "https://polar.sh/cva"
+      }
+    },
     "node_modules/client-only": {
       "version": "0.0.1",
       "resolved": "https://registry.npmjs.org/client-only/-/client-only-0.0.1.tgz",
       "integrity": "sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==",
       "license": "MIT"
     },
+    "node_modules/clsx": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz",
+      "integrity": "sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
     "node_modules/color": {
       "version": "4.2.3",
       "resolved": "https://registry.npmjs.org/color/-/color-4.2.3.tgz",
@@ -2147,8 +2540,8 @@
       "version": "2.0.4",
       "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
       "integrity": "sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==",
+      "devOptional": true,
       "license": "Apache-2.0",
-      "optional": true,
       "engines": {
         "node": ">=8"
       }
@@ -2188,6 +2581,20 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/enhanced-resolve": {
+      "version": "5.18.2",
+      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.2.tgz",
+      "integrity": "sha512-6Jw4sE1maoRJo3q8MsSIn2onJFbLTOjY9hlx4DZXmOKvLRd1Ok2kXmAGXaafL2+ijsJZ1ClYbl/pmqr9+k4iUQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "graceful-fs": "^4.2.4",
+        "tapable": "^2.2.0"
+      },
+      "engines": {
+        "node": ">=10.13.0"
+      }
+    },
     "node_modules/es-abstract": {
       "version": "1.24.0",
       "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.24.0.tgz",
@@ -3112,6 +3519,13 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/graceful-fs": {
+      "version": "4.2.11",
+      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
+      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
+      "dev": true,
+      "license": "ISC"
+    },
     "node_modules/graphemer": {
       "version": "1.4.0",
       "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
@@ -3705,7 +4119,17 @@
         "node": ">= 0.4"
       }
     },
-    "node_modules/js-tokens": {
+    "node_modules/jiti": {
+      "version": "2.4.2",
+      "resolved": "https://registry.npmjs.org/jiti/-/jiti-2.4.2.tgz",
+      "integrity": "sha512-rg9zJN+G4n2nfJl5MW3BMygZX56zKPNVEYYqq7adpmMh4Jn2QNEwhvQlFy6jPVdcod7txZtKHWnyZiA3a0zP7A==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "jiti": "lib/jiti-cli.mjs"
+      }
+    },
+    "node_modules/js-tokens": {
       "version": "4.0.0",
       "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
       "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
@@ -3819,6 +4243,245 @@
         "node": ">= 0.8.0"
       }
     },
+    "node_modules/lightningcss": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss/-/lightningcss-1.30.1.tgz",
+      "integrity": "sha512-xi6IyHML+c9+Q3W0S4fCQJOym42pyurFiJUHEcEyHS0CeKzia4yZDEsLlqOFykxOdHpNy0NmvVO31vcSqAxJCg==",
+      "dev": true,
+      "license": "MPL-2.0",
+      "dependencies": {
+        "detect-libc": "^2.0.3"
+      },
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      },
+      "optionalDependencies": {
+        "lightningcss-darwin-arm64": "1.30.1",
+        "lightningcss-darwin-x64": "1.30.1",
+        "lightningcss-freebsd-x64": "1.30.1",
+        "lightningcss-linux-arm-gnueabihf": "1.30.1",
+        "lightningcss-linux-arm64-gnu": "1.30.1",
+        "lightningcss-linux-arm64-musl": "1.30.1",
+        "lightningcss-linux-x64-gnu": "1.30.1",
+        "lightningcss-linux-x64-musl": "1.30.1",
+        "lightningcss-win32-arm64-msvc": "1.30.1",
+        "lightningcss-win32-x64-msvc": "1.30.1"
+      }
+    },
+    "node_modules/lightningcss-darwin-arm64": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-darwin-arm64/-/lightningcss-darwin-arm64-1.30.1.tgz",
+      "integrity": "sha512-c8JK7hyE65X1MHMN+Viq9n11RRC7hgin3HhYKhrMyaXflk5GVplZ60IxyoVtzILeKr+xAJwg6zK6sjTBJ0FKYQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-darwin-x64": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-darwin-x64/-/lightningcss-darwin-x64-1.30.1.tgz",
+      "integrity": "sha512-k1EvjakfumAQoTfcXUcHQZhSpLlkAuEkdMBsI/ivWw9hL+7FtilQc0Cy3hrx0AAQrVtQAbMI7YjCgYgvn37PzA==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-freebsd-x64": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-freebsd-x64/-/lightningcss-freebsd-x64-1.30.1.tgz",
+      "integrity": "sha512-kmW6UGCGg2PcyUE59K5r0kWfKPAVy4SltVeut+umLCFoJ53RdCUWxcRDzO1eTaxf/7Q2H7LTquFHPL5R+Gjyig==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-linux-arm-gnueabihf": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm-gnueabihf/-/lightningcss-linux-arm-gnueabihf-1.30.1.tgz",
+      "integrity": "sha512-MjxUShl1v8pit+6D/zSPq9S9dQ2NPFSQwGvxBCYaBYLPlCWuPh9/t1MRS8iUaR8i+a6w7aps+B4N0S1TYP/R+Q==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-linux-arm64-gnu": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-gnu/-/lightningcss-linux-arm64-gnu-1.30.1.tgz",
+      "integrity": "sha512-gB72maP8rmrKsnKYy8XUuXi/4OctJiuQjcuqWNlJQ6jZiWqtPvqFziskH3hnajfvKB27ynbVCucKSm2rkQp4Bw==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-linux-arm64-musl": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-musl/-/lightningcss-linux-arm64-musl-1.30.1.tgz",
+      "integrity": "sha512-jmUQVx4331m6LIX+0wUhBbmMX7TCfjF5FoOH6SD1CttzuYlGNVpA7QnrmLxrsub43ClTINfGSYyHe2HWeLl5CQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-linux-x64-gnu": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-gnu/-/lightningcss-linux-x64-gnu-1.30.1.tgz",
+      "integrity": "sha512-piWx3z4wN8J8z3+O5kO74+yr6ze/dKmPnI7vLqfSqI8bccaTGY5xiSGVIJBDd5K5BHlvVLpUB3S2YCfelyJ1bw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-linux-x64-musl": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-musl/-/lightningcss-linux-x64-musl-1.30.1.tgz",
+      "integrity": "sha512-rRomAK7eIkL+tHY0YPxbc5Dra2gXlI63HL+v1Pdi1a3sC+tJTcFrHX+E86sulgAXeI7rSzDYhPSeHHjqFhqfeQ==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-win32-arm64-msvc": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-win32-arm64-msvc/-/lightningcss-win32-arm64-msvc-1.30.1.tgz",
+      "integrity": "sha512-mSL4rqPi4iXq5YVqzSsJgMVFENoa4nGTT/GjO2c0Yl9OuQfPsIfncvLrEW6RbbB24WtZ3xP/2CCmI3tNkNV4oA==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/lightningcss-win32-x64-msvc": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-win32-x64-msvc/-/lightningcss-win32-x64-msvc-1.30.1.tgz",
+      "integrity": "sha512-PVqXh48wh4T53F/1CCu8PIPCxLzWyCnn/9T5W1Jpmdy5h9Cwd+0YQS6/LwhHXSafuc61/xg9Lv5OrCby6a++jg==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
     "node_modules/locate-path": {
       "version": "6.0.0",
       "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
@@ -3855,6 +4518,25 @@
         "loose-envify": "cli.js"
       }
     },
+    "node_modules/lucide-react": {
+      "version": "0.525.0",
+      "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.525.0.tgz",
+      "integrity": "sha512-Tm1txJ2OkymCGkvwoHt33Y2JpN5xucVq1slHcgE6Lk0WjDfjgKWor5CdVER8U6DvcfMwh4M8XxmpTiyzfmfDYQ==",
+      "license": "ISC",
+      "peerDependencies": {
+        "react": "^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0"
+      }
+    },
+    "node_modules/magic-string": {
+      "version": "0.30.17",
+      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.17.tgz",
+      "integrity": "sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/sourcemap-codec": "^1.5.0"
+      }
+    },
     "node_modules/math-intrinsics": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
@@ -3912,6 +4594,45 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/minipass": {
+      "version": "7.1.2",
+      "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
+      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
+      "dev": true,
+      "license": "ISC",
+      "engines": {
+        "node": ">=16 || 14 >=14.17"
+      }
+    },
+    "node_modules/minizlib": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-3.0.2.tgz",
+      "integrity": "sha512-oG62iEk+CYt5Xj2YqI5Xi9xWUeZhDI8jjQmC5oThVH5JGCTgIjr7ciJDzC7MBzYd//WvR1OTmP5Q38Q8ShQtVA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "minipass": "^7.1.2"
+      },
+      "engines": {
+        "node": ">= 18"
+      }
+    },
+    "node_modules/mkdirp": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-3.0.1.tgz",
+      "integrity": "sha512-+NsyUUAZDmo6YVHzL/stxSu3t9YS1iljliy3BSDrXJ/dkn1KYdmtZODGGjLcc9XLgVVpH4KshHB8XmZgMhaBXg==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "mkdirp": "dist/cjs/src/bin.js"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
     "node_modules/ms": {
       "version": "2.1.3",
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
@@ -4012,6 +4733,34 @@
         }
       }
     },
+    "node_modules/next/node_modules/postcss": {
+      "version": "8.4.31",
+      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.31.tgz",
+      "integrity": "sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==",
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/postcss/"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/postcss"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "nanoid": "^3.3.6",
+        "picocolors": "^1.0.0",
+        "source-map-js": "^1.0.2"
+      },
+      "engines": {
+        "node": "^10 || ^12 || >=14"
+      }
+    },
     "node_modules/object-assign": {
       "version": "4.1.1",
       "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
@@ -4273,9 +5022,10 @@
       }
     },
     "node_modules/postcss": {
-      "version": "8.4.31",
-      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.31.tgz",
-      "integrity": "sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==",
+      "version": "8.5.6",
+      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz",
+      "integrity": "sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==",
+      "dev": true,
       "funding": [
         {
           "type": "opencollective",
@@ -4292,9 +5042,9 @@
       ],
       "license": "MIT",
       "dependencies": {
-        "nanoid": "^3.3.6",
-        "picocolors": "^1.0.0",
-        "source-map-js": "^1.0.2"
+        "nanoid": "^3.3.11",
+        "picocolors": "^1.1.1",
+        "source-map-js": "^1.2.1"
       },
       "engines": {
         "node": "^10 || ^12 || >=14"
@@ -4991,6 +5741,51 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/tailwind-merge": {
+      "version": "3.3.1",
+      "resolved": "https://registry.npmjs.org/tailwind-merge/-/tailwind-merge-3.3.1.tgz",
+      "integrity": "sha512-gBXpgUm/3rp1lMZZrM/w7D8GKqshif0zAymAhbCyIt8KMe+0v9DQ7cdYLR4FHH/cKpdTXb+A/tKKU3eolfsI+g==",
+      "license": "MIT",
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/dcastil"
+      }
+    },
+    "node_modules/tailwindcss": {
+      "version": "4.1.11",
+      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.11.tgz",
+      "integrity": "sha512-2E9TBm6MDD/xKYe+dvJZAmg3yxIEDNRc0jwlNyDg/4Fil2QcSLjFKGVff0lAf1jjeaArlG/M75Ey/EYr/OJtBA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/tapable": {
+      "version": "2.2.2",
+      "resolved": "https://registry.npmjs.org/tapable/-/tapable-2.2.2.tgz",
+      "integrity": "sha512-Re10+NauLTMCudc7T5WLFLAwDhQ0JWdrMK+9B2M8zR5hRExKmsRDCBA7/aV/pNJFltmBFO5BAMlQFi/vq3nKOg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/tar": {
+      "version": "7.4.3",
+      "resolved": "https://registry.npmjs.org/tar/-/tar-7.4.3.tgz",
+      "integrity": "sha512-5S7Va8hKfV7W5U6g3aYxXmlPoZVAwUMy9AOKyF2fVuZa2UD3qZjg578OrLRt8PcNN1PleVaL/5/yYATNL0ICUw==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "@isaacs/fs-minipass": "^4.0.0",
+        "chownr": "^3.0.0",
+        "minipass": "^7.1.2",
+        "minizlib": "^3.0.1",
+        "mkdirp": "^3.0.1",
+        "yallist": "^5.0.0"
+      },
+      "engines": {
+        "node": ">=18"
+      }
+    },
     "node_modules/tinyglobby": {
       "version": "0.2.14",
       "resolved": "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.14.tgz",
@@ -5081,6 +5876,16 @@
       "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
       "license": "0BSD"
     },
+    "node_modules/tw-animate-css": {
+      "version": "1.3.5",
+      "resolved": "https://registry.npmjs.org/tw-animate-css/-/tw-animate-css-1.3.5.tgz",
+      "integrity": "sha512-t3u+0YNoloIhj1mMXs779P6MO9q3p3mvGn4k1n3nJPqJw/glZcuijG2qTSN4z4mgNRfW5ZC3aXJFLwDtiipZXA==",
+      "dev": true,
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/sponsors/Wombosvideo"
+      }
+    },
     "node_modules/type-check": {
       "version": "0.4.0",
       "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
@@ -5372,6 +6177,16 @@
         "node": ">=0.10.0"
       }
     },
+    "node_modules/yallist": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/yallist/-/yallist-5.0.0.tgz",
+      "integrity": "sha512-YgvUTfwqyc7UXVMrB+SImsVYSmTS8X/tSrtdNZMImM+n7+QTriRXyXim0mBrTXNeqzVF0KWGgHPeiyViFFrNDw==",
+      "dev": true,
+      "license": "BlueOak-1.0.0",
+      "engines": {
+        "node": ">=18"
+      }
+    },
     "node_modules/yocto-queue": {
       "version": "0.1.0",
       "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
diff --git a/package.json b/package.json
index 0fcfbd1..ff1e509 100644
--- a/package.json
+++ b/package.json
@@ -3,23 +3,30 @@
   "version": "0.1.0",
   "private": true,
   "scripts": {
-    "dev": "next dev --turbopack",
+    "dev": "next dev",
     "build": "next build",
     "start": "next start",
     "lint": "next lint"
   },
   "dependencies": {
+    "class-variance-authority": "^0.7.1",
+    "clsx": "^2.1.1",
+    "lucide-react": "^0.525.0",
+    "next": "15.4.2",
     "react": "19.1.0",
     "react-dom": "19.1.0",
-    "next": "15.4.2"
+    "tailwind-merge": "^3.3.1"
   },
   "devDependencies": {
-    "typescript": "^5",
+    "@eslint/eslintrc": "^3",
+    "@tailwindcss/postcss": "^4",
     "@types/node": "^20",
     "@types/react": "^19",
     "@types/react-dom": "^19",
     "eslint": "^9",
     "eslint-config-next": "15.4.2",
-    "@eslint/eslintrc": "^3"
+    "tailwindcss": "^4",
+    "tw-animate-css": "^1.3.5",
+    "typescript": "^5"
   }
 }
diff --git a/postcss.config.mjs b/postcss.config.mjs
new file mode 100644
index 0000000..c7bcb4b
--- /dev/null
+++ b/postcss.config.mjs
@@ -0,0 +1,5 @@
+const config = {
+  plugins: ["@tailwindcss/postcss"],
+};
+
+export default config;
-- 
2.41.0


From c23f4741d5c1c5a610da3bc21d4798f47c165f6c Mon Sep 17 00:00:00 2001
From: oscar-bek <salamov.behzod@gmail.com>
Date: Tue, 22 Jul 2025 17:42:20 +0900
Subject: [PATCH 03/16] feat: creating ui of auth

---
 app/auth/_components/sign-in.tsx          |   68 +
 app/auth/_components/social.tsx           |   30 +
 app/auth/_components/state.tsx            |   18 +
 app/auth/_components/verify.tsx           |   97 +
 app/auth/page.tsx                         |   26 +
 app/layout.tsx                            |   59 +-
 components/providers/query.provider.tsx   |   25 +
 components/providers/session.provider.tsx |   11 +
 components/providers/theme.provider.tsx   |   18 +
 components/shared/mode-toggle.tsx         |   21 +
 components/ui/button.tsx                  |   59 +
 components/ui/form.tsx                    |  167 ++
 components/ui/input-otp.tsx               |   77 +
 components/ui/input.tsx                   |   21 +
 components/ui/label.tsx                   |   24 +
 components/ui/sonner.tsx                  |   25 +
 hooks/use-auth.ts                         |   20 +
 hooks/use-toast.ts                        |  204 ++
 http/axios.ts                             |    8 +
 lib/auth-options.ts                       |   49 +
 lib/validation.ts                         |   29 +
 package-lock.json                         | 3217 ++++++++++++++++++++-
 package.json                              |   19 +-
 public/telegram.svg                       |    1 +
 tailwind.config.ts                        |  105 +
 tsconfig.json                             |    2 +-
 types/index.ts                            |   34 +
 27 files changed, 4273 insertions(+), 161 deletions(-)
 create mode 100644 app/auth/_components/sign-in.tsx
 create mode 100644 app/auth/_components/social.tsx
 create mode 100644 app/auth/_components/state.tsx
 create mode 100644 app/auth/_components/verify.tsx
 create mode 100644 app/auth/page.tsx
 create mode 100644 components/providers/query.provider.tsx
 create mode 100644 components/providers/session.provider.tsx
 create mode 100644 components/providers/theme.provider.tsx
 create mode 100644 components/shared/mode-toggle.tsx
 create mode 100644 components/ui/button.tsx
 create mode 100644 components/ui/form.tsx
 create mode 100644 components/ui/input-otp.tsx
 create mode 100644 components/ui/input.tsx
 create mode 100644 components/ui/label.tsx
 create mode 100644 components/ui/sonner.tsx
 create mode 100644 hooks/use-auth.ts
 create mode 100644 hooks/use-toast.ts
 create mode 100644 http/axios.ts
 create mode 100644 lib/auth-options.ts
 create mode 100644 lib/validation.ts
 create mode 100644 public/telegram.svg
 create mode 100644 tailwind.config.ts
 create mode 100644 types/index.ts

diff --git a/app/auth/_components/sign-in.tsx b/app/auth/_components/sign-in.tsx
new file mode 100644
index 0000000..496a85e
--- /dev/null
+++ b/app/auth/_components/sign-in.tsx
@@ -0,0 +1,68 @@
+import { Button } from '@/components/ui/button'
+import { Form, FormControl, FormField, FormItem, FormMessage } from '@/components/ui/form'
+import { Input } from '@/components/ui/input'
+import { Label } from '@/components/ui/label'
+import { useAuth } from '@/hooks/use-auth'
+import { toast } from '@/hooks/use-toast'
+import { axiosClient } from '@/http/axios'
+import { emailSchema } from '@/lib/validation'
+import { zodResolver } from '@hookform/resolvers/zod'
+import { useMutation } from '@tanstack/react-query'
+import React from 'react'
+import { useForm } from 'react-hook-form'
+import { z } from 'zod'
+
+const SignIn = () => {
+	const { setEmail, setStep } = useAuth()
+
+	const form = useForm<z.infer<typeof emailSchema>>({
+		resolver: zodResolver(emailSchema),
+		defaultValues: { email: '' },
+	})
+
+	const { mutate, isPending } = useMutation({
+		mutationFn: async (email: string) => {
+			const { data } = await axiosClient.post<{ email: string }>('/api/auth/login', { email })
+			return data
+		},
+		onSuccess: res => {
+			setEmail(res.email)
+			setStep('verify')
+			toast({ description: 'Email sent' })
+		},
+	})
+
+	function onSubmit(values: z.infer<typeof emailSchema>) {
+		mutate(values.email)
+	}
+
+	return (
+		<div className='w-full'>
+			<p className='text-center text-muted-foreground text-sm'>
+				Telegram is a messaging app with a focus on speed and security, it’s super-fast, simple and free.
+			</p>
+			<Form {...form}>
+				<form onSubmit={form.handleSubmit(onSubmit)} className='space-y-2'>
+					<FormField
+						control={form.control}
+						name='email'
+						render={({ field }) => (
+							<FormItem>
+								<Label>Email</Label>
+								<FormControl>
+									<Input placeholder='Email' disabled={isPending} className='h-10 bg-secondary' {...field} />
+								</FormControl>
+								<FormMessage className='text-xs text-red-500' />
+							</FormItem>
+						)}
+					/>
+					<Button type='submit' className='w-full' size={'lg'} disabled={isPending}>
+						Submit
+					</Button>
+				</form>
+			</Form>
+		</div>
+	)
+}
+
+export default SignIn
\ No newline at end of file
diff --git a/app/auth/_components/social.tsx b/app/auth/_components/social.tsx
new file mode 100644
index 0000000..eb96376
--- /dev/null
+++ b/app/auth/_components/social.tsx
@@ -0,0 +1,30 @@
+'use client'
+
+import { Button } from '@/components/ui/button'
+import { signIn } from 'next-auth/react'
+import React, { useState } from 'react'
+import { FaGithub, FaGoogle } from 'react-icons/fa'
+
+const Social = () => {
+	const [isLoading, setIsLoading] = useState(false)
+
+	const onSignIn = async (provider: string) => {
+		setIsLoading(true)
+		await signIn(provider, { callbackUrl: '/' })
+	}
+
+	return (
+		<div className='grid grid-cols-2 w-full gap-1'>
+			<Button variant={'outline'} onClick={() => onSignIn('google')} disabled={isLoading}>
+				<span>Sign up with google</span>
+				<FaGoogle />
+			</Button>
+			<Button variant={'secondary'} onClick={() => onSignIn('github')} disabled={isLoading}>
+				<span>Sign up with github</span>
+				<FaGithub />
+			</Button>
+		</div>
+	)
+}
+
+export default Social
\ No newline at end of file
diff --git a/app/auth/_components/state.tsx b/app/auth/_components/state.tsx
new file mode 100644
index 0000000..aa36ff3
--- /dev/null
+++ b/app/auth/_components/state.tsx
@@ -0,0 +1,18 @@
+'use client'
+
+import { useAuth } from '@/hooks/use-auth'
+import SignIn from './sign-in'
+import Verify from './verify'
+
+const StateAuth = () => {
+	const { step } = useAuth()
+
+	return (
+		<>
+			{step === 'login' && <SignIn />}
+			{step === 'verify' && <Verify />}
+		</>
+	)
+}
+
+export default StateAuth
\ No newline at end of file
diff --git a/app/auth/_components/verify.tsx b/app/auth/_components/verify.tsx
new file mode 100644
index 0000000..cd8a09b
--- /dev/null
+++ b/app/auth/_components/verify.tsx
@@ -0,0 +1,97 @@
+import { Button } from '@/components/ui/button'
+import { Form, FormControl, FormField, FormItem, FormMessage } from '@/components/ui/form'
+import { Input } from '@/components/ui/input'
+import { InputOTP, InputOTPGroup, InputOTPSeparator, InputOTPSlot } from '@/components/ui/input-otp'
+import { Label } from '@/components/ui/label'
+import { useAuth } from '@/hooks/use-auth'
+import { toast } from '@/hooks/use-toast'
+import { axiosClient } from '@/http/axios'
+import { otpSchema } from '@/lib/validation'
+import { IUser } from '@/types'
+import { zodResolver } from '@hookform/resolvers/zod'
+import { useMutation } from '@tanstack/react-query'
+import { REGEXP_ONLY_DIGITS } from 'input-otp'
+import React from 'react'
+import { useForm } from 'react-hook-form'
+import { z } from 'zod'
+import { signIn } from 'next-auth/react'
+
+const Verify = () => {
+	const { email } = useAuth()
+
+	const form = useForm<z.infer<typeof otpSchema>>({
+		resolver: zodResolver(otpSchema),
+		defaultValues: { email, otp: '	' },
+	})
+
+	const { mutate, isPending } = useMutation({
+		mutationFn: async (otp: string) => {
+			const { data } = await axiosClient.post<{ user: IUser }>('/api/auth/verify', { email, otp })
+			return data
+		},
+		onSuccess: ({ user }) => {
+			signIn('credentials', { email: user.email, callbackUrl: '/' })
+			toast({ description: 'Successfully verified' })
+		},
+	})
+
+	function onSubmit(values: z.infer<typeof otpSchema>) {
+		mutate(values.otp)
+	}
+
+	return (
+		<div className='w-full'>
+			<p className='text-center text-muted-foreground text-sm'>
+				We have sent you an email with a verification code to your email address. Please enter the code below.
+			</p>
+			<Form {...form}>
+				<form onSubmit={form.handleSubmit(onSubmit)} className='w-full space-y-2'>
+					<FormField
+						control={form.control}
+						name='email'
+						render={({ field }) => (
+							<FormItem>
+								<Label>Email</Label>
+								<FormControl>
+									<Input placeholder='info@sammi.ac' disabled className='h-10 bg-secondary' {...field} />
+								</FormControl>
+								<FormMessage className='text-xs text-red-500' />
+							</FormItem>
+						)}
+					/>
+					<FormField
+						control={form.control}
+						name='otp'
+						render={({ field }) => (
+							<FormItem>
+								<Label>One-Time Password</Label>
+								<FormControl>
+									<InputOTP maxLength={6} className='w-full' pattern={REGEXP_ONLY_DIGITS} disabled={isPending} {...field}>
+										<InputOTPGroup className='w-full '>
+											<InputOTPSlot index={0} className='w-full dark:bg-primary-foreground bg-secondary' />
+											<InputOTPSlot index={1} className='w-full dark:bg-primary-foreground bg-secondary' />
+											<InputOTPSlot index={2} className='w-full dark:bg-primary-foreground bg-secondary' />
+										</InputOTPGroup>
+										<InputOTPSeparator />
+										<InputOTPGroup className='w-full '>
+											<InputOTPSlot index={3} className='w-full dark:bg-primary-foreground bg-secondary' />
+											<InputOTPSlot index={4} className='w-full dark:bg-primary-foreground bg-secondary' />
+											<InputOTPSlot index={5} className='w-full dark:bg-primary-foreground bg-secondary' />
+										</InputOTPGroup>
+									</InputOTP>
+								</FormControl>
+								<FormMessage className='text-xs text-red-500' />
+							</FormItem>
+						)}
+					/>
+
+					<Button type='submit' className='w-full' size={'lg'} disabled={isPending}>
+						Submit
+					</Button>
+				</form>
+			</Form>
+		</div>
+	)
+}
+
+export default Verify
\ No newline at end of file
diff --git a/app/auth/page.tsx b/app/auth/page.tsx
new file mode 100644
index 0000000..2f21964
--- /dev/null
+++ b/app/auth/page.tsx
@@ -0,0 +1,26 @@
+import { FaTelegram } from 'react-icons/fa'
+import StateAuth from './_components/state'
+import Social from './_components/social'
+import { ModeToggle } from '@/components/shared/mode-toggle'
+import { getServerSession } from 'next-auth'
+// import { authOptions } from '@/lib/auth-options'
+import { redirect } from 'next/navigation'
+
+const Page = async () => {
+	// const session = await getServerSession(authOptions)
+	// if (session) return redirect('/')
+
+	return (
+		<div className='container max-w-md w-full h-screen flex justify-center items-center flex-col space-y-4'>
+			<FaTelegram size={120} className='text-blue-500' />
+			<div className='flex items-center gap-2'>
+				<h1 className='text-4xl font-bold'>Telegram</h1>
+				<ModeToggle />
+			</div>
+			<StateAuth />
+			<Social />
+		</div>
+	)
+}
+
+export default Page
\ No newline at end of file
diff --git a/app/layout.tsx b/app/layout.tsx
index f7fa87e..440e597 100644
--- a/app/layout.tsx
+++ b/app/layout.tsx
@@ -1,34 +1,41 @@
-import type { Metadata } from "next";
-import { Geist, Geist_Mono } from "next/font/google";
-import "./globals.css";
+import { ThemeProvider } from '@/components/providers/theme.provider'
+import './globals.css'
 
-const geistSans = Geist({
-  variable: "--font-geist-sans",
-  subsets: ["latin"],
-});
+import type { Metadata } from 'next'
+import { Space_Grotesk } from 'next/font/google'
+import QueryProvider from '@/components/providers/query.provider'
+// import { Toaster } from '@/components/ui/toaster'
+import SessionProvider from '@/components/providers/session.provider'
 
-const geistMono = Geist_Mono({
-  variable: "--font-geist-mono",
-  subsets: ["latin"],
-});
+const spaceGrotesk = Space_Grotesk({
+	weight: ['400', '500', '600', '700', '300'],
+	subsets: ['latin'],
+	variable: '--font-spaceGrotesk',
+})
 
 export const metadata: Metadata = {
-  title: "Create Next App",
-  description: "Generated by create next app",
-};
+	title: 'Telegram web',
+	description: 'Telegram web application clone created by Sammi.ac',
+	icons: { icon: '/logo.svg' },
+}
 
 export default function RootLayout({
-  children,
+	children,
 }: Readonly<{
-  children: React.ReactNode;
+	children: React.ReactNode
 }>) {
-  return (
-    <html lang="en">
-      <body
-        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
-      >
-        {children}
-      </body>
-    </html>
-  );
-}
+	return (
+		<SessionProvider>
+			<QueryProvider>
+				<html lang='en' suppressHydrationWarning>
+					<body className={`${spaceGrotesk.variable} antialiased sidebar-custom-scrollbar`} suppressHydrationWarning>
+						<ThemeProvider attribute='class' defaultTheme='system' enableSystem disableTransitionOnChange>
+							<main>{children}</main>
+							{/* <Toaster /> */}
+						</ThemeProvider>
+					</body>
+				</html>
+			</QueryProvider>
+		</SessionProvider>
+	)
+}
\ No newline at end of file
diff --git a/components/providers/query.provider.tsx b/components/providers/query.provider.tsx
new file mode 100644
index 0000000..4aa7fb9
--- /dev/null
+++ b/components/providers/query.provider.tsx
@@ -0,0 +1,25 @@
+'use client'
+
+import { toast } from '@/hooks/use-toast'
+import { ChildProps, IError } from '@/types'
+import { QueryClient, QueryClientProvider } from '@tanstack/react-query'
+import { FC } from 'react'
+
+const handleQueryError = (error: Error | IError) => {
+	if ((error as IError).response?.data?.message) {
+		return toast({ description: (error as IError).response.data.message })
+	}
+	return toast({ description: 'Something went wrong' })
+}
+
+const queryClient = new QueryClient({
+	defaultOptions: {
+		mutations: { onError: handleQueryError },
+	},
+})
+
+const QueryProvider: FC<ChildProps> = ({ children }) => {
+	return <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>
+}
+
+export default QueryProvider
\ No newline at end of file
diff --git a/components/providers/session.provider.tsx b/components/providers/session.provider.tsx
new file mode 100644
index 0000000..b03b937
--- /dev/null
+++ b/components/providers/session.provider.tsx
@@ -0,0 +1,11 @@
+'use client'
+
+import { ChildProps } from '@/types'
+import { SessionProvider as Session } from 'next-auth/react'
+import { FC } from 'react'
+
+const SessionProvider: FC<ChildProps> = ({ children }) => {
+	return <Session>{children}</Session>
+}
+
+export default SessionProvider
\ No newline at end of file
diff --git a/components/providers/theme.provider.tsx b/components/providers/theme.provider.tsx
new file mode 100644
index 0000000..53ec083
--- /dev/null
+++ b/components/providers/theme.provider.tsx
@@ -0,0 +1,18 @@
+'use client'
+
+import * as React from 'react'
+import { ThemeProvider as NextThemesProvider } from 'next-themes'
+import dynamic from 'next/dynamic'
+
+// NoSSR komponenti yaratish
+const NoSSR = dynamic(() => Promise.resolve(({ children }: { children: React.ReactNode }) => <>{children}</>), {
+  ssr: false
+})
+
+export function ThemeProvider({ children, ...props }: React.ComponentProps<typeof NextThemesProvider>) {
+  return (
+    <NextThemesProvider {...props}>
+      <NoSSR>{children}</NoSSR>
+    </NextThemesProvider>
+  )
+}
\ No newline at end of file
diff --git a/components/shared/mode-toggle.tsx b/components/shared/mode-toggle.tsx
new file mode 100644
index 0000000..b3f0b0d
--- /dev/null
+++ b/components/shared/mode-toggle.tsx
@@ -0,0 +1,21 @@
+'use client'
+
+import * as React from 'react'
+import { Moon, Sun } from 'lucide-react'
+import { useTheme } from 'next-themes'
+
+import { Button } from '@/components/ui/button'
+
+export function ModeToggle() {
+	const { setTheme, resolvedTheme } = useTheme()
+
+	return resolvedTheme === 'dark' ? (
+		<Button size={'icon'} variant={'ghost'} onClick={() => setTheme('light')}>
+			<Sun />
+		</Button>
+	) : (
+		<Button size={'icon'} variant={'ghost'} onClick={() => setTheme('dark')}>
+			<Moon />
+		</Button>
+	)
+}
\ No newline at end of file
diff --git a/components/ui/button.tsx b/components/ui/button.tsx
new file mode 100644
index 0000000..a2df8dc
--- /dev/null
+++ b/components/ui/button.tsx
@@ -0,0 +1,59 @@
+import * as React from "react"
+import { Slot } from "@radix-ui/react-slot"
+import { cva, type VariantProps } from "class-variance-authority"
+
+import { cn } from "@/lib/utils"
+
+const buttonVariants = cva(
+  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",
+  {
+    variants: {
+      variant: {
+        default:
+          "bg-primary text-primary-foreground shadow-xs hover:bg-primary/90",
+        destructive:
+          "bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60",
+        outline:
+          "border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50",
+        secondary:
+          "bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80",
+        ghost:
+          "hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50",
+        link: "text-primary underline-offset-4 hover:underline",
+      },
+      size: {
+        default: "h-9 px-4 py-2 has-[>svg]:px-3",
+        sm: "h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5",
+        lg: "h-10 rounded-md px-6 has-[>svg]:px-4",
+        icon: "size-9",
+      },
+    },
+    defaultVariants: {
+      variant: "default",
+      size: "default",
+    },
+  }
+)
+
+function Button({
+  className,
+  variant,
+  size,
+  asChild = false,
+  ...props
+}: React.ComponentProps<"button"> &
+  VariantProps<typeof buttonVariants> & {
+    asChild?: boolean
+  }) {
+  const Comp = asChild ? Slot : "button"
+
+  return (
+    <Comp
+      data-slot="button"
+      className={cn(buttonVariants({ variant, size, className }))}
+      {...props}
+    />
+  )
+}
+
+export { Button, buttonVariants }
diff --git a/components/ui/form.tsx b/components/ui/form.tsx
new file mode 100644
index 0000000..524b986
--- /dev/null
+++ b/components/ui/form.tsx
@@ -0,0 +1,167 @@
+"use client"
+
+import * as React from "react"
+import * as LabelPrimitive from "@radix-ui/react-label"
+import { Slot } from "@radix-ui/react-slot"
+import {
+  Controller,
+  FormProvider,
+  useFormContext,
+  useFormState,
+  type ControllerProps,
+  type FieldPath,
+  type FieldValues,
+} from "react-hook-form"
+
+import { cn } from "@/lib/utils"
+import { Label } from "@/components/ui/label"
+
+const Form = FormProvider
+
+type FormFieldContextValue<
+  TFieldValues extends FieldValues = FieldValues,
+  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,
+> = {
+  name: TName
+}
+
+const FormFieldContext = React.createContext<FormFieldContextValue>(
+  {} as FormFieldContextValue
+)
+
+const FormField = <
+  TFieldValues extends FieldValues = FieldValues,
+  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,
+>({
+  ...props
+}: ControllerProps<TFieldValues, TName>) => {
+  return (
+    <FormFieldContext.Provider value={{ name: props.name }}>
+      <Controller {...props} />
+    </FormFieldContext.Provider>
+  )
+}
+
+const useFormField = () => {
+  const fieldContext = React.useContext(FormFieldContext)
+  const itemContext = React.useContext(FormItemContext)
+  const { getFieldState } = useFormContext()
+  const formState = useFormState({ name: fieldContext.name })
+  const fieldState = getFieldState(fieldContext.name, formState)
+
+  if (!fieldContext) {
+    throw new Error("useFormField should be used within <FormField>")
+  }
+
+  const { id } = itemContext
+
+  return {
+    id,
+    name: fieldContext.name,
+    formItemId: `${id}-form-item`,
+    formDescriptionId: `${id}-form-item-description`,
+    formMessageId: `${id}-form-item-message`,
+    ...fieldState,
+  }
+}
+
+type FormItemContextValue = {
+  id: string
+}
+
+const FormItemContext = React.createContext<FormItemContextValue>(
+  {} as FormItemContextValue
+)
+
+function FormItem({ className, ...props }: React.ComponentProps<"div">) {
+  const id = React.useId()
+
+  return (
+    <FormItemContext.Provider value={{ id }}>
+      <div
+        data-slot="form-item"
+        className={cn("grid gap-2", className)}
+        {...props}
+      />
+    </FormItemContext.Provider>
+  )
+}
+
+function FormLabel({
+  className,
+  ...props
+}: React.ComponentProps<typeof LabelPrimitive.Root>) {
+  const { error, formItemId } = useFormField()
+
+  return (
+    <Label
+      data-slot="form-label"
+      data-error={!!error}
+      className={cn("data-[error=true]:text-destructive", className)}
+      htmlFor={formItemId}
+      {...props}
+    />
+  )
+}
+
+function FormControl({ ...props }: React.ComponentProps<typeof Slot>) {
+  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()
+
+  return (
+    <Slot
+      data-slot="form-control"
+      id={formItemId}
+      aria-describedby={
+        !error
+          ? `${formDescriptionId}`
+          : `${formDescriptionId} ${formMessageId}`
+      }
+      aria-invalid={!!error}
+      {...props}
+    />
+  )
+}
+
+function FormDescription({ className, ...props }: React.ComponentProps<"p">) {
+  const { formDescriptionId } = useFormField()
+
+  return (
+    <p
+      data-slot="form-description"
+      id={formDescriptionId}
+      className={cn("text-muted-foreground text-sm", className)}
+      {...props}
+    />
+  )
+}
+
+function FormMessage({ className, ...props }: React.ComponentProps<"p">) {
+  const { error, formMessageId } = useFormField()
+  const body = error ? String(error?.message ?? "") : props.children
+
+  if (!body) {
+    return null
+  }
+
+  return (
+    <p
+      data-slot="form-message"
+      id={formMessageId}
+      className={cn("text-destructive text-sm", className)}
+      {...props}
+    >
+      {body}
+    </p>
+  )
+}
+
+export {
+  useFormField,
+  Form,
+  FormItem,
+  FormLabel,
+  FormControl,
+  FormDescription,
+  FormMessage,
+  FormField,
+}
diff --git a/components/ui/input-otp.tsx b/components/ui/input-otp.tsx
new file mode 100644
index 0000000..614f70e
--- /dev/null
+++ b/components/ui/input-otp.tsx
@@ -0,0 +1,77 @@
+"use client"
+
+import * as React from "react"
+import { OTPInput, OTPInputContext } from "input-otp"
+import { MinusIcon } from "lucide-react"
+
+import { cn } from "@/lib/utils"
+
+function InputOTP({
+  className,
+  containerClassName,
+  ...props
+}: React.ComponentProps<typeof OTPInput> & {
+  containerClassName?: string
+}) {
+  return (
+    <OTPInput
+      data-slot="input-otp"
+      containerClassName={cn(
+        "flex items-center gap-2 has-disabled:opacity-50",
+        containerClassName
+      )}
+      className={cn("disabled:cursor-not-allowed", className)}
+      {...props}
+    />
+  )
+}
+
+function InputOTPGroup({ className, ...props }: React.ComponentProps<"div">) {
+  return (
+    <div
+      data-slot="input-otp-group"
+      className={cn("flex items-center", className)}
+      {...props}
+    />
+  )
+}
+
+function InputOTPSlot({
+  index,
+  className,
+  ...props
+}: React.ComponentProps<"div"> & {
+  index: number
+}) {
+  const inputOTPContext = React.useContext(OTPInputContext)
+  const { char, hasFakeCaret, isActive } = inputOTPContext?.slots[index] ?? {}
+
+  return (
+    <div
+      data-slot="input-otp-slot"
+      data-active={isActive}
+      className={cn(
+        "data-[active=true]:border-ring data-[active=true]:ring-ring/50 data-[active=true]:aria-invalid:ring-destructive/20 dark:data-[active=true]:aria-invalid:ring-destructive/40 aria-invalid:border-destructive data-[active=true]:aria-invalid:border-destructive dark:bg-input/30 border-input relative flex h-9 w-9 items-center justify-center border-y border-r text-sm shadow-xs transition-all outline-none first:rounded-l-md first:border-l last:rounded-r-md data-[active=true]:z-10 data-[active=true]:ring-[3px]",
+        className
+      )}
+      {...props}
+    >
+      {char}
+      {hasFakeCaret && (
+        <div className="pointer-events-none absolute inset-0 flex items-center justify-center">
+          <div className="animate-caret-blink bg-foreground h-4 w-px duration-1000" />
+        </div>
+      )}
+    </div>
+  )
+}
+
+function InputOTPSeparator({ ...props }: React.ComponentProps<"div">) {
+  return (
+    <div data-slot="input-otp-separator" role="separator" {...props}>
+      <MinusIcon />
+    </div>
+  )
+}
+
+export { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }
diff --git a/components/ui/input.tsx b/components/ui/input.tsx
new file mode 100644
index 0000000..03295ca
--- /dev/null
+++ b/components/ui/input.tsx
@@ -0,0 +1,21 @@
+import * as React from "react"
+
+import { cn } from "@/lib/utils"
+
+function Input({ className, type, ...props }: React.ComponentProps<"input">) {
+  return (
+    <input
+      type={type}
+      data-slot="input"
+      className={cn(
+        "file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
+        "focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]",
+        "aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+export { Input }
diff --git a/components/ui/label.tsx b/components/ui/label.tsx
new file mode 100644
index 0000000..fb5fbc3
--- /dev/null
+++ b/components/ui/label.tsx
@@ -0,0 +1,24 @@
+"use client"
+
+import * as React from "react"
+import * as LabelPrimitive from "@radix-ui/react-label"
+
+import { cn } from "@/lib/utils"
+
+function Label({
+  className,
+  ...props
+}: React.ComponentProps<typeof LabelPrimitive.Root>) {
+  return (
+    <LabelPrimitive.Root
+      data-slot="label"
+      className={cn(
+        "flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+export { Label }
diff --git a/components/ui/sonner.tsx b/components/ui/sonner.tsx
new file mode 100644
index 0000000..957524e
--- /dev/null
+++ b/components/ui/sonner.tsx
@@ -0,0 +1,25 @@
+"use client"
+
+import { useTheme } from "next-themes"
+import { Toaster as Sonner, ToasterProps } from "sonner"
+
+const Toaster = ({ ...props }: ToasterProps) => {
+  const { theme = "system" } = useTheme()
+
+  return (
+    <Sonner
+      theme={theme as ToasterProps["theme"]}
+      className="toaster group"
+      style={
+        {
+          "--normal-bg": "var(--popover)",
+          "--normal-text": "var(--popover-foreground)",
+          "--normal-border": "var(--border)",
+        } as React.CSSProperties
+      }
+      {...props}
+    />
+  )
+}
+
+export { Toaster }
diff --git a/hooks/use-auth.ts b/hooks/use-auth.ts
new file mode 100644
index 0000000..09a0ab3
--- /dev/null
+++ b/hooks/use-auth.ts
@@ -0,0 +1,20 @@
+import { IUser } from '@/types'
+import { create } from 'zustand'
+
+type Store = {
+	step: 'login' | 'verify'
+	setStep: (step: 'login' | 'verify') => void
+	email: string
+	setEmail: (email: string) => void
+	onlineUsers: IUser[]
+	setOnlineUsers: (users: IUser[]) => void
+}
+
+export const useAuth = create<Store>()(set => ({
+	step: 'login',
+	setStep: step => set({ step }),
+	email: '',
+	setEmail: email => set({ email }),
+	onlineUsers: [],
+	setOnlineUsers: users => set({ onlineUsers: users }),
+}))
\ No newline at end of file
diff --git a/hooks/use-toast.ts b/hooks/use-toast.ts
new file mode 100644
index 0000000..34c1b3a
--- /dev/null
+++ b/hooks/use-toast.ts
@@ -0,0 +1,204 @@
+"use client"
+
+// Inspired by react-hot-toast library
+import * as React from "react"
+
+import type { ReactElement } from "react"
+
+type ToastActionElement = ReactElement
+
+interface ToastProps {
+  id?: string
+  title?: React.ReactNode
+  description?: React.ReactNode
+  action?: ToastActionElement
+  duration?: number
+  dismissible?: boolean
+  open?: boolean
+  onOpenChange?: (open: boolean) => void
+}
+
+const TOAST_LIMIT = 1
+const TOAST_REMOVE_DELAY = 1000000
+
+type ToasterToast = ToastProps & {
+  id: string
+  title?: React.ReactNode
+  description?: React.ReactNode
+  action?: ToastActionElement
+}
+
+const actionTypes = {
+  ADD_TOAST: "ADD_TOAST",
+  UPDATE_TOAST: "UPDATE_TOAST",
+  DISMISS_TOAST: "DISMISS_TOAST",
+  REMOVE_TOAST: "REMOVE_TOAST",
+} as const
+
+let count = 0
+
+function genId() {
+  count = (count + 1) % Number.MAX_SAFE_INTEGER
+  return count.toString()
+}
+
+type ActionType = typeof actionTypes
+
+type Action =
+  | {
+      type: ActionType["ADD_TOAST"]
+      toast: ToasterToast
+    }
+  | {
+      type: ActionType["UPDATE_TOAST"]
+      toast: Partial<ToasterToast>
+    }
+  | {
+      type: ActionType["DISMISS_TOAST"]
+      toastId?: ToasterToast["id"]
+    }
+  | {
+      type: ActionType["REMOVE_TOAST"]
+      toastId?: ToasterToast["id"]
+    }
+
+interface State {
+  toasts: ToasterToast[]
+}
+
+const toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()
+
+const addToRemoveQueue = (toastId: string) => {
+  if (toastTimeouts.has(toastId)) {
+    return
+  }
+
+  const timeout = setTimeout(() => {
+    toastTimeouts.delete(toastId)
+    dispatch({
+      type: "REMOVE_TOAST",
+      toastId: toastId,
+    })
+  }, TOAST_REMOVE_DELAY)
+
+  toastTimeouts.set(toastId, timeout)
+}
+
+export const reducer = (state: State, action: Action): State => {
+  switch (action.type) {
+    case "ADD_TOAST":
+      return {
+        ...state,
+        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),
+      }
+
+    case "UPDATE_TOAST":
+      return {
+        ...state,
+        toasts: state.toasts.map((t) =>
+          t.id === action.toast.id ? { ...t, ...action.toast } : t
+        ),
+      }
+
+    case "DISMISS_TOAST": {
+      const { toastId } = action
+
+      // ! Side effects ! - This could be extracted into a dismissToast() action,
+      // but I'll keep it here for simplicity
+      if (toastId) {
+        addToRemoveQueue(toastId)
+      } else {
+        state.toasts.forEach((toast) => {
+          addToRemoveQueue(toast.id)
+        })
+      }
+
+      return {
+        ...state,
+        toasts: state.toasts.map((t) =>
+          t.id === toastId || toastId === undefined
+            ? {
+                ...t,
+                open: false,
+              }
+            : t
+        ),
+      }
+    }
+    case "REMOVE_TOAST":
+      if (action.toastId === undefined) {
+        return {
+          ...state,
+          toasts: [],
+        }
+      }
+      return {
+        ...state,
+        toasts: state.toasts.filter((t) => t.id !== action.toastId),
+      }
+  }
+}
+
+const listeners: Array<(state: State) => void> = []
+
+let memoryState: State = { toasts: [] }
+
+function dispatch(action: Action) {
+  memoryState = reducer(memoryState, action)
+  listeners.forEach((listener) => {
+    listener(memoryState)
+  })
+}
+
+type Toast = Omit<ToasterToast, "id">
+
+function toast({ ...props }: Toast) {
+  const id = genId()
+
+  const update = (props: ToasterToast) =>
+    dispatch({
+      type: "UPDATE_TOAST",
+      toast: { ...props, id },
+    })
+  const dismiss = () => dispatch({ type: "DISMISS_TOAST", toastId: id })
+
+  dispatch({
+    type: "ADD_TOAST",
+    toast: {
+      ...props,
+      id,
+      open: true,
+      onOpenChange: (open) => {
+        if (!open) dismiss()
+      },
+    },
+  })
+
+  return {
+    id: id,
+    dismiss,
+    update,
+  }
+}
+
+function useToast() {
+  const [state, setState] = React.useState<State>(memoryState)
+
+  React.useEffect(() => {
+    listeners.push(setState)
+    return () => {
+      const index = listeners.indexOf(setState)
+      if (index > -1) {
+        listeners.splice(index, 1)
+      }
+    }
+  }, [state])
+
+  return {
+    ...state,
+    toast,
+    dismiss: (toastId?: string) => dispatch({ type: "DISMISS_TOAST", toastId }),
+  }
+}
+
+export { useToast, toast }
\ No newline at end of file
diff --git a/http/axios.ts b/http/axios.ts
new file mode 100644
index 0000000..675248c
--- /dev/null
+++ b/http/axios.ts
@@ -0,0 +1,8 @@
+import axios from 'axios'
+
+export const SERVER_URL = process.env.NEXT_PUBLIC_SERVER_URL
+
+export const axiosClient = axios.create({
+	baseURL: SERVER_URL,
+	headers: { 'Content-Type': 'application/json' },
+})
\ No newline at end of file
diff --git a/lib/auth-options.ts b/lib/auth-options.ts
new file mode 100644
index 0000000..5330b49
--- /dev/null
+++ b/lib/auth-options.ts
@@ -0,0 +1,49 @@
+// import { NextAuthOptions } from 'next-auth'
+// import GithubProvider from 'next-auth/providers/github'
+// import GoogleProvider from 'next-auth/providers/google'
+// import Credentials from 'next-auth/providers/credentials'
+// // import { connectToDatabase } from './mongoose'
+// // import User from '@/models/user.model'
+
+// export const authOptions: NextAuthOptions = {
+// 	providers: [
+// 		Credentials({
+// 			name: 'Credentials',
+// 			credentials: { email: { label: 'Email', type: 'email' } },
+// 			async authorize(credentials) {
+// 				await connectToDatabase()
+// 				const user = await User.findOne({ email: credentials?.email })
+// 				return user
+// 			},
+// 		}),
+// 		GithubProvider({
+// 			clientId: process.env.GITHUB_CLIENT_ID!,
+// 			clientSecret: process.env.GITHUB_CLIENT_SECRET!,
+// 		}),
+// 		GoogleProvider({
+// 			clientId: process.env.GOOGLE_CLIENT_ID!,
+// 			clientSecret: process.env.GOOGLE_CLIENT_SECRET!,
+// 		}),
+// 	],
+// 	callbacks: {
+// 		async session({ session }) {
+// 			await connectToDatabase()
+// 			const isExistingUser = await User.findOne({ email: session.user?.email })
+// 			if (!isExistingUser) {
+// 				const user = await User.create({
+// 					email: session.user?.email,
+// 					isVerified: true,
+// 					avatar: session.user?.image,
+// 				})
+// 				session.currentUser = user
+// 				return session
+// 			}
+// 			session.currentUser = isExistingUser
+// 			return session
+// 		},
+// 	},
+// 	session: { strategy: 'jwt' },
+// 	jwt: { secret: process.env.NEXT_PUBLIC_JWT_SECRET },
+// 	secret: process.env.NEXTAUTH_SECRET,
+// 	pages: { signIn: '/auth', signOut: '/auth' },
+// }
\ No newline at end of file
diff --git a/lib/validation.ts b/lib/validation.ts
new file mode 100644
index 0000000..f9efa52
--- /dev/null
+++ b/lib/validation.ts
@@ -0,0 +1,29 @@
+import { z } from 'zod'
+
+export const emailSchema = z.object({
+	email: z.string().email({ message: '이메일 주소가 유효하지 않습니다. 다시 확인해 주세요.' }),
+})
+
+export const oldEmailSchema = z
+	.object({ oldEmail: z.string().email({ message: '이메일 주소가 유효하지 않습니다. 다시 확인해 주세요.' }) })
+	.merge(emailSchema)
+
+export const otpSchema = z
+	.object({ otp: z.string().min(6, { message: '일회용 비밀번호는 6자리여야 합니다.' }) })
+	.merge(emailSchema)
+
+export const messageSchema = z.object({
+	text: z.string().min(1, { message: '메시지는 비워둘 수 없습니다.' }),
+	image: z.string().optional(),
+})
+
+export const profileSchema = z.object({
+	firstName: z.string().min(2),
+	lastName: z.string().optional(),
+	bio: z.string().optional(),
+})
+
+export const confirmTextSchema = z.object({ confirmText: z.string() }).refine(data => data.confirmText === 'DELETE', {
+	message: '삭제를 확인하려면 DELETE를 입력해야 합니다.',
+	path: ['confirmText'],
+})
\ No newline at end of file
diff --git a/package-lock.json b/package-lock.json
index 6e4ef1e..ed8becf 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -8,13 +8,29 @@
       "name": "client",
       "version": "0.1.0",
       "dependencies": {
+        "@hookform/resolvers": "^5.1.1",
+        "@radix-ui/react-label": "^2.1.7",
+        "@radix-ui/react-slot": "^1.2.3",
+        "@tanstack/react-query": "^5.83.0",
+        "add": "^2.0.6",
+        "axios": "^1.10.0",
         "class-variance-authority": "^0.7.1",
         "clsx": "^2.1.1",
+        "form": "^0.2.5",
+        "input-otp": "^1.4.2",
         "lucide-react": "^0.525.0",
         "next": "15.4.2",
+        "next-auth": "^4.24.11",
+        "next-themes": "^0.4.6",
         "react": "19.1.0",
         "react-dom": "19.1.0",
-        "tailwind-merge": "^3.3.1"
+        "react-hook-form": "^7.60.0",
+        "react-icons": "^5.5.0",
+        "shadcn": "^2.9.2",
+        "sonner": "^2.0.6",
+        "tailwind-merge": "^3.3.1",
+        "zod": "^3.25.76",
+        "zustand": "^5.0.6"
       },
       "devDependencies": {
         "@eslint/eslintrc": "^3",
@@ -22,6 +38,7 @@
         "@types/node": "^20",
         "@types/react": "^19",
         "@types/react-dom": "^19",
+        "@types/react-no-ssr": "^1.1.8",
         "eslint": "^9",
         "eslint-config-next": "15.4.2",
         "tailwindcss": "^4",
@@ -46,7 +63,6 @@
       "version": "2.3.0",
       "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
       "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
-      "dev": true,
       "license": "Apache-2.0",
       "dependencies": {
         "@jridgewell/gen-mapping": "^0.3.5",
@@ -56,6 +72,418 @@
         "node": ">=6.0.0"
       }
     },
+    "node_modules/@antfu/ni": {
+      "version": "23.3.1",
+      "resolved": "https://registry.npmjs.org/@antfu/ni/-/ni-23.3.1.tgz",
+      "integrity": "sha512-C90iyzm/jLV7Lomv2UzwWUzRv9WZr1oRsFRKsX5HjQL4EXrbi9H/RtBkjCP+NF+ABZXUKpAa4F1dkoTaea4zHg==",
+      "bin": {
+        "na": "bin/na.mjs",
+        "nci": "bin/nci.mjs",
+        "ni": "bin/ni.mjs",
+        "nlx": "bin/nlx.mjs",
+        "nr": "bin/nr.mjs",
+        "nu": "bin/nu.mjs",
+        "nun": "bin/nun.mjs"
+      }
+    },
+    "node_modules/@babel/code-frame": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz",
+      "integrity": "sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==",
+      "dependencies": {
+        "@babel/helper-validator-identifier": "^7.27.1",
+        "js-tokens": "^4.0.0",
+        "picocolors": "^1.1.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/compat-data": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.28.0.tgz",
+      "integrity": "sha512-60X7qkglvrap8mn1lh2ebxXdZYtUcpd7gsmy9kLaBJ4i/WdY8PqTSdxyA8qraikqKQK5C1KRBKXqznrVapyNaw==",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/core": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.28.0.tgz",
+      "integrity": "sha512-UlLAnTPrFdNGoFtbSXwcGFQBtQZJCNjaN6hQNP3UPvuNXT1i82N26KL3dZeIpNalWywr9IuQuncaAfUaS1g6sQ==",
+      "dependencies": {
+        "@ampproject/remapping": "^2.2.0",
+        "@babel/code-frame": "^7.27.1",
+        "@babel/generator": "^7.28.0",
+        "@babel/helper-compilation-targets": "^7.27.2",
+        "@babel/helper-module-transforms": "^7.27.3",
+        "@babel/helpers": "^7.27.6",
+        "@babel/parser": "^7.28.0",
+        "@babel/template": "^7.27.2",
+        "@babel/traverse": "^7.28.0",
+        "@babel/types": "^7.28.0",
+        "convert-source-map": "^2.0.0",
+        "debug": "^4.1.0",
+        "gensync": "^1.0.0-beta.2",
+        "json5": "^2.2.3",
+        "semver": "^6.3.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/babel"
+      }
+    },
+    "node_modules/@babel/core/node_modules/json5": {
+      "version": "2.2.3",
+      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
+      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
+      "bin": {
+        "json5": "lib/cli.js"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/@babel/core/node_modules/semver": {
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
+      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
+      "bin": {
+        "semver": "bin/semver.js"
+      }
+    },
+    "node_modules/@babel/generator": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.28.0.tgz",
+      "integrity": "sha512-lJjzvrbEeWrhB4P3QBsH7tey117PjLZnDbLiQEKjQ/fNJTjuq4HSqgFA+UNSwZT8D7dxxbnuSBMsa1lrWzKlQg==",
+      "dependencies": {
+        "@babel/parser": "^7.28.0",
+        "@babel/types": "^7.28.0",
+        "@jridgewell/gen-mapping": "^0.3.12",
+        "@jridgewell/trace-mapping": "^0.3.28",
+        "jsesc": "^3.0.2"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-annotate-as-pure": {
+      "version": "7.27.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.27.3.tgz",
+      "integrity": "sha512-fXSwMQqitTGeHLBC08Eq5yXz2m37E4pJX1qAU1+2cNedz/ifv/bVXft90VeSav5nFO61EcNgwr0aJxbyPaWBPg==",
+      "dependencies": {
+        "@babel/types": "^7.27.3"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-compilation-targets": {
+      "version": "7.27.2",
+      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz",
+      "integrity": "sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==",
+      "dependencies": {
+        "@babel/compat-data": "^7.27.2",
+        "@babel/helper-validator-option": "^7.27.1",
+        "browserslist": "^4.24.0",
+        "lru-cache": "^5.1.1",
+        "semver": "^6.3.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-compilation-targets/node_modules/semver": {
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
+      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
+      "bin": {
+        "semver": "bin/semver.js"
+      }
+    },
+    "node_modules/@babel/helper-create-class-features-plugin": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.27.1.tgz",
+      "integrity": "sha512-QwGAmuvM17btKU5VqXfb+Giw4JcN0hjuufz3DYnpeVDvZLAObloM77bhMXiqry3Iio+Ai4phVRDwl6WU10+r5A==",
+      "dependencies": {
+        "@babel/helper-annotate-as-pure": "^7.27.1",
+        "@babel/helper-member-expression-to-functions": "^7.27.1",
+        "@babel/helper-optimise-call-expression": "^7.27.1",
+        "@babel/helper-replace-supers": "^7.27.1",
+        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1",
+        "@babel/traverse": "^7.27.1",
+        "semver": "^6.3.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0"
+      }
+    },
+    "node_modules/@babel/helper-create-class-features-plugin/node_modules/semver": {
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
+      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
+      "bin": {
+        "semver": "bin/semver.js"
+      }
+    },
+    "node_modules/@babel/helper-globals": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/helper-globals/-/helper-globals-7.28.0.tgz",
+      "integrity": "sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-member-expression-to-functions": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.27.1.tgz",
+      "integrity": "sha512-E5chM8eWjTp/aNoVpcbfM7mLxu9XGLWYise2eBKGQomAk/Mb4XoxyqXTZbuTohbsl8EKqdlMhnDI2CCLfcs9wA==",
+      "dependencies": {
+        "@babel/traverse": "^7.27.1",
+        "@babel/types": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-module-imports": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz",
+      "integrity": "sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==",
+      "dependencies": {
+        "@babel/traverse": "^7.27.1",
+        "@babel/types": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-module-transforms": {
+      "version": "7.27.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.27.3.tgz",
+      "integrity": "sha512-dSOvYwvyLsWBeIRyOeHXp5vPj5l1I011r52FM1+r1jCERv+aFXYk4whgQccYEGYxK2H3ZAIA8nuPkQ0HaUo3qg==",
+      "dependencies": {
+        "@babel/helper-module-imports": "^7.27.1",
+        "@babel/helper-validator-identifier": "^7.27.1",
+        "@babel/traverse": "^7.27.3"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0"
+      }
+    },
+    "node_modules/@babel/helper-optimise-call-expression": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.27.1.tgz",
+      "integrity": "sha512-URMGH08NzYFhubNSGJrpUEphGKQwMQYBySzat5cAByY1/YgIRkULnIy3tAMeszlL/so2HbeilYloUmSpd7GdVw==",
+      "dependencies": {
+        "@babel/types": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-plugin-utils": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz",
+      "integrity": "sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-replace-supers": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.27.1.tgz",
+      "integrity": "sha512-7EHz6qDZc8RYS5ElPoShMheWvEgERonFCs7IAonWLLUTXW59DP14bCZt89/GKyreYn8g3S83m21FelHKbeDCKA==",
+      "dependencies": {
+        "@babel/helper-member-expression-to-functions": "^7.27.1",
+        "@babel/helper-optimise-call-expression": "^7.27.1",
+        "@babel/traverse": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0"
+      }
+    },
+    "node_modules/@babel/helper-skip-transparent-expression-wrappers": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.27.1.tgz",
+      "integrity": "sha512-Tub4ZKEXqbPjXgWLl2+3JpQAYBJ8+ikpQ2Ocj/q/r0LwE3UhENh7EUabyHjz2kCEsrRY83ew2DQdHluuiDQFzg==",
+      "dependencies": {
+        "@babel/traverse": "^7.27.1",
+        "@babel/types": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-string-parser": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz",
+      "integrity": "sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-validator-identifier": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz",
+      "integrity": "sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-validator-option": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgz",
+      "integrity": "sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helpers": {
+      "version": "7.27.6",
+      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.27.6.tgz",
+      "integrity": "sha512-muE8Tt8M22638HU31A3CgfSUciwz1fhATfoVai05aPXGor//CdWDCbnlY1yvBPo07njuVOCNGCSp/GTt12lIug==",
+      "dependencies": {
+        "@babel/template": "^7.27.2",
+        "@babel/types": "^7.27.6"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/parser": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.28.0.tgz",
+      "integrity": "sha512-jVZGvOxOuNSsuQuLRTh13nU0AogFlw32w/MT+LV6D3sP5WdbW61E77RnkbaO2dUvmPAYrBDJXGn5gGS6tH4j8g==",
+      "dependencies": {
+        "@babel/types": "^7.28.0"
+      },
+      "bin": {
+        "parser": "bin/babel-parser.js"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@babel/plugin-syntax-typescript": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.27.1.tgz",
+      "integrity": "sha512-xfYCBMxveHrRMnAWl1ZlPXOZjzkN82THFvLhQhFXFt81Z5HnN+EtUkZhv/zcKpmT3fzmWZB0ywiBrbC3vogbwQ==",
+      "dependencies": {
+        "@babel/helper-plugin-utils": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0-0"
+      }
+    },
+    "node_modules/@babel/plugin-transform-typescript": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typescript/-/plugin-transform-typescript-7.28.0.tgz",
+      "integrity": "sha512-4AEiDEBPIZvLQaWlc9liCavE0xRM0dNca41WtBeM3jgFptfUOSG9z0uteLhq6+3rq+WB6jIvUwKDTpXEHPJ2Vg==",
+      "dependencies": {
+        "@babel/helper-annotate-as-pure": "^7.27.3",
+        "@babel/helper-create-class-features-plugin": "^7.27.1",
+        "@babel/helper-plugin-utils": "^7.27.1",
+        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1",
+        "@babel/plugin-syntax-typescript": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0-0"
+      }
+    },
+    "node_modules/@babel/runtime": {
+      "version": "7.27.6",
+      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.27.6.tgz",
+      "integrity": "sha512-vbavdySgbTTrmFE+EsiqUTzlOr5bzlnJtUv9PynGCAKvfQqjIXbvFdumPM/GxMDfyuGMJaJAU6TO4zc1Jf1i8Q==",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/template": {
+      "version": "7.27.2",
+      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz",
+      "integrity": "sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==",
+      "dependencies": {
+        "@babel/code-frame": "^7.27.1",
+        "@babel/parser": "^7.27.2",
+        "@babel/types": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/traverse": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.28.0.tgz",
+      "integrity": "sha512-mGe7UK5wWyh0bKRfupsUchrQGqvDbZDbKJw+kcRGSmdHVYrv+ltd0pnpDTVpiTqnaBru9iEvA8pz8W46v0Amwg==",
+      "dependencies": {
+        "@babel/code-frame": "^7.27.1",
+        "@babel/generator": "^7.28.0",
+        "@babel/helper-globals": "^7.28.0",
+        "@babel/parser": "^7.28.0",
+        "@babel/template": "^7.27.2",
+        "@babel/types": "^7.28.0",
+        "debug": "^4.3.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/types": {
+      "version": "7.28.1",
+      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.28.1.tgz",
+      "integrity": "sha512-x0LvFTekgSX+83TI28Y9wYPUfzrnl2aT5+5QLnO6v7mSJYtEEevuDRN0F0uSHRk1G1IWZC43o00Y0xDDrpBGPQ==",
+      "dependencies": {
+        "@babel/helper-string-parser": "^7.27.1",
+        "@babel/helper-validator-identifier": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@bundled-es-modules/cookie": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/@bundled-es-modules/cookie/-/cookie-2.0.1.tgz",
+      "integrity": "sha512-8o+5fRPLNbjbdGRRmJj3h6Hh1AQJf2dk3qQ/5ZFb+PXkRNiSoMGGUKlsgLfrxneb72axVJyIYji64E2+nNfYyw==",
+      "dependencies": {
+        "cookie": "^0.7.2"
+      }
+    },
+    "node_modules/@bundled-es-modules/statuses": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/@bundled-es-modules/statuses/-/statuses-1.0.1.tgz",
+      "integrity": "sha512-yn7BklA5acgcBr+7w064fGV+SGIFySjCKpqjcWgBAIfrAkY+4GQTJJHQMeT3V/sgz23VTEVV8TtOmkvJAhFVfg==",
+      "dependencies": {
+        "statuses": "^2.0.1"
+      }
+    },
+    "node_modules/@bundled-es-modules/tough-cookie": {
+      "version": "0.1.6",
+      "resolved": "https://registry.npmjs.org/@bundled-es-modules/tough-cookie/-/tough-cookie-0.1.6.tgz",
+      "integrity": "sha512-dvMHbL464C0zI+Yqxbz6kZ5TOEp7GLW+pry/RWndAR8MJQAXZ2rPmIs8tziTZjeIyhSNZgZbCePtfSbdWqStJw==",
+      "dependencies": {
+        "@types/tough-cookie": "^4.0.5",
+        "tough-cookie": "^4.1.4"
+      }
+    },
     "node_modules/@emnapi/core": {
       "version": "1.4.5",
       "resolved": "https://registry.npmjs.org/@emnapi/core/-/core-1.4.5.tgz",
@@ -230,6 +658,17 @@
         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
       }
     },
+    "node_modules/@hookform/resolvers": {
+      "version": "5.1.1",
+      "resolved": "https://registry.npmjs.org/@hookform/resolvers/-/resolvers-5.1.1.tgz",
+      "integrity": "sha512-J/NVING3LMAEvexJkyTLjruSm7aOFx7QX21pzkiJfMoNG0wl5aFEjLTl7ay7IQb9EWY6AkrBy7tHL2Alijpdcg==",
+      "dependencies": {
+        "@standard-schema/utils": "^0.3.0"
+      },
+      "peerDependencies": {
+        "react-hook-form": "^7.55.0"
+      }
+    },
     "node_modules/@humanfs/core": {
       "version": "0.19.1",
       "resolved": "https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz",
@@ -714,6 +1153,87 @@
         "url": "https://opencollective.com/libvips"
       }
     },
+    "node_modules/@inquirer/confirm": {
+      "version": "5.1.14",
+      "resolved": "https://registry.npmjs.org/@inquirer/confirm/-/confirm-5.1.14.tgz",
+      "integrity": "sha512-5yR4IBfe0kXe59r1YCTG8WXkUbl7Z35HK87Sw+WUyGD8wNUx7JvY7laahzeytyE1oLn74bQnL7hstctQxisQ8Q==",
+      "dependencies": {
+        "@inquirer/core": "^10.1.15",
+        "@inquirer/type": "^3.0.8"
+      },
+      "engines": {
+        "node": ">=18"
+      },
+      "peerDependencies": {
+        "@types/node": ">=18"
+      },
+      "peerDependenciesMeta": {
+        "@types/node": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@inquirer/core": {
+      "version": "10.1.15",
+      "resolved": "https://registry.npmjs.org/@inquirer/core/-/core-10.1.15.tgz",
+      "integrity": "sha512-8xrp836RZvKkpNbVvgWUlxjT4CraKk2q+I3Ksy+seI2zkcE+y6wNs1BVhgcv8VyImFecUhdQrYLdW32pAjwBdA==",
+      "dependencies": {
+        "@inquirer/figures": "^1.0.13",
+        "@inquirer/type": "^3.0.8",
+        "ansi-escapes": "^4.3.2",
+        "cli-width": "^4.1.0",
+        "mute-stream": "^2.0.0",
+        "signal-exit": "^4.1.0",
+        "wrap-ansi": "^6.2.0",
+        "yoctocolors-cjs": "^2.1.2"
+      },
+      "engines": {
+        "node": ">=18"
+      },
+      "peerDependencies": {
+        "@types/node": ">=18"
+      },
+      "peerDependenciesMeta": {
+        "@types/node": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@inquirer/core/node_modules/signal-exit": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
+      "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
+      "engines": {
+        "node": ">=14"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
+    "node_modules/@inquirer/figures": {
+      "version": "1.0.13",
+      "resolved": "https://registry.npmjs.org/@inquirer/figures/-/figures-1.0.13.tgz",
+      "integrity": "sha512-lGPVU3yO9ZNqA7vTYz26jny41lE7yoQansmqdMLBEfqaGsmdg7V3W9mK9Pvb5IL4EVZ9GnSDGMO/cJXud5dMaw==",
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@inquirer/type": {
+      "version": "3.0.8",
+      "resolved": "https://registry.npmjs.org/@inquirer/type/-/type-3.0.8.tgz",
+      "integrity": "sha512-lg9Whz8onIHRthWaN1Q9EGLa/0LFJjyM8mEUbL1eTi6yMGvBf8gvyDLtxSXztQsxMvhxxNpJYrwa1YHdq+w4Jw==",
+      "engines": {
+        "node": ">=18"
+      },
+      "peerDependencies": {
+        "@types/node": ">=18"
+      },
+      "peerDependenciesMeta": {
+        "@types/node": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/@isaacs/fs-minipass": {
       "version": "4.0.1",
       "resolved": "https://registry.npmjs.org/@isaacs/fs-minipass/-/fs-minipass-4.0.1.tgz",
@@ -731,7 +1251,6 @@
       "version": "0.3.12",
       "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.12.tgz",
       "integrity": "sha512-OuLGC46TjB5BbN1dH8JULVVZY4WTdkF7tV9Ys6wLL1rubZnCMstOhNHueU5bLCrnRuDhKPDM4g6sw4Bel5Gzqg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@jridgewell/sourcemap-codec": "^1.5.0",
@@ -742,7 +1261,6 @@
       "version": "3.1.2",
       "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
       "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=6.0.0"
@@ -752,20 +1270,56 @@
       "version": "1.5.4",
       "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.4.tgz",
       "integrity": "sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/@jridgewell/trace-mapping": {
       "version": "0.3.29",
       "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.29.tgz",
       "integrity": "sha512-uw6guiW/gcAGPDhLmd77/6lW8QLeiV5RUTsAX46Db6oLhGaVj4lhnPwb184s1bkc8kdVg/+h988dro8GRDpmYQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@jridgewell/resolve-uri": "^3.1.0",
         "@jridgewell/sourcemap-codec": "^1.4.14"
       }
     },
+    "node_modules/@modelcontextprotocol/sdk": {
+      "version": "1.16.0",
+      "resolved": "https://registry.npmjs.org/@modelcontextprotocol/sdk/-/sdk-1.16.0.tgz",
+      "integrity": "sha512-8ofX7gkZcLj9H9rSd50mCgm3SSF8C7XoclxJuLoV0Cz3rEQ1tv9MZRYYvJtm9n1BiEQQMzSmE/w2AEkNacLYfg==",
+      "dependencies": {
+        "ajv": "^6.12.6",
+        "content-type": "^1.0.5",
+        "cors": "^2.8.5",
+        "cross-spawn": "^7.0.5",
+        "eventsource": "^3.0.2",
+        "eventsource-parser": "^3.0.0",
+        "express": "^5.0.1",
+        "express-rate-limit": "^7.5.0",
+        "pkce-challenge": "^5.0.0",
+        "raw-body": "^3.0.0",
+        "zod": "^3.23.8",
+        "zod-to-json-schema": "^3.24.1"
+      },
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@mswjs/interceptors": {
+      "version": "0.39.3",
+      "resolved": "https://registry.npmjs.org/@mswjs/interceptors/-/interceptors-0.39.3.tgz",
+      "integrity": "sha512-9bw/wBL7pblsnOCIqvn1788S9o4h+cC5HWXg0Xhh0dOzsZ53IyfmBM+FYqpDDPbm0xjCqEqvCITloF3Dm4TXRQ==",
+      "dependencies": {
+        "@open-draft/deferred-promise": "^2.2.0",
+        "@open-draft/logger": "^0.3.0",
+        "@open-draft/until": "^2.0.0",
+        "is-node-process": "^1.2.0",
+        "outvariant": "^1.4.3",
+        "strict-event-emitter": "^0.5.1"
+      },
+      "engines": {
+        "node": ">=18"
+      }
+    },
     "node_modules/@napi-rs/wasm-runtime": {
       "version": "0.2.12",
       "resolved": "https://registry.npmjs.org/@napi-rs/wasm-runtime/-/wasm-runtime-0.2.12.tgz",
@@ -927,7 +1481,6 @@
       "version": "2.1.5",
       "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
       "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@nodelib/fs.stat": "2.0.5",
@@ -941,7 +1494,6 @@
       "version": "2.0.5",
       "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
       "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 8"
@@ -951,7 +1503,6 @@
       "version": "1.2.8",
       "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
       "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@nodelib/fs.scandir": "2.1.5",
@@ -971,19 +1522,126 @@
         "node": ">=12.4.0"
       }
     },
-    "node_modules/@rtsao/scc": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/@rtsao/scc/-/scc-1.1.0.tgz",
-      "integrity": "sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==",
-      "dev": true,
-      "license": "MIT"
+    "node_modules/@open-draft/deferred-promise": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/@open-draft/deferred-promise/-/deferred-promise-2.2.0.tgz",
+      "integrity": "sha512-CecwLWx3rhxVQF6V4bAgPS5t+So2sTbPgAzafKkVizyi7tlwpcFpdFqq+wqF2OwNBmqFuu6tOyouTuxgpMfzmA=="
     },
-    "node_modules/@rushstack/eslint-patch": {
-      "version": "1.12.0",
-      "resolved": "https://registry.npmjs.org/@rushstack/eslint-patch/-/eslint-patch-1.12.0.tgz",
-      "integrity": "sha512-5EwMtOqvJMMa3HbmxLlF74e+3/HhwBTMcvt3nqVJgGCozO6hzIPOBlwm8mGVNR9SN2IJpxSnlxczyDjcn7qIyw==",
-      "dev": true,
-      "license": "MIT"
+    "node_modules/@open-draft/logger": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/@open-draft/logger/-/logger-0.3.0.tgz",
+      "integrity": "sha512-X2g45fzhxH238HKO4xbSr7+wBS8Fvw6ixhTDuvLd5mqh6bJJCFAPwU9mPDxbcrRtfxv4u5IHCEH77BmxvXmmxQ==",
+      "dependencies": {
+        "is-node-process": "^1.2.0",
+        "outvariant": "^1.4.0"
+      }
+    },
+    "node_modules/@open-draft/until": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/@open-draft/until/-/until-2.1.0.tgz",
+      "integrity": "sha512-U69T3ItWHvLwGg5eJ0n3I62nWuE6ilHlmz7zM0npLBRvPRd7e6NYmg54vvRtP5mZG7kZqZCFVdsTWo7BPtBujg=="
+    },
+    "node_modules/@panva/hkdf": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/@panva/hkdf/-/hkdf-1.2.1.tgz",
+      "integrity": "sha512-6oclG6Y3PiDFcoyk8srjLfVKyMfVCKJ27JwNPViuXziFpmdz+MZnZN/aKY0JGXgYuO/VghU0jcOAZgWXZ1Dmrw==",
+      "funding": {
+        "url": "https://github.com/sponsors/panva"
+      }
+    },
+    "node_modules/@radix-ui/react-compose-refs": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-compose-refs/-/react-compose-refs-1.1.2.tgz",
+      "integrity": "sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==",
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-label": {
+      "version": "2.1.7",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-label/-/react-label-2.1.7.tgz",
+      "integrity": "sha512-YT1GqPSL8kJn20djelMX7/cTRp/Y9w5IZHvfxQTVHrOqa2yMl7i/UfMqKRU5V7mEyKTrUVgJXhNQPVCG8PBLoQ==",
+      "dependencies": {
+        "@radix-ui/react-primitive": "2.1.3"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-primitive": {
+      "version": "2.1.3",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-primitive/-/react-primitive-2.1.3.tgz",
+      "integrity": "sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==",
+      "dependencies": {
+        "@radix-ui/react-slot": "1.2.3"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-slot": {
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-slot/-/react-slot-1.2.3.tgz",
+      "integrity": "sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==",
+      "dependencies": {
+        "@radix-ui/react-compose-refs": "1.1.2"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@rtsao/scc": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/@rtsao/scc/-/scc-1.1.0.tgz",
+      "integrity": "sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@rushstack/eslint-patch": {
+      "version": "1.12.0",
+      "resolved": "https://registry.npmjs.org/@rushstack/eslint-patch/-/eslint-patch-1.12.0.tgz",
+      "integrity": "sha512-5EwMtOqvJMMa3HbmxLlF74e+3/HhwBTMcvt3nqVJgGCozO6hzIPOBlwm8mGVNR9SN2IJpxSnlxczyDjcn7qIyw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@standard-schema/utils": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/@standard-schema/utils/-/utils-0.3.0.tgz",
+      "integrity": "sha512-e7Mew686owMaPJVNNLs55PUvgz371nKgwsc4vxE49zsODpJEnxgxRo2y/OKrqueavXgZNMDVj3DdHFlaSAeU8g=="
     },
     "node_modules/@swc/helpers": {
       "version": "0.5.15",
@@ -1270,6 +1928,77 @@
         "tailwindcss": "4.1.11"
       }
     },
+    "node_modules/@tanstack/query-core": {
+      "version": "5.83.0",
+      "resolved": "https://registry.npmjs.org/@tanstack/query-core/-/query-core-5.83.0.tgz",
+      "integrity": "sha512-0M8dA+amXUkyz5cVUm/B+zSk3xkQAcuXuz5/Q/LveT4ots2rBpPTZOzd7yJa2Utsf8D2Upl5KyjhHRY+9lB/XA==",
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/tannerlinsley"
+      }
+    },
+    "node_modules/@tanstack/react-query": {
+      "version": "5.83.0",
+      "resolved": "https://registry.npmjs.org/@tanstack/react-query/-/react-query-5.83.0.tgz",
+      "integrity": "sha512-/XGYhZ3foc5H0VM2jLSD/NyBRIOK4q9kfeml4+0x2DlL6xVuAcVEW+hTlTapAmejObg0i3eNqhkr2dT+eciwoQ==",
+      "dependencies": {
+        "@tanstack/query-core": "5.83.0"
+      },
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/tannerlinsley"
+      },
+      "peerDependencies": {
+        "react": "^18 || ^19"
+      }
+    },
+    "node_modules/@ts-morph/common": {
+      "version": "0.19.0",
+      "resolved": "https://registry.npmjs.org/@ts-morph/common/-/common-0.19.0.tgz",
+      "integrity": "sha512-Unz/WHmd4pGax91rdIKWi51wnVUW11QttMEPpBiBgIewnc9UQIX7UDLxr5vRlqeByXCwhkF6VabSsI0raWcyAQ==",
+      "dependencies": {
+        "fast-glob": "^3.2.12",
+        "minimatch": "^7.4.3",
+        "mkdirp": "^2.1.6",
+        "path-browserify": "^1.0.1"
+      }
+    },
+    "node_modules/@ts-morph/common/node_modules/brace-expansion": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
+      "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
+      "dependencies": {
+        "balanced-match": "^1.0.0"
+      }
+    },
+    "node_modules/@ts-morph/common/node_modules/minimatch": {
+      "version": "7.4.6",
+      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-7.4.6.tgz",
+      "integrity": "sha512-sBz8G/YjVniEz6lKPNpKxXwazJe4c19fEfV2GDMX6AjFz+MX9uDWIZW8XreVhkFW3fkIdTv/gxWr/Kks5FFAVw==",
+      "dependencies": {
+        "brace-expansion": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
+    "node_modules/@ts-morph/common/node_modules/mkdirp": {
+      "version": "2.1.6",
+      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-2.1.6.tgz",
+      "integrity": "sha512-+hEnITedc8LAtIP9u3HJDFIdcLV2vXP33sqLLIzkv1Db1zO/1OxbvYf0Y1OC/S/Qo5dxHXepofhmxL02PsKe+A==",
+      "bin": {
+        "mkdirp": "dist/cjs/src/bin.js"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
     "node_modules/@tybys/wasm-util": {
       "version": "0.10.0",
       "resolved": "https://registry.npmjs.org/@tybys/wasm-util/-/wasm-util-0.10.0.tgz",
@@ -1281,6 +2010,11 @@
         "tslib": "^2.4.0"
       }
     },
+    "node_modules/@types/cookie": {
+      "version": "0.6.0",
+      "resolved": "https://registry.npmjs.org/@types/cookie/-/cookie-0.6.0.tgz",
+      "integrity": "sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA=="
+    },
     "node_modules/@types/estree": {
       "version": "1.0.8",
       "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
@@ -1306,7 +2040,7 @@
       "version": "20.19.9",
       "resolved": "https://registry.npmjs.org/@types/node/-/node-20.19.9.tgz",
       "integrity": "sha512-cuVNgarYWZqxRJDQHEB58GEONhOK79QVR/qYx4S7kcUObQvUwvFnYxJuuHUKm2aieN9X3yZB4LZsuYNU1Qphsw==",
-      "dev": true,
+      "devOptional": true,
       "license": "MIT",
       "dependencies": {
         "undici-types": "~6.21.0"
@@ -1316,7 +2050,7 @@
       "version": "19.1.8",
       "resolved": "https://registry.npmjs.org/@types/react/-/react-19.1.8.tgz",
       "integrity": "sha512-AwAfQ2Wa5bCx9WP8nZL2uMZWod7J7/JSplxbTmBQ5ms6QpqNYm672H0Vu9ZVKVngQ+ii4R/byguVEUZQyeg44g==",
-      "dev": true,
+      "devOptional": true,
       "license": "MIT",
       "dependencies": {
         "csstype": "^3.0.2"
@@ -1326,12 +2060,31 @@
       "version": "19.1.6",
       "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-19.1.6.tgz",
       "integrity": "sha512-4hOiT/dwO8Ko0gV1m/TJZYk3y0KBnY9vzDh7W+DH17b2HFSOGgdj33dhihPeuy3l0q23+4e+hoXHV6hCC4dCXw==",
-      "dev": true,
+      "devOptional": true,
       "license": "MIT",
       "peerDependencies": {
         "@types/react": "^19.0.0"
       }
     },
+    "node_modules/@types/react-no-ssr": {
+      "version": "1.1.8",
+      "resolved": "https://registry.npmjs.org/@types/react-no-ssr/-/react-no-ssr-1.1.8.tgz",
+      "integrity": "sha512-0p3XxCvbkO463wB3qMF5MeT4Gfan3wH4MzFQZjo/6Yr4h0I1YtkDZyv/hhWI0DX0t1xCWQsLm0SxBCBDCZ09Yw==",
+      "dev": true,
+      "dependencies": {
+        "@types/react": "*"
+      }
+    },
+    "node_modules/@types/statuses": {
+      "version": "2.0.6",
+      "resolved": "https://registry.npmjs.org/@types/statuses/-/statuses-2.0.6.tgz",
+      "integrity": "sha512-xMAgYwceFhRA2zY+XbEA7mxYbA093wdiW8Vu6gZPGWy9cmOyU9XesH1tNcEWsKFd5Vzrqx5T3D38PWx1FIIXkA=="
+    },
+    "node_modules/@types/tough-cookie": {
+      "version": "4.0.5",
+      "resolved": "https://registry.npmjs.org/@types/tough-cookie/-/tough-cookie-4.0.5.tgz",
+      "integrity": "sha512-/Ad8+nIOV7Rl++6f1BdKxFSMgmoqEoYbHRpPcx3JEfv8VRsQe9Z4mCXeJBzxs7mbHY/XOZZuXlRNfhpVPbs6ZA=="
+    },
     "node_modules/@typescript-eslint/eslint-plugin": {
       "version": "8.38.0",
       "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.38.0.tgz",
@@ -1889,6 +2642,18 @@
         "win32"
       ]
     },
+    "node_modules/accepts": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/accepts/-/accepts-2.0.0.tgz",
+      "integrity": "sha512-5cvg6CtKwfgdmVqY1WIiXKc3Q1bkRqGLi+2W/6ao+6Y7gu/RCwRuAhGEzh5B4KlszSuTLgZYuqFqo5bImjNKng==",
+      "dependencies": {
+        "mime-types": "^3.0.0",
+        "negotiator": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
     "node_modules/acorn": {
       "version": "8.15.0",
       "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
@@ -1912,11 +2677,23 @@
         "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
       }
     },
+    "node_modules/add": {
+      "version": "2.0.6",
+      "resolved": "https://registry.npmjs.org/add/-/add-2.0.6.tgz",
+      "integrity": "sha512-j5QzrmsokwWWp6kUcJQySpbG+xfOBqqKnup3OIk1pz+kB/80SLorZ9V8zHFLO92Lcd+hbvq8bT+zOGoPkmBV0Q=="
+    },
+    "node_modules/agent-base": {
+      "version": "7.1.4",
+      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-7.1.4.tgz",
+      "integrity": "sha512-MnA+YT8fwfJPgBx3m60MNqakm30XOkyIoH1y6huTQvC0PwZG7ki8NacLBcrPbNoo8vEZy7Jpuk7+jMO+CUovTQ==",
+      "engines": {
+        "node": ">= 14"
+      }
+    },
     "node_modules/ajv": {
       "version": "6.12.6",
       "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
       "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "fast-deep-equal": "^3.1.1",
@@ -1929,11 +2706,46 @@
         "url": "https://github.com/sponsors/epoberezkin"
       }
     },
+    "node_modules/ansi-escapes": {
+      "version": "4.3.2",
+      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz",
+      "integrity": "sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==",
+      "dependencies": {
+        "type-fest": "^0.21.3"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/ansi-escapes/node_modules/type-fest": {
+      "version": "0.21.3",
+      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz",
+      "integrity": "sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==",
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/ansi-regex": {
+      "version": "6.1.0",
+      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
+      "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
+      }
+    },
     "node_modules/ansi-styles": {
       "version": "4.3.0",
       "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
       "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "color-convert": "^2.0.1"
@@ -1949,7 +2761,6 @@
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
       "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
-      "dev": true,
       "license": "Python-2.0"
     },
     "node_modules/aria-query": {
@@ -2122,6 +2933,17 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/ast-types": {
+      "version": "0.16.1",
+      "resolved": "https://registry.npmjs.org/ast-types/-/ast-types-0.16.1.tgz",
+      "integrity": "sha512-6t10qk83GOG8p0vKmaCr8eiilZwO171AvbROMtvvNiwrTly62t+7XkA8RdIIVbpMhCASAsxgAzdRSwh6nw/5Dg==",
+      "dependencies": {
+        "tslib": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=4"
+      }
+    },
     "node_modules/ast-types-flow": {
       "version": "0.0.8",
       "resolved": "https://registry.npmjs.org/ast-types-flow/-/ast-types-flow-0.0.8.tgz",
@@ -2129,6 +2951,11 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/async": {
+      "version": "3.2.6",
+      "resolved": "https://registry.npmjs.org/async/-/async-3.2.6.tgz",
+      "integrity": "sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA=="
+    },
     "node_modules/async-function": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/async-function/-/async-function-1.0.0.tgz",
@@ -2139,6 +2966,11 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/asynckit": {
+      "version": "0.4.0",
+      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
+      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q=="
+    },
     "node_modules/available-typed-arrays": {
       "version": "1.0.7",
       "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz",
@@ -2165,6 +2997,16 @@
         "node": ">=4"
       }
     },
+    "node_modules/axios": {
+      "version": "1.10.0",
+      "resolved": "https://registry.npmjs.org/axios/-/axios-1.10.0.tgz",
+      "integrity": "sha512-/1xYAC4MP/HEG+3duIhFr4ZQXR4sQXOIe+o6sdqzeykGLx6Upp/1p8MHqhINOvGeP7xyNHe7tsiJByc4SSVUxw==",
+      "dependencies": {
+        "follow-redirects": "^1.15.6",
+        "form-data": "^4.0.0",
+        "proxy-from-env": "^1.1.0"
+      }
+    },
     "node_modules/axobject-query": {
       "version": "4.1.0",
       "resolved": "https://registry.npmjs.org/axobject-query/-/axobject-query-4.1.0.tgz",
@@ -2179,9 +3021,56 @@
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
       "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
-      "dev": true,
       "license": "MIT"
     },
+    "node_modules/base64-js": {
+      "version": "1.5.1",
+      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
+      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ]
+    },
+    "node_modules/bl": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/bl/-/bl-5.1.0.tgz",
+      "integrity": "sha512-tv1ZJHLfTDnXE6tMHv73YgSJaWR2AFuPwMntBe7XL/GBFHnT0CLnsHMogfk5+GzCDC5ZWarSCYaIGATZt9dNsQ==",
+      "dependencies": {
+        "buffer": "^6.0.3",
+        "inherits": "^2.0.4",
+        "readable-stream": "^3.4.0"
+      }
+    },
+    "node_modules/body-parser": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-2.2.0.tgz",
+      "integrity": "sha512-02qvAaxv8tp7fBa/mw1ga98OGm+eCbqzJOKoRt70sLmfEEi+jyBYVTDGfCL/k06/4EMk/z01gCe7HoCH/f2LTg==",
+      "dependencies": {
+        "bytes": "^3.1.2",
+        "content-type": "^1.0.5",
+        "debug": "^4.4.0",
+        "http-errors": "^2.0.0",
+        "iconv-lite": "^0.6.3",
+        "on-finished": "^2.4.1",
+        "qs": "^6.14.0",
+        "raw-body": "^3.0.0",
+        "type-is": "^2.0.0"
+      },
+      "engines": {
+        "node": ">=18"
+      }
+    },
     "node_modules/brace-expansion": {
       "version": "1.1.12",
       "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
@@ -2197,7 +3086,6 @@
       "version": "3.0.3",
       "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
       "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "fill-range": "^7.1.1"
@@ -2206,6 +3094,68 @@
         "node": ">=8"
       }
     },
+    "node_modules/browserslist": {
+      "version": "4.25.1",
+      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.25.1.tgz",
+      "integrity": "sha512-KGj0KoOMXLpSNkkEI6Z6mShmQy0bc1I+T7K9N81k4WWMrfz+6fQ6es80B/YLAeRoKvjYE1YSHHOW1qe9xIVzHw==",
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/browserslist"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/browserslist"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "dependencies": {
+        "caniuse-lite": "^1.0.30001726",
+        "electron-to-chromium": "^1.5.173",
+        "node-releases": "^2.0.19",
+        "update-browserslist-db": "^1.1.3"
+      },
+      "bin": {
+        "browserslist": "cli.js"
+      },
+      "engines": {
+        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
+      }
+    },
+    "node_modules/buffer": {
+      "version": "6.0.3",
+      "resolved": "https://registry.npmjs.org/buffer/-/buffer-6.0.3.tgz",
+      "integrity": "sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "dependencies": {
+        "base64-js": "^1.3.1",
+        "ieee754": "^1.2.1"
+      }
+    },
+    "node_modules/bytes": {
+      "version": "3.1.2",
+      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
+      "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
     "node_modules/call-bind": {
       "version": "1.0.8",
       "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz",
@@ -2229,7 +3179,6 @@
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
       "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "es-errors": "^1.3.0",
@@ -2243,7 +3192,6 @@
       "version": "1.0.4",
       "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
       "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "call-bind-apply-helpers": "^1.0.2",
@@ -2260,7 +3208,6 @@
       "version": "3.1.0",
       "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
       "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=6"
@@ -2325,11 +3272,100 @@
         "url": "https://polar.sh/cva"
       }
     },
-    "node_modules/client-only": {
-      "version": "0.0.1",
-      "resolved": "https://registry.npmjs.org/client-only/-/client-only-0.0.1.tgz",
-      "integrity": "sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==",
-      "license": "MIT"
+    "node_modules/cli-cursor": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-4.0.0.tgz",
+      "integrity": "sha512-VGtlMu3x/4DOtIUwEkRezxUZ2lBacNJCHash0N0WeZDBS+7Ux1dm3XWAgWYxLJFMMdOeXMHXorshEFhbMSGelg==",
+      "dependencies": {
+        "restore-cursor": "^4.0.0"
+      },
+      "engines": {
+        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/cli-spinners": {
+      "version": "2.9.2",
+      "resolved": "https://registry.npmjs.org/cli-spinners/-/cli-spinners-2.9.2.tgz",
+      "integrity": "sha512-ywqV+5MmyL4E7ybXgKys4DugZbX0FC6LnwrhjuykIjnK9k8OQacQ7axGKnjDXWNhns0xot3bZI5h55H8yo9cJg==",
+      "engines": {
+        "node": ">=6"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/cli-width": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-4.1.0.tgz",
+      "integrity": "sha512-ouuZd4/dm2Sw5Gmqy6bGyNNNe1qt9RpmxveLSO7KcgsTnU7RXfsw+/bukWGo1abgBiMAic068rclZsO4IWmmxQ==",
+      "engines": {
+        "node": ">= 12"
+      }
+    },
+    "node_modules/client-only": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/client-only/-/client-only-0.0.1.tgz",
+      "integrity": "sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==",
+      "license": "MIT"
+    },
+    "node_modules/cliui": {
+      "version": "8.0.1",
+      "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
+      "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
+      "dependencies": {
+        "string-width": "^4.2.0",
+        "strip-ansi": "^6.0.1",
+        "wrap-ansi": "^7.0.0"
+      },
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/cliui/node_modules/ansi-regex": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
+      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/cliui/node_modules/strip-ansi": {
+      "version": "6.0.1",
+      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
+      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
+      "dependencies": {
+        "ansi-regex": "^5.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/cliui/node_modules/wrap-ansi": {
+      "version": "7.0.0",
+      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
+      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
+      "dependencies": {
+        "ansi-styles": "^4.0.0",
+        "string-width": "^4.1.0",
+        "strip-ansi": "^6.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
+      }
+    },
+    "node_modules/clone": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/clone/-/clone-1.0.4.tgz",
+      "integrity": "sha512-JQHZ2QMW6l3aH/j6xCqQThY/9OH4D/9ls34cgkUBiEeocRTU04tHfKPBsUK1PqZCUQM7GiA0IIXJSuXHI64Kbg==",
+      "engines": {
+        "node": ">=0.8"
+      }
     },
     "node_modules/clsx": {
       "version": "2.1.1",
@@ -2340,6 +3376,11 @@
         "node": ">=6"
       }
     },
+    "node_modules/code-block-writer": {
+      "version": "12.0.0",
+      "resolved": "https://registry.npmjs.org/code-block-writer/-/code-block-writer-12.0.0.tgz",
+      "integrity": "sha512-q4dMFMlXtKR3XNBHyMHt/3pwYNA69EDk00lloMOaaUMKPUXBw6lpXtbu3MMVG6/uOihGnRDOlkyqsONEUj60+w=="
+    },
     "node_modules/color": {
       "version": "4.2.3",
       "resolved": "https://registry.npmjs.org/color/-/color-4.2.3.tgz",
@@ -2358,7 +3399,6 @@
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
       "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
-      "devOptional": true,
       "license": "MIT",
       "dependencies": {
         "color-name": "~1.1.4"
@@ -2371,7 +3411,6 @@
       "version": "1.1.4",
       "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
       "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
-      "devOptional": true,
       "license": "MIT"
     },
     "node_modules/color-string": {
@@ -2385,6 +3424,25 @@
         "simple-swizzle": "^0.2.2"
       }
     },
+    "node_modules/combined-stream": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
+      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
+      "dependencies": {
+        "delayed-stream": "~1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/commander": {
+      "version": "10.0.1",
+      "resolved": "https://registry.npmjs.org/commander/-/commander-10.0.1.tgz",
+      "integrity": "sha512-y4Mg2tXshplEbSGzx7amzPwKKOCGuoSRP/CjEdwwk0FOGlUbq6lKuoyDZTNZkmxHdJtp54hdfY/JUrdL7Xfdug==",
+      "engines": {
+        "node": ">=14"
+      }
+    },
     "node_modules/concat-map": {
       "version": "0.0.1",
       "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
@@ -2392,11 +3450,87 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/content-disposition": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-1.0.0.tgz",
+      "integrity": "sha512-Au9nRL8VNUut/XSzbQA38+M78dzP4D+eqg3gfJHMIHHYa3bg067xj1KxMUWj+VULbiZMowKngFFbKczUrNJ1mg==",
+      "dependencies": {
+        "safe-buffer": "5.2.1"
+      },
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/content-type": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
+      "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/convert-source-map": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
+      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg=="
+    },
+    "node_modules/cookie": {
+      "version": "0.7.2",
+      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.2.tgz",
+      "integrity": "sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==",
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/cookie-signature": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.2.2.tgz",
+      "integrity": "sha512-D76uU73ulSXrD1UXF4KE2TMxVVwhsnCgfAyTg9k8P6KGZjlXKrOLe4dJQKI3Bxi5wjesZoFXJWElNWBjPZMbhg==",
+      "engines": {
+        "node": ">=6.6.0"
+      }
+    },
+    "node_modules/cors": {
+      "version": "2.8.5",
+      "resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
+      "integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
+      "dependencies": {
+        "object-assign": "^4",
+        "vary": "^1"
+      },
+      "engines": {
+        "node": ">= 0.10"
+      }
+    },
+    "node_modules/cosmiconfig": {
+      "version": "8.3.6",
+      "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-8.3.6.tgz",
+      "integrity": "sha512-kcZ6+W5QzcJ3P1Mt+83OUv/oHFqZHIx8DuxG6eZ5RGMERoLqp4BuGjhHLYGK+Kf5XVkQvqBSmAy/nGWN3qDgEA==",
+      "dependencies": {
+        "import-fresh": "^3.3.0",
+        "js-yaml": "^4.1.0",
+        "parse-json": "^5.2.0",
+        "path-type": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=14"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/d-fischer"
+      },
+      "peerDependencies": {
+        "typescript": ">=4.9.5"
+      },
+      "peerDependenciesMeta": {
+        "typescript": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/cross-spawn": {
       "version": "7.0.6",
       "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
       "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "path-key": "^3.1.0",
@@ -2411,7 +3545,7 @@
       "version": "3.1.3",
       "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
       "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
-      "dev": true,
+      "devOptional": true,
       "license": "MIT"
     },
     "node_modules/damerau-levenshtein": {
@@ -2421,6 +3555,14 @@
       "dev": true,
       "license": "BSD-2-Clause"
     },
+    "node_modules/data-uri-to-buffer": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-4.0.1.tgz",
+      "integrity": "sha512-0R9ikRb668HB7QDxT1vkpuUBtqc53YyAwMwGeUFKRojY/NWKvdZ+9UYtRfGmhqNbRkTSVpMbmyhXipFFv2cb/A==",
+      "engines": {
+        "node": ">= 12"
+      }
+    },
     "node_modules/data-view-buffer": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.2.tgz",
@@ -2479,7 +3621,6 @@
       "version": "4.4.1",
       "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
       "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "ms": "^2.1.3"
@@ -2500,6 +3641,25 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/deepmerge": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz",
+      "integrity": "sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/defaults": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/defaults/-/defaults-1.0.4.tgz",
+      "integrity": "sha512-eFuaLoy/Rxalv2kr+lqMlUnrDWV+3j4pljOIJgLIhI058IQfWJ7vXhyEIHu+HtC738klGALYxOKDO0bQP3tg8A==",
+      "dependencies": {
+        "clone": "^1.0.2"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
     "node_modules/define-data-property": {
       "version": "1.1.4",
       "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
@@ -2536,6 +3696,22 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/delayed-stream": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
+      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
+      "engines": {
+        "node": ">=0.4.0"
+      }
+    },
+    "node_modules/depd": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
+      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
     "node_modules/detect-libc": {
       "version": "2.0.4",
       "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
@@ -2546,6 +3722,14 @@
         "node": ">=8"
       }
     },
+    "node_modules/diff": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/diff/-/diff-5.2.0.tgz",
+      "integrity": "sha512-uIFDxqpRZGZ6ThOk84hEfqWoHx2devRFvpTZcTHur85vImfaxUbTW9Ryh4CpCuDnToOP1CEtXKIgytHBPVff5A==",
+      "engines": {
+        "node": ">=0.3.1"
+      }
+    },
     "node_modules/doctrine": {
       "version": "2.1.0",
       "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
@@ -2563,7 +3747,6 @@
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
       "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "call-bind-apply-helpers": "^1.0.1",
@@ -2574,6 +3757,16 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/ee-first": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
+      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow=="
+    },
+    "node_modules/electron-to-chromium": {
+      "version": "1.5.189",
+      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.189.tgz",
+      "integrity": "sha512-y9D1ntS1ruO/pZ/V2FtLE+JXLQe28XoRpZ7QCCo0T8LdQladzdcOVQZH/IWLVJvCw12OGMb6hYOeOAjntCmJRQ=="
+    },
     "node_modules/emoji-regex": {
       "version": "9.2.2",
       "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
@@ -2581,6 +3774,14 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/encodeurl": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz",
+      "integrity": "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==",
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
     "node_modules/enhanced-resolve": {
       "version": "5.18.2",
       "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.2.tgz",
@@ -2595,6 +3796,19 @@
         "node": ">=10.13.0"
       }
     },
+    "node_modules/error-ex": {
+      "version": "1.3.2",
+      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
+      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
+      "dependencies": {
+        "is-arrayish": "^0.2.1"
+      }
+    },
+    "node_modules/error-ex/node_modules/is-arrayish": {
+      "version": "0.2.1",
+      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
+      "integrity": "sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg=="
+    },
     "node_modules/es-abstract": {
       "version": "1.24.0",
       "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.24.0.tgz",
@@ -2668,7 +3882,6 @@
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
       "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 0.4"
@@ -2678,7 +3891,6 @@
       "version": "1.3.0",
       "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
       "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 0.4"
@@ -2716,7 +3928,6 @@
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
       "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "es-errors": "^1.3.0"
@@ -2729,7 +3940,6 @@
       "version": "2.1.0",
       "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
       "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "es-errors": "^1.3.0",
@@ -2772,6 +3982,19 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/escalade": {
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
+      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/escape-html": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
+      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow=="
+    },
     "node_modules/escape-string-regexp": {
       "version": "4.0.0",
       "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
@@ -3165,6 +4388,18 @@
         "url": "https://opencollective.com/eslint"
       }
     },
+    "node_modules/esprima": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
+      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
+      "bin": {
+        "esparse": "bin/esparse.js",
+        "esvalidate": "bin/esvalidate.js"
+      },
+      "engines": {
+        "node": ">=4"
+      }
+    },
     "node_modules/esquery": {
       "version": "1.6.0",
       "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
@@ -3211,18 +4446,120 @@
         "node": ">=0.10.0"
       }
     },
+    "node_modules/etag": {
+      "version": "1.8.1",
+      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
+      "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/eventsource": {
+      "version": "3.0.7",
+      "resolved": "https://registry.npmjs.org/eventsource/-/eventsource-3.0.7.tgz",
+      "integrity": "sha512-CRT1WTyuQoD771GW56XEZFQ/ZoSfWid1alKGDYMmkt2yl8UXrVR4pspqWNEcqKvVIzg6PAltWjxcSSPrboA4iA==",
+      "dependencies": {
+        "eventsource-parser": "^3.0.1"
+      },
+      "engines": {
+        "node": ">=18.0.0"
+      }
+    },
+    "node_modules/eventsource-parser": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/eventsource-parser/-/eventsource-parser-3.0.3.tgz",
+      "integrity": "sha512-nVpZkTMM9rF6AQ9gPJpFsNAMt48wIzB5TQgiTLdHiuO8XEDhUgZEhqKlZWXbIzo9VmJ/HvysHqEaVeD5v9TPvA==",
+      "engines": {
+        "node": ">=20.0.0"
+      }
+    },
+    "node_modules/execa": {
+      "version": "7.2.0",
+      "resolved": "https://registry.npmjs.org/execa/-/execa-7.2.0.tgz",
+      "integrity": "sha512-UduyVP7TLB5IcAQl+OzLyLcS/l32W/GLg+AhHJ+ow40FOk2U3SAllPwR44v4vmdFwIWqpdwxxpQbF1n5ta9seA==",
+      "dependencies": {
+        "cross-spawn": "^7.0.3",
+        "get-stream": "^6.0.1",
+        "human-signals": "^4.3.0",
+        "is-stream": "^3.0.0",
+        "merge-stream": "^2.0.0",
+        "npm-run-path": "^5.1.0",
+        "onetime": "^6.0.0",
+        "signal-exit": "^3.0.7",
+        "strip-final-newline": "^3.0.0"
+      },
+      "engines": {
+        "node": "^14.18.0 || ^16.14.0 || >=18.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sindresorhus/execa?sponsor=1"
+      }
+    },
+    "node_modules/express": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/express/-/express-5.1.0.tgz",
+      "integrity": "sha512-DT9ck5YIRU+8GYzzU5kT3eHGA5iL+1Zd0EutOmTE9Dtk+Tvuzd23VBU+ec7HPNSTxXYO55gPV/hq4pSBJDjFpA==",
+      "dependencies": {
+        "accepts": "^2.0.0",
+        "body-parser": "^2.2.0",
+        "content-disposition": "^1.0.0",
+        "content-type": "^1.0.5",
+        "cookie": "^0.7.1",
+        "cookie-signature": "^1.2.1",
+        "debug": "^4.4.0",
+        "encodeurl": "^2.0.0",
+        "escape-html": "^1.0.3",
+        "etag": "^1.8.1",
+        "finalhandler": "^2.1.0",
+        "fresh": "^2.0.0",
+        "http-errors": "^2.0.0",
+        "merge-descriptors": "^2.0.0",
+        "mime-types": "^3.0.0",
+        "on-finished": "^2.4.1",
+        "once": "^1.4.0",
+        "parseurl": "^1.3.3",
+        "proxy-addr": "^2.0.7",
+        "qs": "^6.14.0",
+        "range-parser": "^1.2.1",
+        "router": "^2.2.0",
+        "send": "^1.1.0",
+        "serve-static": "^2.2.0",
+        "statuses": "^2.0.1",
+        "type-is": "^2.0.1",
+        "vary": "^1.1.2"
+      },
+      "engines": {
+        "node": ">= 18"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/express"
+      }
+    },
+    "node_modules/express-rate-limit": {
+      "version": "7.5.1",
+      "resolved": "https://registry.npmjs.org/express-rate-limit/-/express-rate-limit-7.5.1.tgz",
+      "integrity": "sha512-7iN8iPMDzOMHPUYllBEsQdWVB6fPDMPqwjBaFrgr4Jgr/+okjvzAy+UHlYYL/Vs0OsOrMkwS6PJDkFlJwoxUnw==",
+      "engines": {
+        "node": ">= 16"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/express-rate-limit"
+      },
+      "peerDependencies": {
+        "express": ">= 4.11"
+      }
+    },
     "node_modules/fast-deep-equal": {
       "version": "3.1.3",
       "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
       "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/fast-glob": {
       "version": "3.3.1",
       "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.1.tgz",
       "integrity": "sha512-kNFPyjhh5cKjrUltxs+wFx+ZkbRaxxmZ+X0ZU31SOsxCEtP9VPgtq2teZw1DebupL5GmDaNQ6yKMMVcM41iqDg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@nodelib/fs.stat": "^2.0.2",
@@ -3239,7 +4576,6 @@
       "version": "5.1.2",
       "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
       "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
-      "dev": true,
       "license": "ISC",
       "dependencies": {
         "is-glob": "^4.0.1"
@@ -3252,7 +4588,6 @@
       "version": "2.1.0",
       "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
       "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/fast-levenshtein": {
@@ -3266,12 +4601,33 @@
       "version": "1.19.1",
       "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
       "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
-      "dev": true,
       "license": "ISC",
       "dependencies": {
         "reusify": "^1.0.4"
       }
     },
+    "node_modules/fetch-blob": {
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/fetch-blob/-/fetch-blob-3.2.0.tgz",
+      "integrity": "sha512-7yAQpD2UMJzLi1Dqv7qFYnPbaPx7ZfFK6PiIxQ4PfkGPyNyl2Ugx+a/umUonmKqjhM4DnfbMvdX6otXq83soQQ==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/jimmywarting"
+        },
+        {
+          "type": "paypal",
+          "url": "https://paypal.me/jimmywarting"
+        }
+      ],
+      "dependencies": {
+        "node-domexception": "^1.0.0",
+        "web-streams-polyfill": "^3.0.3"
+      },
+      "engines": {
+        "node": "^12.20 || >= 14.13"
+      }
+    },
     "node_modules/file-entry-cache": {
       "version": "8.0.0",
       "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
@@ -3289,7 +4645,6 @@
       "version": "7.1.1",
       "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
       "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "to-regex-range": "^5.0.1"
@@ -3298,6 +4653,22 @@
         "node": ">=8"
       }
     },
+    "node_modules/finalhandler": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-2.1.0.tgz",
+      "integrity": "sha512-/t88Ty3d5JWQbWYgaOGCCYfXRwV1+be02WqYYlL6h0lEiUAMPM8o8qKGO01YIkOHzka2up08wvgYD0mDiI+q3Q==",
+      "dependencies": {
+        "debug": "^4.4.0",
+        "encodeurl": "^2.0.0",
+        "escape-html": "^1.0.3",
+        "on-finished": "^2.4.1",
+        "parseurl": "^1.3.3",
+        "statuses": "^2.0.1"
+      },
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
     "node_modules/find-up": {
       "version": "5.0.0",
       "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
@@ -3336,6 +4707,25 @@
       "dev": true,
       "license": "ISC"
     },
+    "node_modules/follow-redirects": {
+      "version": "1.15.9",
+      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.9.tgz",
+      "integrity": "sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==",
+      "funding": [
+        {
+          "type": "individual",
+          "url": "https://github.com/sponsors/RubenVerborgh"
+        }
+      ],
+      "engines": {
+        "node": ">=4.0"
+      },
+      "peerDependenciesMeta": {
+        "debug": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/for-each": {
       "version": "0.3.5",
       "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz",
@@ -3352,29 +4742,114 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
-    "node_modules/function-bind": {
-      "version": "1.1.2",
-      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
-      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
-      "dev": true,
-      "license": "MIT",
-      "funding": {
-        "url": "https://github.com/sponsors/ljharb"
+    "node_modules/form": {
+      "version": "0.2.5",
+      "resolved": "https://registry.npmjs.org/form/-/form-0.2.5.tgz",
+      "integrity": "sha512-0UweRvfZfGSKDNREb1J++S0D4oTdcSHYWhT5ipZiqJE/bcay+tP+gzWAL1esgz7aEqeZVAAaPtrfCAdlU9lqgw==",
+      "dependencies": {
+        "async": ">= 0.1.22",
+        "validator": ">= 0.4.9"
+      },
+      "engines": {
+        "node": ">= 0.2.2"
       }
     },
-    "node_modules/function.prototype.name": {
-      "version": "1.1.8",
-      "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.8.tgz",
-      "integrity": "sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==",
-      "dev": true,
-      "license": "MIT",
+    "node_modules/form-data": {
+      "version": "4.0.4",
+      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.4.tgz",
+      "integrity": "sha512-KrGhL9Q4zjj0kiUt5OO4Mr/A/jlI2jDYs5eHBpYHPcBEVSiipAvn2Ko2HnPe20rmcuuvMHNdZFp+4IlGTMF0Ow==",
       "dependencies": {
-        "call-bind": "^1.0.8",
-        "call-bound": "^1.0.3",
-        "define-properties": "^1.2.1",
-        "functions-have-names": "^1.2.3",
+        "asynckit": "^0.4.0",
+        "combined-stream": "^1.0.8",
+        "es-set-tostringtag": "^2.1.0",
         "hasown": "^2.0.2",
-        "is-callable": "^1.2.7"
+        "mime-types": "^2.1.12"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
+    "node_modules/form-data/node_modules/mime-db": {
+      "version": "1.52.0",
+      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
+      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/form-data/node_modules/mime-types": {
+      "version": "2.1.35",
+      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
+      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
+      "dependencies": {
+        "mime-db": "1.52.0"
+      },
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/formdata-polyfill": {
+      "version": "4.0.10",
+      "resolved": "https://registry.npmjs.org/formdata-polyfill/-/formdata-polyfill-4.0.10.tgz",
+      "integrity": "sha512-buewHzMvYL29jdeQTVILecSaZKnt/RJWjoZCF5OW60Z67/GmSLBkOFM7qh1PI3zFNtJbaZL5eQu1vLfazOwj4g==",
+      "dependencies": {
+        "fetch-blob": "^3.1.2"
+      },
+      "engines": {
+        "node": ">=12.20.0"
+      }
+    },
+    "node_modules/forwarded": {
+      "version": "0.2.0",
+      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
+      "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/fresh": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/fresh/-/fresh-2.0.0.tgz",
+      "integrity": "sha512-Rx/WycZ60HOaqLKAi6cHRKKI7zxWbJ31MhntmtwMoaTeF7XFH9hhBp8vITaMidfljRQ6eYWCKkaTK+ykVJHP2A==",
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/fs-extra": {
+      "version": "11.3.0",
+      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-11.3.0.tgz",
+      "integrity": "sha512-Z4XaCL6dUDHfP/jT25jJKMmtxvuwbkrD1vNSMFlo9lNLY2c5FHYSQgHPRZUjAB26TpDEoW9HCOgplrdbaPV/ew==",
+      "dependencies": {
+        "graceful-fs": "^4.2.0",
+        "jsonfile": "^6.0.1",
+        "universalify": "^2.0.0"
+      },
+      "engines": {
+        "node": ">=14.14"
+      }
+    },
+    "node_modules/function-bind": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
+      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/function.prototype.name": {
+      "version": "1.1.8",
+      "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.8.tgz",
+      "integrity": "sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.8",
+        "call-bound": "^1.0.3",
+        "define-properties": "^1.2.1",
+        "functions-have-names": "^1.2.3",
+        "hasown": "^2.0.2",
+        "is-callable": "^1.2.7"
       },
       "engines": {
         "node": ">= 0.4"
@@ -3393,11 +4868,26 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/gensync": {
+      "version": "1.0.0-beta.2",
+      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
+      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/get-caller-file": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
+      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
+      "engines": {
+        "node": "6.* || 8.* || >= 10.*"
+      }
+    },
     "node_modules/get-intrinsic": {
       "version": "1.3.0",
       "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
       "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "call-bind-apply-helpers": "^1.0.2",
@@ -3418,11 +4908,21 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/get-own-enumerable-keys": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/get-own-enumerable-keys/-/get-own-enumerable-keys-1.0.0.tgz",
+      "integrity": "sha512-PKsK2FSrQCyxcGHsGrLDcK0lx+0Ke+6e8KFFozA9/fIQLhQzPaRvJFdcz7+Axg3jUH/Mq+NI4xa5u/UT2tQskA==",
+      "engines": {
+        "node": ">=14.16"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
     "node_modules/get-proto": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
       "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "dunder-proto": "^1.0.1",
@@ -3432,6 +4932,17 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/get-stream": {
+      "version": "6.0.1",
+      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz",
+      "integrity": "sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==",
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
     "node_modules/get-symbol-description": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.1.0.tgz",
@@ -3510,7 +5021,6 @@
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
       "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 0.4"
@@ -3523,7 +5033,6 @@
       "version": "4.2.11",
       "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
       "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
-      "dev": true,
       "license": "ISC"
     },
     "node_modules/graphemer": {
@@ -3533,6 +5042,14 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/graphql": {
+      "version": "16.11.0",
+      "resolved": "https://registry.npmjs.org/graphql/-/graphql-16.11.0.tgz",
+      "integrity": "sha512-mS1lbMsxgQj6hge1XZ6p7GPhbrtFwUFYi3wRzXAC/FmYnyXMTvvI3td3rjmQ2u8ewXueaSvRPWaEcgVVOT9Jnw==",
+      "engines": {
+        "node": "^12.22.0 || ^14.16.0 || ^16.0.0 || >=17.0.0"
+      }
+    },
     "node_modules/has-bigints": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.1.0.tgz",
@@ -3589,7 +5106,6 @@
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
       "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 0.4"
@@ -3602,7 +5118,6 @@
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
       "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "has-symbols": "^1.0.3"
@@ -3618,7 +5133,6 @@
       "version": "2.0.2",
       "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
       "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "function-bind": "^1.1.2"
@@ -3627,6 +5141,84 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/headers-polyfill": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/headers-polyfill/-/headers-polyfill-4.0.3.tgz",
+      "integrity": "sha512-IScLbePpkvO846sIwOtOTDjutRMWdXdJmXdMvk6gCBHxFO8d+QKOQedyZSxFTTFYRSmlgSTDtXqqq4pcenBXLQ=="
+    },
+    "node_modules/http-errors": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
+      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
+      "dependencies": {
+        "depd": "2.0.0",
+        "inherits": "2.0.4",
+        "setprototypeof": "1.2.0",
+        "statuses": "2.0.1",
+        "toidentifier": "1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/http-errors/node_modules/statuses": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
+      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/https-proxy-agent": {
+      "version": "6.2.1",
+      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-6.2.1.tgz",
+      "integrity": "sha512-ONsE3+yfZF2caH5+bJlcddtWqNI3Gvs5A38+ngvljxaBiRXRswym2c7yf8UAeFpRFKjFNHIFEHqR/OLAWJzyiA==",
+      "dependencies": {
+        "agent-base": "^7.0.2",
+        "debug": "4"
+      },
+      "engines": {
+        "node": ">= 14"
+      }
+    },
+    "node_modules/human-signals": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/human-signals/-/human-signals-4.3.1.tgz",
+      "integrity": "sha512-nZXjEF2nbo7lIw3mgYjItAfgQXog3OjJogSbKa2CQIIvSGWcKgeJnQlNXip6NglNzYH45nSRiEVimMvYL8DDqQ==",
+      "engines": {
+        "node": ">=14.18.0"
+      }
+    },
+    "node_modules/iconv-lite": {
+      "version": "0.6.3",
+      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
+      "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
+      "dependencies": {
+        "safer-buffer": ">= 2.1.2 < 3.0.0"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/ieee754": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
+      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ]
+    },
     "node_modules/ignore": {
       "version": "5.3.2",
       "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
@@ -3641,7 +5233,6 @@
       "version": "3.3.1",
       "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
       "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "parent-module": "^1.0.0",
@@ -3664,6 +5255,20 @@
         "node": ">=0.8.19"
       }
     },
+    "node_modules/inherits": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
+      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
+    },
+    "node_modules/input-otp": {
+      "version": "1.4.2",
+      "resolved": "https://registry.npmjs.org/input-otp/-/input-otp-1.4.2.tgz",
+      "integrity": "sha512-l3jWwYNvrEa6NTCt7BECfCm48GvwuZzkoeG3gBL2w4CHeOXW3eKFmf9UNYkNfYc3mxMrthMnxjIE07MT0zLBQA==",
+      "peerDependencies": {
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc"
+      }
+    },
     "node_modules/internal-slot": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz",
@@ -3679,6 +5284,14 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/ipaddr.js": {
+      "version": "1.9.1",
+      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
+      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
+      "engines": {
+        "node": ">= 0.10"
+      }
+    },
     "node_modules/is-array-buffer": {
       "version": "3.0.5",
       "resolved": "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.5.tgz",
@@ -3835,7 +5448,6 @@
       "version": "2.1.1",
       "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
       "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=0.10.0"
@@ -3857,6 +5469,14 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/is-fullwidth-code-point": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
+      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
+      "engines": {
+        "node": ">=8"
+      }
+    },
     "node_modules/is-generator-function": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.1.0.tgz",
@@ -3880,7 +5500,6 @@
       "version": "4.0.3",
       "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
       "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "is-extglob": "^2.1.1"
@@ -3889,6 +5508,17 @@
         "node": ">=0.10.0"
       }
     },
+    "node_modules/is-interactive": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/is-interactive/-/is-interactive-2.0.0.tgz",
+      "integrity": "sha512-qP1vozQRI+BMOPcjFzrjXuQvdak2pHNUMZoeG2eRbiSqyvbEf/wQtEOTOX1guk6E3t36RkaqiSt8A/6YElNxLQ==",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
     "node_modules/is-map": {
       "version": "2.0.3",
       "resolved": "https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz",
@@ -3915,11 +5545,15 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/is-node-process": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/is-node-process/-/is-node-process-1.2.0.tgz",
+      "integrity": "sha512-Vg4o6/fqPxIjtxgUH5QLJhwZ7gW5diGCVlXpuUfELC62CuxM1iHcRe51f2W1FDy04Ai4KJkagKjx3XaqyfRKXw=="
+    },
     "node_modules/is-number": {
       "version": "7.0.0",
       "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
       "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=0.12.0"
@@ -3942,6 +5576,22 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/is-obj": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-3.0.0.tgz",
+      "integrity": "sha512-IlsXEHOjtKhpN8r/tRFj2nDyTmHvcfNeu/nrRIcXE17ROeatXchkojffa1SpdqW4cr/Fj6QkEf/Gn4zf6KKvEQ==",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/is-promise": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-4.0.0.tgz",
+      "integrity": "sha512-hvpoI6korhJMnej285dSg6nu1+e6uxs7zG3BYAm5byqDsgJNWwxzM6z6iZiAgQR4TJ30JmBTOwqZUw3WlyH3AQ=="
+    },
     "node_modules/is-regex": {
       "version": "1.2.1",
       "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.2.1.tgz",
@@ -3961,6 +5611,17 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/is-regexp": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/is-regexp/-/is-regexp-3.1.0.tgz",
+      "integrity": "sha512-rbku49cWloU5bSMI+zaRaXdQHXnthP6DZ/vLnfdSKyL4zUzuWnomtOEiZZOd+ioQ+avFo/qau3KPTc7Fjy1uPA==",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
     "node_modules/is-set": {
       "version": "2.0.3",
       "resolved": "https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz",
@@ -3990,6 +5651,17 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/is-stream": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-3.0.0.tgz",
+      "integrity": "sha512-LnQR4bZ9IADDRSkvpqMGvt/tEJWclzklNgSw48V5EAaAeDd6qGvN8ei6k5p0tvxSR171VmGyHuTiAOfxAbr8kA==",
+      "engines": {
+        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
     "node_modules/is-string": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.1.1.tgz",
@@ -4041,6 +5713,17 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/is-unicode-supported": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-1.3.0.tgz",
+      "integrity": "sha512-43r2mRvz+8JRIKnWJ+3j8JtjRKZ6GmjzfaE/qiBJnikNnYv/6bagRJ1kUhNk8R5EX/GkobD+r+sfxCPJsiKBLQ==",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
     "node_modules/is-weakmap": {
       "version": "2.0.2",
       "resolved": "https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz",
@@ -4098,7 +5781,6 @@
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
       "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
-      "dev": true,
       "license": "ISC"
     },
     "node_modules/iterator.prototype": {
@@ -4129,18 +5811,24 @@
         "jiti": "lib/jiti-cli.mjs"
       }
     },
+    "node_modules/jose": {
+      "version": "4.15.9",
+      "resolved": "https://registry.npmjs.org/jose/-/jose-4.15.9.tgz",
+      "integrity": "sha512-1vUQX+IdDMVPj4k8kOxgUqlcK518yluMuGZwqlr44FS1ppZB/5GWh4rZG89erpOBOJjU/OBsnCVFfapsRz6nEA==",
+      "funding": {
+        "url": "https://github.com/sponsors/panva"
+      }
+    },
     "node_modules/js-tokens": {
       "version": "4.0.0",
       "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
       "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/js-yaml": {
       "version": "4.1.0",
       "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
       "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "argparse": "^2.0.1"
@@ -4149,6 +5837,17 @@
         "js-yaml": "bin/js-yaml.js"
       }
     },
+    "node_modules/jsesc": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz",
+      "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
+      "bin": {
+        "jsesc": "bin/jsesc"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
     "node_modules/json-buffer": {
       "version": "3.0.1",
       "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
@@ -4156,11 +5855,15 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/json-parse-even-better-errors": {
+      "version": "2.3.1",
+      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
+      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w=="
+    },
     "node_modules/json-schema-traverse": {
       "version": "0.4.1",
       "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
       "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/json-stable-stringify-without-jsonify": {
@@ -4183,6 +5886,17 @@
         "json5": "lib/cli.js"
       }
     },
+    "node_modules/jsonfile": {
+      "version": "6.1.0",
+      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
+      "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
+      "dependencies": {
+        "universalify": "^2.0.0"
+      },
+      "optionalDependencies": {
+        "graceful-fs": "^4.1.6"
+      }
+    },
     "node_modules/jsx-ast-utils": {
       "version": "3.3.5",
       "resolved": "https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-3.3.5.tgz",
@@ -4209,6 +5923,14 @@
         "json-buffer": "3.0.1"
       }
     },
+    "node_modules/kleur": {
+      "version": "4.1.5",
+      "resolved": "https://registry.npmjs.org/kleur/-/kleur-4.1.5.tgz",
+      "integrity": "sha512-o+NO+8WrRiQEE4/7nwRJhN1HWpVmJm511pBHUxPLtp0BUISzlBplORYSmTclCnJvQq2tKu/sgl3xVpkc7ZWuQQ==",
+      "engines": {
+        "node": ">=6"
+      }
+    },
     "node_modules/language-subtag-registry": {
       "version": "0.3.23",
       "resolved": "https://registry.npmjs.org/language-subtag-registry/-/language-subtag-registry-0.3.23.tgz",
@@ -4482,6 +6204,11 @@
         "url": "https://opencollective.com/parcel"
       }
     },
+    "node_modules/lines-and-columns": {
+      "version": "1.2.4",
+      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
+      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg=="
+    },
     "node_modules/locate-path": {
       "version": "6.0.0",
       "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
@@ -4505,6 +6232,32 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/log-symbols": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/log-symbols/-/log-symbols-5.1.0.tgz",
+      "integrity": "sha512-l0x2DvrW294C9uDCoQe1VSU4gf529FkSZ6leBl4TiqZH/e+0R7hSfHQBNut2mNygDgHwvYHfFLn6Oxb3VWj2rA==",
+      "dependencies": {
+        "chalk": "^5.0.0",
+        "is-unicode-supported": "^1.1.0"
+      },
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/log-symbols/node_modules/chalk": {
+      "version": "5.4.1",
+      "resolved": "https://registry.npmjs.org/chalk/-/chalk-5.4.1.tgz",
+      "integrity": "sha512-zgVZuo2WcZgfUEmsn6eO3kINexW8RAE4maiQ8QNs8CtpPCSyMiYsULR3HQYkm3w8FIA3SberyMJMSldGsW+U3w==",
+      "engines": {
+        "node": "^12.17.0 || ^14.13 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/chalk?sponsor=1"
+      }
+    },
     "node_modules/loose-envify": {
       "version": "1.4.0",
       "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
@@ -4518,6 +6271,19 @@
         "loose-envify": "cli.js"
       }
     },
+    "node_modules/lru-cache": {
+      "version": "5.1.1",
+      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
+      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
+      "dependencies": {
+        "yallist": "^3.0.2"
+      }
+    },
+    "node_modules/lru-cache/node_modules/yallist": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
+      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g=="
+    },
     "node_modules/lucide-react": {
       "version": "0.525.0",
       "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.525.0.tgz",
@@ -4541,17 +6307,39 @@
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
       "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 0.4"
       }
     },
+    "node_modules/media-typer": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-1.1.0.tgz",
+      "integrity": "sha512-aisnrDP4GNe06UcKFnV5bfMNPBUw4jsLGaWwWfnH3v02GnBuXX2MCVn5RbrWo0j3pczUilYblq7fQ7Nw2t5XKw==",
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/merge-descriptors": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-2.0.0.tgz",
+      "integrity": "sha512-Snk314V5ayFLhp3fkUREub6WtjBfPdCPY1Ln8/8munuLuiYhsABgBVWsozAG+MWMbVEvcdcpbi9R7ww22l9Q3g==",
+      "engines": {
+        "node": ">=18"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/merge-stream": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
+      "integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w=="
+    },
     "node_modules/merge2": {
       "version": "1.4.1",
       "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
       "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 8"
@@ -4561,7 +6349,6 @@
       "version": "4.0.8",
       "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
       "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "braces": "^3.0.3",
@@ -4571,13 +6358,43 @@
         "node": ">=8.6"
       }
     },
-    "node_modules/minimatch": {
-      "version": "3.1.2",
-      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
-      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
-      "dev": true,
-      "license": "ISC",
-      "dependencies": {
+    "node_modules/mime-db": {
+      "version": "1.54.0",
+      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.54.0.tgz",
+      "integrity": "sha512-aU5EJuIN2WDemCcAp2vFBfp/m4EAhWJnUNSSw0ixs7/kXbd6Pg64EmwJkNdFhB8aWt1sH2CTXrLxo/iAGV3oPQ==",
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/mime-types": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-3.0.1.tgz",
+      "integrity": "sha512-xRc4oEhT6eaBpU1XF7AjpOFD+xQmXNB5OVKwp4tqCuBpHLS/ZbBDrc07mYTDqVMg6PfxUjjNp85O6Cd2Z/5HWA==",
+      "dependencies": {
+        "mime-db": "^1.54.0"
+      },
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/mimic-fn": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-4.0.0.tgz",
+      "integrity": "sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/minimatch": {
+      "version": "3.1.2",
+      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
+      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
         "brace-expansion": "^1.1.7"
       },
       "engines": {
@@ -4588,7 +6405,6 @@
       "version": "1.2.8",
       "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
       "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
-      "dev": true,
       "license": "MIT",
       "funding": {
         "url": "https://github.com/sponsors/ljharb"
@@ -4637,9 +6453,59 @@
       "version": "2.1.3",
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
       "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
-      "dev": true,
       "license": "MIT"
     },
+    "node_modules/msw": {
+      "version": "2.10.4",
+      "resolved": "https://registry.npmjs.org/msw/-/msw-2.10.4.tgz",
+      "integrity": "sha512-6R1or/qyele7q3RyPwNuvc0IxO8L8/Aim6Sz5ncXEgcWUNxSKE+udriTOWHtpMwmfkLYlacA2y7TIx4cL5lgHA==",
+      "hasInstallScript": true,
+      "dependencies": {
+        "@bundled-es-modules/cookie": "^2.0.1",
+        "@bundled-es-modules/statuses": "^1.0.1",
+        "@bundled-es-modules/tough-cookie": "^0.1.6",
+        "@inquirer/confirm": "^5.0.0",
+        "@mswjs/interceptors": "^0.39.1",
+        "@open-draft/deferred-promise": "^2.2.0",
+        "@open-draft/until": "^2.1.0",
+        "@types/cookie": "^0.6.0",
+        "@types/statuses": "^2.0.4",
+        "graphql": "^16.8.1",
+        "headers-polyfill": "^4.0.2",
+        "is-node-process": "^1.2.0",
+        "outvariant": "^1.4.3",
+        "path-to-regexp": "^6.3.0",
+        "picocolors": "^1.1.1",
+        "strict-event-emitter": "^0.5.1",
+        "type-fest": "^4.26.1",
+        "yargs": "^17.7.2"
+      },
+      "bin": {
+        "msw": "cli/index.js"
+      },
+      "engines": {
+        "node": ">=18"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/mswjs"
+      },
+      "peerDependencies": {
+        "typescript": ">= 4.8.x"
+      },
+      "peerDependenciesMeta": {
+        "typescript": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/mute-stream": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-2.0.0.tgz",
+      "integrity": "sha512-WWdIxpyjEn+FhQJQQv9aQAYlHoNVdzIzUySNV1gHUPDSdZJ3yZn7pAAbQcV7B56Mvu881q9FZV+0Vx2xC44VWA==",
+      "engines": {
+        "node": "^18.17.0 || >=20.5.0"
+      }
+    },
     "node_modules/nanoid": {
       "version": "3.3.11",
       "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
@@ -4681,6 +6547,14 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/negotiator": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-1.0.0.tgz",
+      "integrity": "sha512-8Ofs/AUQh8MaEcrlq5xOX0CQ9ypTF5dl78mjlMNfOK08fzpgTHQRQPBxcPlEtIw0yRpws+Zo/3r+5WRby7u3Gg==",
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
     "node_modules/next": {
       "version": "15.4.2",
       "resolved": "https://registry.npmjs.org/next/-/next-15.4.2.tgz",
@@ -4733,6 +6607,46 @@
         }
       }
     },
+    "node_modules/next-auth": {
+      "version": "4.24.11",
+      "resolved": "https://registry.npmjs.org/next-auth/-/next-auth-4.24.11.tgz",
+      "integrity": "sha512-pCFXzIDQX7xmHFs4KVH4luCjaCbuPRtZ9oBUjUhOk84mZ9WVPf94n87TxYI4rSRf9HmfHEF8Yep3JrYDVOo3Cw==",
+      "dependencies": {
+        "@babel/runtime": "^7.20.13",
+        "@panva/hkdf": "^1.0.2",
+        "cookie": "^0.7.0",
+        "jose": "^4.15.5",
+        "oauth": "^0.9.15",
+        "openid-client": "^5.4.0",
+        "preact": "^10.6.3",
+        "preact-render-to-string": "^5.1.19",
+        "uuid": "^8.3.2"
+      },
+      "peerDependencies": {
+        "@auth/core": "0.34.2",
+        "next": "^12.2.5 || ^13 || ^14 || ^15",
+        "nodemailer": "^6.6.5",
+        "react": "^17.0.2 || ^18 || ^19",
+        "react-dom": "^17.0.2 || ^18 || ^19"
+      },
+      "peerDependenciesMeta": {
+        "@auth/core": {
+          "optional": true
+        },
+        "nodemailer": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/next-themes": {
+      "version": "0.4.6",
+      "resolved": "https://registry.npmjs.org/next-themes/-/next-themes-0.4.6.tgz",
+      "integrity": "sha512-pZvgD5L0IEvX5/9GWyHMf3m8BKiVQwsCMHfoFosXtXBMnaS0ZnIJ9ST4b4NqLVKDEm8QBxoNNGNaBv2JNF6XNA==",
+      "peerDependencies": {
+        "react": "^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc"
+      }
+    },
     "node_modules/next/node_modules/postcss": {
       "version": "8.4.31",
       "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.31.tgz",
@@ -4761,21 +6675,98 @@
         "node": "^10 || ^12 || >=14"
       }
     },
+    "node_modules/node-domexception": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/node-domexception/-/node-domexception-1.0.0.tgz",
+      "integrity": "sha512-/jKZoMpw0F8GRwl4/eLROPA3cfcXtLApP0QzLmUT/HuPCZWyB7IY9ZrMeKw2O/nFIqPQB3PVM9aYm0F312AXDQ==",
+      "deprecated": "Use your platform's native DOMException instead",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/jimmywarting"
+        },
+        {
+          "type": "github",
+          "url": "https://paypal.me/jimmywarting"
+        }
+      ],
+      "engines": {
+        "node": ">=10.5.0"
+      }
+    },
+    "node_modules/node-fetch": {
+      "version": "3.3.2",
+      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-3.3.2.tgz",
+      "integrity": "sha512-dRB78srN/l6gqWulah9SrxeYnxeddIG30+GOqK/9OlLVyLg3HPnr6SqOWTWOXKRwC2eGYCkZ59NNuSgvSrpgOA==",
+      "dependencies": {
+        "data-uri-to-buffer": "^4.0.0",
+        "fetch-blob": "^3.1.4",
+        "formdata-polyfill": "^4.0.10"
+      },
+      "engines": {
+        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/node-fetch"
+      }
+    },
+    "node_modules/node-releases": {
+      "version": "2.0.19",
+      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
+      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw=="
+    },
+    "node_modules/npm-run-path": {
+      "version": "5.3.0",
+      "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-5.3.0.tgz",
+      "integrity": "sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==",
+      "dependencies": {
+        "path-key": "^4.0.0"
+      },
+      "engines": {
+        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/npm-run-path/node_modules/path-key": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/path-key/-/path-key-4.0.0.tgz",
+      "integrity": "sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/oauth": {
+      "version": "0.9.15",
+      "resolved": "https://registry.npmjs.org/oauth/-/oauth-0.9.15.tgz",
+      "integrity": "sha512-a5ERWK1kh38ExDEfoO6qUHJb32rd7aYmPHuyCu3Fta/cnICvYmgd2uhuKXvPD+PXB+gCEYYEaQdIRAjCOwAKNA=="
+    },
     "node_modules/object-assign": {
       "version": "4.1.1",
       "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
       "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=0.10.0"
       }
     },
+    "node_modules/object-hash": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-2.2.0.tgz",
+      "integrity": "sha512-gScRMn0bS5fH+IuwyIFgnh9zBdo4DV+6GhygmWM9HyNJSgS0hScp1f5vjtm7oIIOiT9trXrShAkLFSc2IqKNgw==",
+      "engines": {
+        "node": ">= 6"
+      }
+    },
     "node_modules/object-inspect": {
       "version": "1.13.4",
       "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
       "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 0.4"
@@ -4884,6 +6875,77 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/oidc-token-hash": {
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/oidc-token-hash/-/oidc-token-hash-5.1.0.tgz",
+      "integrity": "sha512-y0W+X7Ppo7oZX6eovsRkuzcSM40Bicg2JEJkDJ4irIt1wsYAP5MLSNv+QAogO8xivMffw/9OvV3um1pxXgt1uA==",
+      "engines": {
+        "node": "^10.13.0 || >=12.0.0"
+      }
+    },
+    "node_modules/on-finished": {
+      "version": "2.4.1",
+      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
+      "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
+      "dependencies": {
+        "ee-first": "1.1.1"
+      },
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/once": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
+      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
+      "dependencies": {
+        "wrappy": "1"
+      }
+    },
+    "node_modules/onetime": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/onetime/-/onetime-6.0.0.tgz",
+      "integrity": "sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==",
+      "dependencies": {
+        "mimic-fn": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/openid-client": {
+      "version": "5.7.1",
+      "resolved": "https://registry.npmjs.org/openid-client/-/openid-client-5.7.1.tgz",
+      "integrity": "sha512-jDBPgSVfTnkIh71Hg9pRvtJc6wTwqjRkN88+gCFtYWrlP4Yx2Dsrow8uPi3qLr/aeymPF3o2+dS+wOpglK04ew==",
+      "dependencies": {
+        "jose": "^4.15.9",
+        "lru-cache": "^6.0.0",
+        "object-hash": "^2.2.0",
+        "oidc-token-hash": "^5.0.3"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/panva"
+      }
+    },
+    "node_modules/openid-client/node_modules/lru-cache": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
+      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
+      "dependencies": {
+        "yallist": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/openid-client/node_modules/yallist": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
+      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="
+    },
     "node_modules/optionator": {
       "version": "0.9.4",
       "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
@@ -4902,6 +6964,44 @@
         "node": ">= 0.8.0"
       }
     },
+    "node_modules/ora": {
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/ora/-/ora-6.3.1.tgz",
+      "integrity": "sha512-ERAyNnZOfqM+Ao3RAvIXkYh5joP220yf59gVe2X/cI6SiCxIdi4c9HZKZD8R6q/RDXEje1THBju6iExiSsgJaQ==",
+      "dependencies": {
+        "chalk": "^5.0.0",
+        "cli-cursor": "^4.0.0",
+        "cli-spinners": "^2.6.1",
+        "is-interactive": "^2.0.0",
+        "is-unicode-supported": "^1.1.0",
+        "log-symbols": "^5.1.0",
+        "stdin-discarder": "^0.1.0",
+        "strip-ansi": "^7.0.1",
+        "wcwidth": "^1.0.1"
+      },
+      "engines": {
+        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/ora/node_modules/chalk": {
+      "version": "5.4.1",
+      "resolved": "https://registry.npmjs.org/chalk/-/chalk-5.4.1.tgz",
+      "integrity": "sha512-zgVZuo2WcZgfUEmsn6eO3kINexW8RAE4maiQ8QNs8CtpPCSyMiYsULR3HQYkm3w8FIA3SberyMJMSldGsW+U3w==",
+      "engines": {
+        "node": "^12.17.0 || ^14.13 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/chalk?sponsor=1"
+      }
+    },
+    "node_modules/outvariant": {
+      "version": "1.4.3",
+      "resolved": "https://registry.npmjs.org/outvariant/-/outvariant-1.4.3.tgz",
+      "integrity": "sha512-+Sl2UErvtsoajRDKCE5/dBz4DIvHXQQnAxtQTF04OJxY0+DyZXSo5P5Bb7XYWOh81syohlYL24hbDwxedPUJCA=="
+    },
     "node_modules/own-keys": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/own-keys/-/own-keys-1.0.1.tgz",
@@ -4956,7 +7056,6 @@
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
       "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "callsites": "^3.0.0"
@@ -4965,6 +7064,36 @@
         "node": ">=6"
       }
     },
+    "node_modules/parse-json": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz",
+      "integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
+      "dependencies": {
+        "@babel/code-frame": "^7.0.0",
+        "error-ex": "^1.3.1",
+        "json-parse-even-better-errors": "^2.3.0",
+        "lines-and-columns": "^1.1.6"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/parseurl": {
+      "version": "1.3.3",
+      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
+      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/path-browserify": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/path-browserify/-/path-browserify-1.0.1.tgz",
+      "integrity": "sha512-b7uo2UCUOYZcnF/3ID0lulOJi/bafxa1xPe7ZPsammBSpjSWQkjNxlt635YGS2MiR9GjvuXCtz2emr3jbsz98g=="
+    },
     "node_modules/path-exists": {
       "version": "4.0.0",
       "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
@@ -4979,7 +7108,6 @@
       "version": "3.1.1",
       "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
       "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=8"
@@ -4992,6 +7120,19 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/path-to-regexp": {
+      "version": "6.3.0",
+      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-6.3.0.tgz",
+      "integrity": "sha512-Yhpw4T9C6hPpgPeA28us07OJeqZ5EzQTkbfwuhsUg0c237RomFoETJgmp2sa3F/41gfLE6G5cqcYwznmeEeOlQ=="
+    },
+    "node_modules/path-type": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
+      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
+      "engines": {
+        "node": ">=8"
+      }
+    },
     "node_modules/picocolors": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
@@ -5002,7 +7143,6 @@
       "version": "2.3.1",
       "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
       "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=8.6"
@@ -5011,6 +7151,14 @@
         "url": "https://github.com/sponsors/jonschlinkert"
       }
     },
+    "node_modules/pkce-challenge": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/pkce-challenge/-/pkce-challenge-5.0.0.tgz",
+      "integrity": "sha512-ueGLflrrnvwB3xuo/uGob5pd5FN7l0MsLf0Z87o/UQmRtwjvfylfc9MurIxRAWywCYTgrvpXBcqjV4OfCYGCIQ==",
+      "engines": {
+        "node": ">=16.20.0"
+      }
+    },
     "node_modules/possible-typed-array-names": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.1.0.tgz",
@@ -5025,7 +7173,6 @@
       "version": "8.5.6",
       "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz",
       "integrity": "sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==",
-      "dev": true,
       "funding": [
         {
           "type": "opencollective",
@@ -5050,6 +7197,26 @@
         "node": "^10 || ^12 || >=14"
       }
     },
+    "node_modules/preact": {
+      "version": "10.26.9",
+      "resolved": "https://registry.npmjs.org/preact/-/preact-10.26.9.tgz",
+      "integrity": "sha512-SSjF9vcnF27mJK1XyFMNJzFd5u3pQiATFqoaDy03XuN00u4ziveVVEGt5RKJrDR8MHE/wJo9Nnad56RLzS2RMA==",
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/preact"
+      }
+    },
+    "node_modules/preact-render-to-string": {
+      "version": "5.2.6",
+      "resolved": "https://registry.npmjs.org/preact-render-to-string/-/preact-render-to-string-5.2.6.tgz",
+      "integrity": "sha512-JyhErpYOvBV1hEPwIxc/fHWXPfnEGdRKxc8gFdAZ7XV4tlzyzG847XAyEZqoDnynP88akM4eaHcSOzNcLWFguw==",
+      "dependencies": {
+        "pretty-format": "^3.8.0"
+      },
+      "peerDependencies": {
+        "preact": ">=10"
+      }
+    },
     "node_modules/prelude-ls": {
       "version": "1.2.1",
       "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
@@ -5060,6 +7227,31 @@
         "node": ">= 0.8.0"
       }
     },
+    "node_modules/pretty-format": {
+      "version": "3.8.0",
+      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-3.8.0.tgz",
+      "integrity": "sha512-WuxUnVtlWL1OfZFQFuqvnvs6MiAGk9UNsBostyBOB0Is9wb5uRESevA6rnl/rkksXaGX3GzZhPup5d6Vp1nFew=="
+    },
+    "node_modules/prompts": {
+      "version": "2.4.2",
+      "resolved": "https://registry.npmjs.org/prompts/-/prompts-2.4.2.tgz",
+      "integrity": "sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==",
+      "dependencies": {
+        "kleur": "^3.0.3",
+        "sisteransi": "^1.0.5"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
+    "node_modules/prompts/node_modules/kleur": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/kleur/-/kleur-3.0.3.tgz",
+      "integrity": "sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==",
+      "engines": {
+        "node": ">=6"
+      }
+    },
     "node_modules/prop-types": {
       "version": "15.8.1",
       "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
@@ -5072,21 +7264,66 @@
         "react-is": "^16.13.1"
       }
     },
+    "node_modules/proxy-addr": {
+      "version": "2.0.7",
+      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
+      "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
+      "dependencies": {
+        "forwarded": "0.2.0",
+        "ipaddr.js": "1.9.1"
+      },
+      "engines": {
+        "node": ">= 0.10"
+      }
+    },
+    "node_modules/proxy-from-env": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
+      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg=="
+    },
+    "node_modules/psl": {
+      "version": "1.15.0",
+      "resolved": "https://registry.npmjs.org/psl/-/psl-1.15.0.tgz",
+      "integrity": "sha512-JZd3gMVBAVQkSs6HdNZo9Sdo0LNcQeMNP3CozBJb3JYC/QUYZTnKxP+f8oWRX4rHP5EurWxqAHTSwUCjlNKa1w==",
+      "dependencies": {
+        "punycode": "^2.3.1"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/lupomontero"
+      }
+    },
     "node_modules/punycode": {
       "version": "2.3.1",
       "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
       "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=6"
       }
     },
+    "node_modules/qs": {
+      "version": "6.14.0",
+      "resolved": "https://registry.npmjs.org/qs/-/qs-6.14.0.tgz",
+      "integrity": "sha512-YWWTjgABSKcvs/nWBi9PycY/JiPJqOD4JA6o9Sej2AtvSGarXxKC3OQSk4pAarbdQlKAh5D4FCQkJNkW+GAn3w==",
+      "dependencies": {
+        "side-channel": "^1.1.0"
+      },
+      "engines": {
+        "node": ">=0.6"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/querystringify": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/querystringify/-/querystringify-2.2.0.tgz",
+      "integrity": "sha512-FIqgj2EUvTa7R50u0rGsyTftzjYmv/a3hO345bZNrqabNqjtgiDMgmo4mkUjd+nzU5oF3dClKqFIPUKybUyqoQ=="
+    },
     "node_modules/queue-microtask": {
       "version": "1.2.3",
       "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
       "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
-      "dev": true,
       "funding": [
         {
           "type": "github",
@@ -5103,6 +7340,28 @@
       ],
       "license": "MIT"
     },
+    "node_modules/range-parser": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
+      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/raw-body": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-3.0.0.tgz",
+      "integrity": "sha512-RmkhL8CAyCRPXCE28MMH0z2PNWQBNk2Q09ZdxM9IOOXwxwZbN+qbWaatPkdkWIKL2ZVDImrN/pK5HTRz2PcS4g==",
+      "dependencies": {
+        "bytes": "3.1.2",
+        "http-errors": "2.0.0",
+        "iconv-lite": "0.6.3",
+        "unpipe": "1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
     "node_modules/react": {
       "version": "19.1.0",
       "resolved": "https://registry.npmjs.org/react/-/react-19.1.0.tgz",
@@ -5124,6 +7383,29 @@
         "react": "^19.1.0"
       }
     },
+    "node_modules/react-hook-form": {
+      "version": "7.60.0",
+      "resolved": "https://registry.npmjs.org/react-hook-form/-/react-hook-form-7.60.0.tgz",
+      "integrity": "sha512-SBrYOvMbDB7cV8ZfNpaiLcgjH/a1c7aK0lK+aNigpf4xWLO8q+o4tcvVurv3c4EOyzn/3dCsYt4GKD42VvJ/+A==",
+      "engines": {
+        "node": ">=18.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/react-hook-form"
+      },
+      "peerDependencies": {
+        "react": "^16.8.0 || ^17 || ^18 || ^19"
+      }
+    },
+    "node_modules/react-icons": {
+      "version": "5.5.0",
+      "resolved": "https://registry.npmjs.org/react-icons/-/react-icons-5.5.0.tgz",
+      "integrity": "sha512-MEFcXdkP3dLo8uumGI5xN3lDFNsRtrjbOEKDLD7yv76v4wpnEq2Lt2qeHaQOr34I/wPN3s3+N08WkQ+CW37Xiw==",
+      "peerDependencies": {
+        "react": "*"
+      }
+    },
     "node_modules/react-is": {
       "version": "16.13.1",
       "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
@@ -5131,6 +7413,34 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/readable-stream": {
+      "version": "3.6.2",
+      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz",
+      "integrity": "sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==",
+      "dependencies": {
+        "inherits": "^2.0.3",
+        "string_decoder": "^1.1.1",
+        "util-deprecate": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
+    "node_modules/recast": {
+      "version": "0.23.11",
+      "resolved": "https://registry.npmjs.org/recast/-/recast-0.23.11.tgz",
+      "integrity": "sha512-YTUo+Flmw4ZXiWfQKGcwwc11KnoRAYgzAE2E7mXKCjSviTKShtxBsN6YUUBB2gtaBzKzeKunxhUwNHQuRryhWA==",
+      "dependencies": {
+        "ast-types": "^0.16.1",
+        "esprima": "~4.0.0",
+        "source-map": "~0.6.1",
+        "tiny-invariant": "^1.3.3",
+        "tslib": "^2.0.1"
+      },
+      "engines": {
+        "node": ">= 4"
+      }
+    },
     "node_modules/reflect.getprototypeof": {
       "version": "1.0.10",
       "resolved": "https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.10.tgz",
@@ -5175,6 +7485,19 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/require-directory": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
+      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/requires-port": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz",
+      "integrity": "sha512-KigOCHcocU3XODJxsu8i/j8T9tzT4adHiecwORRQ0ZZFcp7ahwXuRU1m+yuO90C5ZUyGeGfocHDI14M3L3yDAQ=="
+    },
     "node_modules/resolve": {
       "version": "1.22.10",
       "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
@@ -5200,7 +7523,6 @@
       "version": "4.0.0",
       "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
       "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=4"
@@ -5216,22 +7538,80 @@
         "url": "https://github.com/privatenumber/resolve-pkg-maps?sponsor=1"
       }
     },
+    "node_modules/restore-cursor": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-4.0.0.tgz",
+      "integrity": "sha512-I9fPXU9geO9bHOt9pHHOhOkYerIMsmVaWB0rA2AI9ERh/+x/i7MV5HKBNrg+ljO5eoPVgCcnFuRjJ9uH6I/3eg==",
+      "dependencies": {
+        "onetime": "^5.1.0",
+        "signal-exit": "^3.0.2"
+      },
+      "engines": {
+        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/restore-cursor/node_modules/mimic-fn": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz",
+      "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/restore-cursor/node_modules/onetime": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz",
+      "integrity": "sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==",
+      "dependencies": {
+        "mimic-fn": "^2.1.0"
+      },
+      "engines": {
+        "node": ">=6"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
     "node_modules/reusify": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
       "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "iojs": ">=1.0.0",
         "node": ">=0.10.0"
       }
     },
+    "node_modules/router": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/router/-/router-2.2.0.tgz",
+      "integrity": "sha512-nLTrUKm2UyiL7rlhapu/Zl45FwNgkZGaCpZbIHajDYgwlJCOzLSk+cIPAnsEqV955GjILJnKbdQC1nVPz+gAYQ==",
+      "dependencies": {
+        "debug": "^4.4.0",
+        "depd": "^2.0.0",
+        "is-promise": "^4.0.0",
+        "parseurl": "^1.3.3",
+        "path-to-regexp": "^8.0.0"
+      },
+      "engines": {
+        "node": ">= 18"
+      }
+    },
+    "node_modules/router/node_modules/path-to-regexp": {
+      "version": "8.2.0",
+      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-8.2.0.tgz",
+      "integrity": "sha512-TdrF7fW9Rphjq4RjrW0Kp2AW0Ahwu9sRGTkS6bvDi0SCwZlEZYmcfDbEsTz8RVk0EHIS/Vd1bv3JhG+1xZuAyQ==",
+      "engines": {
+        "node": ">=16"
+      }
+    },
     "node_modules/run-parallel": {
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
       "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
-      "dev": true,
       "funding": [
         {
           "type": "github",
@@ -5271,6 +7651,25 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/safe-buffer": {
+      "version": "5.2.1",
+      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
+      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ]
+    },
     "node_modules/safe-push-apply": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/safe-push-apply/-/safe-push-apply-1.0.0.tgz",
@@ -5306,6 +7705,11 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/safer-buffer": {
+      "version": "2.1.2",
+      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
+      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
+    },
     "node_modules/scheduler": {
       "version": "0.26.0",
       "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.26.0.tgz",
@@ -5325,6 +7729,41 @@
         "node": ">=10"
       }
     },
+    "node_modules/send": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/send/-/send-1.2.0.tgz",
+      "integrity": "sha512-uaW0WwXKpL9blXE2o0bRhoL2EGXIrZxQ2ZQ4mgcfoBxdFmQold+qWsD2jLrfZ0trjKL6vOw0j//eAwcALFjKSw==",
+      "dependencies": {
+        "debug": "^4.3.5",
+        "encodeurl": "^2.0.0",
+        "escape-html": "^1.0.3",
+        "etag": "^1.8.1",
+        "fresh": "^2.0.0",
+        "http-errors": "^2.0.0",
+        "mime-types": "^3.0.1",
+        "ms": "^2.1.3",
+        "on-finished": "^2.4.1",
+        "range-parser": "^1.2.1",
+        "statuses": "^2.0.1"
+      },
+      "engines": {
+        "node": ">= 18"
+      }
+    },
+    "node_modules/serve-static": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-2.2.0.tgz",
+      "integrity": "sha512-61g9pCh0Vnh7IutZjtLGGpTA355+OPn2TyDv/6ivP2h/AdAVX9azsoxmg2/M6nZeQZNYBEwIcsne1mJd9oQItQ==",
+      "dependencies": {
+        "encodeurl": "^2.0.0",
+        "escape-html": "^1.0.3",
+        "parseurl": "^1.3.3",
+        "send": "^1.2.0"
+      },
+      "engines": {
+        "node": ">= 18"
+      }
+    },
     "node_modules/set-function-length": {
       "version": "1.2.2",
       "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
@@ -5356,22 +7795,112 @@
         "has-property-descriptors": "^1.0.2"
       },
       "engines": {
-        "node": ">= 0.4"
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/set-proto": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/set-proto/-/set-proto-1.0.0.tgz",
+      "integrity": "sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "dunder-proto": "^1.0.1",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/setprototypeof": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
+      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
+    },
+    "node_modules/shadcn": {
+      "version": "2.9.2",
+      "resolved": "https://registry.npmjs.org/shadcn/-/shadcn-2.9.2.tgz",
+      "integrity": "sha512-Ssat5Qlosk3XQckSmHEUZ1WDiXXxZbeXEl2HI4QKlBwmboMHYFaVhOMl3ObRVN578C/d369AsKQcgLWF8F5hCA==",
+      "dependencies": {
+        "@antfu/ni": "^23.2.0",
+        "@babel/core": "^7.22.1",
+        "@babel/parser": "^7.22.6",
+        "@babel/plugin-transform-typescript": "^7.22.5",
+        "@modelcontextprotocol/sdk": "^1.10.2",
+        "commander": "^10.0.0",
+        "cosmiconfig": "^8.1.3",
+        "deepmerge": "^4.3.1",
+        "diff": "^5.1.0",
+        "execa": "^7.0.0",
+        "fast-glob": "^3.3.2",
+        "fs-extra": "^11.1.0",
+        "https-proxy-agent": "^6.2.0",
+        "kleur": "^4.1.5",
+        "msw": "^2.7.1",
+        "node-fetch": "^3.3.0",
+        "ora": "^6.1.2",
+        "postcss": "^8.4.24",
+        "prompts": "^2.4.2",
+        "recast": "^0.23.2",
+        "stringify-object": "^5.0.0",
+        "ts-morph": "^18.0.0",
+        "tsconfig-paths": "^4.2.0",
+        "zod": "^3.20.2",
+        "zod-to-json-schema": "^3.24.5"
+      },
+      "bin": {
+        "shadcn": "dist/index.js"
+      }
+    },
+    "node_modules/shadcn/node_modules/fast-glob": {
+      "version": "3.3.3",
+      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
+      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
+      "dependencies": {
+        "@nodelib/fs.stat": "^2.0.2",
+        "@nodelib/fs.walk": "^1.2.3",
+        "glob-parent": "^5.1.2",
+        "merge2": "^1.3.0",
+        "micromatch": "^4.0.8"
+      },
+      "engines": {
+        "node": ">=8.6.0"
+      }
+    },
+    "node_modules/shadcn/node_modules/glob-parent": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
+      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
+      "dependencies": {
+        "is-glob": "^4.0.1"
+      },
+      "engines": {
+        "node": ">= 6"
       }
     },
-    "node_modules/set-proto": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/set-proto/-/set-proto-1.0.0.tgz",
-      "integrity": "sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==",
-      "dev": true,
-      "license": "MIT",
+    "node_modules/shadcn/node_modules/json5": {
+      "version": "2.2.3",
+      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
+      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
+      "bin": {
+        "json5": "lib/cli.js"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/shadcn/node_modules/tsconfig-paths": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/tsconfig-paths/-/tsconfig-paths-4.2.0.tgz",
+      "integrity": "sha512-NoZ4roiN7LnbKn9QqE1amc9DJfzvZXxF4xDavcOWt1BPkdx+m+0gJuPM+S0vCe7zTJMYUP0R8pO2XMr+Y8oLIg==",
       "dependencies": {
-        "dunder-proto": "^1.0.1",
-        "es-errors": "^1.3.0",
-        "es-object-atoms": "^1.0.0"
+        "json5": "^2.2.2",
+        "minimist": "^1.2.6",
+        "strip-bom": "^3.0.0"
       },
       "engines": {
-        "node": ">= 0.4"
+        "node": ">=6"
       }
     },
     "node_modules/sharp": {
@@ -5421,7 +7950,6 @@
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
       "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "shebang-regex": "^3.0.0"
@@ -5434,7 +7962,6 @@
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
       "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=8"
@@ -5444,7 +7971,6 @@
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
       "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "es-errors": "^1.3.0",
@@ -5464,7 +7990,6 @@
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
       "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "es-errors": "^1.3.0",
@@ -5481,7 +8006,6 @@
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
       "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "call-bound": "^1.0.2",
@@ -5500,7 +8024,6 @@
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
       "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "call-bound": "^1.0.2",
@@ -5516,6 +8039,11 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/signal-exit": {
+      "version": "3.0.7",
+      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
+      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ=="
+    },
     "node_modules/simple-swizzle": {
       "version": "0.2.2",
       "resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",
@@ -5526,6 +8054,28 @@
         "is-arrayish": "^0.3.1"
       }
     },
+    "node_modules/sisteransi": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/sisteransi/-/sisteransi-1.0.5.tgz",
+      "integrity": "sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg=="
+    },
+    "node_modules/sonner": {
+      "version": "2.0.6",
+      "resolved": "https://registry.npmjs.org/sonner/-/sonner-2.0.6.tgz",
+      "integrity": "sha512-yHFhk8T/DK3YxjFQXIrcHT1rGEeTLliVzWbO0xN8GberVun2RiBnxAjXAYpZrqwEVHBG9asI/Li8TAAhN9m59Q==",
+      "peerDependencies": {
+        "react": "^18.0.0 || ^19.0.0 || ^19.0.0-rc",
+        "react-dom": "^18.0.0 || ^19.0.0 || ^19.0.0-rc"
+      }
+    },
+    "node_modules/source-map": {
+      "version": "0.6.1",
+      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
     "node_modules/source-map-js": {
       "version": "1.2.1",
       "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
@@ -5542,6 +8092,28 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/statuses": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.2.tgz",
+      "integrity": "sha512-DvEy55V3DB7uknRo+4iOGT5fP1slR8wQohVdknigZPMpMstaKJQWhwiYBACJE3Ul2pTnATihhBYnRhZQHGBiRw==",
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/stdin-discarder": {
+      "version": "0.1.0",
+      "resolved": "https://registry.npmjs.org/stdin-discarder/-/stdin-discarder-0.1.0.tgz",
+      "integrity": "sha512-xhV7w8S+bUwlPTb4bAOUQhv8/cSS5offJuX8GQGq32ONF0ZtDWKfkdomM3HMRA+LhX6um/FZ0COqlwsjD53LeQ==",
+      "dependencies": {
+        "bl": "^5.0.0"
+      },
+      "engines": {
+        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
     "node_modules/stop-iteration-iterator": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/stop-iteration-iterator/-/stop-iteration-iterator-1.1.0.tgz",
@@ -5556,6 +8128,56 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/strict-event-emitter": {
+      "version": "0.5.1",
+      "resolved": "https://registry.npmjs.org/strict-event-emitter/-/strict-event-emitter-0.5.1.tgz",
+      "integrity": "sha512-vMgjE/GGEPEFnhFub6pa4FmJBRBVOLpIII2hvCZ8Kzb7K0hlHo7mQv6xYrBvCL2LtAIBwFUK8wvuJgTVSQ5MFQ=="
+    },
+    "node_modules/string_decoder": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
+      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
+      "dependencies": {
+        "safe-buffer": "~5.2.0"
+      }
+    },
+    "node_modules/string-width": {
+      "version": "4.2.3",
+      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
+      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
+      "dependencies": {
+        "emoji-regex": "^8.0.0",
+        "is-fullwidth-code-point": "^3.0.0",
+        "strip-ansi": "^6.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/string-width/node_modules/ansi-regex": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
+      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/string-width/node_modules/emoji-regex": {
+      "version": "8.0.0",
+      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
+      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
+    },
+    "node_modules/string-width/node_modules/strip-ansi": {
+      "version": "6.0.1",
+      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
+      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
+      "dependencies": {
+        "ansi-regex": "^5.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
     "node_modules/string.prototype.includes": {
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/string.prototype.includes/-/string.prototype.includes-2.0.1.tgz",
@@ -5669,16 +8291,56 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/stringify-object": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/stringify-object/-/stringify-object-5.0.0.tgz",
+      "integrity": "sha512-zaJYxz2FtcMb4f+g60KsRNFOpVMUyuJgA51Zi5Z1DOTC3S59+OQiVOzE9GZt0x72uBGWKsQIuBKeF9iusmKFsg==",
+      "dependencies": {
+        "get-own-enumerable-keys": "^1.0.0",
+        "is-obj": "^3.0.0",
+        "is-regexp": "^3.1.0"
+      },
+      "engines": {
+        "node": ">=14.16"
+      },
+      "funding": {
+        "url": "https://github.com/yeoman/stringify-object?sponsor=1"
+      }
+    },
+    "node_modules/strip-ansi": {
+      "version": "7.1.0",
+      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
+      "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
+      "dependencies": {
+        "ansi-regex": "^6.0.1"
+      },
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
+      }
+    },
     "node_modules/strip-bom": {
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
       "integrity": "sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=4"
       }
     },
+    "node_modules/strip-final-newline": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-3.0.0.tgz",
+      "integrity": "sha512-dOESqjYr96iWYylGObzd39EuNTa5VJxyvVAEm5Jnh7KGo75V43Hk1odPQkNDyXNmUR6k+gEiDVXnjB8HJ3crXw==",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
     "node_modules/strip-json-comments": {
       "version": "3.1.1",
       "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
@@ -5786,6 +8448,11 @@
         "node": ">=18"
       }
     },
+    "node_modules/tiny-invariant": {
+      "version": "1.3.3",
+      "resolved": "https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.3.3.tgz",
+      "integrity": "sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg=="
+    },
     "node_modules/tinyglobby": {
       "version": "0.2.14",
       "resolved": "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.14.tgz",
@@ -5835,7 +8502,6 @@
       "version": "5.0.1",
       "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
       "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "is-number": "^7.0.0"
@@ -5844,6 +8510,36 @@
         "node": ">=8.0"
       }
     },
+    "node_modules/toidentifier": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
+      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
+      "engines": {
+        "node": ">=0.6"
+      }
+    },
+    "node_modules/tough-cookie": {
+      "version": "4.1.4",
+      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-4.1.4.tgz",
+      "integrity": "sha512-Loo5UUvLD9ScZ6jh8beX1T6sO1w2/MpCRpEP7V280GKMVUQ0Jzar2U3UJPsrdbziLEMMhu3Ujnq//rhiFuIeag==",
+      "dependencies": {
+        "psl": "^1.1.33",
+        "punycode": "^2.1.1",
+        "universalify": "^0.2.0",
+        "url-parse": "^1.5.3"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/tough-cookie/node_modules/universalify": {
+      "version": "0.2.0",
+      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.2.0.tgz",
+      "integrity": "sha512-CJ1QgKmNg3CwvAv/kOFmtnEN05f0D/cn9QntgNOQlQF9dgvVTHj3t+8JPdjqawCHk7V/KA+fbUqzZ9XWhcqPUg==",
+      "engines": {
+        "node": ">= 4.0.0"
+      }
+    },
     "node_modules/ts-api-utils": {
       "version": "2.1.0",
       "resolved": "https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-2.1.0.tgz",
@@ -5857,6 +8553,15 @@
         "typescript": ">=4.8.4"
       }
     },
+    "node_modules/ts-morph": {
+      "version": "18.0.0",
+      "resolved": "https://registry.npmjs.org/ts-morph/-/ts-morph-18.0.0.tgz",
+      "integrity": "sha512-Kg5u0mk19PIIe4islUI/HWRvm9bC1lHejK4S0oh1zaZ77TMZAEmQC0sHQYiu2RgCQFZKXz1fMVi/7nOOeirznA==",
+      "dependencies": {
+        "@ts-morph/common": "~0.19.0",
+        "code-block-writer": "^12.0.0"
+      }
+    },
     "node_modules/tsconfig-paths": {
       "version": "3.15.0",
       "resolved": "https://registry.npmjs.org/tsconfig-paths/-/tsconfig-paths-3.15.0.tgz",
@@ -5899,6 +8604,30 @@
         "node": ">= 0.8.0"
       }
     },
+    "node_modules/type-fest": {
+      "version": "4.41.0",
+      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-4.41.0.tgz",
+      "integrity": "sha512-TeTSQ6H5YHvpqVwBRcnLDCBnDOHWYu7IvGbHT6N8AOymcr9PJGjc1GTtiWZTYg0NCgYwvnYWEkVChQAr9bjfwA==",
+      "engines": {
+        "node": ">=16"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/type-is": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/type-is/-/type-is-2.0.1.tgz",
+      "integrity": "sha512-OZs6gsjF4vMp32qrCbiVSkrFmXtG/AZhY3t0iAMrMBiAZyV9oALtXO8hsrHbMXF9x6L3grlFuwW2oAz7cav+Gw==",
+      "dependencies": {
+        "content-type": "^1.0.5",
+        "media-typer": "^1.1.0",
+        "mime-types": "^3.0.0"
+      },
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
     "node_modules/typed-array-buffer": {
       "version": "1.0.3",
       "resolved": "https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.3.tgz",
@@ -5981,7 +8710,7 @@
       "version": "5.8.3",
       "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz",
       "integrity": "sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==",
-      "dev": true,
+      "devOptional": true,
       "license": "Apache-2.0",
       "bin": {
         "tsc": "bin/tsc",
@@ -6014,9 +8743,25 @@
       "version": "6.21.0",
       "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz",
       "integrity": "sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==",
-      "dev": true,
+      "devOptional": true,
       "license": "MIT"
     },
+    "node_modules/universalify": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.1.tgz",
+      "integrity": "sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==",
+      "engines": {
+        "node": ">= 10.0.0"
+      }
+    },
+    "node_modules/unpipe": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
+      "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
     "node_modules/unrs-resolver": {
       "version": "1.11.1",
       "resolved": "https://registry.npmjs.org/unrs-resolver/-/unrs-resolver-1.11.1.tgz",
@@ -6052,21 +8797,102 @@
         "@unrs/resolver-binding-win32-x64-msvc": "1.11.1"
       }
     },
+    "node_modules/update-browserslist-db": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
+      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/browserslist"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/browserslist"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "dependencies": {
+        "escalade": "^3.2.0",
+        "picocolors": "^1.1.1"
+      },
+      "bin": {
+        "update-browserslist-db": "cli.js"
+      },
+      "peerDependencies": {
+        "browserslist": ">= 4.21.0"
+      }
+    },
     "node_modules/uri-js": {
       "version": "4.4.1",
       "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
       "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
-      "dev": true,
       "license": "BSD-2-Clause",
       "dependencies": {
         "punycode": "^2.1.0"
       }
     },
+    "node_modules/url-parse": {
+      "version": "1.5.10",
+      "resolved": "https://registry.npmjs.org/url-parse/-/url-parse-1.5.10.tgz",
+      "integrity": "sha512-WypcfiRhfeUP9vvF0j6rw0J3hrWrw6iZv3+22h6iRMJ/8z1Tj6XfLP4DsUix5MhMPnXpiHDoKyoZ/bdCkwBCiQ==",
+      "dependencies": {
+        "querystringify": "^2.1.1",
+        "requires-port": "^1.0.0"
+      }
+    },
+    "node_modules/util-deprecate": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
+      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw=="
+    },
+    "node_modules/uuid": {
+      "version": "8.3.2",
+      "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
+      "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==",
+      "bin": {
+        "uuid": "dist/bin/uuid"
+      }
+    },
+    "node_modules/validator": {
+      "version": "13.15.15",
+      "resolved": "https://registry.npmjs.org/validator/-/validator-13.15.15.tgz",
+      "integrity": "sha512-BgWVbCI72aIQy937xbawcs+hrVaN/CZ2UwutgaJ36hGqRrLNM+f5LUT/YPRbo8IV/ASeFzXszezV+y2+rq3l8A==",
+      "engines": {
+        "node": ">= 0.10"
+      }
+    },
+    "node_modules/vary": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
+      "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/wcwidth": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/wcwidth/-/wcwidth-1.0.1.tgz",
+      "integrity": "sha512-XHPEwS0q6TaxcvG85+8EYkbiCux2XtWG2mkc47Ng2A77BQu9+DqIOJldST4HgPkuea7dvKSj5VgX3P1d4rW8Tg==",
+      "dependencies": {
+        "defaults": "^1.0.3"
+      }
+    },
+    "node_modules/web-streams-polyfill": {
+      "version": "3.3.3",
+      "resolved": "https://registry.npmjs.org/web-streams-polyfill/-/web-streams-polyfill-3.3.3.tgz",
+      "integrity": "sha512-d2JWLCivmZYTSIoge9MsgFCZrt571BikcWGYkjC1khllbTeDlGqZ2D8vD8E/lJa8WGWbb7Plm8/XJYV7IJHZZw==",
+      "engines": {
+        "node": ">= 8"
+      }
+    },
     "node_modules/which": {
       "version": "2.0.2",
       "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
       "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
-      "dev": true,
       "license": "ISC",
       "dependencies": {
         "isexe": "^2.0.0"
@@ -6177,6 +9003,51 @@
         "node": ">=0.10.0"
       }
     },
+    "node_modules/wrap-ansi": {
+      "version": "6.2.0",
+      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
+      "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
+      "dependencies": {
+        "ansi-styles": "^4.0.0",
+        "string-width": "^4.1.0",
+        "strip-ansi": "^6.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/wrap-ansi/node_modules/ansi-regex": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
+      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/wrap-ansi/node_modules/strip-ansi": {
+      "version": "6.0.1",
+      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
+      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
+      "dependencies": {
+        "ansi-regex": "^5.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/wrappy": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
+      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ=="
+    },
+    "node_modules/y18n": {
+      "version": "5.0.8",
+      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
+      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
+      "engines": {
+        "node": ">=10"
+      }
+    },
     "node_modules/yallist": {
       "version": "5.0.0",
       "resolved": "https://registry.npmjs.org/yallist/-/yallist-5.0.0.tgz",
@@ -6187,6 +9058,31 @@
         "node": ">=18"
       }
     },
+    "node_modules/yargs": {
+      "version": "17.7.2",
+      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz",
+      "integrity": "sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==",
+      "dependencies": {
+        "cliui": "^8.0.1",
+        "escalade": "^3.1.1",
+        "get-caller-file": "^2.0.5",
+        "require-directory": "^2.1.1",
+        "string-width": "^4.2.3",
+        "y18n": "^5.0.5",
+        "yargs-parser": "^21.1.1"
+      },
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/yargs-parser": {
+      "version": "21.1.1",
+      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
+      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
+      "engines": {
+        "node": ">=12"
+      }
+    },
     "node_modules/yocto-queue": {
       "version": "0.1.0",
       "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
@@ -6199,6 +9095,61 @@
       "funding": {
         "url": "https://github.com/sponsors/sindresorhus"
       }
+    },
+    "node_modules/yoctocolors-cjs": {
+      "version": "2.1.2",
+      "resolved": "https://registry.npmjs.org/yoctocolors-cjs/-/yoctocolors-cjs-2.1.2.tgz",
+      "integrity": "sha512-cYVsTjKl8b+FrnidjibDWskAv7UKOfcwaVZdp/it9n1s9fU3IkgDbhdIRKCW4JDsAlECJY0ytoVPT3sK6kideA==",
+      "engines": {
+        "node": ">=18"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/zod": {
+      "version": "3.25.76",
+      "resolved": "https://registry.npmjs.org/zod/-/zod-3.25.76.tgz",
+      "integrity": "sha512-gzUt/qt81nXsFGKIFcC3YnfEAx5NkunCfnDlvuBSSFS02bcXu4Lmea0AFIUwbLWxWPx3d9p8S5QoaujKcNQxcQ==",
+      "funding": {
+        "url": "https://github.com/sponsors/colinhacks"
+      }
+    },
+    "node_modules/zod-to-json-schema": {
+      "version": "3.24.6",
+      "resolved": "https://registry.npmjs.org/zod-to-json-schema/-/zod-to-json-schema-3.24.6.tgz",
+      "integrity": "sha512-h/z3PKvcTcTetyjl1fkj79MHNEjm+HpD6NXheWjzOekY7kV+lwDYnHw+ivHkijnCSMz1yJaWBD9vu/Fcmk+vEg==",
+      "peerDependencies": {
+        "zod": "^3.24.1"
+      }
+    },
+    "node_modules/zustand": {
+      "version": "5.0.6",
+      "resolved": "https://registry.npmjs.org/zustand/-/zustand-5.0.6.tgz",
+      "integrity": "sha512-ihAqNeUVhe0MAD+X8M5UzqyZ9k3FFZLBTtqo6JLPwV53cbRB/mJwBI0PxcIgqhBBHlEs8G45OTDTMq3gNcLq3A==",
+      "engines": {
+        "node": ">=12.20.0"
+      },
+      "peerDependencies": {
+        "@types/react": ">=18.0.0",
+        "immer": ">=9.0.6",
+        "react": ">=18.0.0",
+        "use-sync-external-store": ">=1.2.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "immer": {
+          "optional": true
+        },
+        "react": {
+          "optional": true
+        },
+        "use-sync-external-store": {
+          "optional": true
+        }
+      }
     }
   }
 }
diff --git a/package.json b/package.json
index ff1e509..efd5432 100644
--- a/package.json
+++ b/package.json
@@ -9,13 +9,29 @@
     "lint": "next lint"
   },
   "dependencies": {
+    "@hookform/resolvers": "^5.1.1",
+    "@radix-ui/react-label": "^2.1.7",
+    "@radix-ui/react-slot": "^1.2.3",
+    "@tanstack/react-query": "^5.83.0",
+    "add": "^2.0.6",
+    "axios": "^1.10.0",
     "class-variance-authority": "^0.7.1",
     "clsx": "^2.1.1",
+    "form": "^0.2.5",
+    "input-otp": "^1.4.2",
     "lucide-react": "^0.525.0",
     "next": "15.4.2",
+    "next-auth": "^4.24.11",
+    "next-themes": "^0.4.6",
     "react": "19.1.0",
     "react-dom": "19.1.0",
-    "tailwind-merge": "^3.3.1"
+    "react-hook-form": "^7.60.0",
+    "react-icons": "^5.5.0",
+    "shadcn": "^2.9.2",
+    "sonner": "^2.0.6",
+    "tailwind-merge": "^3.3.1",
+    "zod": "^3.25.76",
+    "zustand": "^5.0.6"
   },
   "devDependencies": {
     "@eslint/eslintrc": "^3",
@@ -23,6 +39,7 @@
     "@types/node": "^20",
     "@types/react": "^19",
     "@types/react-dom": "^19",
+    "@types/react-no-ssr": "^1.1.8",
     "eslint": "^9",
     "eslint-config-next": "15.4.2",
     "tailwindcss": "^4",
diff --git a/public/telegram.svg b/public/telegram.svg
new file mode 100644
index 0000000..90cf650
--- /dev/null
+++ b/public/telegram.svg
@@ -0,0 +1 @@
+<svg fill="none" height="50" width="50" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 500 500"><path d="M250 500c138.071 0 250-111.929 250-250S388.071 0 250 0 0 111.929 0 250s111.929 250 250 250z" fill="#34aadf"/><path d="M104.047 247.832s125-51.3 168.352-69.364c16.619-7.225 72.977-30.347 72.977-30.347s26.012-10.115 23.844 14.451c-.723 10.116-6.503 45.52-12.283 83.815-8.671 54.191-18.064 113.439-18.064 113.439s-1.445 16.619-13.728 19.509-32.515-10.115-36.127-13.006c-2.891-2.167-54.191-34.682-72.977-50.578-5.058-4.335-10.838-13.005.722-23.121 26.012-23.844 57.081-53.468 75.867-72.254 8.671-8.671 17.341-28.902-18.786-4.336-51.3 35.405-101.878 68.642-101.878 68.642s-11.561 7.225-33.237.722c-21.677-6.502-46.966-15.173-46.966-15.173s-17.34-10.838 12.284-22.399z" fill="#fff"/></svg>
\ No newline at end of file
diff --git a/tailwind.config.ts b/tailwind.config.ts
new file mode 100644
index 0000000..03f30d0
--- /dev/null
+++ b/tailwind.config.ts
@@ -0,0 +1,105 @@
+import type { Config } from 'tailwindcss'
+import { withUt } from 'uploadthing/tw'
+
+const config = {
+	darkMode: ['class'],
+	content: ['./pages/**/*.{js,ts,jsx,tsx,mdx}', './components/**/*.{js,ts,jsx,tsx,mdx}', './app/**/*.{js,ts,jsx,tsx,mdx}'],
+	theme: {
+		extend: {
+			container: {
+				center: true,
+				padding: '1rem',
+				screens: {
+					sm: '100%',
+					md: '100%',
+					lg: '1024px',
+					xl: '1280px',
+				},
+			},
+			colors: {
+				background: 'hsl(var(--background))',
+				foreground: 'hsl(var(--foreground))',
+				card: {
+					DEFAULT: 'hsl(var(--card))',
+					foreground: 'hsl(var(--card-foreground))',
+				},
+				popover: {
+					DEFAULT: 'hsl(var(--popover))',
+					foreground: 'hsl(var(--popover-foreground))',
+				},
+				primary: {
+					DEFAULT: 'hsl(var(--primary))',
+					foreground: 'hsl(var(--primary-foreground))',
+				},
+				secondary: {
+					DEFAULT: 'hsl(var(--secondary))',
+					foreground: 'hsl(var(--secondary-foreground))',
+				},
+				muted: {
+					DEFAULT: 'hsl(var(--muted))',
+					foreground: 'hsl(var(--muted-foreground))',
+				},
+				accent: {
+					DEFAULT: 'hsl(var(--accent))',
+					foreground: 'hsl(var(--accent-foreground))',
+				},
+				destructive: {
+					DEFAULT: 'hsl(var(--destructive))',
+					foreground: 'hsl(var(--destructive-foreground))',
+				},
+				border: 'hsl(var(--border))',
+				input: 'hsl(var(--input))',
+				ring: 'hsl(var(--ring))',
+				chart: {
+					'1': 'hsl(var(--chart-1))',
+					'2': 'hsl(var(--chart-2))',
+					'3': 'hsl(var(--chart-3))',
+					'4': 'hsl(var(--chart-4))',
+					'5': 'hsl(var(--chart-5))',
+				},
+			},
+			fontFamily: {
+				spaceGrotesk: ['var(--font-spaceGrotesk)', 'sans-serif'],
+			},
+			borderRadius: {
+				lg: 'var(--radius)',
+				md: 'calc(var(--radius) - 2px)',
+				sm: 'calc(var(--radius) - 4px)',
+			},
+			keyframes: {
+				'caret-blink': {
+					'0%,70%,100%': {
+						opacity: '1',
+					},
+					'20%,50%': {
+						opacity: '0',
+					},
+				},
+				'accordion-down': {
+					from: {
+						height: '0',
+					},
+					to: {
+						height: 'var(--radix-accordion-content-height)',
+					},
+				},
+				'accordion-up': {
+					from: {
+						height: 'var(--radix-accordion-content-height)',
+					},
+					to: {
+						height: '0',
+					},
+				},
+			},
+			animation: {
+				'caret-blink': 'caret-blink 1.25s ease-out infinite',
+				'accordion-down': 'accordion-down 0.2s ease-out',
+				'accordion-up': 'accordion-up 0.2s ease-out',
+			},
+		},
+	},
+	plugins: [require('tailwindcss-animate')],
+} satisfies Config
+
+export default withUt(config)
\ No newline at end of file
diff --git a/tsconfig.json b/tsconfig.json
index d8b9323..35ade52 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -22,6 +22,6 @@
       "@/*": ["./*"]
     }
   },
-  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
+  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts", "hooks/use-toast.ts"],
   "exclude": ["node_modules"]
 }
diff --git a/types/index.ts b/types/index.ts
new file mode 100644
index 0000000..d6dc53f
--- /dev/null
+++ b/types/index.ts
@@ -0,0 +1,34 @@
+export interface ChildProps {
+	children: React.ReactNode
+}
+
+export interface IError extends Error {
+	response: { data: { message: string } }
+}
+
+export interface IUser {
+	email: string
+	_id: string
+	avatar: string
+	firstName: string
+	lastName: string
+	bio: string
+	isVerified: boolean
+	muted: boolean
+	notificationSound: string
+	sendingSound: string
+	contacts: IUser[]
+	lastMessage: IMessage | null
+}
+
+export interface IMessage {
+	_id: string
+	text: string
+	image: string
+	reaction: string
+	sender: IUser
+	receiver: IUser
+	createdAt: string
+	updatedAt: string
+	status: string
+}
\ No newline at end of file
-- 
2.41.0


From 5107b13ee0b4a5976d2b540c07ca814fb889c728 Mon Sep 17 00:00:00 2001
From: oscar-bek <salamov.behzod@gmail.com>
Date: Tue, 29 Jul 2025 17:33:56 +0900
Subject: [PATCH 04/16] feat: creating ui of auth

---
 app/auth/_components/social.tsx           |  16 +-
 app/auth/_components/verify.tsx           |  29 +--
 app/auth/page.tsx                         |  12 +-
 app/layout.tsx                            |  21 +--
 app/page.tsx                              |   8 +-
 components/providers/query.provider.tsx   |  25 ---
 components/providers/session.provider.tsx |  11 --
 components/providers/theme.provider.tsx   |  18 --
 components/shared/mode-toggle.tsx         |  21 ---
 hooks/use-auth.ts                         |  20 ---
 hooks/use-toast.ts                        | 204 ----------------------
 http/axios.ts                             |   8 -
 lib/auth-options.ts                       |  49 ------
 lib/utils.ts                              |   2 +-
 lib/validation.ts                         |  26 +--
 next.config.ts                            |   2 +-
 package-lock.json                         |  33 ++++
 package.json                              |   1 +
 postcss.config.mjs                        |   7 +-
 tailwind.config.ts                        |  33 +---
 tsconfig.json                             |  52 +++---
 types/index.ts                            |  34 ----
 22 files changed, 91 insertions(+), 541 deletions(-)
 delete mode 100644 components/providers/query.provider.tsx
 delete mode 100644 components/providers/session.provider.tsx
 delete mode 100644 components/providers/theme.provider.tsx
 delete mode 100644 components/shared/mode-toggle.tsx
 delete mode 100644 hooks/use-auth.ts
 delete mode 100644 hooks/use-toast.ts
 delete mode 100644 http/axios.ts
 delete mode 100644 lib/auth-options.ts
 delete mode 100644 types/index.ts

diff --git a/app/auth/_components/social.tsx b/app/auth/_components/social.tsx
index eb96376..5ac1f9d 100644
--- a/app/auth/_components/social.tsx
+++ b/app/auth/_components/social.tsx
@@ -1,25 +1,15 @@
-'use client'
-
 import { Button } from '@/components/ui/button'
-import { signIn } from 'next-auth/react'
-import React, { useState } from 'react'
+import React from 'react'
 import { FaGithub, FaGoogle } from 'react-icons/fa'
 
 const Social = () => {
-	const [isLoading, setIsLoading] = useState(false)
-
-	const onSignIn = async (provider: string) => {
-		setIsLoading(true)
-		await signIn(provider, { callbackUrl: '/' })
-	}
-
 	return (
 		<div className='grid grid-cols-2 w-full gap-1'>
-			<Button variant={'outline'} onClick={() => onSignIn('google')} disabled={isLoading}>
+			<Button variant={'outline'}>
 				<span>Sign up with google</span>
 				<FaGoogle />
 			</Button>
-			<Button variant={'secondary'} onClick={() => onSignIn('github')} disabled={isLoading}>
+			<Button variant={'secondary'}>
 				<span>Sign up with github</span>
 				<FaGithub />
 			</Button>
diff --git a/app/auth/_components/verify.tsx b/app/auth/_components/verify.tsx
index cd8a09b..4ee9046 100644
--- a/app/auth/_components/verify.tsx
+++ b/app/auth/_components/verify.tsx
@@ -3,40 +3,21 @@ import { Form, FormControl, FormField, FormItem, FormMessage } from '@/component
 import { Input } from '@/components/ui/input'
 import { InputOTP, InputOTPGroup, InputOTPSeparator, InputOTPSlot } from '@/components/ui/input-otp'
 import { Label } from '@/components/ui/label'
-import { useAuth } from '@/hooks/use-auth'
-import { toast } from '@/hooks/use-toast'
-import { axiosClient } from '@/http/axios'
 import { otpSchema } from '@/lib/validation'
-import { IUser } from '@/types'
 import { zodResolver } from '@hookform/resolvers/zod'
-import { useMutation } from '@tanstack/react-query'
 import { REGEXP_ONLY_DIGITS } from 'input-otp'
 import React from 'react'
 import { useForm } from 'react-hook-form'
 import { z } from 'zod'
-import { signIn } from 'next-auth/react'
 
 const Verify = () => {
-	const { email } = useAuth()
-
 	const form = useForm<z.infer<typeof otpSchema>>({
 		resolver: zodResolver(otpSchema),
-		defaultValues: { email, otp: '	' },
-	})
-
-	const { mutate, isPending } = useMutation({
-		mutationFn: async (otp: string) => {
-			const { data } = await axiosClient.post<{ user: IUser }>('/api/auth/verify', { email, otp })
-			return data
-		},
-		onSuccess: ({ user }) => {
-			signIn('credentials', { email: user.email, callbackUrl: '/' })
-			toast({ description: 'Successfully verified' })
-		},
+		defaultValues: { email: '', otp: '	' },
 	})
 
 	function onSubmit(values: z.infer<typeof otpSchema>) {
-		mutate(values.otp)
+		console.log(values)
 	}
 
 	return (
@@ -53,7 +34,7 @@ const Verify = () => {
 							<FormItem>
 								<Label>Email</Label>
 								<FormControl>
-									<Input placeholder='info@sammi.ac' disabled className='h-10 bg-secondary' {...field} />
+									<Input placeholder='info@sammi.ac' className='h-10 bg-secondary' {...field} />
 								</FormControl>
 								<FormMessage className='text-xs text-red-500' />
 							</FormItem>
@@ -66,7 +47,7 @@ const Verify = () => {
 							<FormItem>
 								<Label>One-Time Password</Label>
 								<FormControl>
-									<InputOTP maxLength={6} className='w-full' pattern={REGEXP_ONLY_DIGITS} disabled={isPending} {...field}>
+									<InputOTP maxLength={6} className='w-full' pattern={REGEXP_ONLY_DIGITS} {...field}>
 										<InputOTPGroup className='w-full '>
 											<InputOTPSlot index={0} className='w-full dark:bg-primary-foreground bg-secondary' />
 											<InputOTPSlot index={1} className='w-full dark:bg-primary-foreground bg-secondary' />
@@ -85,7 +66,7 @@ const Verify = () => {
 						)}
 					/>
 
-					<Button type='submit' className='w-full' size={'lg'} disabled={isPending}>
+					<Button type='submit' className='w-full' size={'lg'}>
 						Submit
 					</Button>
 				</form>
diff --git a/app/auth/page.tsx b/app/auth/page.tsx
index 2f21964..3b66705 100644
--- a/app/auth/page.tsx
+++ b/app/auth/page.tsx
@@ -1,21 +1,13 @@
 import { FaTelegram } from 'react-icons/fa'
 import StateAuth from './_components/state'
 import Social from './_components/social'
-import { ModeToggle } from '@/components/shared/mode-toggle'
-import { getServerSession } from 'next-auth'
-// import { authOptions } from '@/lib/auth-options'
-import { redirect } from 'next/navigation'
-
-const Page = async () => {
-	// const session = await getServerSession(authOptions)
-	// if (session) return redirect('/')
 
+const Page = () => {
 	return (
 		<div className='container max-w-md w-full h-screen flex justify-center items-center flex-col space-y-4'>
 			<FaTelegram size={120} className='text-blue-500' />
-			<div className='flex items-center gap-2'>
+			<div>
 				<h1 className='text-4xl font-bold'>Telegram</h1>
-				<ModeToggle />
 			</div>
 			<StateAuth />
 			<Social />
diff --git a/app/layout.tsx b/app/layout.tsx
index 440e597..78c7f24 100644
--- a/app/layout.tsx
+++ b/app/layout.tsx
@@ -1,11 +1,7 @@
-import { ThemeProvider } from '@/components/providers/theme.provider'
 import './globals.css'
 
 import type { Metadata } from 'next'
 import { Space_Grotesk } from 'next/font/google'
-import QueryProvider from '@/components/providers/query.provider'
-// import { Toaster } from '@/components/ui/toaster'
-import SessionProvider from '@/components/providers/session.provider'
 
 const spaceGrotesk = Space_Grotesk({
 	weight: ['400', '500', '600', '700', '300'],
@@ -25,17 +21,10 @@ export default function RootLayout({
 	children: React.ReactNode
 }>) {
 	return (
-		<SessionProvider>
-			<QueryProvider>
-				<html lang='en' suppressHydrationWarning>
-					<body className={`${spaceGrotesk.variable} antialiased sidebar-custom-scrollbar`} suppressHydrationWarning>
-						<ThemeProvider attribute='class' defaultTheme='system' enableSystem disableTransitionOnChange>
-							<main>{children}</main>
-							{/* <Toaster /> */}
-						</ThemeProvider>
-					</body>
-				</html>
-			</QueryProvider>
-		</SessionProvider>
+		<html lang='en' suppressHydrationWarning>
+			<body className={`${spaceGrotesk.variable} antialiased`} suppressHydrationWarning>
+				{children}
+			</body>
+		</html>
 	)
 }
\ No newline at end of file
diff --git a/app/page.tsx b/app/page.tsx
index af8f665..6badefd 100644
--- a/app/page.tsx
+++ b/app/page.tsx
@@ -1,9 +1,5 @@
-import React from 'react'
-
 const HomePage = () => {
-  return (
-    <div>Home Page</div>
-  )
+	return <div>HomePage</div>
 }
 
-export default HomePage;
\ No newline at end of file
+export default HomePage
\ No newline at end of file
diff --git a/components/providers/query.provider.tsx b/components/providers/query.provider.tsx
deleted file mode 100644
index 4aa7fb9..0000000
--- a/components/providers/query.provider.tsx
+++ /dev/null
@@ -1,25 +0,0 @@
-'use client'
-
-import { toast } from '@/hooks/use-toast'
-import { ChildProps, IError } from '@/types'
-import { QueryClient, QueryClientProvider } from '@tanstack/react-query'
-import { FC } from 'react'
-
-const handleQueryError = (error: Error | IError) => {
-	if ((error as IError).response?.data?.message) {
-		return toast({ description: (error as IError).response.data.message })
-	}
-	return toast({ description: 'Something went wrong' })
-}
-
-const queryClient = new QueryClient({
-	defaultOptions: {
-		mutations: { onError: handleQueryError },
-	},
-})
-
-const QueryProvider: FC<ChildProps> = ({ children }) => {
-	return <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>
-}
-
-export default QueryProvider
\ No newline at end of file
diff --git a/components/providers/session.provider.tsx b/components/providers/session.provider.tsx
deleted file mode 100644
index b03b937..0000000
--- a/components/providers/session.provider.tsx
+++ /dev/null
@@ -1,11 +0,0 @@
-'use client'
-
-import { ChildProps } from '@/types'
-import { SessionProvider as Session } from 'next-auth/react'
-import { FC } from 'react'
-
-const SessionProvider: FC<ChildProps> = ({ children }) => {
-	return <Session>{children}</Session>
-}
-
-export default SessionProvider
\ No newline at end of file
diff --git a/components/providers/theme.provider.tsx b/components/providers/theme.provider.tsx
deleted file mode 100644
index 53ec083..0000000
--- a/components/providers/theme.provider.tsx
+++ /dev/null
@@ -1,18 +0,0 @@
-'use client'
-
-import * as React from 'react'
-import { ThemeProvider as NextThemesProvider } from 'next-themes'
-import dynamic from 'next/dynamic'
-
-// NoSSR komponenti yaratish
-const NoSSR = dynamic(() => Promise.resolve(({ children }: { children: React.ReactNode }) => <>{children}</>), {
-  ssr: false
-})
-
-export function ThemeProvider({ children, ...props }: React.ComponentProps<typeof NextThemesProvider>) {
-  return (
-    <NextThemesProvider {...props}>
-      <NoSSR>{children}</NoSSR>
-    </NextThemesProvider>
-  )
-}
\ No newline at end of file
diff --git a/components/shared/mode-toggle.tsx b/components/shared/mode-toggle.tsx
deleted file mode 100644
index b3f0b0d..0000000
--- a/components/shared/mode-toggle.tsx
+++ /dev/null
@@ -1,21 +0,0 @@
-'use client'
-
-import * as React from 'react'
-import { Moon, Sun } from 'lucide-react'
-import { useTheme } from 'next-themes'
-
-import { Button } from '@/components/ui/button'
-
-export function ModeToggle() {
-	const { setTheme, resolvedTheme } = useTheme()
-
-	return resolvedTheme === 'dark' ? (
-		<Button size={'icon'} variant={'ghost'} onClick={() => setTheme('light')}>
-			<Sun />
-		</Button>
-	) : (
-		<Button size={'icon'} variant={'ghost'} onClick={() => setTheme('dark')}>
-			<Moon />
-		</Button>
-	)
-}
\ No newline at end of file
diff --git a/hooks/use-auth.ts b/hooks/use-auth.ts
deleted file mode 100644
index 09a0ab3..0000000
--- a/hooks/use-auth.ts
+++ /dev/null
@@ -1,20 +0,0 @@
-import { IUser } from '@/types'
-import { create } from 'zustand'
-
-type Store = {
-	step: 'login' | 'verify'
-	setStep: (step: 'login' | 'verify') => void
-	email: string
-	setEmail: (email: string) => void
-	onlineUsers: IUser[]
-	setOnlineUsers: (users: IUser[]) => void
-}
-
-export const useAuth = create<Store>()(set => ({
-	step: 'login',
-	setStep: step => set({ step }),
-	email: '',
-	setEmail: email => set({ email }),
-	onlineUsers: [],
-	setOnlineUsers: users => set({ onlineUsers: users }),
-}))
\ No newline at end of file
diff --git a/hooks/use-toast.ts b/hooks/use-toast.ts
deleted file mode 100644
index 34c1b3a..0000000
--- a/hooks/use-toast.ts
+++ /dev/null
@@ -1,204 +0,0 @@
-"use client"
-
-// Inspired by react-hot-toast library
-import * as React from "react"
-
-import type { ReactElement } from "react"
-
-type ToastActionElement = ReactElement
-
-interface ToastProps {
-  id?: string
-  title?: React.ReactNode
-  description?: React.ReactNode
-  action?: ToastActionElement
-  duration?: number
-  dismissible?: boolean
-  open?: boolean
-  onOpenChange?: (open: boolean) => void
-}
-
-const TOAST_LIMIT = 1
-const TOAST_REMOVE_DELAY = 1000000
-
-type ToasterToast = ToastProps & {
-  id: string
-  title?: React.ReactNode
-  description?: React.ReactNode
-  action?: ToastActionElement
-}
-
-const actionTypes = {
-  ADD_TOAST: "ADD_TOAST",
-  UPDATE_TOAST: "UPDATE_TOAST",
-  DISMISS_TOAST: "DISMISS_TOAST",
-  REMOVE_TOAST: "REMOVE_TOAST",
-} as const
-
-let count = 0
-
-function genId() {
-  count = (count + 1) % Number.MAX_SAFE_INTEGER
-  return count.toString()
-}
-
-type ActionType = typeof actionTypes
-
-type Action =
-  | {
-      type: ActionType["ADD_TOAST"]
-      toast: ToasterToast
-    }
-  | {
-      type: ActionType["UPDATE_TOAST"]
-      toast: Partial<ToasterToast>
-    }
-  | {
-      type: ActionType["DISMISS_TOAST"]
-      toastId?: ToasterToast["id"]
-    }
-  | {
-      type: ActionType["REMOVE_TOAST"]
-      toastId?: ToasterToast["id"]
-    }
-
-interface State {
-  toasts: ToasterToast[]
-}
-
-const toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()
-
-const addToRemoveQueue = (toastId: string) => {
-  if (toastTimeouts.has(toastId)) {
-    return
-  }
-
-  const timeout = setTimeout(() => {
-    toastTimeouts.delete(toastId)
-    dispatch({
-      type: "REMOVE_TOAST",
-      toastId: toastId,
-    })
-  }, TOAST_REMOVE_DELAY)
-
-  toastTimeouts.set(toastId, timeout)
-}
-
-export const reducer = (state: State, action: Action): State => {
-  switch (action.type) {
-    case "ADD_TOAST":
-      return {
-        ...state,
-        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),
-      }
-
-    case "UPDATE_TOAST":
-      return {
-        ...state,
-        toasts: state.toasts.map((t) =>
-          t.id === action.toast.id ? { ...t, ...action.toast } : t
-        ),
-      }
-
-    case "DISMISS_TOAST": {
-      const { toastId } = action
-
-      // ! Side effects ! - This could be extracted into a dismissToast() action,
-      // but I'll keep it here for simplicity
-      if (toastId) {
-        addToRemoveQueue(toastId)
-      } else {
-        state.toasts.forEach((toast) => {
-          addToRemoveQueue(toast.id)
-        })
-      }
-
-      return {
-        ...state,
-        toasts: state.toasts.map((t) =>
-          t.id === toastId || toastId === undefined
-            ? {
-                ...t,
-                open: false,
-              }
-            : t
-        ),
-      }
-    }
-    case "REMOVE_TOAST":
-      if (action.toastId === undefined) {
-        return {
-          ...state,
-          toasts: [],
-        }
-      }
-      return {
-        ...state,
-        toasts: state.toasts.filter((t) => t.id !== action.toastId),
-      }
-  }
-}
-
-const listeners: Array<(state: State) => void> = []
-
-let memoryState: State = { toasts: [] }
-
-function dispatch(action: Action) {
-  memoryState = reducer(memoryState, action)
-  listeners.forEach((listener) => {
-    listener(memoryState)
-  })
-}
-
-type Toast = Omit<ToasterToast, "id">
-
-function toast({ ...props }: Toast) {
-  const id = genId()
-
-  const update = (props: ToasterToast) =>
-    dispatch({
-      type: "UPDATE_TOAST",
-      toast: { ...props, id },
-    })
-  const dismiss = () => dispatch({ type: "DISMISS_TOAST", toastId: id })
-
-  dispatch({
-    type: "ADD_TOAST",
-    toast: {
-      ...props,
-      id,
-      open: true,
-      onOpenChange: (open) => {
-        if (!open) dismiss()
-      },
-    },
-  })
-
-  return {
-    id: id,
-    dismiss,
-    update,
-  }
-}
-
-function useToast() {
-  const [state, setState] = React.useState<State>(memoryState)
-
-  React.useEffect(() => {
-    listeners.push(setState)
-    return () => {
-      const index = listeners.indexOf(setState)
-      if (index > -1) {
-        listeners.splice(index, 1)
-      }
-    }
-  }, [state])
-
-  return {
-    ...state,
-    toast,
-    dismiss: (toastId?: string) => dispatch({ type: "DISMISS_TOAST", toastId }),
-  }
-}
-
-export { useToast, toast }
\ No newline at end of file
diff --git a/http/axios.ts b/http/axios.ts
deleted file mode 100644
index 675248c..0000000
--- a/http/axios.ts
+++ /dev/null
@@ -1,8 +0,0 @@
-import axios from 'axios'
-
-export const SERVER_URL = process.env.NEXT_PUBLIC_SERVER_URL
-
-export const axiosClient = axios.create({
-	baseURL: SERVER_URL,
-	headers: { 'Content-Type': 'application/json' },
-})
\ No newline at end of file
diff --git a/lib/auth-options.ts b/lib/auth-options.ts
deleted file mode 100644
index 5330b49..0000000
--- a/lib/auth-options.ts
+++ /dev/null
@@ -1,49 +0,0 @@
-// import { NextAuthOptions } from 'next-auth'
-// import GithubProvider from 'next-auth/providers/github'
-// import GoogleProvider from 'next-auth/providers/google'
-// import Credentials from 'next-auth/providers/credentials'
-// // import { connectToDatabase } from './mongoose'
-// // import User from '@/models/user.model'
-
-// export const authOptions: NextAuthOptions = {
-// 	providers: [
-// 		Credentials({
-// 			name: 'Credentials',
-// 			credentials: { email: { label: 'Email', type: 'email' } },
-// 			async authorize(credentials) {
-// 				await connectToDatabase()
-// 				const user = await User.findOne({ email: credentials?.email })
-// 				return user
-// 			},
-// 		}),
-// 		GithubProvider({
-// 			clientId: process.env.GITHUB_CLIENT_ID!,
-// 			clientSecret: process.env.GITHUB_CLIENT_SECRET!,
-// 		}),
-// 		GoogleProvider({
-// 			clientId: process.env.GOOGLE_CLIENT_ID!,
-// 			clientSecret: process.env.GOOGLE_CLIENT_SECRET!,
-// 		}),
-// 	],
-// 	callbacks: {
-// 		async session({ session }) {
-// 			await connectToDatabase()
-// 			const isExistingUser = await User.findOne({ email: session.user?.email })
-// 			if (!isExistingUser) {
-// 				const user = await User.create({
-// 					email: session.user?.email,
-// 					isVerified: true,
-// 					avatar: session.user?.image,
-// 				})
-// 				session.currentUser = user
-// 				return session
-// 			}
-// 			session.currentUser = isExistingUser
-// 			return session
-// 		},
-// 	},
-// 	session: { strategy: 'jwt' },
-// 	jwt: { secret: process.env.NEXT_PUBLIC_JWT_SECRET },
-// 	secret: process.env.NEXTAUTH_SECRET,
-// 	pages: { signIn: '/auth', signOut: '/auth' },
-// }
\ No newline at end of file
diff --git a/lib/utils.ts b/lib/utils.ts
index bd0c391..a7dc3a1 100644
--- a/lib/utils.ts
+++ b/lib/utils.ts
@@ -3,4 +3,4 @@ import { twMerge } from "tailwind-merge"
 
 export function cn(...inputs: ClassValue[]) {
   return twMerge(clsx(inputs))
-}
+}
\ No newline at end of file
diff --git a/lib/validation.ts b/lib/validation.ts
index f9efa52..11e7f72 100644
--- a/lib/validation.ts
+++ b/lib/validation.ts
@@ -1,29 +1,9 @@
 import { z } from 'zod'
 
 export const emailSchema = z.object({
-	email: z.string().email({ message: '이메일 주소가 유효하지 않습니다. 다시 확인해 주세요.' }),
+	email: z.string().email({ message: 'Invalid email address, please check and try again.' }),
 })
 
-export const oldEmailSchema = z
-	.object({ oldEmail: z.string().email({ message: '이메일 주소가 유효하지 않습니다. 다시 확인해 주세요.' }) })
-	.merge(emailSchema)
-
 export const otpSchema = z
-	.object({ otp: z.string().min(6, { message: '일회용 비밀번호는 6자리여야 합니다.' }) })
-	.merge(emailSchema)
-
-export const messageSchema = z.object({
-	text: z.string().min(1, { message: '메시지는 비워둘 수 없습니다.' }),
-	image: z.string().optional(),
-})
-
-export const profileSchema = z.object({
-	firstName: z.string().min(2),
-	lastName: z.string().optional(),
-	bio: z.string().optional(),
-})
-
-export const confirmTextSchema = z.object({ confirmText: z.string() }).refine(data => data.confirmText === 'DELETE', {
-	message: '삭제를 확인하려면 DELETE를 입력해야 합니다.',
-	path: ['confirmText'],
-})
\ No newline at end of file
+	.object({ otp: z.string().min(6, { message: 'Your one-time password must be 6 characters.' }) })
+	.merge(emailSchema)
\ No newline at end of file
diff --git a/next.config.ts b/next.config.ts
index e9ffa30..1bf365d 100644
--- a/next.config.ts
+++ b/next.config.ts
@@ -4,4 +4,4 @@ const nextConfig: NextConfig = {
   /* config options here */
 };
 
-export default nextConfig;
+export default nextConfig;
\ No newline at end of file
diff --git a/package-lock.json b/package-lock.json
index ed8becf..5df9b3d 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -26,6 +26,7 @@
         "react-dom": "19.1.0",
         "react-hook-form": "^7.60.0",
         "react-icons": "^5.5.0",
+        "react-no-ssr": "^1.1.0",
         "shadcn": "^2.9.2",
         "sonner": "^2.0.6",
         "tailwind-merge": "^3.3.1",
@@ -3017,6 +3018,15 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/babel-runtime": {
+      "version": "6.26.0",
+      "resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.26.0.tgz",
+      "integrity": "sha512-ITKNuq2wKlW1fJg9sSW52eepoYgZBggvOAHC0u/CYu/qxQ9EVzThCgR69BnSXLHjy2f7SY5zaQ4yt7H9ZVxY2g==",
+      "dependencies": {
+        "core-js": "^2.4.0",
+        "regenerator-runtime": "^0.11.0"
+      }
+    },
     "node_modules/balanced-match": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
@@ -3490,6 +3500,13 @@
         "node": ">=6.6.0"
       }
     },
+    "node_modules/core-js": {
+      "version": "2.6.12",
+      "resolved": "https://registry.npmjs.org/core-js/-/core-js-2.6.12.tgz",
+      "integrity": "sha512-Kb2wC0fvsWfQrgk8HU5lW6U/Lcs8+9aaYcy4ZFc6DDlo4nZ7n70dEgE5rtR0oG6ufKDUnrwfWL1mXR5ljDatrQ==",
+      "deprecated": "core-js@<3.23.3 is no longer maintained and not recommended for usage due to the number of issues. Because of the V8 engine whims, feature detection in old core-js versions could cause a slowdown up to 100x even if nothing is polyfilled. Some versions have web compatibility issues. Please, upgrade your dependencies to the actual version of core-js.",
+      "hasInstallScript": true
+    },
     "node_modules/cors": {
       "version": "2.8.5",
       "resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
@@ -7413,6 +7430,17 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/react-no-ssr": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/react-no-ssr/-/react-no-ssr-1.1.0.tgz",
+      "integrity": "sha512-3td8iPIEFKWXOJ3Ar5xURvZAsv/aIlngJLBH6fP5QC3WhsfuO2pn7WQR0ZlkTE0puWCL0RDEvXtOfAg4qMp+xA==",
+      "dependencies": {
+        "babel-runtime": "6.x.x"
+      },
+      "peerDependencies": {
+        "react": "^0.14.0 || ^15.0.0"
+      }
+    },
     "node_modules/readable-stream": {
       "version": "3.6.2",
       "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz",
@@ -7464,6 +7492,11 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/regenerator-runtime": {
+      "version": "0.11.1",
+      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.11.1.tgz",
+      "integrity": "sha512-MguG95oij0fC3QV3URf4V2SDYGJhJnJGqvIIgdECeODCT98wSWDAJ94SSuVpYQUoTcGUIL6L4yNB7j1DFFHSBg=="
+    },
     "node_modules/regexp.prototype.flags": {
       "version": "1.5.4",
       "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.4.tgz",
diff --git a/package.json b/package.json
index efd5432..bf617e7 100644
--- a/package.json
+++ b/package.json
@@ -27,6 +27,7 @@
     "react-dom": "19.1.0",
     "react-hook-form": "^7.60.0",
     "react-icons": "^5.5.0",
+    "react-no-ssr": "^1.1.0",
     "shadcn": "^2.9.2",
     "sonner": "^2.0.6",
     "tailwind-merge": "^3.3.1",
diff --git a/postcss.config.mjs b/postcss.config.mjs
index c7bcb4b..cf6b86a 100644
--- a/postcss.config.mjs
+++ b/postcss.config.mjs
@@ -1,5 +1,8 @@
+/** @type {import('postcss-load-config').Config} */
 const config = {
-  plugins: ["@tailwindcss/postcss"],
+  plugins: {
+    tailwindcss: {},
+  },
 };
 
-export default config;
+export default config;
\ No newline at end of file
diff --git a/tailwind.config.ts b/tailwind.config.ts
index 03f30d0..8f49684 100644
--- a/tailwind.config.ts
+++ b/tailwind.config.ts
@@ -1,7 +1,6 @@
 import type { Config } from 'tailwindcss'
-import { withUt } from 'uploadthing/tw'
 
-const config = {
+export default {
 	darkMode: ['class'],
 	content: ['./pages/**/*.{js,ts,jsx,tsx,mdx}', './components/**/*.{js,ts,jsx,tsx,mdx}', './app/**/*.{js,ts,jsx,tsx,mdx}'],
 	theme: {
@@ -68,38 +67,14 @@ const config = {
 			},
 			keyframes: {
 				'caret-blink': {
-					'0%,70%,100%': {
-						opacity: '1',
-					},
-					'20%,50%': {
-						opacity: '0',
-					},
-				},
-				'accordion-down': {
-					from: {
-						height: '0',
-					},
-					to: {
-						height: 'var(--radix-accordion-content-height)',
-					},
-				},
-				'accordion-up': {
-					from: {
-						height: 'var(--radix-accordion-content-height)',
-					},
-					to: {
-						height: '0',
-					},
+					'0%,70%,100%': { opacity: '1' },
+					'20%,50%': { opacity: '0' },
 				},
 			},
 			animation: {
 				'caret-blink': 'caret-blink 1.25s ease-out infinite',
-				'accordion-down': 'accordion-down 0.2s ease-out',
-				'accordion-up': 'accordion-up 0.2s ease-out',
 			},
 		},
 	},
 	plugins: [require('tailwindcss-animate')],
-} satisfies Config
-
-export default withUt(config)
\ No newline at end of file
+} satisfies Config
\ No newline at end of file
diff --git a/tsconfig.json b/tsconfig.json
index 35ade52..cc752d0 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -1,27 +1,27 @@
 {
-  "compilerOptions": {
-    "target": "ES2017",
-    "lib": ["dom", "dom.iterable", "esnext"],
-    "allowJs": true,
-    "skipLibCheck": true,
-    "strict": true,
-    "noEmit": true,
-    "esModuleInterop": true,
-    "module": "esnext",
-    "moduleResolution": "bundler",
-    "resolveJsonModule": true,
-    "isolatedModules": true,
-    "jsx": "preserve",
-    "incremental": true,
-    "plugins": [
-      {
-        "name": "next"
-      }
-    ],
-    "paths": {
-      "@/*": ["./*"]
-    }
-  },
-  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts", "hooks/use-toast.ts"],
-  "exclude": ["node_modules"]
-}
+	"compilerOptions": {
+		"target": "ES2017",
+		"lib": ["dom", "dom.iterable", "esnext"],
+		"allowJs": true,
+		"skipLibCheck": true,
+		"strict": true,
+		"noEmit": true,
+		"esModuleInterop": true,
+		"module": "esnext",
+		"moduleResolution": "bundler",
+		"resolveJsonModule": true,
+		"isolatedModules": true,
+		"jsx": "preserve",
+		"incremental": true,
+		"plugins": [
+			{
+				"name": "next"
+			}
+		],
+		"paths": {
+			"@/*": ["./*"]
+		}
+	},
+	"include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
+	"exclude": ["node_modules"]
+}
\ No newline at end of file
diff --git a/types/index.ts b/types/index.ts
deleted file mode 100644
index d6dc53f..0000000
--- a/types/index.ts
+++ /dev/null
@@ -1,34 +0,0 @@
-export interface ChildProps {
-	children: React.ReactNode
-}
-
-export interface IError extends Error {
-	response: { data: { message: string } }
-}
-
-export interface IUser {
-	email: string
-	_id: string
-	avatar: string
-	firstName: string
-	lastName: string
-	bio: string
-	isVerified: boolean
-	muted: boolean
-	notificationSound: string
-	sendingSound: string
-	contacts: IUser[]
-	lastMessage: IMessage | null
-}
-
-export interface IMessage {
-	_id: string
-	text: string
-	image: string
-	reaction: string
-	sender: IUser
-	receiver: IUser
-	createdAt: string
-	updatedAt: string
-	status: string
-}
\ No newline at end of file
-- 
2.41.0


From bb88196cd365919402a86538947d970b56091a76 Mon Sep 17 00:00:00 2001
From: oscar-bek <salamov.behzod@gmail.com>
Date: Tue, 29 Jul 2025 18:11:23 +0900
Subject: [PATCH 05/16] update auth && create contact-list

---
 app/(chat)/_components/contact-list.tsx |  80 ++++++++++
 app/(chat)/_components/settings.tsx     |  12 ++
 app/(chat)/page.tsx                     |  30 ++++
 app/auth/_components/sign-in.tsx        |  24 +--
 app/auth/_components/state.tsx          |   2 +
 app/auth/_components/verify.tsx         | 191 +++++++++++++++---------
 app/auth/page.tsx                       |   8 +-
 app/layout.tsx                          |   8 +-
 app/page.tsx                            |   5 -
 components/providers/theme.provider.tsx |  13 ++
 components/shared/mode-toggle.tsx       |  21 +++
 components/ui/avatar.tsx                |  50 +++++++
 hooks/use-auth.ts                       |  15 ++
 hooks/use-current.tsx                   |  11 ++
 package-lock.json                       |  94 ++++++++++++
 package.json                            |   1 +
 postcss.config.mjs                      |   4 +-
 types/index.ts                          |   5 +
 18 files changed, 474 insertions(+), 100 deletions(-)
 create mode 100644 app/(chat)/_components/contact-list.tsx
 create mode 100644 app/(chat)/_components/settings.tsx
 create mode 100644 app/(chat)/page.tsx
 delete mode 100644 app/page.tsx
 create mode 100644 components/providers/theme.provider.tsx
 create mode 100644 components/shared/mode-toggle.tsx
 create mode 100644 components/ui/avatar.tsx
 create mode 100644 hooks/use-auth.ts
 create mode 100644 hooks/use-current.tsx
 create mode 100644 types/index.ts

diff --git a/app/(chat)/_components/contact-list.tsx b/app/(chat)/_components/contact-list.tsx
new file mode 100644
index 0000000..2f63fab
--- /dev/null
+++ b/app/(chat)/_components/contact-list.tsx
@@ -0,0 +1,80 @@
+'use client'
+
+import { IUser } from '@/types'
+import React, { FC } from 'react'
+import Settings from './settings'
+import { Input } from '@/components/ui/input'
+import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
+import { useRouter } from 'next/navigation'
+import useCurrentContact from '@/hooks/use-current'
+import { cn } from '@/lib/utils'
+
+interface Props {	contacts: IUser[]}
+
+const ContactList: FC<Props> = ({ contacts }) => {
+	const router = useRouter()
+	const { setCurrentContact, currentContact } = useCurrentContact()
+
+	const renderContact = (contact: IUser) => {
+		const onChat = () => {
+			if (currentContact?._id === contact._id) return
+			console.log('chatting with', contact.email)
+			setCurrentContact(contact)
+			router.push(`/?chat=${contact._id}`)
+		}
+
+		return (
+			<div
+				className={cn(
+					'flex justify-between items-center cursor-pointer hover:bg-secondary/50 p-2',
+					currentContact?._id === contact._id && 'bg-secondary/50'
+				)}
+				onClick={onChat}
+			>
+				<div className='flex items-center gap-2'>
+					<div className='relative'>
+						<Avatar className='z-40'>
+							<AvatarImage src={contact.avatar} alt={contact.email} className='object-cover' />
+							<AvatarFallback className='uppercase'>{contact.email[0]}</AvatarFallback>
+						</Avatar>
+						<div className='size-3 bg-green-500 absolute rounded-full bottom-0 right-0 !z-50' />
+					</div>
+
+					<div>
+						<h2 className='capitalize line-clamp-1 text-sm'>{contact.email.split('@')[0]}</h2>
+						<p className='text-xs line-clamp-1 text-muted-foreground'>No message yet</p>
+					</div>
+				</div>
+
+				<div className='self-end'>
+					<p className='text-xs text-muted-foreground'>19:20 pm</p>
+				</div>
+			</div>
+		)
+	}
+
+	return (
+		<>
+			{/* Top bar */}
+			<div className='flex items-center bg-background pl-2 sticky top-0'>
+				<Settings />
+				<div className='m-2 w-full'>
+					<Input className='bg-secondary' type='text' placeholder='Search...' />
+				</div>
+			</div>
+
+			{/* Contacts */}
+			{contacts.length === 0 && (
+				<div className='w-full h-[95vh] flex justify-center items-center text-center text-muted-foreground'>
+					<p>Contact list is empty</p>
+				</div>
+			)}
+
+			{contacts.map(contact => (
+				<div key={contact._id}>{renderContact(contact)}</div>
+			))}
+		</>
+	)
+}
+
+export default ContactList
\ No newline at end of file
diff --git a/app/(chat)/_components/settings.tsx b/app/(chat)/_components/settings.tsx
new file mode 100644
index 0000000..b7a02ad
--- /dev/null
+++ b/app/(chat)/_components/settings.tsx
@@ -0,0 +1,12 @@
+import { Button } from '@/components/ui/button'
+import { Menu } from 'lucide-react'
+
+const Settings = () => {
+	return (
+		<Button size={'icon'} variant={'secondary'}>
+			<Menu />
+		</Button>
+	)
+}
+
+export default Settings
\ No newline at end of file
diff --git a/app/(chat)/page.tsx b/app/(chat)/page.tsx
new file mode 100644
index 0000000..545baf6
--- /dev/null
+++ b/app/(chat)/page.tsx
@@ -0,0 +1,30 @@
+import { Loader2 } from 'lucide-react'
+import ContactList from './_components/contact-list'
+
+const HomePage = () => {
+	return (
+		<>
+			{/* Sidebar */}
+			<div className='w-80 h-screen border-r fixed inset-0 z-50'>
+				{/* Loading */}
+				{/* <div className='w-full h-[95vh] flex justify-center items-center'>
+					<Loader2 size={50} className='animate-spin' />
+				</div> */}
+
+				{/* Contact list */}
+				<ContactList contacts={contacts} />
+			</div>
+			{/* Chat area */}
+		</>
+	)
+}
+
+const contacts = [
+	{ email: 'john@gmail.com', _id: '1', avatar: 'https://github.com/shadcn.png' },
+	{ email: 'amile@gmail.com', _id: '2' },
+	{ email: 'faris@gmail.com', _id: '3' },
+	{ email: 'abdo@gmail.com', _id: '4' },
+	{ email: 'billi@gmail.com', _id: '5' },
+]
+
+export default HomePage
\ No newline at end of file
diff --git a/app/auth/_components/sign-in.tsx b/app/auth/_components/sign-in.tsx
index 496a85e..6a24e5d 100644
--- a/app/auth/_components/sign-in.tsx
+++ b/app/auth/_components/sign-in.tsx
@@ -3,11 +3,8 @@ import { Form, FormControl, FormField, FormItem, FormMessage } from '@/component
 import { Input } from '@/components/ui/input'
 import { Label } from '@/components/ui/label'
 import { useAuth } from '@/hooks/use-auth'
-import { toast } from '@/hooks/use-toast'
-import { axiosClient } from '@/http/axios'
 import { emailSchema } from '@/lib/validation'
 import { zodResolver } from '@hookform/resolvers/zod'
-import { useMutation } from '@tanstack/react-query'
 import React from 'react'
 import { useForm } from 'react-hook-form'
 import { z } from 'zod'
@@ -20,20 +17,11 @@ const SignIn = () => {
 		defaultValues: { email: '' },
 	})
 
-	const { mutate, isPending } = useMutation({
-		mutationFn: async (email: string) => {
-			const { data } = await axiosClient.post<{ email: string }>('/api/auth/login', { email })
-			return data
-		},
-		onSuccess: res => {
-			setEmail(res.email)
-			setStep('verify')
-			toast({ description: 'Email sent' })
-		},
-	})
-
 	function onSubmit(values: z.infer<typeof emailSchema>) {
-		mutate(values.email)
+		console.log(values)
+		// API call to send email
+		setStep('verify')
+		setEmail(values.email)
 	}
 
 	return (
@@ -50,13 +38,13 @@ const SignIn = () => {
 							<FormItem>
 								<Label>Email</Label>
 								<FormControl>
-									<Input placeholder='Email' disabled={isPending} className='h-10 bg-secondary' {...field} />
+									<Input placeholder='info@beggi.ac' className='h-10 bg-secondary' {...field} />
 								</FormControl>
 								<FormMessage className='text-xs text-red-500' />
 							</FormItem>
 						)}
 					/>
-					<Button type='submit' className='w-full' size={'lg'} disabled={isPending}>
+					<Button type='submit' className='w-full' size={'lg'}>
 						Submit
 					</Button>
 				</form>
diff --git a/app/auth/_components/state.tsx b/app/auth/_components/state.tsx
index aa36ff3..cf3b854 100644
--- a/app/auth/_components/state.tsx
+++ b/app/auth/_components/state.tsx
@@ -9,6 +9,8 @@ const StateAuth = () => {
 
 	return (
 		<>
+			{/* <SignIn /> */}
+			<Verify />
 			{step === 'login' && <SignIn />}
 			{step === 'verify' && <Verify />}
 		</>
diff --git a/app/auth/_components/verify.tsx b/app/auth/_components/verify.tsx
index 4ee9046..4041965 100644
--- a/app/auth/_components/verify.tsx
+++ b/app/auth/_components/verify.tsx
@@ -1,78 +1,125 @@
-import { Button } from '@/components/ui/button'
-import { Form, FormControl, FormField, FormItem, FormMessage } from '@/components/ui/form'
-import { Input } from '@/components/ui/input'
-import { InputOTP, InputOTPGroup, InputOTPSeparator, InputOTPSlot } from '@/components/ui/input-otp'
-import { Label } from '@/components/ui/label'
-import { otpSchema } from '@/lib/validation'
-import { zodResolver } from '@hookform/resolvers/zod'
-import { REGEXP_ONLY_DIGITS } from 'input-otp'
-import React from 'react'
-import { useForm } from 'react-hook-form'
-import { z } from 'zod'
+import { Button } from "@/components/ui/button";
+import {
+  Form,
+  FormControl,
+  FormField,
+  FormItem,
+  FormMessage,
+} from "@/components/ui/form";
+import { Input } from "@/components/ui/input";
+import {
+  InputOTP,
+  InputOTPGroup,
+  InputOTPSeparator,
+  InputOTPSlot,
+} from "@/components/ui/input-otp";
+import { Label } from "@/components/ui/label";
+import { useAuth } from "@/hooks/use-auth";
+import { otpSchema } from "@/lib/validation";
+import { zodResolver } from "@hookform/resolvers/zod";
+import { REGEXP_ONLY_DIGITS } from "input-otp";
+import { useForm } from "react-hook-form";
+import { z } from "zod";
 
 const Verify = () => {
-	const form = useForm<z.infer<typeof otpSchema>>({
-		resolver: zodResolver(otpSchema),
-		defaultValues: { email: '', otp: '	' },
-	})
+  const { email } = useAuth();
 
-	function onSubmit(values: z.infer<typeof otpSchema>) {
-		console.log(values)
-	}
+  const form = useForm<z.infer<typeof otpSchema>>({
+    resolver: zodResolver(otpSchema),
+    defaultValues: { email, otp: "	" },
+  });
 
-	return (
-		<div className='w-full'>
-			<p className='text-center text-muted-foreground text-sm'>
-				We have sent you an email with a verification code to your email address. Please enter the code below.
-			</p>
-			<Form {...form}>
-				<form onSubmit={form.handleSubmit(onSubmit)} className='w-full space-y-2'>
-					<FormField
-						control={form.control}
-						name='email'
-						render={({ field }) => (
-							<FormItem>
-								<Label>Email</Label>
-								<FormControl>
-									<Input placeholder='info@sammi.ac' className='h-10 bg-secondary' {...field} />
-								</FormControl>
-								<FormMessage className='text-xs text-red-500' />
-							</FormItem>
-						)}
-					/>
-					<FormField
-						control={form.control}
-						name='otp'
-						render={({ field }) => (
-							<FormItem>
-								<Label>One-Time Password</Label>
-								<FormControl>
-									<InputOTP maxLength={6} className='w-full' pattern={REGEXP_ONLY_DIGITS} {...field}>
-										<InputOTPGroup className='w-full '>
-											<InputOTPSlot index={0} className='w-full dark:bg-primary-foreground bg-secondary' />
-											<InputOTPSlot index={1} className='w-full dark:bg-primary-foreground bg-secondary' />
-											<InputOTPSlot index={2} className='w-full dark:bg-primary-foreground bg-secondary' />
-										</InputOTPGroup>
-										<InputOTPSeparator />
-										<InputOTPGroup className='w-full '>
-											<InputOTPSlot index={3} className='w-full dark:bg-primary-foreground bg-secondary' />
-											<InputOTPSlot index={4} className='w-full dark:bg-primary-foreground bg-secondary' />
-											<InputOTPSlot index={5} className='w-full dark:bg-primary-foreground bg-secondary' />
-										</InputOTPGroup>
-									</InputOTP>
-								</FormControl>
-								<FormMessage className='text-xs text-red-500' />
-							</FormItem>
-						)}
-					/>
+  function onSubmit(values: z.infer<typeof otpSchema>) {
+    // API call to verify OTP
+    console.log(values);
+    window.open("/", "_self");
+  }
 
-					<Button type='submit' className='w-full' size={'lg'}>
-						Submit
-					</Button>
-				</form>
-			</Form>
-		</div>
-	)
-}
+  return (
+    <div className="w-full">
+      <p className="text-center text-muted-foreground text-sm">
+        We have sent you an email with a verification code to your email
+        address. Please enter the code below.
+      </p>
+      <Form {...form}>
+        <form
+          onSubmit={form.handleSubmit(onSubmit)}
+          className="w-full space-y-2"
+        >
+          <FormField
+            control={form.control}
+            name="email"
+            render={({ field }) => (
+              <FormItem>
+                <Label>Email</Label>
+                <FormControl>
+                  <Input
+                    placeholder="info@beggi.ac"
+                    disabled
+                    className="h-10 bg-secondary"
+                    {...field}
+                  />
+                </FormControl>
+                <FormMessage className="text-xs text-red-500" />
+              </FormItem>
+            )}
+          />
+          <FormField
+            control={form.control}
+            name="otp"
+            render={({ field }) => (
+              <FormItem>
+                <Label>One-Time Password</Label>
+                <FormControl>
+                  <InputOTP
+                    maxLength={6}
+                    className="w-full"
+                    pattern={REGEXP_ONLY_DIGITS}
+                    {...field}
+                  >
+                    <InputOTPGroup className="w-full ">
+                      <InputOTPSlot
+                        index={0}
+                        className="w-full dark:bg-primary-foreground bg-secondary"
+                      />
+                      <InputOTPSlot
+                        index={1}
+                        className="w-full dark:bg-primary-foreground bg-secondary"
+                      />
+                      <InputOTPSlot
+                        index={2}
+                        className="w-full dark:bg-primary-foreground bg-secondary"
+                      />
+                    </InputOTPGroup>
+                    <InputOTPSeparator />
+                    <InputOTPGroup className="w-full ">
+                      <InputOTPSlot
+                        index={3}
+                        className="w-full dark:bg-primary-foreground bg-secondary"
+                      />
+                      <InputOTPSlot
+                        index={4}
+                        className="w-full dark:bg-primary-foreground bg-secondary"
+                      />
+                      <InputOTPSlot
+                        index={5}
+                        className="w-full dark:bg-primary-foreground bg-secondary"
+                      />
+                    </InputOTPGroup>
+                  </InputOTP>
+                </FormControl>
+                <FormMessage className="text-xs text-red-500" />
+              </FormItem>
+            )}
+          />
 
-export default Verify
\ No newline at end of file
+          <Button type="submit" className="w-full" size={"lg"}>
+            Submit
+          </Button>
+        </form>
+      </Form>
+    </div>
+  );
+};
+
+export default Verify;
diff --git a/app/auth/page.tsx b/app/auth/page.tsx
index 3b66705..63408a7 100644
--- a/app/auth/page.tsx
+++ b/app/auth/page.tsx
@@ -2,16 +2,22 @@ import { FaTelegram } from 'react-icons/fa'
 import StateAuth from './_components/state'
 import Social from './_components/social'
 
+import { ModeToggle } from '@/components/shared/mode-toggle'
+
 const Page = () => {
 	return (
+		<div className='bg-background flex flex-col items-center justify-center h-screen'>
 		<div className='container max-w-md w-full h-screen flex justify-center items-center flex-col space-y-4'>
 			<FaTelegram size={120} className='text-blue-500' />
-			<div>
+		<div className='flex items-center gap-2'>
 				<h1 className='text-4xl font-bold'>Telegram</h1>
+				<ModeToggle />
 			</div>
 			<StateAuth />
 			<Social />
 		</div>
+		</div>
+
 	)
 }
 
diff --git a/app/layout.tsx b/app/layout.tsx
index 78c7f24..c0433dd 100644
--- a/app/layout.tsx
+++ b/app/layout.tsx
@@ -1,3 +1,4 @@
+import { ThemeProvider } from '@/components/providers/theme.provider'
 import './globals.css'
 
 import type { Metadata } from 'next'
@@ -11,7 +12,7 @@ const spaceGrotesk = Space_Grotesk({
 
 export const metadata: Metadata = {
 	title: 'Telegram web',
-	description: 'Telegram web application clone created by Sammi.ac',
+	description: 'Telegram web application clone created by Beggi.ac',
 	icons: { icon: '/logo.svg' },
 }
 
@@ -22,8 +23,11 @@ export default function RootLayout({
 }>) {
 	return (
 		<html lang='en' suppressHydrationWarning>
-			<body className={`${spaceGrotesk.variable} antialiased`} suppressHydrationWarning>
+		<body className={`${spaceGrotesk.variable} antialiased`} suppressHydrationWarning>
 				{children}
+				<ThemeProvider attribute='class' defaultTheme='system' enableSystem disableTransitionOnChange>
+					{children}
+				</ThemeProvider>
 			</body>
 		</html>
 	)
diff --git a/app/page.tsx b/app/page.tsx
deleted file mode 100644
index 6badefd..0000000
--- a/app/page.tsx
+++ /dev/null
@@ -1,5 +0,0 @@
-const HomePage = () => {
-	return <div>HomePage</div>
-}
-
-export default HomePage
\ No newline at end of file
diff --git a/components/providers/theme.provider.tsx b/components/providers/theme.provider.tsx
new file mode 100644
index 0000000..c4dc617
--- /dev/null
+++ b/components/providers/theme.provider.tsx
@@ -0,0 +1,13 @@
+'use client'
+
+import * as React from 'react'
+import { ThemeProvider as NextThemesProvider } from 'next-themes'
+import NoSSR from 'react-no-ssr'
+
+export function ThemeProvider({ children, ...props }: React.ComponentProps<typeof NextThemesProvider>) {
+	return (
+		<NextThemesProvider {...props}>
+			<NoSSR>{children}</NoSSR>
+		</NextThemesProvider>
+	)
+}
\ No newline at end of file
diff --git a/components/shared/mode-toggle.tsx b/components/shared/mode-toggle.tsx
new file mode 100644
index 0000000..b3f0b0d
--- /dev/null
+++ b/components/shared/mode-toggle.tsx
@@ -0,0 +1,21 @@
+'use client'
+
+import * as React from 'react'
+import { Moon, Sun } from 'lucide-react'
+import { useTheme } from 'next-themes'
+
+import { Button } from '@/components/ui/button'
+
+export function ModeToggle() {
+	const { setTheme, resolvedTheme } = useTheme()
+
+	return resolvedTheme === 'dark' ? (
+		<Button size={'icon'} variant={'ghost'} onClick={() => setTheme('light')}>
+			<Sun />
+		</Button>
+	) : (
+		<Button size={'icon'} variant={'ghost'} onClick={() => setTheme('dark')}>
+			<Moon />
+		</Button>
+	)
+}
\ No newline at end of file
diff --git a/components/ui/avatar.tsx b/components/ui/avatar.tsx
new file mode 100644
index 0000000..21e0c1e
--- /dev/null
+++ b/components/ui/avatar.tsx
@@ -0,0 +1,50 @@
+"use client"
+
+import * as React from "react"
+import * as AvatarPrimitive from "@radix-ui/react-avatar"
+
+import { cn } from "@/lib/utils"
+
+const Avatar = React.forwardRef<
+  React.ElementRef<typeof AvatarPrimitive.Root>,
+  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>
+>(({ className, ...props }, ref) => (
+  <AvatarPrimitive.Root
+    ref={ref}
+    className={cn(
+      "relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full",
+      className
+    )}
+    {...props}
+  />
+))
+Avatar.displayName = AvatarPrimitive.Root.displayName
+
+const AvatarImage = React.forwardRef<
+  React.ElementRef<typeof AvatarPrimitive.Image>,
+  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>
+>(({ className, ...props }, ref) => (
+  <AvatarPrimitive.Image
+    ref={ref}
+    className={cn("aspect-square h-full w-full", className)}
+    {...props}
+  />
+))
+AvatarImage.displayName = AvatarPrimitive.Image.displayName
+
+const AvatarFallback = React.forwardRef<
+  React.ElementRef<typeof AvatarPrimitive.Fallback>,
+  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>
+>(({ className, ...props }, ref) => (
+  <AvatarPrimitive.Fallback
+    ref={ref}
+    className={cn(
+      "flex h-full w-full items-center justify-center rounded-full bg-muted",
+      className
+    )}
+    {...props}
+  />
+))
+AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName
+
+export { Avatar, AvatarImage, AvatarFallback }
\ No newline at end of file
diff --git a/hooks/use-auth.ts b/hooks/use-auth.ts
new file mode 100644
index 0000000..d23ba42
--- /dev/null
+++ b/hooks/use-auth.ts
@@ -0,0 +1,15 @@
+import { create } from 'zustand'
+
+type Store = {
+	step: 'login' | 'verify'
+	setStep: (step: 'login' | 'verify') => void
+	email: string
+	setEmail: (email: string) => void
+}
+
+export const useAuth = create<Store>()(set => ({
+	step: 'login',
+	setStep: step => set({ step }),
+	email: '',
+	setEmail: email => set({ email }),
+}))
\ No newline at end of file
diff --git a/hooks/use-current.tsx b/hooks/use-current.tsx
new file mode 100644
index 0000000..f237e64
--- /dev/null
+++ b/hooks/use-current.tsx
@@ -0,0 +1,11 @@
+
+import { IUser } from '@/types'
+import { useState } from 'react'
+
+const useCurrentContact = () => {
+	const [currentContact, setCurrentContact] = useState<IUser | null>(null)
+
+	return { currentContact, setCurrentContact }
+}
+
+export default useCurrentContact
\ No newline at end of file
diff --git a/package-lock.json b/package-lock.json
index 5df9b3d..8bcf951 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -9,6 +9,7 @@
       "version": "0.1.0",
       "dependencies": {
         "@hookform/resolvers": "^5.1.1",
+        "@radix-ui/react-avatar": "^1.1.10",
         "@radix-ui/react-label": "^2.1.7",
         "@radix-ui/react-slot": "^1.2.3",
         "@tanstack/react-query": "^5.83.0",
@@ -1550,6 +1551,32 @@
         "url": "https://github.com/sponsors/panva"
       }
     },
+    "node_modules/@radix-ui/react-avatar": {
+      "version": "1.1.10",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-avatar/-/react-avatar-1.1.10.tgz",
+      "integrity": "sha512-V8piFfWapM5OmNCXTzVQY+E1rDa53zY+MQ4Y7356v4fFz6vqCyUtIz2rUD44ZEdwg78/jKmMJHj07+C/Z/rcog==",
+      "dependencies": {
+        "@radix-ui/react-context": "1.1.2",
+        "@radix-ui/react-primitive": "2.1.3",
+        "@radix-ui/react-use-callback-ref": "1.1.1",
+        "@radix-ui/react-use-is-hydrated": "0.1.0",
+        "@radix-ui/react-use-layout-effect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/@radix-ui/react-compose-refs": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/@radix-ui/react-compose-refs/-/react-compose-refs-1.1.2.tgz",
@@ -1564,6 +1591,20 @@
         }
       }
     },
+    "node_modules/@radix-ui/react-context": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-context/-/react-context-1.1.2.tgz",
+      "integrity": "sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==",
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/@radix-ui/react-label": {
       "version": "2.1.7",
       "resolved": "https://registry.npmjs.org/@radix-ui/react-label/-/react-label-2.1.7.tgz",
@@ -1625,6 +1666,51 @@
         }
       }
     },
+    "node_modules/@radix-ui/react-use-callback-ref": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-callback-ref/-/react-use-callback-ref-1.1.1.tgz",
+      "integrity": "sha512-FkBMwD+qbGQeMu1cOHnuGB6x4yzPjho8ap5WtbEJ26umhgqVXbhekKUQO+hZEL1vU92a3wHwdp0HAcqAUF5iDg==",
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-use-is-hydrated": {
+      "version": "0.1.0",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-is-hydrated/-/react-use-is-hydrated-0.1.0.tgz",
+      "integrity": "sha512-U+UORVEq+cTnRIaostJv9AGdV3G6Y+zbVd+12e18jQ5A3c0xL03IhnHuiU4UV69wolOQp5GfR58NW/EgdQhwOA==",
+      "dependencies": {
+        "use-sync-external-store": "^1.5.0"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-use-layout-effect": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-layout-effect/-/react-use-layout-effect-1.1.1.tgz",
+      "integrity": "sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==",
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/@rtsao/scc": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/@rtsao/scc/-/scc-1.1.0.tgz",
@@ -8877,6 +8963,14 @@
         "requires-port": "^1.0.0"
       }
     },
+    "node_modules/use-sync-external-store": {
+      "version": "1.5.0",
+      "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.5.0.tgz",
+      "integrity": "sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==",
+      "peerDependencies": {
+        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
+      }
+    },
     "node_modules/util-deprecate": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
diff --git a/package.json b/package.json
index bf617e7..4fb6414 100644
--- a/package.json
+++ b/package.json
@@ -10,6 +10,7 @@
   },
   "dependencies": {
     "@hookform/resolvers": "^5.1.1",
+    "@radix-ui/react-avatar": "^1.1.10",
     "@radix-ui/react-label": "^2.1.7",
     "@radix-ui/react-slot": "^1.2.3",
     "@tanstack/react-query": "^5.83.0",
diff --git a/postcss.config.mjs b/postcss.config.mjs
index cf6b86a..79bcf13 100644
--- a/postcss.config.mjs
+++ b/postcss.config.mjs
@@ -1,8 +1,8 @@
 /** @type {import('postcss-load-config').Config} */
 const config = {
   plugins: {
-    tailwindcss: {},
+    "@tailwindcss/postcss": {},
   },
 };
 
-export default config;
\ No newline at end of file
+export default config;
diff --git a/types/index.ts b/types/index.ts
new file mode 100644
index 0000000..a711935
--- /dev/null
+++ b/types/index.ts
@@ -0,0 +1,5 @@
+export interface IUser {
+	email: string
+	_id: string
+	avatar: string
+}
\ No newline at end of file
-- 
2.41.0


From 421f5ce63a1a4e0de58605bc81c1af8cec5bdbe0 Mon Sep 17 00:00:00 2001
From: oscar-bek <salamov.behzod@gmail.com>
Date: Wed, 30 Jul 2025 16:18:42 +0900
Subject: [PATCH 06/16] feat: create Chat component

---
 app/(chat)/_components/add-contact.tsx  | 48 +++++++++++++++++++++++
 app/(chat)/_components/chat.tsx         | 17 +++++++++
 app/(chat)/_components/contact-list.tsx |  7 ++--
 app/(chat)/_components/top-chat.tsx     | 45 ++++++++++++++++++++++
 app/(chat)/page.tsx                     | 51 +++++++++++++++++++++++--
 components/cards/message.card.tsx       | 19 +++++++++
 components/loadings/chat.loading.tsx    | 23 +++++++++++
 components/loadings/message.loading.tsx | 19 +++++++++
 components/ui/skeleton.tsx              | 15 ++++++++
 eslintrc.json                           |  6 +++
 hooks/use-current.tsx                   | 14 ++++---
 11 files changed, 251 insertions(+), 13 deletions(-)
 create mode 100644 app/(chat)/_components/add-contact.tsx
 create mode 100644 app/(chat)/_components/chat.tsx
 create mode 100644 app/(chat)/_components/top-chat.tsx
 create mode 100644 components/cards/message.card.tsx
 create mode 100644 components/loadings/chat.loading.tsx
 create mode 100644 components/loadings/message.loading.tsx
 create mode 100644 components/ui/skeleton.tsx
 create mode 100644 eslintrc.json

diff --git a/app/(chat)/_components/add-contact.tsx b/app/(chat)/_components/add-contact.tsx
new file mode 100644
index 0000000..282a42d
--- /dev/null
+++ b/app/(chat)/_components/add-contact.tsx
@@ -0,0 +1,48 @@
+import { Button } from '@/components/ui/button'
+import { Form, FormControl, FormField, FormItem, FormMessage } from '@/components/ui/form'
+import { Input } from '@/components/ui/input'
+import { Label } from '@/components/ui/label'
+import { emailSchema } from '@/lib/validation'
+import { FC } from 'react'
+import { UseFormReturn } from 'react-hook-form'
+import { FaTelegram } from 'react-icons/fa'
+import { z } from 'zod'
+
+interface Props {
+	contactForm: UseFormReturn<z.infer<typeof emailSchema>>
+	onCreateContact: (values: z.infer<typeof emailSchema>) => void
+}
+const AddContact: FC<Props> = ({ contactForm, onCreateContact }) => {
+	return (
+		<div className='h-screen w-full flex z-40 relative'>
+			<div className='flex justify-center items-center z-50 w-full'>
+				<div className='flex flex-col items-center gap-4'>
+					<FaTelegram size={120} className='dark:text-blue-400 text-blue-500' />
+					<h1 className='text-3xl font-spaceGrotesk font-bold'>Add contacts to start chatting</h1>
+					<Form {...contactForm}>
+						<form onSubmit={contactForm.handleSubmit(onCreateContact)} className='space-y-2 w-full'>
+							<FormField
+								control={contactForm.control}
+								name='email'
+								render={({ field }) => (
+									<FormItem>
+										<Label>Email</Label>
+										<FormControl>
+											<Input placeholder='info@sammi.ac' className='h-10 bg-secondary' {...field} />
+										</FormControl>
+										<FormMessage className='text-xs text-red-500' />
+									</FormItem>
+								)}
+							/>
+							<Button type='submit' className='w-full' size={'lg'}>
+								Submit
+							</Button>
+						</form>
+					</Form>
+				</div>
+			</div>
+		</div>
+	)
+}
+
+export default AddContact
\ No newline at end of file
diff --git a/app/(chat)/_components/chat.tsx b/app/(chat)/_components/chat.tsx
new file mode 100644
index 0000000..4ccc788
--- /dev/null
+++ b/app/(chat)/_components/chat.tsx
@@ -0,0 +1,17 @@
+import MessageCard from '@/components/cards/message.card'
+import ChatLoading from '@/components/loadings/chat.loading'
+
+const Chat = () => {
+	return (
+		<div className='flex flex-col justify-end z-40 min-h-[92vh]'>
+			{/* Loading */}
+			{/* <ChatLoading /> */}
+			{/* Messages */}
+			{/* <MessageCard isReceived /> */}
+
+			{/* Message input */}
+		</div>
+	)
+}
+
+export default Chat
\ No newline at end of file
diff --git a/app/(chat)/_components/contact-list.tsx b/app/(chat)/_components/contact-list.tsx
index 2f63fab..2eb9048 100644
--- a/app/(chat)/_components/contact-list.tsx
+++ b/app/(chat)/_components/contact-list.tsx
@@ -6,11 +6,12 @@ import Settings from './settings'
 import { Input } from '@/components/ui/input'
 import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 import { useRouter } from 'next/navigation'
-import useCurrentContact from '@/hooks/use-current'
+import { useCurrentContact } from '@/hooks/use-current'
 import { cn } from '@/lib/utils'
 
-interface Props {	contacts: IUser[]}
-
+interface Props {
+	contacts: IUser[]
+}
 const ContactList: FC<Props> = ({ contacts }) => {
 	const router = useRouter()
 	const { setCurrentContact, currentContact } = useCurrentContact()
diff --git a/app/(chat)/_components/top-chat.tsx b/app/(chat)/_components/top-chat.tsx
new file mode 100644
index 0000000..2b54867
--- /dev/null
+++ b/app/(chat)/_components/top-chat.tsx
@@ -0,0 +1,45 @@
+import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
+import { Button } from '@/components/ui/button'
+import { useCurrentContact } from '@/hooks/use-current'
+import { Settings2 } from 'lucide-react'
+
+const TopChat = () => {
+	const { currentContact } = useCurrentContact()
+
+	return (
+		<div className='w-full flex items-center justify-between sticky top-0 z-50 h-[8vh] p-2 border-b bg-background'>
+			<div className='flex items-center'>
+				<Avatar className='z-40'>
+					<AvatarImage src={currentContact?.avatar} alt={currentContact?.email} className='object-cover' />
+					<AvatarFallback className='uppercase'>{currentContact?.email[0]}</AvatarFallback>
+				</Avatar>
+				<div className='ml-2'>
+					<h2 className='font-medium text-sm'>{currentContact?.email}</h2>
+					{/* IsTyping */}
+					{/* <div className='text-xs flex items-center gap-1 text-muted-foreground'>
+						<p className='text-secondary-foreground animate-pulse line-clamp-1'>Hello world</p>
+						<div className='self-end mb-1'>
+							<div className='flex justify-center items-center gap-1'>
+								<div className='w-1 h-1 bg-secondary-foreground rounded-full animate-bounce [animation-delay:-0.3s]'></div>
+								<div className='w-1 h-1 bg-secondary-foreground rounded-full animate-bounce [animation-delay:-0.10s]'></div>
+								<div className='w-1 h-1 bg-secondary-foreground rounded-full animate-bounce [animation-delay:-0.15s]'></div>
+							</div>
+						</div>
+					</div> */}
+					<p className='text-xs'>
+						{/* Online */}
+						{/* <span className='text-green-500'>●</span> Online */}
+						{/* Offline */}
+						<span className='text-muted-foreground'>●</span> Last seen recently
+					</p>
+				</div>
+			</div>
+
+			<Button size={'icon'} variant={'secondary'}>
+				<Settings2 />
+			</Button>
+		</div>
+	)
+}
+
+export default TopChat
\ No newline at end of file
diff --git a/app/(chat)/page.tsx b/app/(chat)/page.tsx
index 545baf6..c9df4c4 100644
--- a/app/(chat)/page.tsx
+++ b/app/(chat)/page.tsx
@@ -1,7 +1,36 @@
+'use client'
+
 import { Loader2 } from 'lucide-react'
 import ContactList from './_components/contact-list'
+import { useEffect } from 'react'
+import { useRouter } from 'next/navigation'
+import AddContact from './_components/add-contact'
+import { useCurrentContact } from '@/hooks/use-current'
+import { useForm } from 'react-hook-form'
+import { z } from 'zod'
+import { emailSchema } from '@/lib/validation'
+import { zodResolver } from '@hookform/resolvers/zod'
+import TopChat from './_components/top-chat'
+import Chat from './_components/chat'
 
 const HomePage = () => {
+	const { currentContact } = useCurrentContact()
+	const router = useRouter()
+
+	const contactForm = useForm<z.infer<typeof emailSchema>>({
+		resolver: zodResolver(emailSchema),
+		defaultValues: { email: '' },
+	})
+
+	useEffect(() => {
+		router.replace('/')
+	}, [])
+
+	const onCreateContact = (values: z.infer<typeof emailSchema>) => {
+		// API call to create contact
+		console.log(values)
+	}
+
 	return (
 		<>
 			{/* Sidebar */}
@@ -15,16 +44,30 @@ const HomePage = () => {
 				<ContactList contacts={contacts} />
 			</div>
 			{/* Chat area */}
+			<div className='pl-80 w-full'>
+				{/* Add contact */}
+				{!currentContact?._id && <AddContact contactForm={contactForm} onCreateContact={onCreateContact} />}
+
+				{/* Chat */}
+				{currentContact?._id && (
+					<div className='w-full relative'>
+						{/*Top Chat  */}
+						<TopChat />
+						{/* Chat messages */}
+						<Chat />
+					</div>
+				)}
+			</div>
 		</>
 	)
 }
 
 const contacts = [
 	{ email: 'john@gmail.com', _id: '1', avatar: 'https://github.com/shadcn.png' },
-	{ email: 'amile@gmail.com', _id: '2' },
-	{ email: 'faris@gmail.com', _id: '3' },
-	{ email: 'abdo@gmail.com', _id: '4' },
-	{ email: 'billi@gmail.com', _id: '5' },
+	{ email: 'amile@gmail.com', _id: '2', avatar: 'https://github.com/shadcn.png' },
+	{ email: 'faris@gmail.com', _id: '3', avatar: 'https://github.com/shadcn.png' },
+	{ email: 'abdo@gmail.com', _id: '4', avatar: 'https://github.com/shadcn.png' },
+	{ email: 'billi@gmail.com', _id: '5', avatar: 'https://github.com/shadcn.png' },
 ]
 
 export default HomePage
\ No newline at end of file
diff --git a/components/cards/message.card.tsx b/components/cards/message.card.tsx
new file mode 100644
index 0000000..f0176c0
--- /dev/null
+++ b/components/cards/message.card.tsx
@@ -0,0 +1,19 @@
+
+import { cn } from '@/lib/utils'
+import { FC } from 'react'
+
+interface Props {
+	isReceived?: boolean
+}
+const MessageCard: FC<Props> = ({ isReceived }) => {
+	return (
+		<div className={cn('m-2.5 font-medium text-xs flex', isReceived ? 'justify-start' : 'justify-end')}>
+			<div className={cn('relative inline p-2 pl-2.5 pr-12 max-w-full', isReceived ? 'bg-primary' : 'bg-secondary')}>
+				<p className='text-sm text-white'>Hello world</p>
+				<span className='text-xs right-1 bottom-0 absolute opacity-60'>✓</span>
+			</div>
+		</div>
+	)
+}
+
+export default MessageCard
\ No newline at end of file
diff --git a/components/loadings/chat.loading.tsx b/components/loadings/chat.loading.tsx
new file mode 100644
index 0000000..defb2c5
--- /dev/null
+++ b/components/loadings/chat.loading.tsx
@@ -0,0 +1,23 @@
+import MessageLoading from './message.loading'
+
+const ChatLoading = () => {
+	return (
+		<>
+			<MessageLoading isReceived />
+			<MessageLoading isReceived />
+			<MessageLoading isReceived />
+			<MessageLoading />
+			<MessageLoading />
+			<MessageLoading isReceived />
+			<MessageLoading />
+			<MessageLoading isReceived />
+			<MessageLoading isReceived />
+			<MessageLoading />
+			<MessageLoading />
+			<MessageLoading isReceived />
+			<MessageLoading />
+		</>
+	)
+}
+
+export default ChatLoading
\ No newline at end of file
diff --git a/components/loadings/message.loading.tsx b/components/loadings/message.loading.tsx
new file mode 100644
index 0000000..c12052f
--- /dev/null
+++ b/components/loadings/message.loading.tsx
@@ -0,0 +1,19 @@
+import { cn } from '@/lib/utils'
+import { FC } from 'react'
+import { Skeleton } from '../ui/skeleton'
+
+interface Props {
+	isReceived?: boolean
+}
+const MessageLoading: FC<Props> = ({ isReceived }) => {
+	return (
+		<div className={cn('m-2.5 font-medium text-xs flex', isReceived ? 'justify-start' : 'justify-end')}>
+			<Skeleton className={cn('relative inline p-2 pl-2.5 pr-12', isReceived ? 'bg-primary/20' : 'bg-secondary/20')}>
+				<Skeleton className='w-36 h-5' />
+				<span className='text-xs right-1 bottom-0 absolute opacity-60'>✓</span>
+			</Skeleton>
+		</div>
+	)
+}
+
+export default MessageLoading
\ No newline at end of file
diff --git a/components/ui/skeleton.tsx b/components/ui/skeleton.tsx
new file mode 100644
index 0000000..41528cb
--- /dev/null
+++ b/components/ui/skeleton.tsx
@@ -0,0 +1,15 @@
+import { cn } from "@/lib/utils"
+
+function Skeleton({
+  className,
+  ...props
+}: React.HTMLAttributes<HTMLDivElement>) {
+  return (
+    <div
+      className={cn("animate-pulse rounded-md bg-primary/10", className)}
+      {...props}
+    />
+  )
+}
+
+export { Skeleton }
\ No newline at end of file
diff --git a/eslintrc.json b/eslintrc.json
new file mode 100644
index 0000000..b82673a
--- /dev/null
+++ b/eslintrc.json
@@ -0,0 +1,6 @@
+{
+	"extends": ["next/core-web-vitals", "next/typescript"],
+	"rules": {
+		"react-hooks/exhaustive-deps": "off"
+	}
+}
\ No newline at end of file
diff --git a/hooks/use-current.tsx b/hooks/use-current.tsx
index f237e64..fcc036b 100644
--- a/hooks/use-current.tsx
+++ b/hooks/use-current.tsx
@@ -1,11 +1,13 @@
-
 import { IUser } from '@/types'
-import { useState } from 'react'
+import { create } from 'zustand'
 
-const useCurrentContact = () => {
-	const [currentContact, setCurrentContact] = useState<IUser | null>(null)
 
-	return { currentContact, setCurrentContact }
+type Store = {
+	currentContact: IUser | null
+	setCurrentContact: (contact: IUser | null) => void
 }
 
-export default useCurrentContact
\ No newline at end of file
+export const useCurrentContact = create<Store>()(set => ({
+	currentContact: null,
+	setCurrentContact: contact => set({ currentContact: contact }),
+}))
\ No newline at end of file
-- 
2.41.0


From 24ee837eb40db218ef1aae3419ee4f3c9d6c2efd Mon Sep 17 00:00:00 2001
From: oscar-bek <salamov.behzod@gmail.com>
Date: Thu, 31 Jul 2025 15:05:29 +0900
Subject: [PATCH 07/16] feat: create Message Form

---
 app/(chat)/_components/chat.tsx     |  88 ++++-
 app/(chat)/_components/top-chat.tsx |  64 ++-
 app/(chat)/page.tsx                 | 148 ++++---
 app/layout.tsx                      |  58 +--
 components/ui/popover.tsx           |  33 ++
 components/ui/separator.tsx         |  31 ++
 components/ui/sheet.tsx             | 140 +++++++
 lib/validation.ts                   |  21 +-
 next.config.ts                      |   4 +-
 package-lock.json                   | 592 ++++++++++++++++++++++++++++
 package.json                        |   5 +
 types/index.ts                      |   3 +
 12 files changed, 1093 insertions(+), 94 deletions(-)
 create mode 100644 components/ui/popover.tsx
 create mode 100644 components/ui/separator.tsx
 create mode 100644 components/ui/sheet.tsx

diff --git a/app/(chat)/_components/chat.tsx b/app/(chat)/_components/chat.tsx
index 4ccc788..ce14f2d 100644
--- a/app/(chat)/_components/chat.tsx
+++ b/app/(chat)/_components/chat.tsx
@@ -1,15 +1,101 @@
 import MessageCard from '@/components/cards/message.card'
 import ChatLoading from '@/components/loadings/chat.loading'
+import { Button } from '@/components/ui/button'
+import { Form, FormControl, FormField, FormItem } from '@/components/ui/form'
+import { Input } from '@/components/ui/input'
+import { messageSchema } from '@/lib/validation'
+import { Paperclip, Send, Smile } from 'lucide-react'
+import { FC, useRef } from 'react'
+import { UseFormReturn } from 'react-hook-form'
+import { z } from 'zod'
+import emojies from '@emoji-mart/data'
+import Picker from '@emoji-mart/react'
+import { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover'
+import { useTheme } from 'next-themes'
+
+interface Props {
+	onSendMessage: (values: z.infer<typeof messageSchema>) => void
+	messageForm: UseFormReturn<z.infer<typeof messageSchema>>
+}
+const Chat: FC<Props> = ({ onSendMessage, messageForm }) => {
+	const { resolvedTheme } = useTheme()
+	const inputRef = useRef<HTMLInputElement | null>(null)
+
+	const handleEmojiSelect = (emoji: string) => {
+		const input = inputRef.current
+		if (!input) return
+
+		const text = messageForm.getValues('text')
+		const start = input.selectionStart ?? 0
+		const end = input.selectionEnd ?? 0
+
+		const newText = text.slice(0, start) + emoji + text.slice(end)
+		messageForm.setValue('text', newText)
+
+		setTimeout(() => {
+			input.setSelectionRange(start + emoji.length, start + emoji.length)
+		}, 0)
+	}
 
-const Chat = () => {
 	return (
 		<div className='flex flex-col justify-end z-40 min-h-[92vh]'>
 			{/* Loading */}
 			{/* <ChatLoading /> */}
+
 			{/* Messages */}
 			{/* <MessageCard isReceived /> */}
 
+			{/* Start conversation */}
+			{/* <div className='w-full h-[88vh] flex items-center justify-center'>
+				<div className='text-[100px] cursor-pointer' onClick={() => onSendMessage({ text: '✋' })}>
+					✋
+				</div>
+			</div> */}
+
 			{/* Message input */}
+			<Form {...messageForm}>
+				<form onSubmit={messageForm.handleSubmit(onSendMessage)} className='w-full flex relative'>
+					<Button size={'icon'} type='button' variant={'secondary'}>
+						<Paperclip />
+					</Button>
+					<FormField
+						control={messageForm.control}
+						name='text'
+						render={({ field }) => (
+							<FormItem className='w-full'>
+								<FormControl>
+									<Input
+										className='bg-secondary border-l border-l-muted-foreground border-r border-r-muted-foreground h-9'
+										placeholder='Type a message'
+										value={field.value}
+										onBlur={() => field.onBlur()}
+										onChange={e => field.onChange(e.target.value)}
+										ref={inputRef}
+									/>
+								</FormControl>
+							</FormItem>
+						)}
+					/>
+					<Popover>
+						<PopoverTrigger asChild>
+							<Button size='icon' type='button' variant='secondary'>
+								<Smile />
+							</Button>
+						</PopoverTrigger>
+						<PopoverContent className='p-0 border-none rounded-md absolute right-6 bottom-0'>
+							<Picker
+								data={emojies}
+								theme={resolvedTheme === 'dark' ? 'dark' : 'light'}
+								onEmojiSelect={(emoji: { native: string }) => handleEmojiSelect(emoji.native)}
+							/>
+						</PopoverContent>
+					</Popover>
+
+					<Button type='submit' size={'icon'}>
+						<Send />
+					</Button>
+				</form>
+			</Form>
 		</div>
 	)
 }
diff --git a/app/(chat)/_components/top-chat.tsx b/app/(chat)/_components/top-chat.tsx
index 2b54867..033f19f 100644
--- a/app/(chat)/_components/top-chat.tsx
+++ b/app/(chat)/_components/top-chat.tsx
@@ -1,7 +1,10 @@
 import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 import { Button } from '@/components/ui/button'
+import { Separator } from '@/components/ui/separator'
+import { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from '@/components/ui/sheet'
 import { useCurrentContact } from '@/hooks/use-current'
 import { Settings2 } from 'lucide-react'
+import Image from 'next/image'
 
 const TopChat = () => {
 	const { currentContact } = useCurrentContact()
@@ -35,9 +38,64 @@ const TopChat = () => {
 				</div>
 			</div>
 
-			<Button size={'icon'} variant={'secondary'}>
-				<Settings2 />
-			</Button>
+			<Sheet>
+				<SheetTrigger asChild>
+					<Button size={'icon'} variant={'secondary'}>
+						<Settings2 />
+					</Button>
+				</SheetTrigger>
+				<SheetContent>
+					<SheetHeader>
+						<SheetTitle />
+					</SheetHeader>
+					<div className='mx-auto w-1/2 h-36 relative'>
+						<Avatar className='w-full h-36'>
+							<AvatarImage src={currentContact?.avatar} alt={currentContact?.email} className='object-cover' />
+							<AvatarFallback className='text-6xl uppercase font-spaceGrotesk'>{currentContact?.email[0]}</AvatarFallback>
+						</Avatar>
+					</div>
+
+					<Separator className='my-2' />
+
+					<h1 className='text-center capitalize font-spaceGrotesk text-xl'>{currentContact?.email}</h1>
+
+					<div className='flex flex-col space-y-1'>
+						{currentContact?.firstName && (
+							<div className='flex items-center gap-1 mt-4'>
+								<p className='font-spaceGrotesk'>First Name: </p>
+								<p className='font-spaceGrotesk text-muted-foreground'>{currentContact?.firstName}</p>
+							</div>
+						)}
+						{currentContact?.lastName && (
+							<div className='flex items-center gap-1 mt-4'>
+								<p className='font-spaceGrotesk'>Last Name: </p>
+								<p className='font-spaceGrotesk text-muted-foreground'>{currentContact?.lastName}</p>
+							</div>
+						)}
+						{currentContact?.bio && (
+							<div className='flex items-center gap-1 mt-4'>
+								<p className='font-spaceGrotesk'>
+									About: <span className='font-spaceGrotesk text-muted-foreground'>{currentContact?.bio}</span>
+								</p>
+							</div>
+						)}
+
+						<Separator className='my-2' />
+
+						<h2 className='text-xl'>Image</h2>
+						<div className='flex flex-col space-y-2'>
+							<div className='w-full h-36 relative'>
+								<Image
+									src={'https://github.com/shadcn.png'}
+									alt={'https://github.com/shadcn.png'}
+									fill
+									className='object-cover rounded-md'
+								/>
+							</div>
+						</div>
+					</div>
+				</SheetContent>
+			</Sheet>
 		</div>
 	)
 }
diff --git a/app/(chat)/page.tsx b/app/(chat)/page.tsx
index c9df4c4..e45eb5d 100644
--- a/app/(chat)/page.tsx
+++ b/app/(chat)/page.tsx
@@ -1,73 +1,103 @@
-'use client'
+"use client";
 
-import { Loader2 } from 'lucide-react'
-import ContactList from './_components/contact-list'
-import { useEffect } from 'react'
-import { useRouter } from 'next/navigation'
-import AddContact from './_components/add-contact'
-import { useCurrentContact } from '@/hooks/use-current'
-import { useForm } from 'react-hook-form'
-import { z } from 'zod'
-import { emailSchema } from '@/lib/validation'
-import { zodResolver } from '@hookform/resolvers/zod'
-import TopChat from './_components/top-chat'
-import Chat from './_components/chat'
+import { Loader2 } from "lucide-react";
+import ContactList from "./_components/contact-list";
+import { useEffect } from "react";
+import { useRouter } from "next/navigation";
+import AddContact from "./_components/add-contact";
+import { useCurrentContact } from "@/hooks/use-current";
+import { useForm } from "react-hook-form";
+import { z } from "zod";
+import { emailSchema, messageSchema } from "@/lib/validation";
+import { zodResolver } from "@hookform/resolvers/zod";
+import TopChat from "./_components/top-chat";
+import Chat from "./_components/chat";
 
 const HomePage = () => {
-	const { currentContact } = useCurrentContact()
-	const router = useRouter()
+  const { currentContact } = useCurrentContact();
+  const router = useRouter();
 
-	const contactForm = useForm<z.infer<typeof emailSchema>>({
-		resolver: zodResolver(emailSchema),
-		defaultValues: { email: '' },
-	})
+  const contactForm = useForm<z.infer<typeof emailSchema>>({
+    resolver: zodResolver(emailSchema),
+    defaultValues: { email: "" },
+  });
 
-	useEffect(() => {
-		router.replace('/')
-	}, [])
+  const messageForm = useForm<z.infer<typeof messageSchema>>({
+    resolver: zodResolver(messageSchema),
+    defaultValues: { text: "", image: "" },
+  });
 
-	const onCreateContact = (values: z.infer<typeof emailSchema>) => {
-		// API call to create contact
-		console.log(values)
-	}
+  useEffect(() => {
+    router.replace("/");
+  }, []);
 
-	return (
-		<>
-			{/* Sidebar */}
-			<div className='w-80 h-screen border-r fixed inset-0 z-50'>
-				{/* Loading */}
-				{/* <div className='w-full h-[95vh] flex justify-center items-center'>
+  const onCreateContact = (values: z.infer<typeof emailSchema>) => {
+    // API call to create contact
+    console.log(values);
+  };
+
+  const onSendMessage = (values: z.infer<typeof messageSchema>) => {
+    // API call to send message
+    console.log(values);
+  };
+
+  return (
+    <>
+      {/* Sidebar */}
+      <div className="w-80 h-screen border-r fixed inset-0 z-50">
+        {/* Loading */}
+        {/* <div className='w-full h-[95vh] flex justify-center items-center'>
 					<Loader2 size={50} className='animate-spin' />
 				</div> */}
 
-				{/* Contact list */}
-				<ContactList contacts={contacts} />
-			</div>
-			{/* Chat area */}
-			<div className='pl-80 w-full'>
-				{/* Add contact */}
-				{!currentContact?._id && <AddContact contactForm={contactForm} onCreateContact={onCreateContact} />}
+        {/* Contact list */}
+        <ContactList contacts={contacts} />
+      </div>
+      {/* Chat area */}
+      <div className="pl-80 w-full">
+        {/* Add contact */}
+        {!currentContact?._id && (
+          <AddContact
+            contactForm={contactForm}
+            onCreateContact={onCreateContact}
+          />
+        )}
 
-				{/* Chat */}
-				{currentContact?._id && (
-					<div className='w-full relative'>
-						{/*Top Chat  */}
-						<TopChat />
-						{/* Chat messages */}
-						<Chat />
-					</div>
-				)}
-			</div>
-		</>
-	)
-}
+        {/* Chat */}
+        {currentContact?._id && (
+          <div className="w-full relative">
+            {/*Top Chat  */}
+            <TopChat />
+            {/* Chat messages */}
+            <Chat messageForm={messageForm} onSendMessage={onSendMessage} />
+          </div>
+        )}
+      </div>
+    </>
+  );
+};
 
 const contacts = [
-	{ email: 'john@gmail.com', _id: '1', avatar: 'https://github.com/shadcn.png' },
-	{ email: 'amile@gmail.com', _id: '2', avatar: 'https://github.com/shadcn.png' },
-	{ email: 'faris@gmail.com', _id: '3', avatar: 'https://github.com/shadcn.png' },
-	{ email: 'abdo@gmail.com', _id: '4', avatar: 'https://github.com/shadcn.png' },
-	{ email: 'billi@gmail.com', _id: '5', avatar: 'https://github.com/shadcn.png' },
-]
+  {
+    email: "john@gmail.com",
+    _id: "1",
+    avatar: "https://github.com/shadcn.png",
+    firstName: "John",
+    lastName: "Doe",
+    bio: "",
+  },
+  {
+    email: "jane@gmail.com",
+    _id: "6",
+    avatar: "https://github.com/shadcn.png",
+    firstName: "Jane",
+    lastName: "Doe",
+    bio: "Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quis repellat blanditiis hic reiciendis quibusdam voluptatem necessitatibus, minus sint maxime iste impedit cupiditate ab provident doloremque sed dicta, molestias nemo cum.",
+  },
+  { email: "amile@gmail.com", _id: "2", avatar: "", firstName: "Amile", lastName: "", bio: "" },
+  { email: "faris@gmail.com", _id: "3", avatar: "", firstName: "Faris", lastName: "", bio: "" },
+  { email: "abdo@gmail.com", _id: "4", avatar: "", firstName: "Abdo", lastName: "", bio: "" },
+  { email: "billi@gmail.com", _id: "5", avatar: "", firstName: "Billi", lastName: "", bio: "" },
+];
 
-export default HomePage
\ No newline at end of file
+export default HomePage;
diff --git a/app/layout.tsx b/app/layout.tsx
index c0433dd..6699279 100644
--- a/app/layout.tsx
+++ b/app/layout.tsx
@@ -1,34 +1,42 @@
-import { ThemeProvider } from '@/components/providers/theme.provider'
-import './globals.css'
+import { ThemeProvider } from "@/components/providers/theme.provider";
+import "./globals.css";
 
-import type { Metadata } from 'next'
-import { Space_Grotesk } from 'next/font/google'
+import type { Metadata } from "next";
+import { Space_Grotesk } from "next/font/google";
 
 const spaceGrotesk = Space_Grotesk({
-	weight: ['400', '500', '600', '700', '300'],
-	subsets: ['latin'],
-	variable: '--font-spaceGrotesk',
-})
+  weight: ["400", "500", "600", "700", "300"],
+  subsets: ["latin"],
+  variable: "--font-spaceGrotesk",
+});
 
 export const metadata: Metadata = {
-	title: 'Telegram web',
-	description: 'Telegram web application clone created by Beggi.ac',
-	icons: { icon: '/logo.svg' },
-}
+  title: "Telegram web",
+  description: "Telegram web application clone created by Beggi.ac",
+  icons: { icon: "/telegram.svg" },
+};
 
 export default function RootLayout({
-	children,
+  children,
 }: Readonly<{
-	children: React.ReactNode
+  children: React.ReactNode;
 }>) {
-	return (
-		<html lang='en' suppressHydrationWarning>
-		<body className={`${spaceGrotesk.variable} antialiased`} suppressHydrationWarning>
-				{children}
-				<ThemeProvider attribute='class' defaultTheme='system' enableSystem disableTransitionOnChange>
-					{children}
-				</ThemeProvider>
-			</body>
-		</html>
-	)
-}
\ No newline at end of file
+  return (
+    <html lang="en" suppressHydrationWarning>
+      <body
+        className={`${spaceGrotesk.variable} antialiased`}
+        suppressHydrationWarning
+      >
+        {children}
+        <ThemeProvider
+          attribute="class"
+          defaultTheme="system"
+          enableSystem
+          disableTransitionOnChange
+        >
+          {children}
+        </ThemeProvider>
+      </body>
+    </html>
+  );
+}
diff --git a/components/ui/popover.tsx b/components/ui/popover.tsx
new file mode 100644
index 0000000..41f2395
--- /dev/null
+++ b/components/ui/popover.tsx
@@ -0,0 +1,33 @@
+"use client"
+
+import * as React from "react"
+import * as PopoverPrimitive from "@radix-ui/react-popover"
+
+import { cn } from "@/lib/utils"
+
+const Popover = PopoverPrimitive.Root
+
+const PopoverTrigger = PopoverPrimitive.Trigger
+
+const PopoverAnchor = PopoverPrimitive.Anchor
+
+const PopoverContent = React.forwardRef<
+  React.ElementRef<typeof PopoverPrimitive.Content>,
+  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
+>(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
+  <PopoverPrimitive.Portal>
+    <PopoverPrimitive.Content
+      ref={ref}
+      align={align}
+      sideOffset={sideOffset}
+      className={cn(
+        "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
+        className
+      )}
+      {...props}
+    />
+  </PopoverPrimitive.Portal>
+))
+PopoverContent.displayName = PopoverPrimitive.Content.displayName
+
+export { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }
\ No newline at end of file
diff --git a/components/ui/separator.tsx b/components/ui/separator.tsx
new file mode 100644
index 0000000..ab03051
--- /dev/null
+++ b/components/ui/separator.tsx
@@ -0,0 +1,31 @@
+"use client"
+
+import * as React from "react"
+import * as SeparatorPrimitive from "@radix-ui/react-separator"
+
+import { cn } from "@/lib/utils"
+
+const Separator = React.forwardRef<
+  React.ElementRef<typeof SeparatorPrimitive.Root>,
+  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>
+>(
+  (
+    { className, orientation = "horizontal", decorative = true, ...props },
+    ref
+  ) => (
+    <SeparatorPrimitive.Root
+      ref={ref}
+      decorative={decorative}
+      orientation={orientation}
+      className={cn(
+        "shrink-0 bg-border",
+        orientation === "horizontal" ? "h-[1px] w-full" : "h-full w-[1px]",
+        className
+      )}
+      {...props}
+    />
+  )
+)
+Separator.displayName = SeparatorPrimitive.Root.displayName
+
+export { Separator }
\ No newline at end of file
diff --git a/components/ui/sheet.tsx b/components/ui/sheet.tsx
new file mode 100644
index 0000000..3b44b4d
--- /dev/null
+++ b/components/ui/sheet.tsx
@@ -0,0 +1,140 @@
+"use client"
+
+import * as React from "react"
+import * as SheetPrimitive from "@radix-ui/react-dialog"
+import { cva, type VariantProps } from "class-variance-authority"
+import { X } from "lucide-react"
+
+import { cn } from "@/lib/utils"
+
+const Sheet = SheetPrimitive.Root
+
+const SheetTrigger = SheetPrimitive.Trigger
+
+const SheetClose = SheetPrimitive.Close
+
+const SheetPortal = SheetPrimitive.Portal
+
+const SheetOverlay = React.forwardRef<
+  React.ElementRef<typeof SheetPrimitive.Overlay>,
+  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
+>(({ className, ...props }, ref) => (
+  <SheetPrimitive.Overlay
+    className={cn(
+      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
+      className
+    )}
+    {...props}
+    ref={ref}
+  />
+))
+SheetOverlay.displayName = SheetPrimitive.Overlay.displayName
+
+const sheetVariants = cva(
+  "fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out",
+  {
+    variants: {
+      side: {
+        top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
+        bottom:
+          "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
+        left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
+        right:
+          "inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
+      },
+    },
+    defaultVariants: {
+      side: "right",
+    },
+  }
+)
+
+interface SheetContentProps
+  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
+    VariantProps<typeof sheetVariants> {}
+
+const SheetContent = React.forwardRef<
+  React.ElementRef<typeof SheetPrimitive.Content>,
+  SheetContentProps
+>(({ side = "right", className, children, ...props }, ref) => (
+  <SheetPortal>
+    <SheetOverlay />
+    <SheetPrimitive.Content
+      ref={ref}
+      className={cn(sheetVariants({ side }), className)}
+      {...props}
+    >
+      <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary">
+        <X className="h-4 w-4" />
+        <span className="sr-only">Close</span>
+      </SheetPrimitive.Close>
+      {children}
+    </SheetPrimitive.Content>
+  </SheetPortal>
+))
+SheetContent.displayName = SheetPrimitive.Content.displayName
+
+const SheetHeader = ({
+  className,
+  ...props
+}: React.HTMLAttributes<HTMLDivElement>) => (
+  <div
+    className={cn(
+      "flex flex-col space-y-2 text-center sm:text-left",
+      className
+    )}
+    {...props}
+  />
+)
+SheetHeader.displayName = "SheetHeader"
+
+const SheetFooter = ({
+  className,
+  ...props
+}: React.HTMLAttributes<HTMLDivElement>) => (
+  <div
+    className={cn(
+      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
+      className
+    )}
+    {...props}
+  />
+)
+SheetFooter.displayName = "SheetFooter"
+
+const SheetTitle = React.forwardRef<
+  React.ElementRef<typeof SheetPrimitive.Title>,
+  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
+>(({ className, ...props }, ref) => (
+  <SheetPrimitive.Title
+    ref={ref}
+    className={cn("text-lg font-semibold text-foreground", className)}
+    {...props}
+  />
+))
+SheetTitle.displayName = SheetPrimitive.Title.displayName
+
+const SheetDescription = React.forwardRef<
+  React.ElementRef<typeof SheetPrimitive.Description>,
+  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
+>(({ className, ...props }, ref) => (
+  <SheetPrimitive.Description
+    ref={ref}
+    className={cn("text-sm text-muted-foreground", className)}
+    {...props}
+  />
+))
+SheetDescription.displayName = SheetPrimitive.Description.displayName
+
+export {
+  Sheet,
+  SheetPortal,
+  SheetOverlay,
+  SheetTrigger,
+  SheetClose,
+  SheetContent,
+  SheetHeader,
+  SheetFooter,
+  SheetTitle,
+  SheetDescription,
+}
\ No newline at end of file
diff --git a/lib/validation.ts b/lib/validation.ts
index 11e7f72..77ce878 100644
--- a/lib/validation.ts
+++ b/lib/validation.ts
@@ -1,9 +1,20 @@
-import { z } from 'zod'
+import { z } from "zod";
 
 export const emailSchema = z.object({
-	email: z.string().email({ message: 'Invalid email address, please check and try again.' }),
-})
+  email: z
+    .string()
+    .email({ message: "Invalid email address, please check and try again." }),
+});
 
 export const otpSchema = z
-	.object({ otp: z.string().min(6, { message: 'Your one-time password must be 6 characters.' }) })
-	.merge(emailSchema)
\ No newline at end of file
+  .object({
+    otp: z
+      .string()
+      .min(6, { message: "Your one-time password must be 6 characters." }),
+  })
+  .merge(emailSchema);
+
+export const messageSchema = z.object({
+  text: z.string().min(1, { message: "Message cannot be empty." }),
+  image: z.string().optional(),
+});
diff --git a/next.config.ts b/next.config.ts
index 1bf365d..7ad42e6 100644
--- a/next.config.ts
+++ b/next.config.ts
@@ -1,7 +1,9 @@
 import type { NextConfig } from "next";
 
 const nextConfig: NextConfig = {
-  /* config options here */
+ images: {
+		remotePatterns: [{ protocol: 'https', hostname: 'github.com', pathname: '**' }],
+	},
 };
 
 export default nextConfig;
\ No newline at end of file
diff --git a/package-lock.json b/package-lock.json
index 8bcf951..7399377 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -8,9 +8,14 @@
       "name": "client",
       "version": "0.1.0",
       "dependencies": {
+        "@emoji-mart/data": "^1.2.1",
+        "@emoji-mart/react": "^1.1.1",
         "@hookform/resolvers": "^5.1.1",
         "@radix-ui/react-avatar": "^1.1.10",
+        "@radix-ui/react-dialog": "^1.1.14",
         "@radix-ui/react-label": "^2.1.7",
+        "@radix-ui/react-popover": "^1.1.14",
+        "@radix-ui/react-separator": "^1.1.7",
         "@radix-ui/react-slot": "^1.2.3",
         "@tanstack/react-query": "^5.83.0",
         "add": "^2.0.6",
@@ -519,6 +524,22 @@
         "tslib": "^2.4.0"
       }
     },
+    "node_modules/@emoji-mart/data": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/@emoji-mart/data/-/data-1.2.1.tgz",
+      "integrity": "sha512-no2pQMWiBy6gpBEiqGeU77/bFejDqUTRY7KX+0+iur13op3bqUsXdnwoZs6Xb1zbv0gAj5VvS1PWoUUckSr5Dw==",
+      "license": "MIT"
+    },
+    "node_modules/@emoji-mart/react": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@emoji-mart/react/-/react-1.1.1.tgz",
+      "integrity": "sha512-NMlFNeWgv1//uPsvLxvGQoIerPuVdXwK/EUek8OOkJ6wVOWPUizRBJU0hDqWZCOROVpfBgCemaC3m6jDOXi03g==",
+      "license": "MIT",
+      "peerDependencies": {
+        "emoji-mart": "^5.2",
+        "react": "^16.8 || ^17 || ^18"
+      }
+    },
     "node_modules/@eslint-community/eslint-utils": {
       "version": "4.7.0",
       "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz",
@@ -660,6 +681,44 @@
         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
       }
     },
+    "node_modules/@floating-ui/core": {
+      "version": "1.7.3",
+      "resolved": "https://registry.npmjs.org/@floating-ui/core/-/core-1.7.3.tgz",
+      "integrity": "sha512-sGnvb5dmrJaKEZ+LDIpguvdX3bDlEllmv4/ClQ9awcmCZrlx5jQyyMWFM5kBI+EyNOCDDiKk8il0zeuX3Zlg/w==",
+      "license": "MIT",
+      "dependencies": {
+        "@floating-ui/utils": "^0.2.10"
+      }
+    },
+    "node_modules/@floating-ui/dom": {
+      "version": "1.7.3",
+      "resolved": "https://registry.npmjs.org/@floating-ui/dom/-/dom-1.7.3.tgz",
+      "integrity": "sha512-uZA413QEpNuhtb3/iIKoYMSK07keHPYeXF02Zhd6e213j+d1NamLix/mCLxBUDW/Gx52sPH2m+chlUsyaBs/Ag==",
+      "license": "MIT",
+      "dependencies": {
+        "@floating-ui/core": "^1.7.3",
+        "@floating-ui/utils": "^0.2.10"
+      }
+    },
+    "node_modules/@floating-ui/react-dom": {
+      "version": "2.1.5",
+      "resolved": "https://registry.npmjs.org/@floating-ui/react-dom/-/react-dom-2.1.5.tgz",
+      "integrity": "sha512-HDO/1/1oH9fjj4eLgegrlH3dklZpHtUYYFiVwMUwfGvk9jWDRWqkklA2/NFScknrcNSspbV868WjXORvreDX+Q==",
+      "license": "MIT",
+      "dependencies": {
+        "@floating-ui/dom": "^1.7.3"
+      },
+      "peerDependencies": {
+        "react": ">=16.8.0",
+        "react-dom": ">=16.8.0"
+      }
+    },
+    "node_modules/@floating-ui/utils": {
+      "version": "0.2.10",
+      "resolved": "https://registry.npmjs.org/@floating-ui/utils/-/utils-0.2.10.tgz",
+      "integrity": "sha512-aGTxbpbg8/b5JfU1HXSrbH3wXZuLPJcNEcZQFMxLs3oSzgtVu6nFPkbbGGUvBcUjKV2YyB9Wxxabo+HEH9tcRQ==",
+      "license": "MIT"
+    },
     "node_modules/@hookform/resolvers": {
       "version": "5.1.1",
       "resolved": "https://registry.npmjs.org/@hookform/resolvers/-/resolvers-5.1.1.tgz",
@@ -1551,6 +1610,35 @@
         "url": "https://github.com/sponsors/panva"
       }
     },
+    "node_modules/@radix-ui/primitive": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/@radix-ui/primitive/-/primitive-1.1.2.tgz",
+      "integrity": "sha512-XnbHrrprsNqZKQhStrSwgRUQzoCI1glLzdw79xiZPoofhGICeZRSQ3dIxAKH1gb3OHfNf4d6f+vAv3kil2eggA==",
+      "license": "MIT"
+    },
+    "node_modules/@radix-ui/react-arrow": {
+      "version": "1.1.7",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-arrow/-/react-arrow-1.1.7.tgz",
+      "integrity": "sha512-F+M1tLhO+mlQaOWspE8Wstg+z6PwxwRd8oQ8IXceWz92kfAmalTRf0EjrouQeo7QssEPfCn05B4Ihs1K9WQ/7w==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-primitive": "2.1.3"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/@radix-ui/react-avatar": {
       "version": "1.1.10",
       "resolved": "https://registry.npmjs.org/@radix-ui/react-avatar/-/react-avatar-1.1.10.tgz",
@@ -1605,6 +1693,127 @@
         }
       }
     },
+    "node_modules/@radix-ui/react-dialog": {
+      "version": "1.1.14",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-dialog/-/react-dialog-1.1.14.tgz",
+      "integrity": "sha512-+CpweKjqpzTmwRwcYECQcNYbI8V9VSQt0SNFKeEBLgfucbsLssU6Ppq7wUdNXEGb573bMjFhVjKVll8rmV6zMw==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/primitive": "1.1.2",
+        "@radix-ui/react-compose-refs": "1.1.2",
+        "@radix-ui/react-context": "1.1.2",
+        "@radix-ui/react-dismissable-layer": "1.1.10",
+        "@radix-ui/react-focus-guards": "1.1.2",
+        "@radix-ui/react-focus-scope": "1.1.7",
+        "@radix-ui/react-id": "1.1.1",
+        "@radix-ui/react-portal": "1.1.9",
+        "@radix-ui/react-presence": "1.1.4",
+        "@radix-ui/react-primitive": "2.1.3",
+        "@radix-ui/react-slot": "1.2.3",
+        "@radix-ui/react-use-controllable-state": "1.2.2",
+        "aria-hidden": "^1.2.4",
+        "react-remove-scroll": "^2.6.3"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-dismissable-layer": {
+      "version": "1.1.10",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-dismissable-layer/-/react-dismissable-layer-1.1.10.tgz",
+      "integrity": "sha512-IM1zzRV4W3HtVgftdQiiOmA0AdJlCtMLe00FXaHwgt3rAnNsIyDqshvkIW3hj/iu5hu8ERP7KIYki6NkqDxAwQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/primitive": "1.1.2",
+        "@radix-ui/react-compose-refs": "1.1.2",
+        "@radix-ui/react-primitive": "2.1.3",
+        "@radix-ui/react-use-callback-ref": "1.1.1",
+        "@radix-ui/react-use-escape-keydown": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-focus-guards": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-focus-guards/-/react-focus-guards-1.1.2.tgz",
+      "integrity": "sha512-fyjAACV62oPV925xFCrH8DR5xWhg9KYtJT4s3u54jxp+L/hbpTY2kIeEFFbFe+a/HCE94zGQMZLIpVTPVZDhaA==",
+      "license": "MIT",
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-focus-scope": {
+      "version": "1.1.7",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-focus-scope/-/react-focus-scope-1.1.7.tgz",
+      "integrity": "sha512-t2ODlkXBQyn7jkl6TNaw/MtVEVvIGelJDCG41Okq/KwUsJBwQ4XVZsHAVUkK4mBv3ewiAS3PGuUWuY2BoK4ZUw==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-compose-refs": "1.1.2",
+        "@radix-ui/react-primitive": "2.1.3",
+        "@radix-ui/react-use-callback-ref": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-id": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-id/-/react-id-1.1.1.tgz",
+      "integrity": "sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-use-layout-effect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/@radix-ui/react-label": {
       "version": "2.1.7",
       "resolved": "https://registry.npmjs.org/@radix-ui/react-label/-/react-label-2.1.7.tgz",
@@ -1627,6 +1836,123 @@
         }
       }
     },
+    "node_modules/@radix-ui/react-popover": {
+      "version": "1.1.14",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-popover/-/react-popover-1.1.14.tgz",
+      "integrity": "sha512-ODz16+1iIbGUfFEfKx2HTPKizg2MN39uIOV8MXeHnmdd3i/N9Wt7vU46wbHsqA0xoaQyXVcs0KIlBdOA2Y95bw==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/primitive": "1.1.2",
+        "@radix-ui/react-compose-refs": "1.1.2",
+        "@radix-ui/react-context": "1.1.2",
+        "@radix-ui/react-dismissable-layer": "1.1.10",
+        "@radix-ui/react-focus-guards": "1.1.2",
+        "@radix-ui/react-focus-scope": "1.1.7",
+        "@radix-ui/react-id": "1.1.1",
+        "@radix-ui/react-popper": "1.2.7",
+        "@radix-ui/react-portal": "1.1.9",
+        "@radix-ui/react-presence": "1.1.4",
+        "@radix-ui/react-primitive": "2.1.3",
+        "@radix-ui/react-slot": "1.2.3",
+        "@radix-ui/react-use-controllable-state": "1.2.2",
+        "aria-hidden": "^1.2.4",
+        "react-remove-scroll": "^2.6.3"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-popper": {
+      "version": "1.2.7",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-popper/-/react-popper-1.2.7.tgz",
+      "integrity": "sha512-IUFAccz1JyKcf/RjB552PlWwxjeCJB8/4KxT7EhBHOJM+mN7LdW+B3kacJXILm32xawcMMjb2i0cIZpo+f9kiQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@floating-ui/react-dom": "^2.0.0",
+        "@radix-ui/react-arrow": "1.1.7",
+        "@radix-ui/react-compose-refs": "1.1.2",
+        "@radix-ui/react-context": "1.1.2",
+        "@radix-ui/react-primitive": "2.1.3",
+        "@radix-ui/react-use-callback-ref": "1.1.1",
+        "@radix-ui/react-use-layout-effect": "1.1.1",
+        "@radix-ui/react-use-rect": "1.1.1",
+        "@radix-ui/react-use-size": "1.1.1",
+        "@radix-ui/rect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-portal": {
+      "version": "1.1.9",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-portal/-/react-portal-1.1.9.tgz",
+      "integrity": "sha512-bpIxvq03if6UNwXZ+HTK71JLh4APvnXntDc6XOX8UVq4XQOVl7lwok0AvIl+b8zgCw3fSaVTZMpAPPagXbKmHQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-primitive": "2.1.3",
+        "@radix-ui/react-use-layout-effect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-presence": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-presence/-/react-presence-1.1.4.tgz",
+      "integrity": "sha512-ueDqRbdc4/bkaQT3GIpLQssRlFgWaL/U2z/S31qRwwLWoxHLgry3SIfCwhxeQNbirEUXFa+lq3RL3oBYXtcmIA==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-compose-refs": "1.1.2",
+        "@radix-ui/react-use-layout-effect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/@radix-ui/react-primitive": {
       "version": "2.1.3",
       "resolved": "https://registry.npmjs.org/@radix-ui/react-primitive/-/react-primitive-2.1.3.tgz",
@@ -1649,6 +1975,29 @@
         }
       }
     },
+    "node_modules/@radix-ui/react-separator": {
+      "version": "1.1.7",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-separator/-/react-separator-1.1.7.tgz",
+      "integrity": "sha512-0HEb8R9E8A+jZjvmFCy/J4xhbXy3TV+9XSnGJ3KvTtjlIUy/YQ/p6UYZvi7YbeoeXdyU9+Y3scizK6hkY37baA==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-primitive": "2.1.3"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "@types/react-dom": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
+        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "@types/react-dom": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/@radix-ui/react-slot": {
       "version": "1.2.3",
       "resolved": "https://registry.npmjs.org/@radix-ui/react-slot/-/react-slot-1.2.3.tgz",
@@ -1680,6 +2029,61 @@
         }
       }
     },
+    "node_modules/@radix-ui/react-use-controllable-state": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-controllable-state/-/react-use-controllable-state-1.2.2.tgz",
+      "integrity": "sha512-BjasUjixPFdS+NKkypcyyN5Pmg83Olst0+c6vGov0diwTEo6mgdqVR6hxcEgFuh4QrAs7Rc+9KuGJ9TVCj0Zzg==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-use-effect-event": "0.0.2",
+        "@radix-ui/react-use-layout-effect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-use-effect-event": {
+      "version": "0.0.2",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-effect-event/-/react-use-effect-event-0.0.2.tgz",
+      "integrity": "sha512-Qp8WbZOBe+blgpuUT+lw2xheLP8q0oatc9UpmiemEICxGvFLYmHm9QowVZGHtJlGbS6A6yJ3iViad/2cVjnOiA==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-use-layout-effect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-use-escape-keydown": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-escape-keydown/-/react-use-escape-keydown-1.1.1.tgz",
+      "integrity": "sha512-Il0+boE7w/XebUHyBjroE+DbByORGR9KKmITzbR7MyQ4akpORYP/ZmbhAr0DG7RmmBqoOnZdy2QlvajJ2QA59g==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-use-callback-ref": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/@radix-ui/react-use-is-hydrated": {
       "version": "0.1.0",
       "resolved": "https://registry.npmjs.org/@radix-ui/react-use-is-hydrated/-/react-use-is-hydrated-0.1.0.tgz",
@@ -1711,6 +2115,48 @@
         }
       }
     },
+    "node_modules/@radix-ui/react-use-rect": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-rect/-/react-use-rect-1.1.1.tgz",
+      "integrity": "sha512-QTYuDesS0VtuHNNvMh+CjlKJ4LJickCMUAqjlE3+j8w+RlRpwyX3apEQKGFzbZGdo7XNG1tXa+bQqIE7HIXT2w==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/rect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/react-use-size": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-size/-/react-use-size-1.1.1.tgz",
+      "integrity": "sha512-ewrXRDTAqAXlkl6t/fkXWNAhFX9I+CkKlw6zjEwk86RSPKwZr3xpBRso655aqYafwtnbpHLj6toFzmd6xdVptQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@radix-ui/react-use-layout-effect": "1.1.1"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@radix-ui/rect": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@radix-ui/rect/-/rect-1.1.1.tgz",
+      "integrity": "sha512-HPwpGIzkl28mWyZqG52jiqDJ12waP11Pa1lGoiyUkIEuMLBP0oeK/C89esbXrxsky5we7dfd8U58nm0SgAWpVw==",
+      "license": "MIT"
+    },
     "node_modules/@rtsao/scc": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/@rtsao/scc/-/scc-1.1.0.tgz",
@@ -2850,6 +3296,18 @@
       "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
       "license": "Python-2.0"
     },
+    "node_modules/aria-hidden": {
+      "version": "1.2.6",
+      "resolved": "https://registry.npmjs.org/aria-hidden/-/aria-hidden-1.2.6.tgz",
+      "integrity": "sha512-ik3ZgC9dY/lYVVM++OISsaYDeg1tb0VtP5uL3ouh1koGOaUMDPpbFIei4JkFimWUFPn90sbMNMXQAIVOlnYKJA==",
+      "license": "MIT",
+      "dependencies": {
+        "tslib": "^2.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      }
+    },
     "node_modules/aria-query": {
       "version": "5.3.2",
       "resolved": "https://registry.npmjs.org/aria-query/-/aria-query-5.3.2.tgz",
@@ -3825,6 +4283,12 @@
         "node": ">=8"
       }
     },
+    "node_modules/detect-node-es": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/detect-node-es/-/detect-node-es-1.1.0.tgz",
+      "integrity": "sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==",
+      "license": "MIT"
+    },
     "node_modules/diff": {
       "version": "5.2.0",
       "resolved": "https://registry.npmjs.org/diff/-/diff-5.2.0.tgz",
@@ -3870,6 +4334,13 @@
       "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.189.tgz",
       "integrity": "sha512-y9D1ntS1ruO/pZ/V2FtLE+JXLQe28XoRpZ7QCCo0T8LdQladzdcOVQZH/IWLVJvCw12OGMb6hYOeOAjntCmJRQ=="
     },
+    "node_modules/emoji-mart": {
+      "version": "5.6.0",
+      "resolved": "https://registry.npmjs.org/emoji-mart/-/emoji-mart-5.6.0.tgz",
+      "integrity": "sha512-eJp3QRe79pjwa+duv+n7+5YsNhRcMl812EcFVwrnRvYKoNPoQb5qxU8DG6Bgwji0akHdp6D4Ln6tYLG58MFSow==",
+      "license": "MIT",
+      "peer": true
+    },
     "node_modules/emoji-regex": {
       "version": "9.2.2",
       "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
@@ -5011,6 +5482,15 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/get-nonce": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/get-nonce/-/get-nonce-1.0.1.tgz",
+      "integrity": "sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
     "node_modules/get-own-enumerable-keys": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/get-own-enumerable-keys/-/get-own-enumerable-keys-1.0.0.tgz",
@@ -7527,6 +8007,75 @@
         "react": "^0.14.0 || ^15.0.0"
       }
     },
+    "node_modules/react-remove-scroll": {
+      "version": "2.7.1",
+      "resolved": "https://registry.npmjs.org/react-remove-scroll/-/react-remove-scroll-2.7.1.tgz",
+      "integrity": "sha512-HpMh8+oahmIdOuS5aFKKY6Pyog+FNaZV/XyJOq7b4YFwsFHe5yYfdbIalI4k3vU2nSDql7YskmUseHsRrJqIPA==",
+      "license": "MIT",
+      "dependencies": {
+        "react-remove-scroll-bar": "^2.3.7",
+        "react-style-singleton": "^2.2.3",
+        "tslib": "^2.1.0",
+        "use-callback-ref": "^1.3.3",
+        "use-sidecar": "^1.1.3"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/react-remove-scroll-bar": {
+      "version": "2.3.8",
+      "resolved": "https://registry.npmjs.org/react-remove-scroll-bar/-/react-remove-scroll-bar-2.3.8.tgz",
+      "integrity": "sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==",
+      "license": "MIT",
+      "dependencies": {
+        "react-style-singleton": "^2.2.2",
+        "tslib": "^2.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/react-style-singleton": {
+      "version": "2.2.3",
+      "resolved": "https://registry.npmjs.org/react-style-singleton/-/react-style-singleton-2.2.3.tgz",
+      "integrity": "sha512-b6jSvxvVnyptAiLjbkWLE/lOnR4lfTtDAl+eUC7RZy+QQWc6wRzIV2CE6xBuMmDxc2qIihtDCZD5NPOFl7fRBQ==",
+      "license": "MIT",
+      "dependencies": {
+        "get-nonce": "^1.0.0",
+        "tslib": "^2.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/readable-stream": {
       "version": "3.6.2",
       "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz",
@@ -8963,6 +9512,49 @@
         "requires-port": "^1.0.0"
       }
     },
+    "node_modules/use-callback-ref": {
+      "version": "1.3.3",
+      "resolved": "https://registry.npmjs.org/use-callback-ref/-/use-callback-ref-1.3.3.tgz",
+      "integrity": "sha512-jQL3lRnocaFtu3V00JToYz/4QkNWswxijDaCVNZRiRTO3HQDLsdu1ZtmIUvV4yPp+rvWm5j0y0TG/S61cuijTg==",
+      "license": "MIT",
+      "dependencies": {
+        "tslib": "^2.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/use-sidecar": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/use-sidecar/-/use-sidecar-1.1.3.tgz",
+      "integrity": "sha512-Fedw0aZvkhynoPYlA5WXrMCAMm+nSWdZt6lzJQ7Ok8S6Q+VsHmHpRWndVRJ8Be0ZbkfPc5LRYH+5XrzXcEeLRQ==",
+      "license": "MIT",
+      "dependencies": {
+        "detect-node-es": "^1.1.0",
+        "tslib": "^2.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "peerDependencies": {
+        "@types/react": "*",
+        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/use-sync-external-store": {
       "version": "1.5.0",
       "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.5.0.tgz",
diff --git a/package.json b/package.json
index 4fb6414..001c094 100644
--- a/package.json
+++ b/package.json
@@ -9,9 +9,14 @@
     "lint": "next lint"
   },
   "dependencies": {
+    "@emoji-mart/data": "^1.2.1",
+    "@emoji-mart/react": "^1.1.1",
     "@hookform/resolvers": "^5.1.1",
     "@radix-ui/react-avatar": "^1.1.10",
+    "@radix-ui/react-dialog": "^1.1.14",
     "@radix-ui/react-label": "^2.1.7",
+    "@radix-ui/react-popover": "^1.1.14",
+    "@radix-ui/react-separator": "^1.1.7",
     "@radix-ui/react-slot": "^1.2.3",
     "@tanstack/react-query": "^5.83.0",
     "add": "^2.0.6",
diff --git a/types/index.ts b/types/index.ts
index a711935..a268b08 100644
--- a/types/index.ts
+++ b/types/index.ts
@@ -2,4 +2,7 @@ export interface IUser {
 	email: string
 	_id: string
 	avatar: string
+  firstName: string
+	lastName: string
+	bio: string
 }
\ No newline at end of file
-- 
2.41.0


From 801e48fb16fdd7596cede097a2edbc6ad1fbe594 Mon Sep 17 00:00:00 2001
From: oscar-bek <salamov.behzod@gmail.com>
Date: Thu, 31 Jul 2025 15:58:28 +0900
Subject: [PATCH 08/16] fix: update part belong to ToggleMode Sun/Moon

---
 .gitignore                              |  3 +--
 app/layout.tsx                          |  1 -
 components/providers/theme.provider.tsx |  3 +--
 components/shared/mode-toggle.tsx       | 17 +++++++++++++++--
 4 files changed, 17 insertions(+), 7 deletions(-)

diff --git a/.gitignore b/.gitignore
index 5ef6a52..d1c81e1 100644
--- a/.gitignore
+++ b/.gitignore
@@ -28,7 +28,6 @@
 npm-debug.log*
 yarn-debug.log*
 yarn-error.log*
-.pnpm-debug.log*
 
 # env files (can opt-in for committing if needed)
 .env*
@@ -38,4 +37,4 @@ yarn-error.log*
 
 # typescript
 *.tsbuildinfo
-next-env.d.ts
+next-env.d.ts
\ No newline at end of file
diff --git a/app/layout.tsx b/app/layout.tsx
index 6699279..29e1969 100644
--- a/app/layout.tsx
+++ b/app/layout.tsx
@@ -27,7 +27,6 @@ export default function RootLayout({
         className={`${spaceGrotesk.variable} antialiased`}
         suppressHydrationWarning
       >
-        {children}
         <ThemeProvider
           attribute="class"
           defaultTheme="system"
diff --git a/components/providers/theme.provider.tsx b/components/providers/theme.provider.tsx
index c4dc617..6deffc9 100644
--- a/components/providers/theme.provider.tsx
+++ b/components/providers/theme.provider.tsx
@@ -2,12 +2,11 @@
 
 import * as React from 'react'
 import { ThemeProvider as NextThemesProvider } from 'next-themes'
-import NoSSR from 'react-no-ssr'
 
 export function ThemeProvider({ children, ...props }: React.ComponentProps<typeof NextThemesProvider>) {
 	return (
 		<NextThemesProvider {...props}>
-			<NoSSR>{children}</NoSSR>
+			{children}
 		</NextThemesProvider>
 	)
 }
\ No newline at end of file
diff --git a/components/shared/mode-toggle.tsx b/components/shared/mode-toggle.tsx
index b3f0b0d..65643a0 100644
--- a/components/shared/mode-toggle.tsx
+++ b/components/shared/mode-toggle.tsx
@@ -7,9 +7,22 @@ import { useTheme } from 'next-themes'
 import { Button } from '@/components/ui/button'
 
 export function ModeToggle() {
-	const { setTheme, resolvedTheme } = useTheme()
+	const { theme, setTheme } = useTheme()
+	const [mounted, setMounted] = React.useState(false)
 
-	return resolvedTheme === 'dark' ? (
+	React.useEffect(() => {
+		setMounted(true)
+	}, [])
+
+	if (!mounted) {
+		return (
+			<Button size={'icon'} variant={'ghost'}>
+				<Sun />
+			</Button>
+		)
+	}
+
+	return theme === 'dark' ? (
 		<Button size={'icon'} variant={'ghost'} onClick={() => setTheme('light')}>
 			<Sun />
 		</Button>
-- 
2.41.0


From b174ba71d2e31af8900ba6c6c04347407e8d7cbe Mon Sep 17 00:00:00 2001
From: oscar-bek <salamov.behzod@gmail.com>
Date: Fri, 1 Aug 2025 16:37:56 +0900
Subject: [PATCH 09/16] feat(client): Create Profile Settings UI

---
 app/(chat)/_components/add-contact.tsx |   2 +-
 app/(chat)/_components/settings.tsx    | 191 +++++++++++++++++++++++--
 components/forms/danger-zone.form.tsx  |  67 +++++++++
 components/forms/email.form.tsx        | 108 ++++++++++++++
 components/forms/information.form.tsx  |  70 +++++++++
 components/forms/notification.form.tsx | 122 ++++++++++++++++
 components/ui/accordion.tsx            |  66 +++++++++
 components/ui/dialog.tsx               | 143 ++++++++++++++++++
 components/ui/sheet.tsx                |   5 +-
 components/ui/switch.tsx               |  31 ++++
 components/ui/textarea.tsx             |  18 +++
 hooks/use-audio.ts                     |  30 ++++
 lib/constants.ts                       |   6 +
 lib/validation.ts                      |  15 ++
 public/audio/notification.mp3          | Bin 0 -> 46370 bytes
 public/audio/notification2.mp3         | Bin 0 -> 16762 bytes
 public/audio/sending.mp3               | Bin 0 -> 226002 bytes
 public/audio/sending2.mp3              | Bin 0 -> 17180 bytes
 tailwind.config.ts                     | 164 ++++++++++++---------
 19 files changed, 955 insertions(+), 83 deletions(-)
 create mode 100644 components/forms/danger-zone.form.tsx
 create mode 100644 components/forms/email.form.tsx
 create mode 100644 components/forms/information.form.tsx
 create mode 100644 components/forms/notification.form.tsx
 create mode 100644 components/ui/accordion.tsx
 create mode 100644 components/ui/dialog.tsx
 create mode 100644 components/ui/switch.tsx
 create mode 100644 components/ui/textarea.tsx
 create mode 100644 hooks/use-audio.ts
 create mode 100644 lib/constants.ts
 create mode 100644 public/audio/notification.mp3
 create mode 100644 public/audio/notification2.mp3
 create mode 100644 public/audio/sending.mp3
 create mode 100644 public/audio/sending2.mp3

diff --git a/app/(chat)/_components/add-contact.tsx b/app/(chat)/_components/add-contact.tsx
index 282a42d..f3c2e99 100644
--- a/app/(chat)/_components/add-contact.tsx
+++ b/app/(chat)/_components/add-contact.tsx
@@ -28,7 +28,7 @@ const AddContact: FC<Props> = ({ contactForm, onCreateContact }) => {
 									<FormItem>
 										<Label>Email</Label>
 										<FormControl>
-											<Input placeholder='info@sammi.ac' className='h-10 bg-secondary' {...field} />
+											<Input placeholder='info@beggi.ac' className='h-10 bg-secondary' {...field} />
 										</FormControl>
 										<FormMessage className='text-xs text-red-500' />
 									</FormItem>
diff --git a/app/(chat)/_components/settings.tsx b/app/(chat)/_components/settings.tsx
index b7a02ad..c19536f 100644
--- a/app/(chat)/_components/settings.tsx
+++ b/app/(chat)/_components/settings.tsx
@@ -1,12 +1,183 @@
-import { Button } from '@/components/ui/button'
-import { Menu } from 'lucide-react'
+import DangerZoneForm from "@/components/forms/danger-zone.form";
+import EmailForm from "@/components/forms/email.form";
+import InformationForm from "@/components/forms/information.form";
+import NotificationForm from "@/components/forms/notification.form";
+import {
+  Accordion,
+  AccordionContent,
+  AccordionItem,
+  AccordionTrigger,
+} from "@/components/ui/accordion";
+import { Avatar, AvatarFallback } from "@/components/ui/avatar";
+import { Button } from "@/components/ui/button";
+import {
+  Popover,
+  PopoverContent,
+  PopoverTrigger,
+} from "@/components/ui/popover";
+import { Separator } from "@/components/ui/separator";
+import {
+  Sheet,
+  SheetContent,
+  SheetDescription,
+  SheetHeader,
+  SheetTitle,
+} from "@/components/ui/sheet";
+import { Switch } from "@/components/ui/switch";
+import {
+  LogIn,
+  Menu,
+  Moon,
+  Settings2,
+  Sun,
+  Upload,
+  UserPlus,
+  VolumeOff,
+} from "lucide-react";
+import { useTheme } from "next-themes";
+import { useState } from "react";
 
 const Settings = () => {
-	return (
-		<Button size={'icon'} variant={'secondary'}>
-			<Menu />
-		</Button>
-	)
-}
-
-export default Settings
\ No newline at end of file
+  const [isProfileOpen, setIsProfileOpen] = useState(false);
+  const { resolvedTheme, setTheme } = useTheme();
+
+  return (
+    <>
+      <Popover>
+        <PopoverTrigger asChild>
+          <Button size={"icon"} variant={"secondary"}>
+            <Menu />
+          </Button>
+        </PopoverTrigger>
+        <PopoverContent className="p-0 w-80">
+          <h2 className="pt-2 pl-2 text-muted-foreground">
+            Settings: <span className="text-white">info@beggi.ac</span>
+          </h2>
+          <div className="my-2">
+            <Separator />
+          </div>
+          <div className="flex flex-col">
+            <div
+              className="flex justify-between items-center p-2 hover:bg-secondary cursor-pointer"
+              onClick={() => setIsProfileOpen(true)}
+            >
+              <div className="flex items-center gap-1">
+                <Settings2 size={16} />
+                <span className="text-sm">Profile</span>
+              </div>
+            </div>
+
+            <div className="flex justify-between items-center p-2 hover:bg-secondary cursor-pointer">
+              <div className="flex items-center gap-1">
+                <UserPlus size={16} />
+                <span className="text-sm">Create contact</span>
+              </div>
+            </div>
+
+            <div className="flex justify-between items-center p-2 hover:bg-secondary">
+              <div className="flex items-center gap-1">
+                <VolumeOff size={16} />
+                <span className="text-sm">Mute</span>
+              </div>
+              <Switch />
+            </div>
+
+            <div className="flex justify-between items-center p-2 hover:bg-secondary">
+              <div className="flex items-center gap-1">
+                {resolvedTheme === "dark" ? (
+                  <Sun size={16} />
+                ) : (
+                  <Moon size={16} />
+                )}
+                <span className="text-sm">
+                  {resolvedTheme === "dark" ? "Light mode" : "Dark mode"}
+                </span>
+              </div>
+              <Switch
+                checked={resolvedTheme === "dark" ? true : false}
+                onCheckedChange={() =>
+                  setTheme(resolvedTheme === "dark" ? "light" : "dark")
+                }
+              />
+            </div>
+
+            <div className="flex justify-between items-center bg-destructive p-2 cursor-pointer">
+              <div className="flex items-center gap-1">
+                <LogIn size={16} />
+                <span className="text-sm">Logout</span>
+              </div>
+            </div>
+          </div>
+        </PopoverContent>
+      </Popover>
+
+      <Sheet open={isProfileOpen} onOpenChange={setIsProfileOpen}>
+        <SheetContent side={"left"} className="w-80 p-2">
+          <>
+            <SheetHeader>
+              <SheetTitle className="text-2xl">My profile</SheetTitle>
+              <SheetDescription>
+                Setting up your profile will help you connect with your friends
+                and family easily.
+              </SheetDescription>
+            </SheetHeader>
+            <div className="my-2">
+              <Separator />
+            </div>
+
+            <div className="mx-auto w-1/2 h-36 relative">
+              <Avatar className="w-full h-36">
+                <AvatarFallback className="text-6xl uppercase font-spaceGrotesk">
+                  SB
+                </AvatarFallback>
+              </Avatar>
+              <Button size={"icon"} className="absolute right-0 bottom-0">
+                <Upload size={16} />
+              </Button>
+            </div>
+
+            <Accordion type="single" collapsible className="mt-4">
+              <AccordionItem value="item-1">
+                <AccordionTrigger className="bg-secondary px-2">
+                  Basic information
+                </AccordionTrigger>
+                <AccordionContent className="px-2 mt-2">
+                  <InformationForm />
+                </AccordionContent>
+              </AccordionItem>
+
+              <AccordionItem value="item-2" className="mt-2">
+                <AccordionTrigger className="bg-secondary px-2">
+                  Email
+                </AccordionTrigger>
+                <AccordionContent className="px-2 mt-2">
+                  <EmailForm />
+                </AccordionContent>
+              </AccordionItem>
+
+              <AccordionItem value="item-3" className="mt-2">
+                <AccordionTrigger className="bg-secondary px-2">
+                  Notification
+                </AccordionTrigger>
+                <AccordionContent className="mt-2">
+                  <NotificationForm />
+                </AccordionContent>
+              </AccordionItem>
+
+              <AccordionItem value="item-4" className="mt-2">
+                <AccordionTrigger className="bg-secondary px-2">
+                  Danger zone
+                </AccordionTrigger>
+                <AccordionContent className="my-2 px-2">
+                  <DangerZoneForm />
+                </AccordionContent>
+              </AccordionItem>
+            </Accordion>
+          </>
+        </SheetContent>
+      </Sheet>
+    </>
+  );
+};
+
+export default Settings;
diff --git a/components/forms/danger-zone.form.tsx b/components/forms/danger-zone.form.tsx
new file mode 100644
index 0000000..c635396
--- /dev/null
+++ b/components/forms/danger-zone.form.tsx
@@ -0,0 +1,67 @@
+import React from 'react'
+import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '../ui/dialog'
+import { Button } from '../ui/button'
+import { Separator } from '../ui/separator'
+import { useForm } from 'react-hook-form'
+import { z } from 'zod'
+import { confirmTextSchema } from '@/lib/validation'
+import { zodResolver } from '@hookform/resolvers/zod'
+import { Form, FormControl, FormDescription, FormField, FormItem, FormMessage } from '../ui/form'
+import { Input } from '../ui/input'
+
+const DangerZoneForm = () => {
+	const form = useForm<z.infer<typeof confirmTextSchema>>({
+		resolver: zodResolver(confirmTextSchema),
+		defaultValues: { confirmText: '' },
+	})
+
+	function onSubmit(values: z.infer<typeof confirmTextSchema>) {
+		console.log(values)
+	}
+	return (
+		<>
+			<p className='text-xs text-muted-foreground text-center'>
+				Are you sure you want to delete your account? This action cannot be undone.
+			</p>
+
+			<Dialog>
+				<DialogTrigger asChild>
+					<Button className='mt-2 w-full font-spaceGrotesk font-bold' variant={'destructive'}>
+						Delete permenantly
+					</Button>
+				</DialogTrigger>
+				<DialogContent>
+					<DialogHeader>
+						<DialogTitle>Are you absolutely sure?</DialogTitle>
+						<DialogDescription>
+							This action cannot be undone. This will permanently delete your account and remove your data from our servers.
+						</DialogDescription>
+					</DialogHeader>
+					<Separator />
+					<Form {...form}>
+						<form onSubmit={form.handleSubmit(onSubmit)} className='space-y-2'>
+							<FormField
+								control={form.control}
+								name='confirmText'
+								render={({ field }) => (
+									<FormItem>
+										<FormDescription>
+											Please type <span className='font-bold'>DELETE</span> to confirm.
+										</FormDescription>
+										<FormControl>
+											<Input className='bg-secondary' {...field} />
+										</FormControl>
+										<FormMessage className='text-xs text-red-500' />
+									</FormItem>
+								)}
+							/>
+							<Button className='w-full font-bold'>Submit</Button>
+						</form>
+					</Form>
+				</DialogContent>
+			</Dialog>
+		</>
+	)
+}
+
+export default DangerZoneForm
\ No newline at end of file
diff --git a/components/forms/email.form.tsx b/components/forms/email.form.tsx
new file mode 100644
index 0000000..c9e9133
--- /dev/null
+++ b/components/forms/email.form.tsx
@@ -0,0 +1,108 @@
+import { oldEmailSchema, otpSchema } from '@/lib/validation'
+import { zodResolver } from '@hookform/resolvers/zod'
+import React, { useState } from 'react'
+import { useForm } from 'react-hook-form'
+import { z } from 'zod'
+import { Form, FormControl, FormField, FormItem, FormMessage } from '../ui/form'
+import { Input } from '../ui/input'
+import { Label } from '../ui/label'
+import { Button } from '../ui/button'
+import { REGEXP_ONLY_DIGITS } from 'input-otp'
+import { InputOTP, InputOTPGroup, InputOTPSeparator, InputOTPSlot } from '../ui/input-otp'
+
+const EmailForm = () => {
+	const [verify, setVerify] = useState(false)
+
+	const emailForm = useForm<z.infer<typeof oldEmailSchema>>({
+		resolver: zodResolver(oldEmailSchema),
+		defaultValues: { email: '', oldEmail: 'info@beggi.ac' },
+	})
+
+	const otpForm = useForm<z.infer<typeof otpSchema>>({
+		resolver: zodResolver(otpSchema),
+		defaultValues: { otp: '', email: '' },
+	})
+
+	function onEmailSubmit(values: z.infer<typeof oldEmailSchema>) {
+		console.log(values)
+		otpForm.setValue('email', values.email)
+		setVerify(true)
+	}
+
+	function onVerifySubmit(values: z.infer<typeof otpSchema>) {
+		console.log(values)
+	}
+
+	return !verify ? (
+		<Form {...emailForm}>
+			<form onSubmit={emailForm.handleSubmit(onEmailSubmit)} className='space-y-2'>
+				<FormField
+					control={emailForm.control}
+					name='oldEmail'
+					render={({ field }) => (
+						<FormItem>
+							<Label>Current email</Label>
+							<FormControl>
+								<Input className='h-10 bg-secondary' disabled {...field} />
+							</FormControl>
+							<FormMessage className='text-xs text-red-500' />
+						</FormItem>
+					)}
+				/>
+				<FormField
+					control={emailForm.control}
+					name='email'
+					render={({ field }) => (
+						<FormItem>
+							<Label>Enter a new email</Label>
+							<FormControl>
+								<Input placeholder='info@beggi.ac' className='h-10 bg-secondary' {...field} />
+							</FormControl>
+							<FormMessage className='text-xs text-red-500' />
+						</FormItem>
+					)}
+				/>
+				<Button type='submit' className='w-full'>
+					Verify email
+				</Button>
+			</form>
+		</Form>
+	) : (
+		<Form {...otpForm}>
+			<form onSubmit={otpForm.handleSubmit(onVerifySubmit)} className='space-y-2'>
+				<Label>New email</Label>
+				<Input className='h-10 bg-secondary' disabled value={emailForm.watch('email')} />
+				<FormField
+					control={otpForm.control}
+					name='otp'
+					render={({ field }) => (
+						<FormItem>
+							<Label>One-Time Password</Label>
+							<FormControl>
+								<InputOTP maxLength={6} className='w-full' pattern={REGEXP_ONLY_DIGITS} {...field}>
+									<InputOTPGroup className='w-full '>
+										<InputOTPSlot index={0} className='w-full dark:bg-primary-foreground bg-secondary' />
+										<InputOTPSlot index={1} className='w-full dark:bg-primary-foreground bg-secondary' />
+										<InputOTPSlot index={2} className='w-full dark:bg-primary-foreground bg-secondary' />
+									</InputOTPGroup>
+									<InputOTPSeparator />
+									<InputOTPGroup className='w-full '>
+										<InputOTPSlot index={3} className='w-full dark:bg-primary-foreground bg-secondary' />
+										<InputOTPSlot index={4} className='w-full dark:bg-primary-foreground bg-secondary' />
+										<InputOTPSlot index={5} className='w-full dark:bg-primary-foreground bg-secondary' />
+									</InputOTPGroup>
+								</InputOTP>
+							</FormControl>
+							<FormMessage className='text-xs text-red-500' />
+						</FormItem>
+					)}
+				/>
+				<Button type='submit' className='w-full'>
+					Submit
+				</Button>
+			</form>
+		</Form>
+	)
+}
+
+export default EmailForm
\ No newline at end of file
diff --git a/components/forms/information.form.tsx b/components/forms/information.form.tsx
new file mode 100644
index 0000000..385449a
--- /dev/null
+++ b/components/forms/information.form.tsx
@@ -0,0 +1,70 @@
+import { profileSchema } from '@/lib/validation'
+import { zodResolver } from '@hookform/resolvers/zod'
+import { useForm } from 'react-hook-form'
+import { z } from 'zod'
+import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '../ui/form'
+import { Input } from '../ui/input'
+import { Label } from '../ui/label'
+import { Textarea } from '../ui/textarea'
+import { Button } from '../ui/button'
+
+const InformationForm = () => {
+	const form = useForm<z.infer<typeof profileSchema>>({
+		resolver: zodResolver(profileSchema),
+		defaultValues: { firstName: '', lastName: '', bio: '' },
+	})
+
+	const onSubmit = (data: z.infer<typeof profileSchema>) => {
+		// Handle form submission
+		console.log(data)
+	}
+
+	return (
+		<Form {...form}>
+			<form onSubmit={form.handleSubmit(onSubmit)} className='space-y-2'>
+				<FormField
+					control={form.control}
+					name='firstName'
+					render={({ field }) => (
+						<FormItem>
+							<Label>First name</Label>
+							<FormControl>
+								<Input placeholder='Oman' className='bg-secondary' {...field} />
+							</FormControl>
+							<FormMessage className='text-xs text-red-500' />
+						</FormItem>
+					)}
+				/>
+				<FormField
+					control={form.control}
+					name='lastName'
+					render={({ field }) => (
+						<FormItem>
+							<Label>Last name</Label>
+							<FormControl>
+								<Input placeholder='Ali' className='bg-secondary' {...field} />
+							</FormControl>
+						</FormItem>
+					)}
+				/>
+				<FormField
+					control={form.control}
+					name='bio'
+					render={({ field }) => (
+						<FormItem>
+							<FormLabel>Bio</FormLabel>
+							<FormControl>
+								<Textarea placeholder='Enter anyhting about yourself' className='bg-secondary' {...field} />
+							</FormControl>
+						</FormItem>
+					)}
+				/>
+				<Button type='submit' className='w-full'>
+					Submit
+				</Button>
+			</form>
+		</Form>
+	)
+}
+
+export default InformationForm
\ No newline at end of file
diff --git a/components/forms/notification.form.tsx b/components/forms/notification.form.tsx
new file mode 100644
index 0000000..97e6c8e
--- /dev/null
+++ b/components/forms/notification.form.tsx
@@ -0,0 +1,122 @@
+import React, { useState } from "react";
+import { Popover, PopoverContent, PopoverTrigger } from "../ui/popover";
+import { Button } from "../ui/button";
+import { ChevronDown, PlayCircle } from "lucide-react";
+import { SOUNDS } from "@/lib/constants";
+import { cn } from "@/lib/utils";
+import useAudio from "@/hooks/use-audio";
+import { Separator } from "../ui/separator";
+import { Switch } from "../ui/switch";
+
+const NotificationForm = () => {
+  const [selectedSound, setSelectedSound] = useState("");
+
+  const { playSound } = useAudio();
+
+  const onPlaySound = (value: string) => {
+    setSelectedSound(value);
+    playSound(value);
+  };
+
+  return (
+    <>
+      <div className="flex items-center justify-between relative">
+        <div className="flex flex-col">
+          <p className="font-spaceGrotesk">Notification Sound</p>
+          <p className="font-spaceGrotesk text-muted-foreground text-xs">
+            Apple
+          </p>
+        </div>
+
+        <Popover>
+          <PopoverTrigger asChild>
+            <Button variant="outline" size="sm">
+              Select <ChevronDown />
+            </Button>
+          </PopoverTrigger>
+          <PopoverContent className="w-80 absolute -right-12">
+            <div className="flex flex-col space-y-1">
+              {SOUNDS.map((sound) => (
+                <div
+                  className={cn(
+                    "flex justify-between items-center bg-secondary cursor-pointer hover:bg-primary-foreground",
+                    selectedSound === sound.value && "bg-primary-foreground"
+                  )}
+                  key={sound.label}
+                  onClick={() => onPlaySound(sound.value)}
+                >
+                  <Button
+                    size={"sm"}
+                    variant={"ghost"}
+                    className="justify-start"
+                  >
+                    {sound.label}
+                  </Button>
+                  <Button size={"icon"} variant={"ghost"}>
+                    <PlayCircle />
+                  </Button>
+                </div>
+              ))}
+            </div>
+            <Button className="w-full mt-2 font-bold">Submit</Button>
+          </PopoverContent>
+        </Popover>
+      </div>
+      <Separator />
+      <div className="flex items-center justify-between relative">
+        <div className="flex flex-col">
+          <p className="font-spaceGrotesk">Sending Sound</p>
+          <p className="font-spaceGrotesk text-muted-foreground text-xs">
+            Apple
+          </p>
+        </div>
+
+        <Popover>
+          <PopoverTrigger asChild>
+            <Button size={"sm"}>
+              Select <ChevronDown />
+            </Button>
+          </PopoverTrigger>
+          <PopoverContent className="w-80 absolute -right-12">
+            <div className="flex flex-col space-y-1">
+              {SOUNDS.map((sound) => (
+                <div
+                  className={cn(
+                    "flex justify-between items-center bg-secondary cursor-pointer hover:bg-primary-foreground",
+                    selectedSound === sound.value && "bg-primary-foreground"
+                  )}
+                  key={sound.label}
+                  onClick={() => onPlaySound(sound.value)}
+                >
+                  <Button
+                    size={"sm"}
+                    variant={"ghost"}
+                    className="justify-start"
+                  >
+                    {sound.label}
+                  </Button>
+                  <Button size={"icon"} variant={"ghost"}>
+                    <PlayCircle />
+                  </Button>
+                </div>
+              ))}
+            </div>
+            <Button className="w-full mt-2 font-bold">Submit</Button>
+          </PopoverContent>
+        </Popover>
+      </div>
+      <div className="my-3">
+        <Separator />
+      </div>
+      <div className="flex items-center justify-between relative">
+        <div className="flex flex-col">
+          <p>Mode Mute</p>
+          <p className="text-muted-foreground text-xs">Muted</p>
+        </div>
+        <Switch />
+      </div>
+    </>
+  );
+};
+
+export default NotificationForm;
diff --git a/components/ui/accordion.tsx b/components/ui/accordion.tsx
new file mode 100644
index 0000000..4ade27c
--- /dev/null
+++ b/components/ui/accordion.tsx
@@ -0,0 +1,66 @@
+"use client";
+
+import * as React from "react";
+import * as AccordionPrimitive from "@radix-ui/react-accordion";
+import { ChevronDown } from "lucide-react";
+
+import { cn } from "@/lib/utils";
+
+function Accordion({
+  ...props
+}: React.ComponentProps<typeof AccordionPrimitive.Root>) {
+  return <AccordionPrimitive.Root data-slot="accordion" {...props} />;
+}
+
+function AccordionItem({
+  className,
+  ...props
+}: React.ComponentProps<typeof AccordionPrimitive.Item>) {
+  return (
+    <AccordionPrimitive.Item
+      data-slot="accordion-item"
+      className={cn("border-b last:border-b-0", className)}
+      {...props}
+    />
+  );
+}
+
+function AccordionTrigger({
+  className,
+  children,
+  ...props
+}: React.ComponentProps<typeof AccordionPrimitive.Trigger>) {
+  return (
+    <AccordionPrimitive.Header className="flex">
+      <AccordionPrimitive.Trigger
+        data-slot="accordion-trigger"
+        className={cn(
+          "focus-visible:border-ring focus-visible:ring-ring/50 flex flex-1 items-start justify-between gap-4 rounded-md py-4 text-left text-sm font-medium transition-all outline-none hover:underline focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-50 [&[data-state=open]>svg]:rotate-180",
+          className
+        )}
+        {...props}
+      >
+        {children}
+        <ChevronDown className="text-muted-foreground pointer-events-none size-4 shrink-0 translate-y-0.5 transition-transform duration-200" />
+      </AccordionPrimitive.Trigger>
+    </AccordionPrimitive.Header>
+  );
+}
+
+function AccordionContent({
+  className,
+  children,
+  ...props
+}: React.ComponentProps<typeof AccordionPrimitive.Content>) {
+  return (
+    <AccordionPrimitive.Content
+      data-slot="accordion-content"
+      className="data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down overflow-hidden text-sm"
+      {...props}
+    >
+      <div className={cn("pt-0 pb-4", className)}>{children}</div>
+    </AccordionPrimitive.Content>
+  );
+}
+
+export { Accordion, AccordionItem, AccordionTrigger, AccordionContent };
diff --git a/components/ui/dialog.tsx b/components/ui/dialog.tsx
new file mode 100644
index 0000000..d9ccec9
--- /dev/null
+++ b/components/ui/dialog.tsx
@@ -0,0 +1,143 @@
+"use client"
+
+import * as React from "react"
+import * as DialogPrimitive from "@radix-ui/react-dialog"
+import { XIcon } from "lucide-react"
+
+import { cn } from "@/lib/utils"
+
+function Dialog({
+  ...props
+}: React.ComponentProps<typeof DialogPrimitive.Root>) {
+  return <DialogPrimitive.Root data-slot="dialog" {...props} />
+}
+
+function DialogTrigger({
+  ...props
+}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {
+  return <DialogPrimitive.Trigger data-slot="dialog-trigger" {...props} />
+}
+
+function DialogPortal({
+  ...props
+}: React.ComponentProps<typeof DialogPrimitive.Portal>) {
+  return <DialogPrimitive.Portal data-slot="dialog-portal" {...props} />
+}
+
+function DialogClose({
+  ...props
+}: React.ComponentProps<typeof DialogPrimitive.Close>) {
+  return <DialogPrimitive.Close data-slot="dialog-close" {...props} />
+}
+
+function DialogOverlay({
+  className,
+  ...props
+}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {
+  return (
+    <DialogPrimitive.Overlay
+      data-slot="dialog-overlay"
+      className={cn(
+        "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+function DialogContent({
+  className,
+  children,
+  showCloseButton = true,
+  ...props
+}: React.ComponentProps<typeof DialogPrimitive.Content> & {
+  showCloseButton?: boolean
+}) {
+  return (
+    <DialogPortal data-slot="dialog-portal">
+      <DialogOverlay />
+      <DialogPrimitive.Content
+        data-slot="dialog-content"
+        className={cn(
+          "bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg",
+          className
+        )}
+        {...props}
+      >
+        {children}
+        {showCloseButton && (
+          <DialogPrimitive.Close
+            data-slot="dialog-close"
+            className="ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4"
+          >
+            <XIcon />
+            <span className="sr-only">Close</span>
+          </DialogPrimitive.Close>
+        )}
+      </DialogPrimitive.Content>
+    </DialogPortal>
+  )
+}
+
+function DialogHeader({ className, ...props }: React.ComponentProps<"div">) {
+  return (
+    <div
+      data-slot="dialog-header"
+      className={cn("flex flex-col gap-2 text-center sm:text-left", className)}
+      {...props}
+    />
+  )
+}
+
+function DialogFooter({ className, ...props }: React.ComponentProps<"div">) {
+  return (
+    <div
+      data-slot="dialog-footer"
+      className={cn(
+        "flex flex-col-reverse gap-2 sm:flex-row sm:justify-end",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+function DialogTitle({
+  className,
+  ...props
+}: React.ComponentProps<typeof DialogPrimitive.Title>) {
+  return (
+    <DialogPrimitive.Title
+      data-slot="dialog-title"
+      className={cn("text-lg leading-none font-semibold", className)}
+      {...props}
+    />
+  )
+}
+
+function DialogDescription({
+  className,
+  ...props
+}: React.ComponentProps<typeof DialogPrimitive.Description>) {
+  return (
+    <DialogPrimitive.Description
+      data-slot="dialog-description"
+      className={cn("text-muted-foreground text-sm", className)}
+      {...props}
+    />
+  )
+}
+
+export {
+  Dialog,
+  DialogClose,
+  DialogContent,
+  DialogDescription,
+  DialogFooter,
+  DialogHeader,
+  DialogOverlay,
+  DialogPortal,
+  DialogTitle,
+  DialogTrigger,
+}
diff --git a/components/ui/sheet.tsx b/components/ui/sheet.tsx
index 3b44b4d..e6d6f4c 100644
--- a/components/ui/sheet.tsx
+++ b/components/ui/sheet.tsx
@@ -51,7 +51,10 @@ const sheetVariants = cva(
 
 interface SheetContentProps
   extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
-    VariantProps<typeof sheetVariants> {}
+    VariantProps<typeof sheetVariants> {
+  className?: string
+  children?: React.ReactNode
+}
 
 const SheetContent = React.forwardRef<
   React.ElementRef<typeof SheetPrimitive.Content>,
diff --git a/components/ui/switch.tsx b/components/ui/switch.tsx
new file mode 100644
index 0000000..6a2b524
--- /dev/null
+++ b/components/ui/switch.tsx
@@ -0,0 +1,31 @@
+"use client"
+
+import * as React from "react"
+import * as SwitchPrimitive from "@radix-ui/react-switch"
+
+import { cn } from "@/lib/utils"
+
+function Switch({
+  className,
+  ...props
+}: React.ComponentProps<typeof SwitchPrimitive.Root>) {
+  return (
+    <SwitchPrimitive.Root
+      data-slot="switch"
+      className={cn(
+        "peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50",
+        className
+      )}
+      {...props}
+    >
+      <SwitchPrimitive.Thumb
+        data-slot="switch-thumb"
+        className={cn(
+          "bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0"
+        )}
+      />
+    </SwitchPrimitive.Root>
+  )
+}
+
+export { Switch }
diff --git a/components/ui/textarea.tsx b/components/ui/textarea.tsx
new file mode 100644
index 0000000..7f21b5e
--- /dev/null
+++ b/components/ui/textarea.tsx
@@ -0,0 +1,18 @@
+import * as React from "react"
+
+import { cn } from "@/lib/utils"
+
+function Textarea({ className, ...props }: React.ComponentProps<"textarea">) {
+  return (
+    <textarea
+      data-slot="textarea"
+      className={cn(
+        "border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+
+export { Textarea }
diff --git a/hooks/use-audio.ts b/hooks/use-audio.ts
new file mode 100644
index 0000000..9c24873
--- /dev/null
+++ b/hooks/use-audio.ts
@@ -0,0 +1,30 @@
+import useSound from 'use-sound'
+
+const useAudio = () => {
+	const [play1] = useSound('/audio/notification.mp3')
+	const [play2] = useSound('/audio/notification2.mp3')
+	const [play3] = useSound('/audio/sending.mp3')
+	const [play4] = useSound('/audio/sending2.mp3')
+
+	const playSound = (sound: string) => {
+		switch (sound) {
+			case 'notification.mp3':
+				play1()
+				break
+			case 'notification2.mp3':
+				play2()
+				break
+			case 'sending.mp3':
+				play3()
+				break
+			case 'sending2.mp3':
+				play4()
+				break
+			default:
+		}
+	}
+
+	return { playSound }
+}
+
+export default useAudio
\ No newline at end of file
diff --git a/lib/constants.ts b/lib/constants.ts
new file mode 100644
index 0000000..7e5a132
--- /dev/null
+++ b/lib/constants.ts
@@ -0,0 +1,6 @@
+export const SOUNDS = [
+	{ value: 'notification.mp3', label: 'Apple' },
+	{ value: 'notification2.mp3', label: 'Sammish' },
+	{ value: 'sending.mp3', label: 'Belli' },
+	{ value: 'sending2.mp3', label: 'Oranger' },
+]
\ No newline at end of file
diff --git a/lib/validation.ts b/lib/validation.ts
index 77ce878..d714b17 100644
--- a/lib/validation.ts
+++ b/lib/validation.ts
@@ -6,6 +6,10 @@ export const emailSchema = z.object({
     .email({ message: "Invalid email address, please check and try again." }),
 });
 
+export const oldEmailSchema = z
+	.object({ oldEmail: z.string().email({ message: 'Invalid email address, please check and try again.' }) })
+	.merge(emailSchema)
+
 export const otpSchema = z
   .object({
     otp: z
@@ -18,3 +22,14 @@ export const messageSchema = z.object({
   text: z.string().min(1, { message: "Message cannot be empty." }),
   image: z.string().optional(),
 });
+
+export const profileSchema = z.object({
+	firstName: z.string().min(2),
+	lastName: z.string().optional(),
+	bio: z.string().optional(),
+})
+
+export const confirmTextSchema = z.object({ confirmText: z.string() }).refine(data => data.confirmText === 'DELETE', {
+	message: 'You must type DELETE to confirm.',
+	path: ['confirmText'],
+})
\ No newline at end of file
diff --git a/public/audio/notification.mp3 b/public/audio/notification.mp3
new file mode 100644
index 0000000000000000000000000000000000000000..ba17e734a081823fe411a783a858735a1bad5f0c
GIT binary patch
literal 46370
zcmX`RV{{~3+ces-ZQHhuiEZ1qZQHhuNiyNYb|$uMXHMpR-tY8Ujn%7vRo7KjSM3b|
z0C3G*JRK~Z?QH=7V8Flk?<cdZ11l2%0Dv@eGBpJN8qjP_3|+Q>0WyYe#%%2L?2PnG
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

literal 0
HcmV?d00001

diff --git a/public/audio/notification2.mp3 b/public/audio/notification2.mp3
new file mode 100644
index 0000000000000000000000000000000000000000..b4256612fc200b1f0702620a537e1a50e071d890
GIT binary patch
literal 16762
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

literal 0
HcmV?d00001

diff --git a/public/audio/sending.mp3 b/public/audio/sending.mp3
new file mode 100644
index 0000000000000000000000000000000000000000..4bed79ac13a34091d96abaad652b359c5046b27e
GIT binary patch
literal 226002
zcmeGF_y5lI|NoEQ@5f`{Veh?HQAAb}nI%*rDcK|qm9$inq*5yFh>TPkgp?Jcp)@2a
zD_gSHgNMiCIPS;id_H=;fBK%j|H0GMV;$o@Znx{WTrbz_?RMPIxl^YfN2Ucgwe8jM
zw!24FD;5Mn7{r1Op9Dd%1+gGKC>9JF`tYb*V?ogK_Tl$e<Nv^F_uuoth#}R6-gev2
z!K13(Hu9dktBtySXtj>_4j){t$EbS--&w8O&>_PIR_pliy>|^9K4R#|YQ2UJ8G28(
z9-Vss-&^k*K4|2?k&iUsZ2$ZBzYz$6Ap=JZ+}=6--%$K-1pYSy{~Lk-jllm#;D00V
zzY+M~2>kyUfe@6g#E>*3J;+E&zTp2?(s@?#Um}@Eo=46gN0EP!oyZ@^PsrEE7s$uR
zbmTSU8RT)~K4dsD5V;w-0l6OOigfuuxi)!i>apI*-pL`zNMt-R75NhR0r9+Edo835
zG6Z=Xc`bM~ScrTRtPS=dNu*?0B5V*|9JWWgBfXHj!aKte;oac_$Y|tl9_fo*hcpQ<
z4XcG!L*IJ<`6c){n2kJwTpM%?$_8bEL&<-+%hg=bl;o)7{mIry5#-nCm*@lJ{%B;>
zBf24Ki4;e266X@T6T1>?6KfLl6Y~;_kh#da$kN1;#Dc_UiPgx@$iBqhM7gM3R2S)s
zyo{_ta*<}qrpX79^+-0-CAfw=el=JftO_#1jPOciO!#=X0m+PI#9GI$h~0&}g)B$*
zAt94pGOa{fr?ie~Hz7Bt-I8_{QU}S2or`@R`!2R9wlMZ8GCKB1>{{ev<j?TWa2C=I
z$qjOYuaIYv%7}A43`s<Z=nLd7q#klKaWwG_G7h;DX^+%IPR38h(-Y~5t?{k#O~@f6
zjlWAEU6Fpshsa*!g6M*1Sae&o5~+}^kh~RHjg(;~?hNkYDps0sGJ|)8A0j7^D`Qv2
zCLzDXevOq&E1z~DayRlCGBNG>v_)y3r%glVr+t<-J?&i{c_Hn|v~g)SAlIf{mzFOr
zf7+(l=Gc_j)L3`qg4l(zcf)rX*)gI2<^=BtU4pK`p5)%-Q^*C#AJHGFxoRD?iB2a@
zGpkDyvym$kZ4wtFyW%@jGAI6Cd^WNenH8TIpNISz|07-}Q73UxqJH9GWO`y+qHt6=
zx<0xtdLeo~Iv?dk-ICpsFDGA0*<Ht=LrT}3hx%bXuI%0Lhj3k3CsrrcG1ejW05U%I
zRP0aWaO_a5a9ZKC6S3o|`ClGe#$8Q`y%c*fc0=s?*znlxXi2M-YzjAq+mV-$A>rV#
z7V<-|E_f%H8eA203VufKK17-)n<bA%N1`{QH==>jfap>ro`|E>3lr}nk0Qg7>ycqd
zwM3Of<3yuG1ID2{kJV1pO5BpTIWYrqj#nmDB#tBwCkjSc(KS)$)O<e`J&7iL9<7R2
zMCFoYlG~!cqJ7css5o|ZVX{uLL-NYxH0<x*<lV_-$t8H7P08v()u2$2Klm~EZE|jM
zcJhVfgyhx9w#m1WuO#!5=aSvA;Mu_}bY?~H3GyqlI`}%+7Hki`2)+y!^L=#iXfP>w
zF}NV88#D=;2K$rylRqbaNv=X3MV{xVmn0h{+a=p4zl*+$HXv_AuSc&$lcSB%?^yi}
zQM;&pbT#+UDY`0Zj-(;qC%#W4Fp%BIro`sN?|cuVSkx?Pfv@O=me-3OkH$t%MH8Yy
z(GV;tNbZUDN2j7QQARR<vKRicUvfb5Meb!(@?oyxrR1sP*<?JKOlAc|0)OTUvVsH2
zgQ=ex`0)Yw#r#3Rpa7#%C#V<H2x<q}$(-cj<Z(RMk>rBpB1R=Qxiq-~S(SVv`8Gan
z8e{hf=b4-=mn_fUGm^<Dmds3MC3i%-qJ_-K>gXFRa(L=$hedZpH%7g=(`%wfxP!~1
z){MZ7+<(`oPIMs}+=G$m7Iox%`KS_ic`>hO$7_1=itC~o(R<AB*HNFSU-W)7ml@v2
zh;ED;r*!OC^aS=*FIk@}slezzPBeLg>t2{F0<ZLY@^^e-w;+$%y)L*OJ)IUj7(5Uh
z4E`ksd_x4-A2bP@hW)|;X!I+1_Zw1v{rB*X@Qv`T@MrwwGvRaLxbW$)QdpVj&?Bsi
zbPl_Ou`oTnJs8IE9t`R;c4@@Pec1a$$p@H){>f9(3B2-Z?sznF|8g`KJGhy9T8kfF
zlURiXPeI3fCB`HkOI(q-EKxO4F;Oy6G|`twbK+;>r{l-tS0y^~Ow+`Zyz1e^1H9v{
z#FoTgyni*?u`$s+YRZ^C#Ay76W^IfXMDwHajKqoPSkyFmDKj+{&0kDJ&P|plF5MU0
z6WqZy&q2!%GX}lG-eIw@NO(oqD*Om}C!7*44nN0ROiTHTkMNf>_^VP_j#u6o)+Fxb
z1ZVJWGlP#fN>A+N2FAAww%<5t5In@#J|9dB1_c9yPlI{E+rgBS5AGH84lWB?@tP*M
z;<R8T{`o%Q_C?8ylMZ;1WZ~qu(YI(qcOqg7w4x3_n@2UHs!_oxUvv;3Fex!1@i+HA
zFY!TQ4x_gU|G9-Rcp5+OS@da?9i5Ke#@>&jyQ7KqQ<&>B!TI1~;&rX?!f<l<W_T(*
zAFjm@{uuts9nK8%#R|n1hfBh3;osq*@F>rH6RrqXhM$J>!d>BR{P|;O!CQE`L1@Qh
zwBRX5=q>*0A5Leqx`bEp%1^?3h%M`ol}KhR9}#s#tXJ&j*qGS3*k`fNWBJpHq#eN1
zCStL)dTEW){*3J)f_@SEGPZ)KyNXEqX6({f)7V3?$6^&@mGIIR#C{CdbH$!(5SXJe
z_fRwZGuRZ2#sB;f{2sg<yuiqJ4ypx}@IsA(n)tSKMppz@gGW0eHIXZWw!w7fYc4b5
z*Glw$NH829_Daw%7|bhc2buVVy1_-*Niw-Lxg)tY`8~+1N3u_{Z}KK^R!yWZl0TUb
zD=&~d7#)bJC#xk-qG$7?kE1*y&>B4PDgHhj{S$Rfc1|9P{*6ZChn~PHD+d*W9PmhQ
z^k5oNFf0__54L)g5q<~#DjX{oD;O)x2wWDsF4iMflM!ebYaA;cD;dj-<&P!8WZ0UR
zy+7O+c8+!CH>C~lD#8pFjLqU0hr@rFpC=iy*Rjx=SaqZDR<!ma{z?m@Ab~C{<o^E%
zHU{~?LLUbo@YhGd8a(_*!H2=$!45R~y<idYI^xf#g7F}jiNv<6g8t}qgOrXx5;RAy
z3a&=?d!p4>fHLmpug*mLZamh5nW!3EiaZ)Th8HS|?zaq%qnXzS*I^&eV>Mlams0X#
z>YR<3Ut`X(;5ak9DY%pw?-pJg-WQHU<Hm=thOgm^ehnvv&xhZkXMcrT!@1$d;g)bm
z>gPhNb~_sT0e>A0Pllyq<%!)l#d5+tw0M8`6Yo98?`Qey7Y=0XAHw3V<hR?f{^DU9
zu&=-G#v|4V>xb3D+TmHS!#+G^A)cRu=9~@kf_M;yuLp1O=&|5_{NB6xk!R4uS&ZfA
zU<}$cjM<&Vh`osQFJv@71bx1NuQ`Dq7{T}K;0N&XQX=fn%)=MKvXoAK9ef-7NUY5a
z3x=D6Ex~-=`&95WBQ%-gEJ$6`0v@ZA-ZH&TzApJ1WL%XoJbg@hJgrFjR~cI}7UbWN
ze@EfkMb;E8S?qX`Rz+ilt}OI%!G8)aDwb8ePw5{^Us~z=N|UQJs=BPkJvFz~{qTad
z7rs+(T!Z@?{@8fKrQ4e4w)msz;buLW-Pycjvs;^&ZBnc0<Bi5NzWw4G8%(SBSp6sJ
zTvPXhnuBZoT;<-XuUDv1adFwk<=U3|wA7+97nOapa+4|zD*sUV<_ZTY94r5Dg@F}M
zSDaVrs><(HX<PNjDtA{cS9xLOm6du`zNo^N6-Jj!l&e#AcG(G~b4wp6epQKkihNb1
zS;0{SGx9gezo}4#!hH(QD*RjK*~}5)gW-qKtY~}Ux5O3kdhs%OiQEHczdZZW>29Y_
z9eeB8(+3M2{B&=*y~TEq*!9Tv)!V-N<J9J2zhAWRzMn_^RN?!y@4_{Itp4MxcUFA8
zbo7$177zb?*n)hYE&24?PcHmu$%of}uw~A<*`sIW%y{_S^cmx(4|#Xbw8GP$duQmh
z-BUk$r_R)jcg9ZftJSn6Q&&xE^-jKbpPp8C=7;YdoptZb%5&bEUF?G?b2iN#^5M;&
zp8R;kg5sYQ`(pLyiDh3cUA+3aRRzA!{<gr+MSsfo`vn`PZr!<M_U^3RCH|d$FnMa_
zsp@%!@*asjAG<GWUe-q?%auA*aa^U2HDk46_4n5A(73~;bua7C@>J{ES6<O!e8>Ac
z|8ULg-OgTn*Y%sbukO+K#(Qo$*!$C4>fgHb)|UOc_uJfmT>tz7TMbw{@UH;_1|<eO
zJ?O>(I|lyLzvsZk{VpFc=GIuh*KaP_r%tcwH{Ef=mLB!4ed)SsowKibwBvW3`ds;1
z+nOyqUjA0&sh6I=aC5zN)gP;IU4<PLx|Ud2Vp)Mx1x}#v896)8Wgh?RShWN1?0;{^
z+3lnLcyIG{zumT>{ZAd%@BQxAZ$JHd{OSQKYA%22%XVL6eZFwvz=i1xnk@Kz{=f6b
z&uck<)29pOb^f&2{0~3<V1C<q@z18r|7Fprh2y@w^ouUb^Di5_s_V*qYgezCu<pU{
zfBt#nPy2t*_`TV-N4Bot+hXsUBex#8IQz_*rxFh(7G!M5*jf0(A`QyUE!(Nu@oM3P
zn=fqEsA1#FT3mP8?kkG4soQ>7hmKdj(fLf*9@mcQzUzk9Z!CDzs@|<`dAd)&zV-Wl
z)^B;=w*5Qx`?>$5ex(Qe*{}bA*ZNf&(6#Sx{W|qock7_uf8YFX&wjmv?swkMsM{;o
z?z_6hHR&C$?%2HbZEeOkf2&2j;fYJ?)ID8ybd^d~N0m8Rrd5%NMY?7T&*&a+9e?Tc
zwWlvSyz0<`J>~YC+S+7mmrZy7e)})?{Jd`6m*3A?``DVlSHAyM-({tjKJrDa#p4#$
zUf6!Y&iUm(TQINh{L`QAoA*fSYsdUi^DbPlc7BIN`xZRExXI_QExGE;8&{NC{_5(1
ztMYw&VD0=LX0Ge`YyV$bZ635~`?ea}+V1^iPx-^29Qyav`=?svR?CgTg0XT1x)f+p
z?B!x7%G_PHQ{_FC|El>~tv4?mQEy^{hZ`PjeE8CN&Ax7aLCemUUwOsdt&g>--S$x1
z3)@$2Kd?jo4%c?v)V@N;2JP?d@NwIJ+r`^7X}kW4+}5{WKB?8D7VlqnSCdgqlMT;Y
za-!bP^*hzhUuR*}o2$K0zGQ{>N){^hL7~HiuFbeJqhq3ZBJJ$Y*}IQDeXQ`o7yoIw
zXX@@V+gol=`}2}N2K+W^!`nZ-x&DoHPkn#=w++7edd;g}KfAj7s;gHP{A$gLvCH=_
zpRw%8<(DmMz5LwL>MOP{yJBUuV%X|Nt3F-x<k!Q$z51K&>wfrt;!n@4e`CXYzxLWZ
zdebjk3vRt-*P@+A_YdB``0&+-^PO6LvR+P*^CI}aVa7EX8w(aIbW@2XCH^TpwA}8>
zW2$^t<I$Sa>JGo)T>U>UDtt-MXv3wOnha|GK#P5sg_qyaYVs9*Tffle!8UWRY<A^c
zZRcLOyX~D<&ThN4O|iC>+FW<#b5|^GUH0<JS~YLc?Xv1k>o-d@I^X!A216QtQ*TE7
z33a;FJzxE!8q+E@sobvYS7q~;xV^;mLc0sSo^NHoouH<7<CEeqoa=k;mQ%$}O*mTX
zXqA8G9DH(r_P$zsChRV<bKu{Vw-4IZdCQZ3t@z`g&Ee*no0k2)dE>r~@!$Gy9Q9lC
zjop5$xUtc1Wq)tDvEin!zdy10y-myi{P&OQTl;MJZF~9c<97b}_r^WV_k;%?*k9$}
z_YR&pGU-Upi8+LkwP&{HEYA5SzB#@IJhL$U$Mk{uC*|K#uw0?pMb8!eyhPcOzm#rQ
z=ACj?%Ev0cTybrsK9!GFd8z7y)v8s`uKs?F!!>5rysBnUYh=y(wPH1w)f`%*e9f1t
zx2e&l+P~E{R(Y`MtV)+x-dka0#ewDamYZI>M49|0?<v`!*o0zT3%_2tY}R#IMe;Sv
zH!SVZv=Tw7;IH@(@yX}!J^%9A{%4;#-SPCi6MavtI@<SW?ZaOjntrgx!378EAK16A
z=f3WHm+ZNG&$Qj!cQxPDXV>RD*X}I4bMnspfB(3%>ds4dP25>-_sCuK_dLIQ!rr5M
zF5Ca%zRZ8d94Pzml!NabZgMy{_Ri5)PP95P=yavi=dxF3&&zo#r)ggKysM*DQAU_A
zoR&5(ZDi&vnXB_3&EKftodusOyrJ;(MYk7yy7=zmSC#yv<jhiqOK&ONwahnVT9wtW
zd{wq(xl-j`EmyVN^m6OUb}HAP?1yEimMK|wbm=3dOO<+})VdNEm%OF;m&Knfx~b@k
zh5sykOTjk_wkdF5fjOB!Wd50cB7Jo1nb=^WeZ{C)v@P$OyjkbRoF9GensY0&CuF~W
zdeG^#Q(vBZ>_puYyN^9}Z2i&Ok1juQ!;vM2uQ}ZP@UBC94&8GodFX{h2M;}P=$^yT
zp?!xRI6U>pB}Z;PdiqGiV?Q5Vdc5E9(<i2%n0BiBsT<FfIP-V*?Cd|!eRyu}`SIs>
z=6#!2JW7x1fmXA_M0jcXRp}RGcFN4jS2h2s0=2T<F1V@SsKQGNZ!2;^(d&!NDK@$I
zvEr|lI9uYYlC?_>F7<1vze{y1UAOcbrEe&`wsgzVAC;a}s%Yt2rCuyGpyanD7ndkg
za$NBp#dC^wEB0BDM3G{JdltUB;P`^03VcvtQob+p&CXbz@p0P9wD&>$ZzNw$J_m;}
zKktpaZ_dv;|J}K_&)s;o+Szqyo<DQt>D*IWPrh*S#S<-0j6GiG`1oVBj!i#$+0kuB
z?mzOtkwQl*A6am?{*hIOe?L6z@C`=}9=_v9a3t&K>?4mIEqC;aV>^zPJ-+<d+T(W}
zUwUHLiBl)%oUDF&+o@q^>YhnE`%`w)bLr=f<b0DeBKNx7Sp0C_yNSt(UdissKZC8o
zhp=)Nr?*Y-m@y#Zxy+9<Yvk{mziokg8I|5yLkrF**rm|KLP6p7h36DLQn+xDn~Gdj
zWO9*riySGkq)0~5CyV@4q+gK_i)<-et;nr~XBJ*m=uDxL1urgCyWp(_j})k!bt-?A
z0_*Y}%Xf3;!<oC&bJF{#-IMkn__HVY_XQY<&Sa_U^A_dZm)kwJ()sM1YB{IR{d4y7
zv&ro5v+HLcKhx|?_UUI&w?F;*scxqZpPX^B?a9+8TAe(0qRh$fPZT-1>O}g<#V5Wx
zIr8LpCm%gI_*BJHb59L9_2%hbr^lbU>P*q>&1bT+zs^2#_N%i$o_qIP!Sny*960~|
z`HFe5yf@<$;-4gDCVq<6Ma{t2?a9bKiY<+8NjskQbo#sLzh#`xct7)}%r5yJ$k#Og
z;QR~o@6CU4fq@0q6gXd?L)PP1^0QehvU0K>%36>$I_q=(T9b9Iz{Ods3!E)btU$X0
zlk>06|6#t3`POD0%$%LEHe+M@vGlC;YU$O}E=?;Js~tNIDxM9Gloy?gK1jTi7#qJg
z{!8A{yz#libH6zM=K1$>#^$U#_r|%F=L(%Wd3Md&s%MX6AIknB`&{;#?D5%MvoFt%
zAwQg{%NPyIZkT;CdqsA`v+?ZtXUCjvbFTQgbLW0OH#+BroC)WLoS&9EHg{^?Q+dPV
zz2a>XmnJTSDY+b`Z4@~CDsqLf@O4vRET2oCmHv3f)Qkz4b2DGdw<6yI`Df+7ut1*z
zQGq5|w`a}Bs#|by!Rrf7!b{98xT9c|LJbSuSLnq;zw!O^Lj4QPDs--3^FqHDELo^V
z!F~nTWF@kSWOd5Aw!o7GrsV%I|I_*A=Np?jC$me&9T}IU-;mxtZD?9qU|jd`W)jaZ
zm=nDlO@gf$6(1D8Ca+Q6fZTSu<<6hUDVuZjT*Y%o&Q?78Pxk%X^&4kyK2!e8*3<8w
z9(uag>0Lzkey4h$DtfBQsZA$Kp8DbBy{GD&T6*f9Q`=9yb}Br*>{PeY`A!!&^ZjYx
z)jT_XW@Gl$>}6-4J^RPGkIs$H>60_%{6pvO%k7cdC9iSbA~@5B6L%!OBOhI2MS#3&
z2D-XGb~aWdy=HpTjP4o7Gm2&|&fJpuR=%(Eoy=D$|JnR?3N$Y;yugwIM+*$hdOK@)
z*37Ku(1jUUTeBu+t<8EmYh~7=tRq=>X3fsZmvu$f`T}8AT7f17mghf|KNI}^Y`z8g
zKFa(hvvFpR%qba5G8Uz;Pd}5EKfPXB%e3aPcCm-UC&H;@MhlYjliT5ei$|GJ??mUs
zl=!ppI`QK1=kxB*JCyrN?hUz3a`&JA_I!u))z05_zVrEgIV*Fv=X{Y9oZp%g&-o+g
z^_&qoqjP%Z49#hiGdt(;oY?ulbILHjZ=ZkU{DrxNa>wNk%gxQ*lRGr;`n;;~!tp2K
z_r&YNt^NaZGMHMyjme&{vvZUEVF2n-^;jH!9aeyAm<#7y6`j5tj=N@htMn(*r=)+C
zz9qeEMzf4Y8P{hF%XlVZUdFE(i!y%C*qV`-Q8Ke>W-PO2W-;#ga7Mw*l^HuSZpgSN
zBRjoV#<29U={3?XOFxztOMfrz%e3NY)zjw2mc)9-2E_J;M?%LUj<O66h6V?z4NZop
zYye}M9UVswQW?1;dJR^)Zd5s{A619tjzv=wFD711Jd-$+IFxuIF)~pi$`7OV986I|
zc!%ZDkMNBRVUu<sjbNGNIr@e}!%1)fWn(qSJl=}!iJgqyn09;G`)SM4E+KAANney6
zrB}!pobhDF^o*}EDrC0GyezX%=9B36Cz-!xuFgD=IX`oA=IP9e`QFZ4nRzU;biUUz
zmu5bgIVJOj%+E3_WnPi_S4K|8+>CV@O&Ft9jMuB_pQP_k%S*c>ZA{v+SQP6L>rD<G
zi}i&qe>Hd$CZ>Jx1RP~0m{aeuFud<D_`VhKPe4(R#@ojm#82jJ%Nv$=ZQk+RO}VkW
ze{!G8y)*ab+?Kiha@*vl<?cP-Ew^EA;{5jWlX6Go_Rej=oDa@@FLy%j@41U}TjW*B
z8<^KA@5#K|^M1`+l2<dO19!%g@ni97iQ+_yrxHbppSMssz&fH^V2wXdeg^N|9R{;L
zRid@QUb6d}sC7+*@%jV}*#o0cJJu-nMC=7>29slt#-58!h`ko;8@q$M8w$&HTPz(W
z<}CNQ1%BoP9K&>&h@P-7W#CM=20LL`zJ-Ts2g_U}RZW}+fBaN(Y>K1b9Q_&{W!_(k
zo&n8V%9ULeT^n_XO2Yfqg%3W2?ru-~ny3WUI0`pjj!~--m4O-V0I&L7v=!d7E?m_6
z$(b<GQ(>?Y$$GH!58xNi!ugzp1$-8E_fzhrU92m0jj2>__QtxT^+|g<ZDv~I^iJv3
z)0?Khmi|%t{PgeAkECa06w9cWaYe>W88!IcCF8b?z8Mem*ZmnCGX`ed%J27OOv)IF
z-ju;QzD(bcJ~DkGk+*kxiS!H7pQMJ=D{Xk%hS;vyE3ujIS+~ZvGA@p16<E9<sTdB2
z4f&8Oel^9Rmr72E#=vg(igv;K&rH0YxSRS`heVUaj`;fc$MLt~FQFU#<JZI=iVu#L
zibr|7^Va8mo%d1RhP-8Y%k$>s9m?C37v&wyyEA?h)uYMrRp`^X`2KjCL_=8P+Y-xR
zO^?H&)`}`bZ&QcZAN?J*rzZI}T=^f#&B+EqLztG=g5QG8K`Xc*ZS<9JDxBI`Bo^xj
zqxni~234WCu??}^u@Y&u(rTwQPivdjGp!9Zv6g9F8O^(?qP0vblU6tFVC+0>XI|{@
z*fBiI59r7+?0+D9Ugg*(xYmK;9bqY0<zw(cJAys%@-tw~dZqNkD)Vp24O9&0rfN4`
zl2;+^VIZp{PopW{qPf3B-=n<?QeRWhf@M@4j=?(?N@gUB!B5uWwN<dO@#xrn)PEkN
z2Ky1?y&rzQ3VdmQn9sYBFM}n4*hw9!64rqK?}^vA14ejNI0x-N8Rmq?!fbp<HTcLD
zu#@fh-ZoYRpShoBipI*tW}xdssTYrdeY_#ODZBv2@nihYUmUj=(h2#B3e?=>2e7HV
zlU1oxEQmg$sxb|IyL^;LoJxF4m3Kzs6(T}QDqp1&d*d79JK{gZ$Hqs*Tg5Mo_lRE^
zzcgMgULAX`63>cf=k3a?6E6{O6t5ib9B&%$7;hZEBi=jy0Qxa6J}tg0z9HU_s@lzo
zE{TcM4h|%?VfPu-jc%b@IG*|66*Yo;pG*~JRdQw03jY(qlfiE4A=Sb<%>P)b-cN=X
z$C^_mE($L_o+{u2u+={@qw!b;X1YXLjkM0xhVLK`x-0GRw2#wPq&<N}y_q(bs`2fq
zue#_+ZmdAsUVQIgu><JO`>}~|-R)xCV#nd)^^G5e3mNNA!;WCLa`=maVbSnASi-lc
zDYn6D)If?NOXwMR5;l2QawuPelWmfhCp%KRE1E2nEXAx}Obp4P7WOk((7(^ZMmHw1
zv;-qvg9bVNv+xjWsLUTt9!r)8N~VrK6wXrL)DM1l46NgH_{)FcVM}l|7g0OtO>O92
zMr09{fp@slo$$=xhQCldC=olx9VEj7Df^DX{IPA}UK%C}#7>5};c}`8AB77T#b-cg
zJ>gXAaCg;VqQfvRh~P%&q<oaz^2KoP^23Yp#p<iR@e*oUEve_%AX=m+qv%2`U{AD-
zisGu2@19OoaV|XJSSmnUqfODCXnRx*-Kv|c&O6HT-e$>LVDG0;-CRUPY&liDEO`FY
z$<xVNRQoz`-rD%dAK+aN1V@6p;DLeRaPIbYsu({||C$l5fpu;~mq0dm)gK>FIaUvj
zzHRIt>J*O?RlDOEMi3F2F{4?rGO+_#%wypM;_jR9%(sPYsg(T<i~Jdt)3>nlhhT{_
zsXOjV?n_!5xR#m8qyqGLG!GB>AQ8U=K7J3?t<R};mrayOWF`($`_`Z7`{H^3r2JeE
z{}&IqDDSzvd-De5T}8CJHt(9ehI#GsF33yEJD8i9cR06pUctOFd3m{y<_*g0lh-!y
z$GnAktMWd`s~#^HuN2RSzZidn`udC1+<%H6jc<?V#Q%wROf&<<zm(WOPr{B=eXRj#
zWFYmWx%ifRR79>#-jlqOYVS|U2-%CYBc|U68-6QZ<u<BoQ((pAvOB@xw-2ugTfnYA
zh<A7hpE{aK;(~A)XnElO>D41Vdliv#2vzz^c&tAjq+eJ%tbi4irq&j5tX~+trJ$wT
zsT{l*Tu7X*$;@p@ZXt?(LVa%ubNqHHmW)r1qpEf<mG3Li`b+V8_a;Xq??4k8V>N@Q
zwB=zHM<adEVQM%hsL_8I%|>(niq=M7McT|so<GEM4XCPKPftOA`YCS1-aboyO4V)^
z)#b@_-3;RAE6D@MM&v8RUWe7#R=J=&T_;_+!a6|}s!Pqu%O+3}Xoa=ifzQ1TPk#rs
zfE$7vsX)ESE3Zq{3qFGBKON*yi<w7t>#tOu;C+zX7s2w>>#ZqRa~Khfq~6tn(YTA6
z()r{7c!>JgPekM|78DQE_0mCUYWzRo9a>Wlel_JQsuL0Z#q;SO3J@p$po%=54u!j^
zR9k&+9yN$cM}?xpV2u5Vt;EdFsJFg|j7wCaE_)j|ZDe9d;&y(vp;w_5-3nC`#i-gA
zO60|l#D9&irf21B{9t?wXlrNuUwT)5L33;3&#xd352n`JEzve{Ut(zDEBYXg5|20F
z`Oos3=dA_Sxu2`)LDl<HX5}>yk$&rTX6_z*!q4d3-$-3FpfdHPn}VBzdl``r0;A1B
zsw7`f*D6d@tr4E1+I1UMN%ib<`f+BbYLpN0$U`YzygIy|h&3vO&stCix`xVjed=Y6
z(bmS{WubMM?L-4>IM#TE;3Jz;#i|xmXErYnS|eqUpOQaPUH&||j(XuG;O|~o$RISP
za;h3%Cb<c07o+QECm!lAa9Tme-6~=!ympYxjVjW&Q7u_9*@Sm@p%bHQvLsr22^GUf
zl5@zb_17NT`u(3El`GJp#>~F{T0eaT&i+&Gyi{0`8eajdXBaWO7ZtM?u(XLp=Fj-~
zd<x6d$4kv4vgd?pR9G*F#i%#xv(t%hwTSM;VijU_sX49>H&b2P7na~vCx}tUsGKbh
zzoPCti(1^ol#P}oHuzPT-m%ft_^gx7#G^YW_v6*;z)y**?7>ogVfH=&f$T_b$4Yk7
zOR<z*ofpx~$=u}(y5GiQrNgkRfhk)Xg%!WTD_SKlW7gNB(esnvP?Z%I8NdEwH0EKC
z8<1a-bJ#%~+<O7KF(l=M?!vZSPt_;~P>p|*I_4NE$9H0Xmoa~0{c$|jo+!|Q8Ffw%
z)AezT7-V;!x^^d;_a^wTIkVG*ewL!if_RU!^xBk2u8x)xhgRdUM}R20r+(_Y3q}F<
zvorBi;%ll`-z3)4x$_`>KDQ-$Cte_P>p(BVJ6Kc?`Wh~$*QZa)A}&ol4@PMKUg<_R
zlz8Q}#IvCOP4qdvlITvS$TiWGSVjBjG0r4%S{f~iE&$~XM%Uir8XboWs^8U-M$}!e
zrX#`L7Hwi{uq#LhRoqS#H;#WzUHuT4&iTKAsCI@3eii7{IM*$93sLTo*wa+xZ;Oor
z@y?5VLWO>2Y<>#2WXICd7RT1ao+ba8ANvYa^fJhHB=7D|^s7exvj=o=3XMso^hL~n
zJ^FYrweFT->+ql85Y{>$RM?wbupJfptLVKc5d4CMRKcbvq6rc6xCb4Xl$?mSU6K5b
zdGAFvzAw>S3_OCF=}jJ=py#Uwe;e)nyEEC8vFQR{Rf3L+EF$X?aPbAn+Q~1#%CAI|
z@OVFgI^Rs$T`nCH;-?Z=WD91vC*D4PGA)I*)w_ey-l!gE!ixU3=+7uljlVW%M4!};
z&H%eIAEwu3Z1ORFK8VFW2-@gLBzg<YokR~z-&9<>oMWv3eLM}S`3;$m=Dx)9_J_Vp
z|L0$b_gfd6xe(b#T+@&5;n8o=dgGjN=T!0}j~63HC>RvxduOCFSpNQC6p^GS=xty?
zBU18O;>nkIC4W|9Oe-N*BKBmeAL@yE?lFpRq|$KsdGyEpLoCb1j?U3DRfy-xAu%{D
zdq_K@QTaeFVkfV=3X!b@qHWh88rR^sk7Hr=Qua4AxCF89^akXXpbwF11mADPGH*}y
zjIAKkekgdD>|+JEa{xb=qoeuhQn?tsv>Q2)^6MF4R(Jw0m&wmcV8_~^gf95%YW!wz
zOIP}lih&b)hPQ-A$YTB`dv8uRkNNvxG`<0S1kZ&pgFMF5?ebyj?_I$^WO>`jcWQ^{
z>0vFx`_no8EyN0SwKE>n_um2%e1vyChS#gW8SSGH*|iU^PMxzYKWB55UUyNlxnHQ~
zFT~!AM>D~;+p)U`xl8*9-UiF}3HqY<H#4F!Jkrn<2F%5;+ZX&Z@*94v5`7{Oo-9A3
zEiWYYXb+lE=g)#n&e7wO#w710f87wRk7h<w=m*<I_tSdv+E-FJ)o-vt3&3mR@fOp-
z$fM{rofJKd7imNP)eZbMhKSz}&vhG&!`RgG^NF|X$t)K|pAe%mlOAI~QR{uW&&F|_
zKZ#vQ`fIhruEeR4SepHXKM<SNp{1MYE&LiCHJ|?$c?ul%L~;!NxL%;o*Qcu86}Uh7
zDf^M_D=Cl2-`)#?yd1d$O(}?oUlQo@Qn1|-#N&R0sMjA78P{MDYdGIf;>D!obHrS|
z!;N^vs-V;mPo0rGK#n($UgIx7udl*2rQtEA^4mVf?q}{bkFl&w#9hks`W5e4oGV8B
z3GXf*)E|^1T8kfV<lf&+zC$dUmkh8pZA6=Vm)zYP*Z!B@%<_#y!6HP*l405KXmE=B
zdPh*4-zU;PH9dTv?D{_9@_cxOBwcnp=^EaRcYK1X$`X28Hqga#IF)-e0~s&lk-vC8
z2c;1=zW|@Nk?6cW{GHcKBWLVNPt<m-=<DDo^lvON&1;a$=!X42icQu=?gca6j$A`r
zxQN)NPx+jzXd_xToqKwU%<@6HCM$Bc6Ntq#>6|NrU-*Y;y`CBVk$K*Lj+&=^K*ZLk
z7{A3nUy_&FZ!Jc-h)nKMEWA5*KbQW|*TA=1xV}%xfW8mb!-D;g;yYHtv#q6XHWwcB
z7^t^i*buDNA3Lkc_o3l&9;=Br*n_R^1YN9vL7PuMl2~UDy7L@8H~JKPpFKwf$m`4l
z7BV|W(HFTT@rKy{I*?T>JiPi`ojaTny+sV29X%Y~M{nW-#MZW0#WkroUL`6;Z!J7=
z)FrwImaS8C1s#U<u$|V}iJ8z%sb?>Us$fmcQaM|H9=kQ_3G@GU>gz8$5z|3;-_f&a
z6dFf_m`YR_k-UqaQ?Qe-v6syt*_~+gx5<k5(sw{}u`n~VFX#_^(+}i4`aAt!QxNPr
zx`j3~j%VmWI)O*&j1SDDhfExsg*WmwmxRs3PUu4&JeA!<v*|thI`}TALI2lMMsN?@
z#vjbaH#}xuVZ0rIX4oh95WV}ZP578GD@)&a8}O}b9$uu2)*SC6xPvr2mv~KF`Woo$
z9q#F0qJ}!8?yQDKDL^-^uTxJh2UXpMpEEWTM)V8DHDkl&WJ6-a_SlU!@4U)G?Z$tv
z<@y|p<JeA1Y@iwU7BCX(LL=_cdo2}~hn<^6rZ^b%-YI1Zljsra4m!P%kr+v)IUKZq
z16nl<^idyFe=Yr+3$dZQ!2LJyx>eZLbodPUtN*yG-q_cx;oCei1S^%VNCashr($HN
z-BQ=!e2A$&K^sehxxXMU{Ve#LN0#C9XQy=jW3mS0+?PD}3yh+D@EsUq<870m89lih
z8M(I^t(9aoccw7rI#A9B$@j3cb@;khlEuL!*P^%P1LBv(c=S*4P3CU3$QXK)XGGwi
zi@+!6;e7rf3YcrW7(I(l+YkFQ@!?0j-6VLC9iX63Qh9AAdRc?)WNWlJDhy934}T%Y
zzX2<;XS@iW)4A;dx>?2beSw9)&K3F3e0LV|5_Vq_-*6GVfVm)sQD{#)?oc0o4`1dd
zkKu{#!RIWe+tT<wgRxnQ2l$!sSjuB>Qww?s@AM5mz#MpXs-t!ey@=m&oclopgVD&x
zQtx{h&g4O`!ejWd^i-#2!C*Jo$T7VdkuPlyir)=}`VJj4*4TS!{-I94ip)pGAcw&C
zo9KxaN0lMQsDs8G^Z1LopIZ3JKglgtq0O$#sfeF5Ugr{%MLwSEMxuC<2!KN1<$7?8
zIz+Jw9ItF(j#3rW)frEFo<4FpfUWr2ix{ojkOSC~ws0qFe5}nqjdw6U8e1-620kOU
z*spIcSs33@K3SS9WC+h+m%_e5G7e{PI90bO#$0_xCSXodoZqLA2V4UqSb_I^0^9c`
z{(UOiH5epnUgcv)7y&We_T)Bf`om-?<}r(Sy8`}#b`b8TC;Gf7#Z`?VYbro@q&<%v
z$dK)SY=|`u!m`?85p!X3UIFFL09To7rjt(`C9fzHD;3*FNAU?bz};jTNpj38WR|PK
z?~x6lvA5~H><}KtzNe6xcflH4kQ>~I)!u^lAB@Eg<f|A~E*F}HFE|t&#iH&=*_HjK
z>ZAFdxY+!#8s4l3_VqpUKa(geMp(<Uuj8-ean=#d&Edo>P5CMRQ-!ZSAogX9)a{JY
z1m;3ae=mOePIA#}lAV(Kzz_vN6bqRdb9?=qF-9CBW|qf$hmpS+k5`>}uZZkI5A~Vm
zq^|Q419eAF&Y=(Qz$W}a987>a^>go%!>jMw&<Jd&I&+}iOd%dLz)uduf6A>b#gh8M
zuQ?~3@hIl3t?<zm$pFfN)9uZj0HX4|+KPR<{+r2Y$T!M+s;An7{^bCbfK!OCc?T_d
z9t`y_>mq(758IvGmCCKx;fq$H7dhOCu~bawy0iyi)efUa=Hc%V3w%#mZ0Th3M2gdV
zmK<&@=uhs#*Sw7m4j^M13A3xtogm9Lw|j`u9L(`nFaw*2A+EwO{@l;&M30W~dJyIZ
z%%ynK_xuV58O=Lqb6>Zz-ov`aSnPT+x^6BeN8+{03gmL-N4Qe$%shTGb}wd;Rk;F0
za2MiS>MPojjdo{!ggMnPWCAh@X^ZS<v|QivCwZE_MO$}{PvH?Jf<yL#Pd-Qb<Fz^<
z&-0jTuCB%hEa&d#;d}HKVqecCmp`84w?lq`Cw+-d_NItF;&(=34x?&Lpr18YG`D|_
zF?B76K3N|p{wkO9V5PC<AlM0-_?~CXJ;h><^H-eP9Mac+LS(PN6&TaS9><x3Ct*PJ
zed#==Pcn`d!HTSf>9g|vUtYcsUGdA~Ud8z6Gs|%--=m*vg%|;cBKCW$Z{F*X6q|CC
zT&4gSVlDK1B)ML{RGhG1d?d0BG<XvtdM-{rX-qtezR9UNzB3SUw)k3HDYiQR=8zK;
zr^r29A9)h|`T|-^p%-mhh865d>34CCS}VmC*Gi4Cx^I3fC#vsoTzpJ^X%}Nyf!Q?&
zcKq~{j%^%EH(yql93y@FGBOj_^nH#7X*b#u%|5C6LQib{RgkZ_cu%5*_T?BD|NXgx
z^O!GPkH$IP_7HsnW^kS0BgDGbiHC9`>e=P^I%AW)_O3wv4ITIw+pCPfn+@OgGDzR~
zxP++d&qtU6ZC}pI`H_?E&hd|N2afR-_zYu`^CM4f%<BXP<CkmpZbj6ICWyF9UaSo^
zP>nHmK8iA)1BuNYdB-Q9ww)k0@1rXn{jO~>Ue-g8%{}as_qBt;>(>3%m6sVAIq~Co
z0s9|D;@gbxzE@xRG(M~w#}Yd^cJg)h&;N+-o#gzlW5<QDpFtdTJ8{!^?Hbw^uzKUT
zbH~te_=p+&3mw*m<d*a+&iM)CzqN3Gr0QY%ZTU#^1@Ws~O%+g4cjE1{L<D`i*hs$r
zK77z9zAxtp=1lUI>p^UCIgjF%ZUL3)3&j_4ypKAfez`8#xO*vg>3A0XKO2*E)Xq+#
zJEDn(%%XGC6g1<ttJ`&`Pvvp6{pfste7Icehg1kY11~=c<6<3sHZ!L^iLKWY4fRb)
zR{wgur|~o9WcC7xm+ZkghV{?kejU@z_?h;cN85T1FY_MHxZb%cqTly^enhPG3_`2q
zC*+^*A)7G{$N`xH%U9n?uH{(l09%xzw)iF1@gjfA5qSUR3XYfW9Rp`}Bk}YY&*+mM
z=LpV~_($$F4;#FUDEB+|Rt`H~!|XKVj+W!itD!&6i9SzT6vw&tOuz4Wwb_S|x{RJ{
zPxJ-at@V&)%$_{gPDCH*y^3MCvFgX)uRtnd9XZ5~e-ZU&8{)bD=FaZr>bIa-VtB9h
z3_976%Bx)TLVSqFIL&yd3-=SXtl5f3ytgDP7O$h8G!wnq%=>fj7`@;NOM&){b>cU5
z%X;lVm>+StJfb>S7xZ^6*rYnxU5-@VcO>IzeX}{-#G}N-v5cbF-kR?~_>ff`?H%HQ
zIfQGJ&X584oa;cRa;|>7`w8Y@1X%PecXAB>_8dBYjOy2T{HYx0dt7ZdkdW6R29mcg
z%^06x^yFkBX388-{y?8BMliQ=%=HDC$Y=jIF7l49N8U^pItaNLW^gjrEp|7~%Ae?C
zoDXB2I9mP8kJqe^h;MwIdVL?FkKIDfXdJQTU_C~?9mVgi`;trb_412y&HA?25cA!c
zh`kB+{b)<-xV=-_#k3UnQ5L@+Pqs-_TH2?uz#n9&tB{ZJd~YMqAU_eoy_OB=*IKmE
zYcsdi7uCgfy_TC`Wae{@`JBnTP`_sFJ<jM^FWiIQTf)4XL%H7PX^y*}Tvz)x=kdLZ
z@rdd4Ip3UOQTy@!(r8*b-mWTqVTgUKO<G&Dw&8kD*IQZ7|D5-Uo5l6V(aX}<lJ}KF
zQ)TYt<m`t#&zPIP89$ywhA^kD@s+dHPgMh%&PE&bwLf8@=2H)2^DU4!(J}352D)O7
z|1F5)b>sx+(`G)!I>dhNWzYp(x&xVj7~6l~8swAB-HeIav2oeHII*nQ&m8U!5W0A=
z5!N<~^Ni-)wXq2wD~kn*Q{O;Kef)i{)7R_Mo5AZhz&<PE(@&E*wFCd(jLleY(x>ak
zwOg^OwjgJ(U$<Z70j|0mSG);!H3LrZA-umixi!@C)a}HdEyyNb!MZDO6(RiMK&-|-
zJacN}hc%<?d6%!V?@b#r=d-s*p0@y4=_IzKFKPoO)%ShNTw2Grrce`$H~wFO))&W{
z)np#T8Tza7Seth8DN#o5OMRC+HKxhEXb<8BIo2QGgVgnW*pj%w_$(i2F4YYC6HE2R
z9+$#n%tKGzGeMrH2fF%euz~MZ_WGoB?gK_v4o*EbhQCNue+9cLO*K`$y_HNw44_WU
z#afI{+P&O|@%%?vfDd3w%<JTxtlqBU(d%GuPQev?&((@EH=z;onA)}$UZ49qh>vm|
z-DfcE*7LHs7c-%|L6vgt@?6(~NQMy^SHmWlYl$09GiKEpJ$VLg?0ur>cr4Ae>~djV
zgZAcQ7a-<df8gg=A@Z7HFYQI_EY@)S=F_}Z|8HIRI?lQR)bHLOJBh$ABG2Hj`Y@)(
z<`2+CIZC-#*MJ(A^z}!;m50!FYb5fm`cU@^vCi2J-y^oX1wEV3EX&0h2fxCvo5P4v
ze4Tp^7*|_@UCbAZtJ=VJbYvnPU7J(a#js)@?ZUjxnv~~mjSi@H+RlS${k!--`MVc*
zuYDDtrsU()?{db~$evrG(b}9CtS-8)zN$lF8{@Y5<tm=n4{OVE#MU@Gv-c<7wuUa=
zmcucAS_gXst=CrNndJV}S8Gq#BKqq(AS9eu@&&w;^{K*~Pb@0tF)t7si<gYwa+}SN
zS>R;XtEzKd5HXlBL7%^v>-vG8_EG4Q#ijB)zTS9aZ<1V*IC%@>DJS$9SMMGx=4j$@
zeUR9CAjf<UaXrprj%@CyuXQh&amcOs7WrOx5)g-)Re7wfi25ydxE;Oy1=RI7S~MBY
z@&zO3eg*Cg<C^}hjJGx|Ueg|Xa;?5!jIG{Ig-I6sdyaZswJ~BlK3G1>81o$>Uv90=
zbDBGuOTGqLKMfB37+=x}ao)X$$siE-m{Etk=VqKYV8Oa;{_8Rq@*U2zen+e)wiD~z
zgciyph-<c_vhq#%um)K2{egXGy?OpEB8NRWYtiaQ@UAE5yQu^}-xu7WAASZ;Y2G^v
zjnuxz!+n%T$MlcZO?{7j0M?z<^Z)1f)thV3ng;0bP{!qE?CpAFG`_|?D|}vkHSZO>
z%1{4SZ=RI$#Jd=KYfknEm}ltsOW=Kf#uLhO6vU3j((0)A-X4Oth<9d-*0!vdx*vkr
z)H+^u##nnWo*C=R_02K0Rk=xH@La4?&SWlP?qbevz9<Hln`;CkXg)8VF^B&iKVdw*
zm9f&lYeVt|=KBvbE+-LVs&U$Q=^h=%^-f&3*jUVLt}W-V5WSKgvX7!I@zLB<%xfOl
z0ukd|n|6O6*RD4}ul``%>mWT5z3VvepZMS%e1{x~zRz)WoIKtbG)}xEw_@JxensYc
zUi;nnb8(hf`3br(^_l&MA>t=<XMN`bXpX+qyi|PuIk|<lrB7ioRf-Q0YaU{y^*H1s
zJi3@gO!oo4UY=H-ED!&zo!^4E7sk)vH{*tRvG`0(`J<II;;K2T_HaG#9*8DfNBlHK
zE`%Rd7o2N*OjuMz%<GS4KY(r&;XLITxht^4!KtWejC_wMGYw8py!$C<Qb!)+UX7vV
zeCmZgW7gR9S3dqQ<88c@XD`KkS-XFg^BI2@;0^Rg_N}U0P4RR3KaV4Bz8NuRlXucz
z%6nhO9mx0E`)O=7|JP@jGs*|JZ;kwfU(4}cub`VgClBHA#D{X=>+l0|Qr7rZQ(-b6
z)5nzO7*7zB2QXSYu%XWQ49_(KtZg5_Z{$4Ywd#_bmpPSu;>C#EXfN(rA8+l~Yq=6#
zpM_kBc9^r>jMtEdGT*p~*O_O(nPT={OR86Lf8x`|h;iE<1@mji+I?w^&BiEs0I{q4
zY+XhiE65D0|LVuf_&aSz4&ol}_%ZZ$CC3uqJGP%8wYmNY_$J4>FPiE#n_t-5@gL7q
z1pam^sAmq>eGm=$H04Xx39*DV|L?G0xxkN8@(FRX7=CFf&m<VJW2yVRlZ?6}jJ3R@
z7(yn+TuECO>zQk41NtBNNsoCUe#bqK<c9rct<7BIC*(=wE<}z_d?z<x{4#IJVhkD~
z9?O`rh>XL$NISB3;aPl#Ifz_>apM^A%j>!cdvFb?*CKA4hi-pFepH^?*gF0;caU3}
z$vkQwBalCtlMM9S`0ab&$G)G$gUI={X0H1n`bNjnI*%O0SwtLS{w*&pkNqK@K|d+)
zDFznDWTCwu5$DBD`t(*Hl|s}}%sEQX6MZ$Y?QVGAet6FRYL^>WFLMcF@<__BpCJaS
zJAFW1ofv)hW3!*s*Lp7JPo3JpHOZP8^Q}Kv2cHB3X^+nsVzroH5K*igdBJ_W-`H*}
zHTO1`l^cAHQO!oD#BT2Y_Fvt7CV50a-KQMZ)0wL|LB!vd>g_UaSvS&dtj8K(+tA;6
zgnG~b_yA+AT&MYn_+lSp=Xo09KW@Q(&E@sw)}pn6-b87+1#yhn(mdAd*GE|M6Q78;
zW?)mU@w*W*#@ORyY;bQi$HG`S3uHY2A81}Jz7k(p?-Easz>>5n<J@X+i2hP8(7yA@
zcu;Y(IklX-JwrYx7vTGPVd?UD`e&;u#vu94Kgs;nPx(^ydpXCjiXvxbpG|^0|Bu5o
z^B4jDb|h8b)2@BLueWD*8WkA%fC<DVc~|4AcB+5XcgfYxLww(5h<@igG~L`vU9N%!
z$(QSQF2(P-H=jODKcT*wv-L;BSKiwjh}?(0TH??Dc%%jB*T1~BL@FoHwyhb9J9{AV
z7OvHpfoP-l1$j+khsW@1`W?A2{j&DK()W~|%g^f9oIAN}eTR6$-VZr%b4P0=+Ln35
z3!o_T%1zjzF<w6+r~WOqv-D&PJNy+Usd&m~wr6)Q`AxBsyyjB0&z!(oi*{+xZfRb<
zJEDgOo$;70h*9>l*;n~Bdhj~eAa<M%W@to~E`N0+G2kh1kiA2l=zKCq5<|V2di7);
zX`8}&*3Iiv*K10C--c?Am`slE2C^b`Yysmhwk^q+s<*zb7a~>`%ZZ`Pxs5BvMe(fs
zK`TVRYtE%j+jFFCiS-irT7A<d?nb{*6{ffY;~-aJo@UG%jOgLTE9O*kBJ!&4&1i3`
z`!ZG{!*O-aLx|kJ*i2niN9DidSoMR>t8v<>D29^j7RQQ<<Yv@$U+;C5!Izp(O-Hmj
zbFjl4?`nD#jX`oW`bqOCbypneSc?PIE&YbLOM8Ed*LpAN%~pK8`K)85KQN~BLm%~n
z?y+|W5tnU5e|+y6u)MVsvG7fdw?3~hp0yD+(i`hB23sd=$rVmQ>~&O+y5Q@y7k!ra
zSmyI0=GT}nN94Ii5qZS(_MfQNUi)jQ?twRhzWDRz%<_|H(FnBvUc~&?_-U<h4|R%h
z#6No--6Qf6SQ>MRWk|?9+1qd#B39NqCoqQA>3m#U&~^tPawg94SVU~(y>Eiilyi}%
z)OL3<UT;zR7!L1dEO`gH1HWwz%o>?-Uz{&b`XRAuJ2kL7k^8tmIa9IM8mhzQyyC5^
z85{TY5`T%mjoV^dv9(yxefd}*oASBhxG|tG>ypmFAB?Y@tnppEwhV7;twG!(e)WBg
z=xbaLJ}`%z!g<o@aWJ;Oj@I0Zp6hqLUh`?s^$b|R*u0%?%Tm<n<weEPa<yNPQ&^W5
z56aJsARqh$U)7p;Y)t4$56(Hxs#k8zIGBIie_*a<o-+#m;c;wVjAb0KzF{3w+_#qQ
zvC{O>xi6CaCw8xj8NOz$#N*%ad{xHfef*DhW0$^qIv;Of4OXA*9<E|}^8s^YYa!Oq
zj3eC;alf%x?62+0QF>ka<1Y~J!CHzwT%TbLPAu{$o>&}X{%$>63|xzD#LkFy2l+X<
zP_c{W(6^68AJrdyg>mN|#Br7<5?^|)#%5!@xs$kA9?)|;Hu56oHda>L|8F8|LGQqK
z>EE>_v6KJYe^Xvn{n4lC2Ofj%kq5LdU*07@{gUD=b;kV2xFlC#tQP-?g*U<5$LU+J
zXUCjHZcy%7PHifF$9{)B^zB+NbWW~Bj<8QwM|wr%K-6vhT_s|s^J2{)i{1+BDf)N&
z*jF;z52FS42m~Bm?m+J2Px_Ty$)o=@R$E_q9e=H#YK$hmfQU8Ma}TpYDb~r};>v5&
z4JJ3J4(-4Ps6Q21g&M&=x*q2Yv2O-*=vsys$Vys(UB-eC{@aTyD-{1*$NYyov0v5P
z+5QUePdjmr#ojfrZTY~Zh_Tpy4&$n8E#(5#4db;~RE*_(+ACnpw0@*d^L_HeS2E+q
zS#y@%JbEWObs;|Ax^^~I9CLH~XT`i7h=>Id@s&FFFk)_{pVdZb-3fmLhdVyvi%FnV
zb<CQ(c+33H*e1tg9dJE&-anOl*G*xygT%+Tz(sE|)|V6ESFqCb6sy#~!OzF=Bula1
z%kaGNlgEiSjnU7`KpL*A6+MV|M}vjM0JC6i<b}kk`53zlM$pX5*i#jqaBsNBK;rI|
zCr4%Pq1?Cq7w#dfojAv<$U4no%=`1vdu^_)P8?v>qO}b7SG3R7dAD}rKA-Z}a?{^}
z-Q=pTVD7D#x>mw-nSa^SP@1S>-@LKax`VbZ20I6CT8kLJt@YcJpe|dh5|>*8w?n|5
zN;!vtpa#2U2l1Pnf*7s<eoh~0EHSsYc77We_-3+=+lUYPbNdOcVY?^kpG04C>Kv@D
z51o$oSiFs=)!yXa-Q&^TBG<NPi!;cvWU?or0sr;k5oh?@{(QOkooJJL8p<zvJ>nku
zf3MX(A!En&aLRJS{g4V|A;vEAC37{gqrGZkj#>Cca|zeqi4(;Nt_5&C@ksoP{#}0W
zC7zYTk@FRg7~6~qdx`Y&w(bEaPw@icW9H}LRI$;&)FJhs;vMn7K1BTH_!=A48{@D(
zTAj9*BeoHf$<t=SeHO)k$pOn{KY$ilmp_kP+GA9Y&Pw+SO-Av^eL}5M%hFi~vKPsH
zLd7(ziQ#Y1Noh^jyiY&b2V^4VP_M-l);7gqu3eE&wXev2n@Qm3zZtVMy4c>pllWfw
zPS;<n@AorSzD|Gd-rOG{cQba5gFLFW@28M|xH7-&XVLC^G2@=^E|5hXeGuLIV)SNY
zA@&Ga$Cc+dr_|Tm<6wV-HTzmriQS)AjOEUy_EgEE&gZ!1iSoMIogAs-WKBX$KL>Gd
zRq>Ntl=yK5q8-S$%f)-|+K>ED8RTk2`*dF9ZH#yI5Ob%|h<lO0heped+8b?M!+x9c
z=$p}3eX~}kzZb6!VBEYP^D{Z*w#1mGaDvtj&5a#LxqI^%a~k`+jG<3pD^su@c|YgP
z{8uhRZ4hT$^Bs-9HCD=VYvcM*=iqzd-F^5HW44&nzOhW=rE&auvJv+My$w-^?HqIr
z9z!M~=KW$rF^+y;|0QM-OWUJ18Bss&QE|MrBl`yIu@F0}N7hEn`NYQVtuE(mZgDGF
ziZwuUFR_e1)I8q!uHKrXyDmuml!I~1pT<|%<K}T^ajtgAONcp&e6V(|A5iQUG<SBc
zt*8B0-zk>rO|d6d%;xhOS*>d9SwYX6`-WP}lBYCZ_P+Ib`j>J@KXNI3fc{fo>Uo^&
zsmNV;4fl^%S2~lo{Ks>DhsWxk+8@_FS6dN<#1)RM{J1%(Yi}PW-WvDh?~KXckh3mk
zT(mKLx94%MYWa%8#PTV~FtEJ6YQ~rQk(AB-A1^6iYTo7Ck7r*4xeRs0d{FH2F1&#_
zb0up;7PH^;BI;tZ;65^`(W|p^k*;qN6L?Qz73(SX7V9gFWpY3A?PakOb3gUI3Gqn3
zW<O?YwAb82+jQSm*B$#Q0Op#`vAKjixjp0NyYBC7AESHmKZ<w``!vm=%rVVdYEe-(
z&(S}MCGSVJBP$VgO22JR^deD2pKIM=D7tN3L4Q+<xw(!QA*b1u$Z7r}_ag^t&T7x3
zJsGauQJ374{R-~HI*W7sB4XT-n>DwW`!NsHr&~L)|E4nd>;sUk^VS4kqc0KfiyNom
z<?Z7>$S4>?8`0~ZP953xu*Mj<%RA5`=Xf)DNh!4UYy7QvSWMW1{Nr<&%u|egL!!Su
zP~w8lbRo;9iyh5j_JJk}(0#1l+rKalzw$eC+MD$R6IfB^b<E_|&vWfH!&>2i@L-q#
z8;d8cEwbexUD9`k%drY`nf@XIGAub!>*3#lv*foQ<Q^KbHlZ~g)sK_6WfFG=G2ZrR
zj3r|Yu(Rp-L06`h#FDL(cVgAY2GF=TCyjTwXRVKSLDM$iTgqTjVjel%>G)@Hxjkj#
zRym;@`nbib_7K~L>h+l0>GxJ}?|l$gSN(`SxZc_xWAgy*UA*((ehm#$x+Aw@Jh$h=
z-{r9Xj{c4=L2v9qnTu>iBh2;0zoI^SaP-mEke+1k>XRT!v8lCnd0_Wiei>aihc>q~
zuNFJW^)CS*SqrI8zSAD`dns}`qOSA<xyluJou13QR~@t;*Pbr(nwDVLReVmuBJv>p
zjB!NnPMa>t^VVPFp8FzCBXUS`T-v7?;}*nulZVtl{EBYsJFTI;kIovat-}~U%|VR?
z#yxX?u}d@V+dRK2`fo=11Y(WG8eul;ddwfisujpm{9B!}FY`-m<p_Hfs1M?yjm*D2
zv2qA<?(*xdKlu;Wbx+lhJ-2+3y|E?fk@=PNA@UGn4C}<M+B6zB!!OEr=r80U<mSY_
z#!q_&j308=S<HfQ&e&3xe5pC_vxX}FZGGFgQkeAu1;{2N{)zqcPvu$FC1-8TZw@}w
zxO5%smi}aJ<x=NzJ$^Px9d?e9i``0oBj#|w<Nnx^{Z#U%^2%|9Y$S#K&28n{2Jo7(
z*pB(TYq-rBjZgYM=T$yiZp*rf{#XAq6tA`mv0u#G%6KnlZalDu(7j2Fk><u8Q{SRr
zHwPE5$wQT)-(?h5p#Rbz+q-Rz$UN7c2RUPFu@58qmfKlVU>s7Xv|MwtdqL{fbsR%`
zOdLD?ym`!U-eKQ_7~9&7y~2)@y&3A+MnueLUD&uFj+eU=Guk)#I?sw37NMKtdA;=l
z?b#Ss27ORVpJnE)kBOJ$>l$OX>Wq1ATk_C<*_X;%$Q|hAlZ>(bANB``HSOtKO)e(R
z|2x`2Z($?6$5%=5>tw|IUY!0YI8Pn22TUAL6Z|<5k%KM*LU#?a^+oH`?eXK*&D$dS
zeR*4Lu_Iz1p>;xYWMh>!CQiQ-k8cbUGqnKO8f(N?_DOlJ-_Uz`@~&isJK?P4A8$v*
zl{<K!bqsO*#c<F8nk#qO8l96PErsPg$jU#tMdROEm}}#CCL`d!GRAjv3h%;vLfm1F
ztKK-io;N{$A^&2p(062@X0#=#M!7aZe${LJ8q{tb$j8J3uaj?_#QMZFb3kfMn3+wi
z>Jk$_NQ}Lj@tDY3ubqth4DxE{!d!h6jGY+NwGiW&uiNoHf8mGhhbsn7wHH;+Rlasi
z^eAhD$3^zhId%uRlGz+ztm5@d22nji%&>;!xcV6d&f#g+&B{Bxfw&jG*KZw14^$(p
zfvq>dS7fDXclIENN$o2>N&j6Px`mn|a`f&mFP@f1vo}M`Vtvxui1VwzuMJ{(7tv=p
zrsinI_mjvFR_Xa(dr!oHk2BhS{*g9c33;4#%l1fU<MJ}Dwdl%hn|JuxCcj}n)|$0h
zYsqqv@^f-^!x*pG>@8$XSkBk_y0}OmvmEhrebgJdr^)QZHyf!(*Pl4U&uwal{;KQt
zAfJE(TLN#YU$G8j4`Um|{*}YzxE0B?#ew!TnA_FH9`z~K%%_4=#YjIO=8*P|$z#e(
zSbGwq*=O_^Vh^aCojt1ZI^tQm3wdaJd-QkK9n5pQw@;8BjL$MSoov>SS=aF1^lR4L
z?N^i+eIH+V1Vm-*))p&(<Ha@S5dE34%e6IUh+x{i-1`vx>l$o99^qXuh<xR3Jm$Vj
z)@h~?f9yXn=g_9@&y%z9vjMCVdhZ9RE!cM@$LZ&k+{!LN#vQS{Ipjio(Gk{#sYljE
z<QIJIAaXaKUS+M$7%4tAW{6SGv4XxeW5134Sj=<8Eyk`v$o1qI=7e(Zdsx-;DI)F^
zyZrZgUfHQSO&V*$#lglc&$kvv)cUyms=XnL=(-h;8OyA#8|Td@{Cg7lg?iD0zM1dQ
zX7h;Oh~>V<JV`Fm-bQs(-1!XHLZ5Drb54*;4R>~G4Mtz$>g}viH3r!0b15FexTBsp
z|JHoOK=zE;<5Px_>qExa20gPUK&<Xq%Y~cAx)+M$BWAO<e;uRo966S2oBm}U#0%Pj
zbMqG>#<I_%2EL;s@xYp^|F#of%thtT;-D9=+a96eterM)_<1OPE{eSuBiMn!emL#-
z6!QN#d2QI9B6CE!_ijYD>G%NaaK>W&PCi8bT5kQnwNv%M1c$MmI;q}~iQL;Ne3&@E
z*VjYDX!;Vdthms6hy4@QiN%86w>l$^lIv1u?FTeoYG-o&`ZN2N#6jj;`VaHn`izUY
zqWP4ct@Aw0z-#Paq~Ei$Z~ef0&hZzQj$#+0TX~-tKpxK3@akM!Jco4$<C8g*bLBjW
z-{sZB@4I=WSjM@vuTNga-VbAq<Ek%K4>zDi_L3Awi~rx}H)RtQ#dh{`h%c?Ln=5#K
z`^kB_vG>Il=!RV04)(7w2huK!V+Z?)FY=GQiPf@EeL-jDPJRxDy;1fm$u+9K)|2EO
zkK+CO95m<MHA3P@^K$D?m$M4g>-q0<iKg?~<2-hGDB9PS?H9Jrb%twk<XlH{H*30c
z$zRl4YaP}aoPYb4?VPJc#IT1&Y_5)4194wJIbLf3;wX7{`;OnhC&;~+!-?tDpC#lk
z?OB_8Ap9rPz6X*sk0VB!=hkOky?HQ9G(L26@_N>-cA~anFUy0hxwd{|-<vurrn!t<
z!`Pxnu>N!j_(I=fo+TG!ua0=!8lxPQar{~AeHZzYdAMAoRUWaT@lhU08-#5D32cn+
zB+{F^SnrWru?MLH`!U_b+IBI%@xgwq_Usbj=Q4Rcqlx+Um1y(&Uwx6>u$+W^g*lM;
zQ(teb#eC>?u5mZ(VD;PLgqN&66S2f$#=({B3+O&HeffkcIjeWcI_33^Wyat`d=8E^
zV0&nMJ{|w*x*GTUGaif4USL<oCs?^|{B6#h$a9_|FFZ$Fk{{lS&Z`&lU2<gRm12#b
z&@}6*#u0l4#IoAA@z0nix2Io{d;N=i!&;fXSKe6OUMy#A+&au}*o%Is5WU^*v1lIr
z8M)Ob=&`){L+lmtD%i+c6+kiNI|kyD_TwX;Wsk#?=(^auJ8?vA&(DFfXDA<RVOd0c
zvLB1t!j-6Z@;&x&i<#}Kaea?`w{<Yr8V*7CcH&R%Z!k9&SL=V|WX%oiyXb+}G%piR
zh|7vlVG?WF=V>3N9M3Xhy7<;wxL@{QIKK8fTC*w4dk!-$&iBXYjTq}5eDgupIgDeR
z#JBcuI9Aqf#H0Dq3wH`CiWKL|-t)rLp?s}<x8g@}jJdR&xV=)@`1E#Ins)3x$Wz~o
zI6gfYU$K+@pK_emy0nY8;Q%U;3!5|LCpT&oU6P6;es-n#&Kvkx$NMwx<ur3=pMsp`
zfBEAAt}=sqe=}l8H+tyqVup^V@+EU&Yf649lAjAHA0_sdqxu0)?!V2{9A9Mr1aawY
z#0tlL0OGh`%YG1FllzEecSPGGd-}wK_A!{}?q$~n>o|4Ud&4@G*vi~-68>K9!@k`r
z^nn<|^21-fhS*o-7|4;U(+7#+y~rh8Q6okXYfc1b_&JiU3^ErM%gSY2U(CT;^f%A2
z!;c)bW1Cv%kFE5D8PF$auiA<AKV$rt?2e;N*#G`MNY8cB`X=*jKhsbi(70)i=ekzw
z!`5d0=AOmE=J)EVuhBN2!-E;;|76FYtJ%lcf4-&?IkOmBpDb4|r!2Q=?}?nPT(DTv
z^+sEXR@Nq58>Rl3zq{r{JRpbZPwRE&>*7P_#F#t=-7)?>#g!aHdyUcO*|SUi*S{JI
z#Par&iZ88g?L_PycZXg3gY5fpzRgdr;yx1ShcRmkyN#F!_2zl|yUcNRBK@)dEnrFe
zM&#J7>)0190b*a!W$b!(C9%~$|9$K{q@FCtB3&2JfIL9k*I!x3mdCcH(u_S$$|HO5
zd1t}cu-at(V}eAKh>Z7g5&rGC$%%TN0@OiUBH~>6Vei-eUDppC!ULN#T#k<u6R8v8
zb#3h_I7VOp9s41bh7&kS559SV>;1$A_E3t?-a*uFW0086T-6+294W5-3$NxH=J)V3
za<li7iCWLI)5$g8?PBd?ud#QLV|g{5jVH(jt)y*>wnZa|n{ph}!NM!qmE~XXlj|Go
z0h9x}iHK%T+hgeMF?KmNUbO@#*mI&E6`#J#=btSh%X$MnRrkg9`o9;bcNfD$*`wjQ
ziGL9JGwZzODz1sLo-T%yi*YWjXQ)s5A90H3OYJWN%CJ}1IAK4Z{mkB*T(W(F)fnqW
zAaV8IesAjy_ISL=d92BH#b;c}UX*_`zV2V@-y1la>)pp<->&}?lUwt3O`x%`HSc&P
zd^WVF#vJJ_SO>AOv3xiC#14&yM5pk4d)RkZZuC~J$38Rb;TN!1nrld`V`boD%mJ)-
zwZQ`9lI#gyNv>d@ljqg;?8(<=jV1C~*1XiqRoJ3+o6hWx=J}^kt;;5BwB}{*VlMS1
zA{K1L{%ht7?r(4klqrU_hy5FLYy>{Z&nL8pNqbcXT)ShA>pC(yu;;+e;y8P*U0db4
zD?xxdqTXBIun*Gtsf_%M4Vy#TW4D&w@LikfJ{|Ui%e9CB)bSShU2|~jP4>5VKk}b)
z4aO*WBY9ryX~qh96#b9Bz<;i9c1`0uU|H9S$zNKR5hvV+PacKHdzkZnz<z4tF>yju
z?AiSxw8yvLYh6z#H)=12JcYdG(^M6{g&X2y6++iAh;cd)GtHyry6rcVvs_ACw13*U
z%Rw()N9j0KVt2ga>^LU3y$#=dfE|JK&t2IM%2-+#pJdMX0sD{1(K-(Lde=&<!sZ@D
z{A>jCD%bXYNX~6;w1Q6_wZFvmgdek;v;I)snLv!W20LCuwrrhuTJ#S7qja({wTw;d
zO*R(IH}8@+7!n&2>jVbv!OpHT5p(jL?13&1YwS1H-a)lw7h<fthP}AFR^yfZNe{DA
zm)QCm{7-8tCG!2-xkourcM7!TC^zJBYlbz$Y3QDH2y;GtS<{dmqZs4=_T3mCG-p2M
z;j28pSmaG&o%h!OeBPhAvv%R*^7Z;f^Kbou_qq<zUpO|#8tVXJ3v(*pZ+*8dwVW#K
zbZswA4X~{|qP|=%G%v~p=RN^j#OK?=JzB4muQF#a5464_AFN(jSCKdG&sCY@StGVi
zE<a{JyZtX`!N={{k#IOHkC;whZCup1ssHvo7&G<DUc(pEgyg5h85O}*huNP;8}{>~
zok#t%`IMaH{fM92Y)wI)!`LKlFviG*8B_j2&pu*bD*K-0yv?n)5)ZAF_?g@Huv51F
zT>iwKOXI$HY$f}mUc?S-+TMCF{NGry_artN$8JK#R(b0k@SFDJ%Ktt@j@25`pXs;7
zN7}G@I|jcXX0gXKhkdb{Al|3kxH*n>c6o)K>=gMABJUzz5nBjq#8SqVgNcI)?N@%$
zF|+qf+$qQ6dk=u$@1`Th`<6G8k5l)Yd;NrCB1i9vUi*byPw9NPj>_Ipb=LgPYn_i+
zm({PaNfHcBlaxPGkK>HL_h&wQKjLFOz{rkACN{GNeCarjVFx<TBUe=ovF|`V-Hcdk
zwVvwr$%C4^T36LJ)o-6u=X{U#U%3K#_$`R%c23Pb)i>jUb-fvgT%&oLw&1z{!|8A9
zG2z<e4WCH$lj#?|F6}`);xQ{w3;LOEO?A<=l44o0yEO-6jW%wNiT>T3NxQcvL%mmb
zUSJ=`)5JTkOAb)`S7+4!BzuKBPwI!Ygzu4j)Z@j0{Xu5-M%(k|bzARoe(!)ARp0fu
z&cF3>b4TaW@pDat{?6mdYuTr7t<m~~eH`{>k4J`Jv)+qbQWt8;#s+&jM<QaBCb1?l
zV}R@8#cj3OdvqH(*B(FproL$=JCvFqE?}>>@rd&jg;6MG(Jr-r$HM#5M}5HFmg<Ag
zJ2orv{np>LCG#@z;&H@dPG;{(=e!GbB5l(+WnGZK7a3dRibu0&o?L~tqK?|v;~EA1
zsBuO;v0uk^cAn4s6YD;Lcs}*X{98`T+O5a2Mx*Xn!*yK5?ymP*0e@`o_z6V4wvH*6
z*@OLD9rq83pYn_C!AsTwibh4*-Sm~nJjz&QZAX9QnAi&`M$U`!*!Aw`$Ub=aJ@X&O
zdItQn=d$P0UPpbj7(w50J>q+;>A5D#yg@&qF3W|O3z&Dw588+E0CFLp&g@vXhRvx;
zZNYdT*I+NS_~;mXzqy~aW&O9;q5fDO%_6=xL5wZM*x}52q`v)a_Kvg%Q~mMW@)Kg4
zZ17W`uute%YxDk`#2&Qii1(s?HDFg;Kc&R$)K}ev?1f9bh27K&P@mbrPJqsb=a)A$
z9_SP8M-dyDALw8Ava9TlU`OiwZNT+%nEFzC&PTF0oBIAcpUOUiT`rx+!tD1ZFR_>o
z82QSH>;X3(@j8$5X)DGr_1tk**KTE(Ow=ve4cx0Qm>x}!?49y8BM@ysU!~qvA%Z%u
zy~((od-Ef?R<ZSO?8jiw-vL;<yAj9QoJekO7oxwN6U|9sh|k#n{3y)gy2QG~_k3oG
zc<cv0+d)6<G20{dBU}m2HilFHN2&`RUqAL0{XKsnc|jidN1pRKo~@ALTYjOU^fmGi
zvEUNK9Nlr#XIW2h{hz*SD4!8z+-%2Zx~tRT;>C#fso$B7?BH{Zz1F|~Kg#YiT#~Bn
z9{zMyPXLA_In4|~Kypq3LlOi5$vMn`Btbwxf}|lM2oHkfoTGqbBqLb~l94b&21itq
z!0FmO|MjcqIoI`meb2u145z!RtM<ObTI;@dRqB(0-+lQ&e3Pf|$g?2!?C%-v>8vR$
z<R0$3XYg6^o*n!+W3^~R^XBO&d-wP5JKk2gk1;>x=k`9#m8WW}m(dIOhqZAG@#Klz
z>-H}h@I2fHf50v98|?qburPNRU?Xf|hm1+l1H}Y;mBmQ=zD^GJx6YG;D(=h>TfNWP
zz_#KKo8@!j_6E79pxiQZcqgA6m$5*4Y2dBxb7yqdhtsif`$|47pBD8g+MgV)=TQCW
z`8?Zsnv6eY=)<}%&%>gL>T7#A8jV~p=7}o{r^moL+duVHo~9*ci|5v3<2-fAXW;=p
zNJlz1_X?M9|My;P&$TrVSWs^pUw3XN=6R&B2K(#e$GplFY)s$SMR{t9wb-@4Yu|Mo
zoqPRSH#vRoJoA8dvR2|8%ptD8)i+i*X2s^J@DV*Lhex-imB?q$mS@XxdFCM8z;9rQ
zQ~Ia0KDlq6M)KW|@7i7t>nt|io+r1^nXby+q1mWCr|U+!HrFr#TuS%6w{vd?hNO+H
zmLU(~boN8Rba=#S;dbK98~rzONBTATba1hio<R?AzeD*IM_#$VaxCkKzI(*Thvrzn
zj@%5Rh)MHy=8dj0rOh9F8wSbaAlulhCrqw@DPIn&kSk_N<(y4dovI_}{ILJSsK!U8
zX1{WJ_-E?K1J=vBKiqjZOlP`|T>6I$ni@<FN3NLR*zk!Q&Ti>*;z=Gc8@_&8+v~D)
z7`+}&eB`Xu<ei_MWjF!{b8hBOZWL>+RbWVen+zD4FR2&8ermC5b8tBvEAEOhIE1|H
z`_;3>qHi;{4<k4C;?KJo_|ji<XKHIYbq0N4v1+kA&FjL79p4Zn&Nlgnd_E@66A<@~
z%H3_JRPAL{E99QV2WQZVzRBRzqnpvqK*rH|!r8$Y`2Egh=hEs=_1E=M8GL7!W|l_I
zWheSChxUhNg;(yg@gG({Z0*(gs!g<ZlzKa@XzKpd;r;uz_0PLHcO}Db){#5c$)Ll*
zq-xujrv7n8YUwm^bI{gEQd9q*JO@M`!29J59FhMnmEOM>GUQPBcCHLqMNGki+Mcb<
z#a9^{=kCAa(W`m(;1L<uWULycg8%Bz5g*{ZIr7~2!5qxz>2S^kPM<MDoLw|`6FxaZ
zUXc%W>+F{9zfU^&|DJg|%841YKG)2q;k2dmY!O&aZ9$&r_Y*T<SM^!8;694?b?)no
zsm4_7R;<`G_rzHz<0rWv^*tHv1_pvT<q0_imT--Hk)6zv!GGmb^Kn52oVH-@XZ(W<
zexz^ZsoYDLcB+3(FREOlf8hGu*|lVh$>4+53QmB1aNaA*6$KZ7_3&0U<Xpv*l``1g
z@c!`ruQPCL`%2ibxIU~JRxMsHUW<{pr1xH2`g5KWg#*u-XS2<bA&1Xd&spmy+^@f1
zo0HU>#eTlcPOJ@l&#!2@;x6A7&tNCmYsM%dYTDkf?_1yM?s+B?ypLz-^Pp`wH`rh9
zXJ5F8Jh@@ClWv}lLSJB$cSS27mmv<y?J&96N0YcYgVsM|o@`0aV7vIt7G;aFWS-Fo
zZ#oXGpyUUx+q&Ai64P-2KBTYGxeoLP`ag)>(_C?|eey&O*Z^M<+gl!xXA<C<>V6;P
z>1MDt%tY6q3&6VahkOCwI9?w1*mv)7m_|;9FL2tMGGHj0AN|*PT#)Aq%$6bU>nVV9
z#Ia?wS8$h%Lo#p~`;N?co9CjZ(^=$XwrKwo?0;O&RbGbUKFlz$uV%2HZ_BrZEsCWZ
zrv7zW>MiPeVxhQz3%wMr8b08s`V(Pk{)}%pzoViH^W6)h(LWTW5-*0=@Jr|YY3h&g
zwd0BHaxv~bZw3zLn6M!qlRw01=RG0MM)2=hs#&TZMZa=Ra1PB3=Q%FVlDt0JhvUE_
zd}7m#y{o;e6Vfvd8_5~CI6pony{>d`{VBMXo}sNX#E;R{=xX}h>)86xe&k@>ZU3@=
z8Jpoeo@l#<pNYpz+v*E@<Q~cVa#(*@dT2lI>&;=8a0jd|r^rh%wHOJ@>0dQ(_%c4A
z$A6RbV#4HX;K*`h8OV^w#X<R6?j6YZR|Z`}&J}B6fdA&{O>CY$(<;OZIaB;PBLh$U
zPx()QT_1|h2nVni`BaYM6MR&xq7#qGoub)1OenX&jp_@q1^g$^!{1`2d%vuaK}Yj>
z=LUn$6D@S3XrDXhUeaPMElDiU&kGltpYP?_b^h*rX)Tv$JRHt159|~T9d?{8dikUb
zTuNM3)6y3KGvl@JqxY^|uU#M6IkMxNXlY^%Otw&--nntvxad8*pmRY-kD547Kg0dR
z?eEHWMcjhp@MbYjo|lKjQ}Ke{`9$tjzhA~9d8WYkGGHY5hBo#=`Jlk8bQZO_QF%h*
zP35L?Z*_0AUiuT}%X19W!OqOxy4e}7_Q&$aB4+<QJw)Qj`g!u=k5jSxS^cy6<?7`M
z?prc?-T&mdq4JMC75cJaCq7^g>YvJ=idv_<fn(DS#^$LA@~&gyg=_>LTP#l!6hG<1
zIQ|{g9o1Ext2(qzSdsnVseJGc<qyRi$W_)I-Wrzr#oT!w73?R!;*?c>>_ON*T;YZc
z7y!QKi@(ZKKTq$R-gzd^Yy7J7RR{L97irt{@3VbeblMDh_ON<b{du0-cXY5Aeux9{
z^~Li%v?f2@DczQP!d<=6Yh&$+(d(_DSVY@`iP`n7d4k9?Wtjq}`EPMUUv<-II_p&H
zR5U0&VCFJ&!5hUG7zyv2KF{G2mt8v?C)To0cnVjgoyp<y&emn?BG0KC<Ds+yHB8**
zKe_YzLwQ2tjTtbBTrLmqP<ANm=7|=tt6a5yfBpWfdBPxHy*tk-z9r8j!7G-}U?=YL
z^`kr&?)CC|`7+OR8dZ;~#mnDhpYZ~DVi;e(HvQbErg!80Jj+c!(JLi>d5xXXj`1S+
z#~vGTgI}>r{QlBt31_D+D97;&xl9e>)#}xXUw^;<{l4$`M|5g&;`nlWnUtq{nr|BX
zJf4x9`p90@Ue$_u)+SC!Z^QAuj+ejEd!?rb?fyKybDz#W9oi7ixLUnhP4C>YY+0HN
zdDC~Pc`TSAF2a6SW{CN63JgQ9R%;SB=w!4>+{WJ=PaMKI=~ZHxTnXpWnw=9q4Zp(D
zbQtfY8S!2IByZt{Fw%9=!5p_2ZEM4_VR<;u*c+LC4gRuTwO*w*3dhJnQ{}mvbT&C?
zfebhSUXV-p-8LE4k7l@fS-qGWnmg|Adg+K~<|(&oNwCrqscp@id->x7x2NX_&vL8-
zqenlJ{zkeLu7}gWY;e`?sUy6Y=SEIUP0l<VmS=PFH8~ci{b~Bk#8xo@#<IpVrWrDZ
zP8mAIIjoRp4A4Jj$#a>`%5%u}$lw#MzZ(q!Uz2n0%@7AZ?0lFfG=J6+vlh)0v&CWc
z3c2)mdDibs858n6*U70xncv&;Gz|LjMtRy9zAZPwgS0vtll--4wP@vDfv~%{zzz<}
zbJ46Loqk+rT!#++{fss8%r<^k=LfGmr<_yXO-=LEJa@0<ym_Xx{t~&24y4aOe!jZ8
zy5i4gre6<7rWNs1`NcZAHrgS4sP^Y``d-#fy$2rf`mfTHgfqaw8|Ddd?`7aB^X8f3
zk0d|PPUZ3U@?16?;o9cf=91neJ-in;hr18R6USH1lYRe|f%CWhZsocH_rb*Sy?Gel
z8Q;06zNm&%F7994R}a!JW6kJ#I4C?jG91VG;vjSp@1dW<RNnho#$fM?_rcuk$^5``
z@R8%uI>i+HLQH_sPs&h}dM!^)5;w$Fn1FUGM?Y2`E4VQ%{EzA%c~0~9>Z_}(s!uZ>
z&C^`fa}F#AmTB`G;m<N?Sz?3pf|GGx+QP&PT<^8=T5%ri3E!kwo|KCGFRNcx{Fslx
zH}Dlrl%6PGe_lQ>{Mh;9Yn$Y$-sa|i_f9R|-e*G|7pv$<bmp`BXSZ1Lxazp-mw84M
z8#+B5NH3>97{{2L`#kAM@)>@Qw}~IP#X@=JG+z(RZ@Do24jxn=l%HV|>!Lq!>I~Wh
z%#54ZCxkEa3*1<L%c*&`?UQ+0hq=sB^x6GK8FJy_<?v#zGEEf@KS!CPi1G5X>-{Lz
zXEF7q)PZS}^4FMjM~q01$|4!;?eshYk?wU$G-H|pPQ_mz%xJl4{@*%@xijR+l=L#X
zhFoOLj*f;Vf302CF1Q73^!q%MaF0B_$vNUa?k$K@yqxDK%9(HpzUuqsZ9L6=TF=Qd
z(&U+Sqlw|;VxstKZs}^yNB^08FP_7$v(>ZJ&qv?5x?J6!kN(}y^NeTwn2o53$pt@4
zf5uY1rFyP$^J?=7-@-4|7Ss-Carh@3Cyuj`OY&5rH!>E<vxfJ~Gwj4OYiVuRuNs^9
z0gtIaiovjwxi6{tz+w83cg!>FXsFgeOvRJg42~y<Jl%h~Plu!B&}8LmJz#5AYgF(A
z&P4CMEKhjZC;55!km0%F=ZC;F;x=vcxePpK);#@@&(e3{%9AqWO?6+qQC($R^j&|m
z25gN_)1>Jr3#CJWEzXm=`H#9k>cW?FZ}#<F^<9N8zT3Rp+?(fwi`7q5PgJf?9AY!;
zSL;{mYYUbI3p~P~aXff**E}~_&N8oCW{BI@mTSw|)!CK#7~hO<9!=lK&Z!Yj$Z&tA
z^E&6Xn%N_HS|<B?t~^)Fxjhds>Urh7BA-0fd8*Z`-zaYsoHx>6yLbMqa#oRd4oKYu
z&o!4gxZEcX<6h6?`Aqa7^-y}f*TkQ_(hC6-+n@2{^5Z;x_t-+Gf}3C_^M_MjS6^3K
z>+REbD^9>_@2ZF<4&s^HrT+7;JgppW)CU1)!bjHdgmOYLZ*)#IRk1-H5hu*s#o3FC
z!-_4JMw5W~aJ89J<AO8yO@FBKP=j%ev}m^Ix?mzPoqdScY?IcD$I(h%^FetAm%5U?
zGO0`|o>AvoaDUpE`k*zXOUrwFc_72u<1_F9Zh~veh4w~TV>#}L@<fpr)s^2*Ulje8
z-)>emD-Yy3wxcs{%kziD;tR`#h32JZqb?@z;>k1&>qcLEJ!AensU9a5-(Azmc|I#H
zxJG=1HX(n(h%h0HD>jWyPp<QRDK#^DuBS<jV)Z;@6-H(c`2BCPmzY+iZ}agyRUMC}
zYl*?u%$j^rzQ~i4w<>gE=LrMI>$H3vn8rYd#^qbxH~Jx4xgvu;S(U0-GdNRi!P@;h
zeXw*GILzAPhw#&8(PnX~o6F5b&b~I!MuV9g4_6Yu->%-S&TP(X@C5o9JdEF|mt2w&
zXjQX|i_67jgJy$9yktw_!tcuO3jO8X>fL0ExhuH$);wpLUItskr#Q<`QY+RoVa|Oo
zKZNtu8NNuZmG%z@z!&27&+DJpV^e$Eq1mA^-(ov0V76+uYEo)Ya`BoOi>HTQuc>^j
z-YF-TQ+y8>-YL&>zcT|Spl?l=A*NXmTF;1TL^U=;K2YOv9CM&&;hhX|o{!48NsrkZ
zFf?f9llI!S%M%8j(?Qu!s4gHbvo{(8o<|Rc{peS?w_3w28Sssq4bxnfx+JU!Uxcc*
zJwQ_h4_jw-H*p_VmbcXd<W%_avh;1ZmOX=|`2<ZCu6rj>8HNREuh*1o%01DTVdcf@
z#p+f2tLFKcH}`1|v`T#xTlKf<Uy!GQ^G)|%q`mQ7SpB`~y-IyKvUDGBmoIP_e4X}!
z&t6<zT&a2Lp%KI2Vl|VW_J7*eYhTRME#a+~^E5lyZs}^NYK~~|G!EatY_)8KyTUp8
z$?#u!59hI86jp!(E=g@!41{6jKK|x<CsY%vHPZhm{<%JW`)vJeEe^d>UMYv=iLYO0
z@CA7KS9vlgd`4HL`N>=ANO~~Xk^C*L$@?_DFS2LBXXGVwOQWNki8*VeXM|2Gw#b9*
z;pZ8+1pKySo`FeswYEFwdCG9!UA?<|4~C;$R9#dZRv%W2J?bIuMMg`<pO<KsXx8bk
z)1O>VuEhkg?%oXgu{`q6^3NhpSjTrW;B?xIzWL*_h7V`#-`~IA;`gkJzAv0p{F@Ms
zLH?uVvTt~d?!&)m8OvA8SM)8f9h^N)KZ?HaLZ0frWuBmUaJrvp;ObrQ87+O`j5pJv
z2ycq(4`-azoYc4uv0L5f=+vQh%KeULYWN<XnJ)f*O!U(&GW1`lsk3=FO5S%KxFS2J
z<%!J~rY<H|pVpk#h)?3Uyab<rmS@gegA=P0t6%0hpflt-_HxVZ)$Nt<ncPfn-V2v{
zAkVlCt*hY~dFGe(FKe|QYw(Nmi}FzPX4)IARUH_&mLtV@I0LUO`GIfoJH1uT4XzTa
z=gc$L`8#aScKr99shuC38r?<F)8$0^l=s7}xVV0vi}UPP{N&B@W}&@}iZ(M{HC;vP
z#_M6$^YWb2UCXXziRf6c<@oToH#3gUQ@bxMmliPq&V!NQthMueaWUqsj4kp+Z@z;k
zuTZa0tH1E!=gaejKKxzhyP%Z4I<#kVz!n#d_D0iwuz9e76%MQptYFpq%6;Xz=D7y8
zg%k0Pk^PbFTJD$rKwSHZ)RdlXo^Fn>kFO8Sc(goP?$3ZNHtufR)z|V;^HM|4=NsxC
z_c!-9;sq^AY=D1gnY1hV@!93<)=uGCb42rzQ{i2_ZDbi)a8cue>Vir=m3Fmsf9Y0N
zfcIJrBQZfvn6^7@*X!o<ZyEOMP9M!qtmoseSFcxU(D*!E+}uCbJl4PpYL;>>oPR@g
zLxnqwjn;{d!oOTEO=zuZt?K^lsnU~2a}*!sC3O(7U;Ly~?9$(*F9+ae>eu>9Xjrsw
zpP{d?VYZ1A!8>B4SSXLsY}5;Am9U67XN_npxB<+qCW#-ZXJ3=vVR@9ELuc_Ff60&o
ze_eiE<f?tse*nv>=g56@8@Ni2A4qSjxQb8ED_#k&bq>yRqdfVZZPB~wU~C+Ighkaa
z<&_`T>&41P)iCZF={>*&9RHv^ryk}~&%L&~w!$}Pj~|zhi}=px)RFYw;AXgsbCo02
z1?ZvtN{w0F68?dGVBzyS=ePHy5Ub=yxfPDqf2wv$W5!`{<G*J-n_e<?YTBE*f-CSh
zyp8_Mj;#Y6Y%SzZxz1YC1Yu*`OwZTm8T)6LgJ;r*2lL32Q<8kl8;*{9jjP60^bo%H
zkMfTe7svx}&#C3Ng+6?LeShtG%%gr6eSG@v=%;vqULLs$Cdc0$lTN-*hB^$N-zxg+
zDdEFn3BS9zdvVv_7AcFi>mY8pPUnb6ZCh_!%Z+L@;tQMvui2j=ZqtD9X74fQ@SI$(
z2KQn#L>NJyf#YeXj-%cp7Qzy8s+i~8VMczqX0>LeS80|0D*YL<^W&U685p*ei})t4
z`9SKQ_?de0Q>lUfIRjsiLl#KQh1Ror^cMCnhpHvOY<y0?3eIdE>G9@EzU7Pfo9}h5
zbU^ySgnB~l{N=fs^K5BzCl`rNVu?DETCG~t@#&rOS+PLw-@n?wq6cmitrsu+DE7Q&
zo>lEQIODF>t`(bcO@FHXRGE9R_sR^I>8NOuG(J5gE7dF2dOqgO9u;drdtt|4G+#8o
z=>MWWO+8ILRrF)J2Q6)zYMTn~{6YCanDVtn+&L}dtmdrd<J2woulKK4&bX_8cUbC8
z?RCLRS7qSJOIAx(Gz{GH>O5na{ty4_ujWVM5zazybe^<!>rN9pwK=ufq-;`PVc25R
zYSZe|&ZnJKt5qxWBYvIRoZG0s;(+QvI0ihqS+!Y3pA$>wXy$16sWpYyRtg7OqF$mF
zpJ=4cWvSpx^8j<2KY0c2wl;7aTsyoPUbVHm#8zwhNO`2K0f|euX5bYt2#iIOe5HD&
z<s9<rYt3s7eg;S3tbFg7`j|S@pu(}~V&aY()d|^CK_|hD)p+qr^+NGZUlJXh-Yoa1
zap`ScxW8~8_Vi;8c1dmCwTbVW<*DZ4k2tLE4*xEny%6SO&<>o3oKL6Wo3wE2m9kfZ
z%c>Rckozt;*4-JSvY+d*{$u@;f{C0a-mVdCe5d|SE!XgGz3?!g?^G)kTaT%Zsl-Rx
zk-60G3(Kl+oSK@c8i}<~gR&0tIX##zBUfLM{SvSWPALEXE`#RaJ$!U@?#8Xx0zc$y
zG&~p-|GOu{b(qUm>r5Pioz&i^uBNWUc-Y%~^LxDGq4H2Mk7}my!;WRg!hT;)EnJ?Y
z$Izost4^yP&0y0XG#@m2DfDWnf5IYnbnZy^-$k7(dsp`0-f6S@X3^++<_E@si%0ZF
zv^8B^aAY;I&7bryu^;cl6ZC}m9^6;1*BkbJ^?pT{SZQFT0X3*6t0yaQ5iga4(o$6)
zoxLWJ_<Q2aZs{{vF8d<r1m{%ew0&c+!*<b+=*o_vzKIjlj?}$r6LQUc^?h{}9pRY_
zI@uhlPs?5Jr02nTj;Y7g;>er5H+yp8+Np`_L%wO?rU6>@m-Ux5ooa!B1qRd)Rvx<Y
z(5uqVLSNsv-nWe<lcEEy-&?;24=qwJ(sG@f%Pr-D&Ig@eRllm#q||~}OAn&lM%NQZ
zx39Oa@e<cSd!ixXl=wRz#dG-RW>LoRcKs-;r#BL|=G*G;-&NmL=1qQM*H0#Hty9)1
zFrJ?O?^oZi;Az^zMcL~lS6F{}(e;SI@c-gv@p5wa<nAf;DK)-L!@RD#E}#B>wMDZ<
zb8GL`9=ron@0b0CbWd}&d9>kUnq!(P2Cf*GF7?>2tFJ4$aeNtHXfTuNNi`1qQ1780
z9AS?2Bcz<z^g6xH)WfG9j_2LfyQxR(p`XCnhxZQesT1y4?^x@LyS=%+!GG4R*RA35
zvAwZ9xb&pzq_*}fcg~+ZRO+{Q+g8n1jois5aKhcwr=*95ex$!mY@nI%ogu!!VX%-K
zP0QLny~<+l!Raf+Z>}s?7XD2u7E|CdIaEDj$7tMYvpa?R>F=TISXVJt&0+5hx%blQ
z(h7%y<HfFfGW2cCkvfDq`9bxA${hWx`Bx*q<1Tz-s{T}cv0~@+g{Vz@TfQwDWUtw*
z*%@iB{#E`}md?JDpVU98+kTP6V|Ijx!6oWEa-v?C1<C?t_Wtbszn8xkm=<?-ZhG0w
zjeamSl3UW_Mw6#cJ}~5g?DZbeF*gr(9_-*k;^UU-`B<e{rJ>Kkr(&s?^V`mEJJ#dS
za%iic=sQ#|q%FYDW1{oP2e_=bbwYhYtzSpZ)+Yx8(4P1xyI;Cmx{VJLnhDM7=_7n7
zLl5@4W!<7bcDn9#UB2XeaDWxFPY&*!t;|;TZT4;O<A<t;D!nb@>a!W+qUqPAF7sxH
z(>wQf?z;wBFfIo(@mscRE$N{*r8fn4+`ihr(#s?MS?d+66)Q1t=4R&RtK8>$%X-V2
zW{T&@J1`NBiPOK6{ewfhL%V|<r3uHT70}^n`nyJ7>*R;dK*NT+^yk{IuNMd2QV+3i
z)_@&3{-3j-Y4`L9s)ufsVXf!^@E)9+P}=e=wPCd@z9(<HpQio=xZiitYQ+fHP<@9E
zhZpLxQsaQX*gZ{ATzNa1Dr^fE;RtevTnLNkZK7MilWNa;acGBXd1IqR;%L58za^YS
zvy)e8#{5#w5v#_e79<D$we!~w4l5Sm32J5P)M~x#w#jhLGnJXz8lCSkPxq%Uf=(%C
zt`)8K$@I+8JH(4uGUzg5y!rg3`lN!Z#Y+A~d*W-?_ipHIQf*R+Uw4)}i+!>?)H~F@
z447@63~S3z#nTaGM5{H*!*VcudPy{9cx$h+S9vS@K)tp>y+Q4@AC(`qK1@rJi$82W
zY{Z!Ps`;v?>ZfY?|4-Ss2W!KdzK{Knt;g1S9r)Vy&GpUNsj)9pEmQ5C{S@{EsQvP%
z@5*<jpC7qZeUD~>6UaHZJ#KM&dZl4fm~;P(FRCx9+d8*(HZ7Z$UuHNi%~bEC*do^O
zv+rf7d(e;NhBM2Vh5fbbn|%<=M{kGc*GWGXe^yVzQ{^o&fu2Cq5!+r&%@t0=SK%5s
zSby2<xqlX|dfT#X@%?Jc*7A(>T|bxcPINrAY`NmnXmaN8cNu!U;aj|%KP?r!v|E3-
zK0HPv+An>&u(SVoAT<`X>-lN*8FKbJ(L(WL+L(D%_un@?Z@A@{449BVjZRGz2NzRe
zQZZf(rs2ZNFQuk7Uo~%b!K_f3XSHA$5TEq@AC?cx&}wM4N(NrfH|aP>bdKoIc;R|I
zs^3=MR@T%tm=E~KentHUYGU8k-`236-pPB)Jq5nR!}T!G*y+pS$BOAW!lTWNeXj4N
z=L^={zS+K+P$sl>XM2O;wU?@wTCE80ghfWB*YTy?YXF|-=eVkx8Xk|2z?tH!c&RsL
z%hWD!jt;#_S*1(}pHSa1hnJVj+dZpv$(UtFOkrd4hwH^Drp;b0dE(IQrIvifW;U@_
zvsNQ^(Lw)Q{#+h!9&awsKE!`#$ff&~eF{zT>iX&$Z`3ofPkN~MJxsu6)aDI5=A?2`
z!GZ8qIyMZ5&%mwfop`I*?t1lNzMNjeA<<7)YgTLM^>oeY`qT9_psN!t+g-N%b@m{L
z1uJC0HqK+}GIenw_hrA1_-wy(UDcHyb#;M5JBOxnzGtTiQDI|ky|i;(=ke_4R!2Iy
zI=NaZ`x@+dI<YyiS*Tj5`cvmm?Y@N5o6{Q@n;xP^Q;vsqcd2%1Yusbgk9%xteT#M%
z?aE_wHFGtt`=0dBvGK2aU-#siUAnt;AE_Uy)tAr7z~63*?s7^wrQI7hQ+KAWdIsFG
zcz^LeeoJH9uGy{;N8nO1$~nB1p$0Gi%hj2(c<#%sX0%%RY}C@#v2bO1P|P^CI<}(E
z;Nf(0{vbvik~=*upFuxoZ%1W+i1+FHUpa$bCsxl=W+@x>H%f$kt1r*ZklG4v<Gu7>
zJn@b6cdlGkF27FgTmGbJ$?>ySvsd)i|A{67li-zl9NFUhW&U<=37&RZ_A>5X?_T4i
zZ$zJeHFx}l8;{AD*i3Bf(fL{KA23yCs*bpeH^Suhg|W@0GxPy0mVGexbnsL0=(zOI
z=!=k#=pO8f&TvckMC*U`W;HEAOx4HxS$ZP=k|Br65n=>=O-`guu_=B7AI_1#!JDoR
z-?FcSo(s1Q&Cmn4eR@)T?)>x-h*J~O4|jM5-ocK=M!f@ioA&AN(`s<`+lj+>XaA|3
zhF7UgixF#Oe;B<>e1bdSTmAermr2pIVMF+Wj(|Jfkbc;E(;p{y@k_A;P8V17D43&n
z(<dMf!&bM|x7D!XH@Sz<Qt87UpIQMMd!l(F72FLPS`;jGVgJHD4uB)yk^7$WpI0;1
zOz-j8_1X2_x#zW-n3zk~Vt4BAxTG4lyzCw_aFI3FL*;ntSBE!;H}tb#r;cW_#UDC{
zI)uIj_=rxVhBRG0U9ARwSaVoo4&(_~_{?Z6dernTscS7%7ApD$#CkT0591OzxzFs_
z-?8tzU`f5=?2}z}t8QgZaU?bK@1<XS@r=#O=0zPszx^fECDnH6r>7k*ncl%Uvu8z3
zY{6#1#x>a&spob5^aAjE@rms|Q9n^HogPCNePrq&e@rj7ImcDTW<1k*ro}UQSgeoO
zCVuntT?Td;@Ozf-EZx)U(`xo<PA;!6uhq7{82Dn~u5wqA|JbH_wD<w@+W(+8;(-i(
z6Z$FskX~zf%zWX2M`XW%@4e>#YQgkZdZb?Mdo#obSc4|T9<FJwX*N!eJMC627Khoq
z-n<rbXgYGsBF!Sr*wp6fRs7(=-1}if>gcUMh9AKY?lXn+(fn^Ox0lOOBd}jeZDCS*
zx8Tz>2ATmLd3AaxugN$*d;9n_{YFht4B&tE6vM51_4mpQk8Cx48o6tckNu{H)7kwv
zH+5OH5}4=G3^8<gXLtvHW5W-o4*PNXv!AY>uJ|a7q9$xz7wIq3<}4iVg6K*58j^aN
z!&0+_EA^RN)4Qez7hYIjSl`p!(|lRJEO4$^`CPEC*rtZ*UIBCw*p=4BuSfMq_4mx)
zGHY;Q`YFe!AK~tDchP$blRVsixYc3wj(nW^ThI;Yt9YUQ1$q}Qux+(%^;Gjzb7Swu
z-h|Zo<v=>zUz@)+ccdrZKE9O)RvsAFjBCvKg3&D&%032|fA{Y0-IH_A;VlNX7+5`f
z!u0g$`-WM?a6TeNs~_Lh+|}UA_@!QM^)P#)53die#XWlZRpqLprgdJ%`_22!`PKRP
z_Ejo8$9K}!cJ1uiVP89BuxEO>eiVFdTn0Zfw`_T>)XmhrA1)7<qthRFMmZyD!<7YB
z`hNZWnhqr%i9h1%spZrb*X<I`6o$m@<ixq6>#GTyf4u1Z=wjAceNR0Y*TS9eOr3U?
z41P;nVE_JGzI!;mw{#M|^g{MEz<+R$SV0$6J22mRZtw2g-R||o+whIwG`~sw*eyF9
zrfz#q_49vJeH2A~$x19yC#9>;+Ml(*Q|f|ng4{q8p-WyK{KjvV$^8IuAG*qK)8plJ
zyj2~9UBd!+Ih@1B;07E|u95G084K16*1kjRRI9|{-KXK4;2C>eXl1YjpMvq!z2*7s
zq93aFoS5DZJ^Ol<)zIa~QK{j5Tzy>mZ~YW%<Cip-H1B0xoBsRJ_2^a~r!&I4&Zi$S
zT5J{{@R|iP=C9_j4yg~R<w@9Ho|NPMoqG?wIq>Fy`x~ea(41j&9F?{PZ!M7iczpP=
z^b3m*^ss+qj{$xI`+ZY=)7F*dYvyabZ_j$q`pE2!qT#RDU9qdqFm7Pnz`|wWLKjmn
z`FZ(yQKNcp=yOA92hK?^qS*U-^Lq1H@3WqqC~oUzWxFHl5%r|>|2T#k_%EAZHu_L#
zR{Hd=3uc{MO|IlCy-@V<(=%qw5GS|IeimAc9v-zI|JECVJDD%O=$yqwT0bmq4Fy*`
z#oW?R&n@Q`@mxJ(bboYTyq>F`tH!0|Lq6=<Xaa9%*eCFljO(&j23EKzG3}}BH9o&N
zzrlr9h`xDob8&+shznyoV>{x(g3+EwbVqb&%wF2B%hv_ZP=Ck6`N_GRb32cu#xK9p
znd}u;XWgdRrcnzwC$y3G(rX0M=)u{i*{As+`)%FB4Bo`uX(wX9&e_MzU-f32E4g3I
zoA0t;I{bX~eD(V2TZD7(Ywm0KqZ;z>%kPVIpEP392({ufdS~?P(f>vDi)zn-JqN_m
z+p60tTwrt=UBs$WhMqDM-h3@}pH_Pef5Z>y!noXr*{jfUfN<S|h8{E&-rc{qfA78W
zUio46&t00nj7<hM8MwZCeHS;nvE115mxH<ob;Xlu$~1*GyH55J9hSWnSEv6Nx1le<
z%KE-XtA!-av2nf)vzuEy$b2u8aacL5=nbc5st@6lFkZLr*7C_~z1Mo?V~gxBhBwsN
zY5wzMu)F`}&V=wB8~R!KS<yd$^U*8lE7RB0*YK|XBHx3*yqR7Vd|GU@fBDS*nJp)=
zA9+Zc{N$8H>qTq1Rqb|$dWM=`sVCD`Xf`z6t5YAq-{p=+2Ob^JlUwKK*8Z(+5A0Xf
zSCzPRaPQ!r*aX|okUpdzH$QH0m&x79U4PdpB(~xTzQg(G`#V1UF?awxI3aaxxIzup
zy3$JCOHYM4(FaARd9eFn7ysBNb#2Ghr=#~yzX9y;n2UE8@8ZyE2{cW-{GE($=@!3z
zj%K=4dUw<$Xs-vQrcHaGlj*mEr^HNnAHSsw==V|oR-eJq#92N`dp756Z*rO3>cf|%
z2gdyq#EL`HV}qZF+3?}7Q<IpjnXQ4F{#pIA#fJ0t=k3eQ`aSf$TJJH@obkk?a^ERA
zQ(mVV=n+xN6}P^hp~kXChP-F)X?2c6E1}uIm8;jQ*LncdX5fWg!dt%Vec96^`rVN4
zhOkxrvA0yWRCqRB3Rf~m{E;8)!L}}94lPZNKejoxp`lv`v5xLV&w<U=1z{=t2XB}w
zWBTs&UAh=;fo;J6Q|F!qm-jC3(N~7m!)m(lKeE^Rfb=8rk5SoUd3EkFb5wOyMYj-}
z?6Xt1Wh+N#=!?aT_bvMs_(ARX2kC{LshX)eGK25qf@-vQ;EMw<4(NUPpXz_And*$J
zmAI(~`NHO+=HP*Y2k6L0)JN1}=CEp5HAD6!(0$~ze+~R=AZfDgN7d_213Dt(&Ggi=
z#lMul6m<w%@IAeIdW+==yUusNdcPX(o0vT>`~#M}t+}mXw{j>=db)brdaH~pt1GLO
z`YW~f31S1!_MYvX(45e)&*_FvH`I00a((Y%y~BEc9r){jUeL5DwfB9KH>Vyt^-$-%
zYWgpo58c9X;5B<F?n}?}=;(mr#BLd0-=o>1fkDjUm)WN-=KZ_+clDoe7Wx-Wk`2$8
z0SnT2RwyeJy0yRGkvgn3JU4YuaRjI1OY)rh#JA<!a(ecHsG-0vxF&6Iz4YoVmqA<9
zC%sa&Ql%&CpmI>zE_GRWLax<&wsm@BaTwY^ZI<ngO%J$U5IU9KELeHg)O{YVAFjp1
z?W0f7VE7EoyJrUdLtV}1*~luv#7m^d^RDnZyz<xSN29gS7iluIQC$4`a(&q-d)iz-
zO~Uc$71sFX=H`Zvs-3w8F;jmWUQTzXn~PQYw2$o`+ikC_|6O~(gGF)=iSx4GL4Mn=
z+OArzyIgmP?A3TAeGs(U6{CTwo2pMPls;D1kAJ{X{C6;}(&pf2eF}K-8QC8WZ;Ge0
zm)Tn_|G@gd`m^li6BF<}wR!y|hx88V@#CrLscOEXHp#B`P2c!hWv#*&)iUsCI`XJ!
ztLkvurl*0u%1^Wle6b2))61ea?9A-bF<-bBZ18sdcCFsRr$?nXdFy)XT8@om(#Kt$
z51Ye7%m*!v-s-q)Zj<coxgtX?=-JM*9r#NR6~8zl{h+Wg-h@xft?=Wy)w$K`;b{-1
zcZcS_Xlmcq{>Rz-abS8V@fv=ON7J<Qx6Ikh*{qlQE1MJbaM$x-#)j$X$79vt@Xq_w
zM_8p-T0W~YKFuC_*LPiN()XlpDp$;(`VE}CbZ_b2W#zJRL;4fN4155#e!qUd#&0eu
zmy|%rc+c@2`nUdW*QQ>9FUeoOOMf#A!0vH~@!@D<7Jfm)VV7rTm`^rxWO{sIN&5=K
zO?*U5)(3>M(te!3Sa(!3Seh~&gFdKcj8nlF@PW9F)96bwAHUDN!EcFXzj<ow@)*B8
zI=#iNU+$taf0%lK*rGT0mGtd6&*Am(`ac;bq;{}SZ=v2^>4W1h*JV#6evQBE6s=GH
z0WRgf6ZVhMRzAsnV7^I@k6Jv9fkpt!Iv;q|wX4y&2KGq5qK)cz5eMYfrH3v(R2@`L
zwp{sP2Ch0?`U%v1Xn6WN^!4$_&ocBg>c3bs<2TiBs@=jLpDa%n8u6rzBgzr!aGs&8
zTdiB+Rr981C9f=!UKAL4%MA7V-(?(<v1Ywyy=8aHuAEChV0SnQyey82Z)}P`=x1|W
znvQsb=cw(gr>Hlob<k8E?LOMQDLp%EhPFm`Jw1c{`8!`#FXW%Jid&mo8#tW}(~2*Q
z?g1OpT0d_-Z^TYI>cnbdqWU@2&Qo@7^V#34zgPNi{xI-|0sgQ+`h&;!$M^5--Pv2d
zUcSDvdu5l+ywSYTsBO?0Uua%v?75I9aL#cVFadpKm+aTarQmCQ^YZN;*=P88_Uo{V
zhjL$w-(-K(kD4DfG-VpR{PJ@49geTYS1_$U4>5wK<yy8W+Y~jgucOz_nY|a*m#@t=
zbgrRl`}a2YHor)J1>0BigKyxeKc*i?A1ED>f3BB(^gl{n8ZN?d>5*y)>|GsK{hj^5
zX8fHt@!#Al@VV5fAIiY-^{BV`DfmVY=gO&lFPffCS~Gry$Fl>P+nX8UzM7+0rw{(h
z^cyZvFHoP-J*9hCauaTTL+%v}drlmfI51WAr<7r3m>4Gxi#0I9TD`S;pJ$9r&lCMr
zzL+XKh#%D-)#exP9F`i;Y}tGCR(Y%3n0q3O3I1F>Iwu`Oo$kxdmz|mVGqpTh&(QeP
zE%i9T7JQoCLH~9?060J{g75Gp*D6M^!8NicWI~1*BW{aJbO{>Z#O%wFXVg&-52tY~
z`zqc`txpe`Yo&WGn|<E%q(@EPAgqb|v!9n!N4z53e(q-O2CsB18Vw!ml<Jg<KTJyR
z6FkwbZ~BRT-~7IDKI^70;)eA2`X1WEq1B-kpNbjv`GtDw!R6p0zUX`SSFqh18S={^
z)gcx9gg1(7^3=o8#@MF*TD9q+_0W2W?h;*V1pl%jdFR*+-0R@%>43}B0`BhK-G$9I
zNpI%M+0%Sw>Xd3-w9kdR3wQ6RZ?EmmnKwPAu#Q|uw-XyDL~EqWUm9I?&h&i1%I{=e
zS4k~%){I|fzq9-(r}MuTs~1zDJGt#|k&DGqKD145o1WM8vWWS3KW$8mn=d*)efGcA
ze=D)>(dN-+NPs?k>;6r&r7Nl{T26i4z;y%qqG*iz8t=+|$;5HCa7A-PLzh*XP_GoP
z#Z&QEjR;>855%fJbpDVCcz#=3qG{m>-}b-l^L@E!$+BdjGsu~8?y0#a0A8SX;*jQ$
z1~zeTAUu#xsb(kl(#`2@a-!N4j%V&pN}pDk@f2}-Oz!Wd7e=o5TkZq&dG2ANSB?!?
zOZHD|AC;jlxpB2|tHa2B;uapIj|oP;EP6Yfs}}v|^f2i$(1#BD(PQkLTp{~ZT&vfQ
z&OH(CNDqcyX}OwTJzhOt(Qj~Dc22KSC&Jm)9^JD>ot)p;(_@a==4rX-liYV)eOzsA
zZ)$D|4!W$5E336%m7e13y4Q7S_5Ael)TrfxJJMS>rJ2&u50<T$ZF4rg2p+cwLY%xm
zdn)iwc*MN_K6}Gp6!j`Pvsig?_9^mP`$uWPG+B8X_km6S+x)lTH~XaS&1UG>?nSj<
z_O9HVewlT%=gAz>PoB-a8NY14Y-qB#bZ_bEJ^y!fuWxd%z3bA)cXT<ru#YRlqv*=-
zXAj~Q*=vJa(2Mw}{s-5oE}$<>FPMRMdcT<K{dl{+4E0a7JN2gX(i{C)=dq4hp;w5;
zID2~P)Hke&yfI5XORc967yo(oJmOmPAUS=>)KON9hN_MN<I10MiTw|1(==A~FS^ef
z^&0gj%_j|>0TZdW(BdA+UQIavmE0Tltn}H#r+OD?Ct@mHnpPvnu9U89ngyO<Zsj}J
zR^3Yc6YF5Yztn%J#eaQGt7qU);@Gm;i?@1)^ZsG_8m*hSL(8OV*_T5Xh0|y%^7N_c
zFINK|=nu5{*m<(+*Q4*t9n+QR${gtlp;3uFd~e(AWsrA%p8a~(mIfzhs@0o&I-vYQ
zXS^r<#^!v@vSzC@^F2Q7*tqlu)d$tysgtgoekDCZZ1dgJxWrl7Ccout^lj^CZwQ=v
zLiS(LQ}n7>#|^3tD)lP(g;w>G^nCszdnWElFY-V&(0*3T(hvAt=edqL;xf%L4Q=43
z8PDflF4lHrJ+h{e@73(purd5_->4QVH7hmr>20!Ko&KW-|MtXqvDF;mc`)G7y`y_@
z`sAULhwAN_DZM!GopXG$d9u-WqL!g<;93m(>(x8VyE-i_B2KE0=sQpgzccj_xPr!Z
zX!^3)!jaJ&)UEC5xud?Lme<s}M}@2L9oPTsj2){Ts}JiBYjII8_p7N<!vQd<JV_IE
zEqWH!Veyiuv*+p1;Bo#f2CtdDBp+oT^QrZzHGE~y)8pmw_PhMnqw)Lt_cgpnLl9T=
zPCS!77yL#YTg*Q@_w^75VOm;zFFn@kT>q~BUC$W3La!8m{-%6Wp6ET%gReiRKd8S7
zHgqkw=l-pD=BK?+d(H#K+1%cs<nOamFVu&@PN(FDW~k51+RA5Y8uFex6s_>g^pxq(
zcV6^C>ntYH&R}+Yn2q7{`XJ2DGpR@GznGjoii_qx8lUIh8S0NP$kyS<Y8pQ*KP<2a
zo4m8Rv(d*87+=99c>Igq7rQXg`swf16NYokHDc^#(Iw$bTy2f)r+*~(ID0yM+&=e7
z`X2EndI-GtSn5kSke*XLjC6nlssk!okv`=$GsN7_(x-%1{W}_w^Efc~68T%_Z$ZoJ
zb>M=Rv*!wyy(K+xGv{7hI1~)DcY2J~Zs9XMJnp%%RrZU>cQmYNs%a|ynPQFe)3XH^
zw)aa;y}~*0X*R?r%p1%-dwMo-1NhbT(pJx?&Zx}g-KpaqmEIKknp~$=N8h9C=r^Ff
zzmuLw`pJ6XH82i*p!W7q@a5dOU&3Fjzg90~h)Zi{$Y~ol8#nlxSZV(k9aT-`qG*Y4
zMvGS~r2&iac(K?_BVu1{%No*Y@9f^$#sBeN*m&3Qp{r7d7i($f%jAA%>N%Ixm(+5`
zEzK>BJUS+0)v{_)FS#n?v~pUzk4m0Z16e4&8EPJS&z>$%m*GQ(xBJN7%svTymHGz7
zQ~2hd`kopeVW;pj?xb#KzaqPVCtl2+w0Sb<zSpNeM+}0UU&zqwX5S=S1ZRmw=1$+D
zc*4$LY;!O!d*9B=9;khDp9DNWzxUGVGtzgf&S@R{`QhJUJ6=99Sk`zvW8LiGdpG?N
z@&LQQJ?V9HBj?FxXodI!-mi~zqwIf#)%L9RtX|8Y^TAdy!g&Md4Y<~MQhTBOG*wfL
z>W=CzpB!;c@0=dL6!+A8<=)l0t936-O?=Dral^IzNnMFXO4mCf_uG6u{k?QGIc|mQ
z36ih$=<1Uh-VAT_7Qwo5zWl6@|NE(-UlpBgy$tzLOto&fJ6`Z{cpLtvMyGa0OM)Ri
zI}hj6r^1f)J=1E&rjL#d(!c3DVgN14Jf5GyM)VQ}akTfD+bjE=KF;1VTmWx(E$rJq
zkF|0?*yFNa?2-)g<l3LffUR*z^TS_!-`nY3+%x+_)j{-YI4^jBPtt~t=^WF6Bl)7d
zE&r^RdXHY51OHEtTRMA$aUhsw#xi3%1pi*tdDUsnCA{aq=`Qk?eC0iIu(-^}tjiwh
z3EVmR5yT68P+ec|n7q1ay=iUk4=4wew5YWA$^Jw7b>szjYu@zSr^Te;viwD^z?&Y-
zkgHq^>;l`t`8bUF2pp?Miret7bF-I@ekup6ZycAQzmFcQHw<osrRaKBWlw8=O25_M
z`4RjzA@?vGle)1uDF>?m`7GS_SZej+HvMzk)L-#Cxs^Wic6!Ox5zU45P|x#RW_2{N
zj$Q|w(VqCc+6c~tlX~V6ObSQnn}(NQM{6tx>pR`B+Axvj#EQ?!HSWQpZ{wTjbGVMR
zcV4t+F`IwCm?38HGx~};lYK6Fkl`8elfPO|b9g}dElx>4C+!)&xGh6`utqdxJ)Jb#
zn{z)EI{f<?>UQ6x&+d%+j9Q(JPB?3N<oWMa%~cKTBj#KgjSpA;L25>Pf&J;dvVIrk
zeh^<ZUp3<LO4-|~E^<zKGL}j|&uZ0b6)kOn^w)_W<I{gym8!rzS0t}>)7y4;#;(z?
z;dMQ5^XFbtFGnlfE&~>q|J3gBTyc=@rgjEbEu1|VuFtx&Z#Dvx!<6Sn%Vyv9Gg#*@
zdSCSBcki6^B;ZD3@&Vlgy0i&)N4vsx)c;ydF7t{vdQKrc3!`t8J>fK1{;VeDy5tvY
zEGOV1b7kL=xz*o*Gs32DG%Sq&;hFOA@1ytd9r#DhM^DV<*{{%RdJUX*b9Hmu!^Bqf
zaBP<SarSS@JM2{d6MRH#d_7~@?5$8o8<$E6+zYEr%-#~dhTA;QJkX5Do}UY&oyyI4
z%I3L`g#5Hvo_};h2FyXXd#m$S=b-Fm$IT+Qw7qcnot{XX{`~Yut&&=&wHV}O?=<f;
z8|J=<v!w3`4?Zfryts~7FK5w(*`#@zG5ZYuo*`D!1o@gdRG%6s18seWhPz0#c-(}K
z=rdiaS*q13<Z<~9mL))`2kSA2#M0JLZqI%axa$1+{Cb7-=li#OqK0~5b76BthVxdJ
zpo5&9`)|n`XEbLtGh}>~-cXoly6E!yljudh|Elzf*|$oc6&L9U=83Q4=k7tUf1cj=
zRrF*z!Fl4S`aWi@XKibxH#9f2dpcY%ye~ejlYMutv+ZGzPpGl{B6wKe4(-&w2b@ct
z;ogjov;Ug5^>FH=^3=xZVKrC!%<1;@s0*X%>$eiO*b02Lv;C^kYiI=YdcJmJ`a0C&
z*fd?3=1WhY#cz^(u}z=;i9cum%o1gZqNo4c<dfyfaz%~l2if0-?}?#$E^f{KICu<B
z*Y~0psecoG7sK?+JD$B#Z>M($E@q?Zhj8{!vfqvE(hkR`muImI{Y7%aqq%3IXHq*q
z`1jTFYO5c@Q+ng*L|ax{R?p_X2kT}Z4d16b?9}Yk?3cZ*E2IyIRssvV-t$sNoRUU6
zb*J64&x!`5c7SUgmVOrc2%9yBG!OMpcx<r@*qWa6T(s+INHt{U?1NvhTCjRF`|jW|
z*z?`o-{z#;Pez{bIoL?Oq*wJ?jyBK?H1lOI5F7eB{YUDB)8!rlG<IC)yz0F6o`zzB
zUbV}zkJ_FwvC?|OaPy{iLU-g-YQ?<_@%Peb!1^azUk@jzfnJjVD}0juP<mq3wCI?8
zK)pqOoc%J^Zm;x6SjXqP&v)@JYrv=3G@Pnmp{>s**TBE0SEpC_GY(Hz6JKF2^Do!(
zp-~w)m45kmbN@W}0q<5Dg<sVb?0bNF#W@_@z7aJ6oL?<g&lWp@i#Es}KyeG^RX?>K
zM;v@%$O~=n;8y7$!1=^CJnFN~KRZW;wez{favu!X4xXYDu9WdmxcU950WY4OOhNCK
z^aJk`J)BRgCDFv3yK|W~_iKg?yr%vyU(3^cXxfsInx~#{u~{u;t$MB6yd0N%8nYLA
zJdH(;^SV4r+l0;8HT_F%jK<^d&sWd4dsF1t6{oD2O!0NQUtbN-oYCFH3<IviC2796
zs(2;-!WFb?I1)aAnY@2O`mLN3`x4vrWT_RYYtV^c5_KYR#PM)uSRMX_)#N)`soEKR
z#+=X)E+`k|t|<2w{V4X=z&^|6c~f+fJu_%Z_|O*Fi!3+VTQMnnsl`gZL=U7HzLnlD
zdMPbJE@5wag}x29hQny{)?MF%yn-uCojp0Ua@dFsZk&6Zv>JZiGi!QP;fX5sW4Ru8
zbT7>JGw6V94j%hw^Unt76gLH&xAQzI_A8gr`;JWQpMH#&+mrj_3~@jnfo<o=^CQ>{
z-0U;_?Y;WF+WP3_7?UB_Zra<lM_<0FzNw}uuwR%9cf@Da7{vpAr%uEc)MD+!nmNP%
zkkRRrly|<D{ze!>?}m7c1IelSR%i(7Q)*7M2y2DMj84DqPGzTb2d!N6d($uASo@;R
zsn4nR5C7gUgWj-U?rHg2@AaO3Cv&(*dist`e~lb^NBTbYD0{T~BEKu&751cl?K_Ui
zU>EDBH|Ol;?B>YqyRP!HW$ue$&E){vg7Z_yfDPn38Z#YF{+YAPS!hb)FbsNC>Pkms
zj{xo@hKf_mmSu}NBRhaq@ELjc#Prvw8_*45Cv_!j1Vh;KE7rkcxC4xGS#?>3n@-c8
zrte&7#I$94r+l$%#!eZNJCoZU8*!uU@5ufEoC`)%M|2NUwE|p^=0=;;Z~dqA>&=n9
zN$Qqt)t-erqA}w5dN$-$>+Urg{NWjVP=CTa^*r_Mxi=V|CYH(bI5l6O|LWNpo4vSv
zg1&fi?)fAxiG}>_qwI+n-*(D=7J3<c_^W80&KXCC9q{0pqoL7K97FFfu0tb(eXJF2
z2xk#z<u-9c4gB^Db)8)@Xr8a+UI=U*zR_=ptGt@~)QijP4CdY-+A&;?+u%IbSw9}V
zQ0&EZ=+V>Xxg9iiHjDeowJ?#~M&FY2t;LHOFoFFX@|qa`e8!UL6@vTrsrRYxi)OCZ
zZKw24u)BK(?ipAsJ;-t>duVI8L&pt0HTCc{dTaEK$=*I1B^-THeNw&L(B+1{nR}SQ
z0OEui+EKludSj!Z9~xbrMiFT+)u3f-b*1A|3xG}3pdQWrJJ_OqO4iysij{LmKeJED
z4_)%!)XBvi@l(InEP0*|t@E+!vC8W|O|K~Y{9*NB^+5L0*sHN{_7CnAjv_~2nfuD&
zyn281b+YC2%lU1eryfr6hK2|4;y>p7*gW%8y-)nNu4*NC7rSFu>QmqLzis!Sn-lf;
zgwl2&ia6A2z`+X6>(l7G>bUZ=m`U$fm$#O5NSOKZ)V|m^8|9BUgLx9y@Gu${E#isn
zlkmQ=8DHi;F6t^zX0H%UPR<rzaWruNHukqmbH7-&Yrhm5m(wSuK8qvsEB-e}dWqG1
zPtTCcUu<4%ewIFB_Gqvn9GAYJe?&i~des8CCn0`_r;Anc-v_xLDo&#}!}-Zs|4Gda
zHlv5Ahx03OLm$M4_I1Rk^p(>iR?U6GKFTmx>|dU{J@>n(k?}=-LpK&5`4@ZvL%<sP
z1>VVi2fjwjrRmB2;t6fi9KyEp`5WmsfrHr<-Zx+R&fUj`PyRHR|GsEYpX8oI3|PK)
zU9^9B8}6e+oSXd*SEonyg4`$a*bJ{9miyAfa<D1<L2s0I<S+Sv4r9&Uir$Z>(i1LE
z?=!q42c-3Si2tTJ%Gvs!d>72^{ErVmc_%e*apug_dFdw;(<`b+*Ba0@#8oz+?g}f&
zqcF~9xt}aeQXZQr{jBomF1c40JqgF(B7+9<lMFFw_4I(lBID9GW}fH@^6Krm2PGW5
zdbN7g{sY=vEUv%{*X7w5vt?|O`wG05``n+Hf#cv@{K@NTqwqP*M<;0cU-lfTzu*n`
zr=Laa7uWRTs9VZ`^JcF(?2ETwkzsvY*UH%k2M1LBs&B2vhd05du<B2;F9K%LH^U~Z
z87=6H?B%^Bm`$89hw29M7LCWyqubV3vd4f%0N39ZZBMO54U<pcbNtKkea3N*O6>ra
zfeEdr^D@_B1k8#{?Up`}ap6Naqn<gjoek@Ypxfc}^i%V(a|Sz?KZj?iv0M^eb+Erm
zEuR*J^U&z6J&xy`#1VN>j8Y5Y+j1UG3B&%h`DwF6>QAm8o~7+PnR~OqHsU2M1%~9q
zoeam-*N8X3gk#eWO<SOA>1U+5EfZY_4$`kXL;7LO1s(FH>ZbO7>v-Occ@~OTjIaDN
zy?JoxG3g<c*VH^|SMTILDZ6I8n|d5xsy~%4i<k1W{zZKNu>3jcHyfBTFoh4|pE$&O
z*}wEzG;A12e5XUPV|WX<Qul;2*`wSgPs5_>A^4b@j(9q6p5<X}r_LB!4XyOP<C^?(
zVtP>joBb4zq^DBs5I_H&o+{tR=4tA1*$&kX)knFHpL&HF%dc~PM)6tRgG=Q~K0Isg
zH~IGrS{sbcR{vA|r=nrP7Pt#u{$+X^4$eJ%<P9~AFLF-{Hsttfr{b!*CmR=&*rk}I
zzYrENZ{EWn#3B7K;uVZePZhuA26M!o@WOSne^K2)91~;NwD+sy(1u}Q_=sQ7Mero+
z$8M~v`k;0Etp2RV&G;wHTffTX=^2+Z#eVjpPHO+qn(3dU{jKaiKV_iRVwT9WX2c7c
zhu*HQv*-Dd=8=YugU76tdikaq>|br~<mf*C9r*8nTuf7iX%|foU|Xlm^IPu9bC7n+
zo|2Kd|0tiDSiMtSm%aw;HzD^YelYt?-S1${^r+DK_%B_P5Ar!YM83Hr{VziTD*u#w
z|B0(?iH7)P`s4Zde5sR~tG{HdU9H{LqV!$sDX@m>onqwL;nu699?jnQksQHi#diL6
zZ1y+7{Bj!p>U!WU=cX>r7Wub$+4hPjZsGXio4V<(+4t~ydSK=6D>85!`>3X_r>@~*
zIm=rABXyFtPMTcJKOV?^*u{Hs8SjP3#4KE0j}O0-!@kb_n%M$B6LYtW9!2NhCZnH1
zJif$s@JyQ2k<F2fxTPnBFXE75;0xI!_0*K7+I{9?sAH--z-wxg^svF)?|fi*e(U<g
zUGJeah`ZKG&YC{GeAbS31@Fq0eAT?%kzP~wE*|;3{Roeww~}pdnA!z@mCM9D{g4x)
z*PWBv04}w4#uuK+lmV;#Gy5p;MVx7k?9)3qePiZdKJtBfEN~2X%o_Y5<AT%|)x^yo
z49aKlDR_<j)2ne3`(oug=SBORoIN*iz-nc+q7UJ+3^>-j!-(V4*DY30%08vza*sx9
z3<JUU=H#o4Cd0Xj0dhYMqNYB3dTyPEb&;pn&k&bk80RgYADw-D8)e9e_}$+#zQ{fD
zFV6j8*eCp|NAA+}%c+0S#n>>s!FTNg6_@1US#$p!^`(QdA6cCOe>Y$95nuW^Ltcgf
z;PR(4)bX4@zo)aoy1z-!wfb4wT6_8-VFdBeocyu=W4r$hH=swIm-{{4n<3{ocNzlT
zs$OAz#1;N3Hj5SFEIav4dY9O&y#eYNH)V+9dN%lqxurMBMRJpTYwwkus@7(0*oyC@
zW%6--A?hD|a<0x?oh!3ndcpMX9*}!t!UK1On?9ZW?(XmMtK0`w%wQv*W*>oiB@S{>
zo;fe?!=Qi8UNGlPL$IbFL?>lC@IO70W<$4^-|#bYB6g_1>+iZC_hDvBKg)AdoWDBY
zH|dLUY_=gLzmUH5RWcq(|BYIdelj=(PL><xU|Jabj%(1#Zp-r?Xd*OyzO5!h^LRA-
zY3XseGmfJ^;5^}Awjd_L8uR47UE;794X?vM=1uKbPG)Cxdi6s2P)~wf#fR@q54-E5
zOTdtmqP@J9!S3-J=Z}}tTb9e9+snUfU;iK7idKf3@E6(uye|IpfBtoC#)7#wj5zJs
z@VgoXeNN7DuCxh0XzkeuT&{oY-Sj`u$Q^_4nA^8gBgfU{J$5`LKYvc&C(MG2(t6Z+
z#ccaN^hLvT52Y7g4V=b&WCkCVoAFG#ptwu-9Gme@IE8*4I1}blU!>bvKbXLt0d|WQ
z<DvTSedj{q+TwxvGv_De{so6;?+#mmE#xQIPAwY;mJ?t&+L}B7bAOY13V#vfX}MGS
zQ`%$GGG>XEg?Hcr-%C#;{*E`OW$EjBJOi#cC%rOoBu!O)MBKuk&rFXMenYELL+ghm
z;8uFBC#TPq-P07{zFRWj4Y8c&{Alh8>e~75I^idL-CV)OYGd1E(5;Th^P-;0eH2zr
zpS!pTkFS;<1)L1mqx;h6<RU%7@|HQ#n+x0PFJfbOv{)_oxPJ<arXI~_)=lp@yg_rK
zxA57>hZUQX|2i2o1M{f{YtPe-of}*1XAR9g40cR(NdBZ|AkUi*oSxm&yxpUNmJgrv
zS$dtlpS15`onfh{uHR7u{CRZwoue({nQYGe7UW#9ctZNiU59w-oatBWkG;`J<wD1$
zqm3)$ih3}Ogm$dPabxaT<N9GXu?)9hdw<L`<@MW|U%AfQ$ra)wyEPB|k$>U`aJv2z
zIM?@!>-w?u?aBRLX1@Z>;eRq*zy1OJ=eWKYgWJ=pX-WRgSJh4U2A_R5!}^FZ@DN*&
zm#v##a{3hipugja_Ak()*}{wIkK)tr%}x)273i1ZzS^YNBKFLd!4~B_S|jWtzR|G7
zF#BNG^T_n};E%W#9O}EoOZjS2nbdMF+)>`aziEMWYQ?a)SV})>^^n8`oJHS|c%&wm
zDpb_EN4aHtFGM_c+SJ<NJ~>3(q=A}$@eWslZTYUAC3^KW>0vf6FdDs?_N>15VR~uV
z{YKd<sZR#pSu)?LSA{OLZSIk>Z0<E8o>*h}R=q*2kOyhH)<~`p%X}w|*L$YU{d)No
z9xZ-vmYzyJ0DFiLEv`w;LtH;P_aa&|y3m8c`>sK}nmYrI5X*5QYcx9j+2#=T(0hRM
zu~WFvwT;fb2gH!JHWyogTl4^l+q7PMa-Z~hxL45Z=_#ib`|S1A^_BfUz0xbr{f`+@
z4*T{3uaUh*u*C+se~b7xtUs*X?;t<OF>FXLkX(sB;?T}b&%OCzlk^L=D-Q7ElEEhN
zT=gP*9>o2p6UVHp9Jq1zDA>2gF8I!OsW-_H?$tzFf*s{{zCstkH`qKZyLfu};Wm34
z)Lhqyo+KXOO0+9=qup~K47R>{_9C%Ky-kh*!~ZP<ZljsYpKoQ)5ln$Mz?phM!~onx
zFDo3RKEV%M4_r?3fEQ?gtEKOqPDj7OA=XRZoOrcGy+zHB*dSd=PO%2~C+!Tzcqe^w
zYi7W1xEj8I%gN_rJdKh@jDM@oinn?neK$PF|NoSshsby0fHYe^g14C`=YV(S>)ZXx
z>e0?yPUV9%M4FlP7PskSVuU!uPsKcWUmu)(DPoB_I@}KX={=_h^A&TaZ?BUd@3XGf
zaQY0m1TJ=Mdd$Qo{T8^V&x-G2|MMB@K=P8j$ai3Oypo;EA26ieM0gH1<Co4`T~qAm
zyZE5|11qvIJ|xDyo8AHOS*(`V-pX?#=8P8D-earYr1rgEr04gD+)EP9*eE@laEN*i
z9({f8=>q@2m+~Ra4b~UL*gbo}p=mJkJG_K<-IRVXcDHf%j(eY;#|Ja?-{SOqi)H~A
zIA8df9lCy4%=wukoL`O38p@OW1)eg`{NbtGpT&901vFPa37cDwBQo%xjWb}RUD990
zE^r&M)Vj-CG@9)*#Bllo9{Fyb<;8czLh)0d48AHy$|Z2?mD%qi9#{`}W%=B9Z}#k|
z=bPe)`VZY7?-VynzqI$|<9BePc=uZF-=(LFFR>f8j|1VvKI2;1n|bHM>R8?fcd*w>
zGsN>#vOk<w0ng}-u?BL2z613=eNoHg-U)Jto*0<T9K$F$2~CFvvuS!uA5MLctyn)g
zEdB*|AD+SI*spqp+-5HHEVla-vIm}a!OmeZ*R)x*a(3f;aBjMmo<o{2?SWmJXZ%UL
z#2?{yyqN#P*|Z$`Dc(mn@gC<2W0;RO(_2lq(ANV$@HP6N_$B_+KWMM&h4W>&9&r{H
zp@FK=(`(%4L+>)X;n#E$yl9d1L)p9IJ@`G_zdA!5P5gl&>_c@NeFj^n=bBz6-pd{4
z11~Y>Fu|Ou+rnZGq|OGT;^OM9_FUps<^hj|$;73XGHBU!0CVO1*)i=yFP+{{ctt-4
zY!7#}_$GW#T)Z%KT^w0Y20jM=T$~Yj6Q%2rHW%O*-=u$2-iH137ki(a;+pkdxaa)s
zsUguzt)2J@f3j2l%Wl}V-euTQUWFOi;9;rNIZw6#kHK4V#q!aj#YyqNIq5HaDMK8g
z>C!TOmRcTM#n1kcA;*cUFdp0E#|K82hOKZFJl6N}O}X6q>nGbk{W1Dsd>`#qZpZi8
zvAPUB-8{Hn+)P}TH_Qp!g_Eoc9T1k)pDTV@8(bYmV1Kk-{x65n`o;V+GMt~-ZeH0J
z>;#WHSN<W6^D}z7xG&eksO*q7HdpQ;054nLG3hTbFLWz$$y_>*iK!`AE4l(-oHsaW
z-t>0K3*wvnMnh-I=jEOa-UDZ<gD;jIDBq{w%UY^UiT$Hei|xne@juvH&0ZbtvgpF*
z#ooH3vWH2J8%;p3nEZNX?)NEP;QDgq3DNp-H5#0n7;fc!uFoDPSQ4IrE9GZ(Lmb)q
znIq>seRN0ITOE#F*sICz;T*AsP60pPmc9!=v{brqo2TOk^yEp=Da3R(2rINaF}aRy
z<s$p~;@}m>VB>5XZWSAFFmnK(t1Hlr=v=NbrqaQ!_3}Cgv1Q8)oB~I34Y--}hWjqe
zI6e0~GoO4%d@>(w7ss9>11=PI*zwp5ae*!1UU<8_VLsst{=#?QqE?d#7o*+l^N}aK
z$2GxFa<&|(zk?6M&R!F@@Hd?2^xQW_9CgkMWx#RrBCP3H-Y1sP?qGE5F4o*1{pzfY
zS=0M178qhN9RV&k_x#a51oLaIVNbZy-eeqzM$fO=6TOa)!AP!0-jD;-we^(h88uHn
zr{*i)%ByOhv|1dWeeakdr-&bTCe9}3sMU(W>XC50H5N<QBVUKFtuai@e_<}QDQgV_
zz;J$ON(-e2lHJ2w_C&&OGzaS^Hmj?^mT;QAI^vG+<lFXU$OG^%eoudpe;>=fS206u
zo{+tx?35NR2EZcxS3Od`{Um+u`b*6<{xU=EM?|B5kM&8IkN;#(9e)w;_^E5)N3IjD
zhP~cOpPcV9_hQ!)sTDa-*Dv?ukn%74$Kk{_^DMWEPjG@`dW}Chw)ibqxAT#>10%6J
zIm|g(Q)@de7|&e5Z{|bXR^w75;s4eZMl)yYq~`{QmV?Cy8Ui13o#HrOqc_Pzu%Xxn
z8;ZO9!28E#;D`1Hm@n%J3#q-YnA}U#9_(c~HvKFxr1*s&eUiF49)};W&EHnPt>hHF
zUE(_%r`_O+_EW=N`ZeGh*n!^me(p7Dt@-UGx&I8mvHs$@I-zS*`-Ah;9C0{2LC%Ba
z**qPEEyIkylfSABumkUr=h+=j1xv9_7#{~WuQ21N?02w!^0V`!NBFJ&phoELaJu*K
z5&TAu6kEkMI8mR9-0wBtrO(7#h-vsA?oE&7^Mg5=-?3G>#QM@%*d3pIHG8q>+hQ;5
zE8d7DaMa|~EyT6Qqgy&pb}46wrDE$l!PoqUo<YOnS2PT`pHHw+_P5lOrLvMETYh;#
zo~tvoGqlzG`IKw*`Tf!_NiQ%D_|W^&I@B(FmZqZz_L1y+dL;T1-UWlG7whYR)8QC3
zG+d2dMMrmhHh*I<2Rm1*z=>DPes1^>XM#86EP4rhz?*3Qhvq(c;<XwdU4YgN<C|0c
z5@MY?IITq;7?&I95A@|qYr%hUO4!bO#X@}x=2Je=(<DFY<)ZxrL9~5Nuo7FdHuM~L
zTpnN-;;;E*<CmpB=Y!Np#9MX&7tv|ir1OMLVSF(}{<W`#9>remE20VDJnTYD<F7a#
zT&SmZRQ5%SJusNQ3%a9v0UwZ`SIQj9!|;Ufhc&FhL8<A$wc-M9$*(TScsKf^`WRo}
z$6}SZ1KZdaE8bXFbIwND0S!}JfcN1ozAT5yE&k0v?ZIF_?3E9)ExCD21|8VCSzqfy
zL$hxT-r+;?k8_2|@C*J&^M5!sPh1yX_HQvvK7upN2_G|u`qbH|d4(b5k1sOB&A~k>
z)*R-v4*D1Q2OL4i)FajA?(kakWvyWqaqY7Ve8PIUc6yWF@|l{9HD#N8TYh4L%cW)j
zyWwAA5{?1W$U)YJw#a|*dbrGdTNCq)1Izc~jdN$$e8_KH4bJ{?25kt}FgMm+4tOed
z=DOGnALU0lD=o;n)7WSLv?qN#>dnLrb1$ZdH)1e9ra@UVc0nr>*O%)o*O7D8uHYm2
z#C*c#&QTwg{!zykE3C7aC1&C=;u?-TK02G+$+pakdJ22CuJWk5uRagCQO+~ByQX#|
z=C}G-zDF)McQ7kXA?DNneW%!9J;gk>MUybEcsqNei^ECQh`)(H_=Fk*f8h7xz8uQO
z)E3y@peC#~BX0O_$HVdUdznYIo})9^x%HCkoRfNn_~pNG6WR~{?V81C^Uj}WZ`M>U
znV119I|p$V_O|}kTHIh)>>eLr`>>&TkYnw+rBOR4=VSk@a~4PNQ8-o|**wW5zUOb*
zV@U&`@A7{<NxoF4g9G@Uo?(7<XL>coO1|eh*#~U}o`PYVr(P&}nOcqG-Vxh?-Q;)i
zNUl;Vhar5I-XrnE{tWr_#q=ZV&xE<e-2<YpyFU;A6jPqcJ^?Y@o^Uao9r9&3S4=uL
zy->KhHDS+i{Y<G1(OJYyz6n#~1+bKUVspu#T)(+-zU;<Y<9@g#yEV6R1FXgVtf4u#
zrtCoua9-kxa~99#Ci5@1!4KjFi~}cFdp_g*a0Pjaufc$9M1F>?;eEEMKLmG#Nqnby
zQp>>;U<kaN{fl3NH4xaCR->lNUul@~k=&~`!oJk{T)P+{hdD3YnSHP?K2Q5)k3K8!
ztLv~Qe&>C!r51wEiqUM9FUtq8i+H<phTO=n#Xa%Kx=+mDudWBy#NFgqF~Az(Ds*pn
zh7YO(h^h1loD6@1iSUiHGQNtQ%0B3f^grBmhxC}~3y@dD%4ehf>Af+xxS4h257wUc
z_;jv`zrqW+n!mx4&RKkdU-4dCMgCLA!H2D(`LUk-#eDkv%jqc)ciB2ykR#<VnzQxi
zH*{5V?*4#|BM;Fi9Ghlh9pFxRRt^*I#W+}pE#aN=AWR^Z@PTQvhd_LD4fIi3oxeLj
zYvu?3!3E$EF^|R|@A*4_nGl}D*6+!_BY6c^6Mw}9HVGfdkMJ+v#_y(N$R9KwxrUa5
zkHOm3U;JXrv~K6ZMt#V9;f`>lT&woarX2@Q;~#uOKA;n{eGj=l=g!XfDIDee;A1h=
z{u4IJcCDA58@459TYI_3Ik)jM{wi0BD>MS1mv4QqxMdw&rx@V7#7UYcUioka%~+hp
z?cr%Lm`;X^@LRg#8|iDOBfyB_H@@XuToe9G#~06WMYdy4g1?KmI4b;bbm~fYK0l&)
z(p&hV+%F%qRW>D08G0tnBbzek=8DGR_h1ZQQ}{1?VdrqJ<G^zGjQHRO2B!bWMf~D_
z^`DU~-}XLh%s<uoX*{$@T8rcGQ$K^aot=seavluGwqR7+CoPCg$jR1R+@jauuliK+
zQ21MKn3&^OeAar%UCsqol;_nha4vY8wxbTpXS{~Tn@1Q8))#ku*WS6;lk;-!^g#TI
zUp$n-p5z5KE$90lSV2x>Tjra+$Omi}Hl%60Ujket#>;2$fNO<6_`LI%YunmNFqr-u
z$AAmv60u!gQvaZh(BJ)DDq5LXNQY$0XJ=15O~SF+5FM3`m@l>}&*I|leZ`I@#K-mK
z!MJiZ%z*P*E9(NMES7#RoW?x5Zfjtz<qP&8udx~LVf*qD+Y-ZZGX8EJ<tp_iSk^Vm
z+kB19iN|mn|H7~F8MflMcpQvLPZ6h`CoM{j!P~5ZJ`Whf`iSTJO>A%ta<27Z$JSNc
z;oo8m?xFWdOr*uJ9d<^`ffZmzJ|`Y}9e%_u<S$r8OyNt`mW{&|`~;V^4miF%<Qmt=
zkniYy_DqNYI2ykf_vrR~z}kpCY6@b7oCsT)2YDO@W9RY$-YpKZJ8?{0hD%@%JP<#X
zH<!(@#$pB=q{Gwt#b~)zO%_&#WoWc`j+lTmIv08+`*uw8A(zo&;2n0Q&rCkjzl19|
zH~O^evd-|6JP&I-Pa2HahKH~TeQx3}yXPO~NsJK-T!WbIJmq%S+V#VT=0r~d{9vwq
z7It%78nWwfF5<JfGVg3#u7Fe3W!MEf#q04<v4PF719Po6LcVp}EAm`xb_H*;^GWHG
zG#6s1y0z<vPiP4IpIwNn@CUAJzQrPT%eUF1`F4EuD(la8@FRZaJopOxc5Qf-94D`f
zjbbr7!L@KK^XHn`n{%>8;t@O{j`(i=BS(vAEzgWEnIAfWxn<AR&^fbRJ~xQd9EaA)
zZskDd!?$r`Sk=BnxypBVuh`G`yvKUUck;3IgVD{kd?jzfo^q7;%Bk=U%peEv91IDA
z@Jo0HpMy1NosKt%i_Mc9F1PbVm`98?x9nREZEF<CQ{oj|W*(iJxqwH^srxJ7E#p!_
zq`B$)vVPVVKhbAG7nbkv47SQnVQ+cYIh!B3*ENa__>-JyJ_hp~+cCe6D+ifF@ys=`
z4?f4IojW^b1Fl)D<Qt9&Q^K)d<(jPxOy_v=j_<)Sov+tiKWr-&%YW=oj1{BlX1+rn
zk^8KRTy7oNv3TK}T#vl#8u@{kds7DNBJK@-uXz*S&A%Kiw#!xK1*f9bv$wf2_@$Wb
zd*LD14fl(8G%9hHP9k@hV|g34V)y1y9+n^JW%3>_54++8t*r$ciHXiZ9FlMFbUx}l
z@Oge^jrj=MV2AL4m;<-L9j?!N<ptL%C%Ha;>R93`9L6sk2d5ERaR5H1Zih#}c5)9}
z61UV)%%7YtxA={h^4+$k`+xCI+`t=fBmSv>#Cxp+TlZeL%D>r#oMQdu960*@^m)5}
zv5UWrO<$SUVH^DdVxV(@#l>kn0*>}QFz`UMR@ZC2<rTgJvxsqgMSh{v!ZP$Nf1feE
z$9$Cynp5}!PJnqF2lk^S&<^lxxsIM?POXRepdG^f?APbyGkOT$Wdr71{8g)hQ)s7R
z5&x8b<T035?t@KnH#Y2A<c~pZ(f9EOIl&Nz;SsTvHYVS(3BDpexgOlYd)Taa30KL-
zv<3buf53t4*g42`{>^@Tmfy2cHtqWHIOoMT*{SR0hjIkJF_&!HcZfCOsI}rtV##G0
zjwuF+!?26*5+m3yzoHZIBkKh7IA=LroT5GOZMaS>q8E!b_Pnxju~aOE|ILMX>013Z
zU+jR*SQB&UTI49_D=)D-YXzI(EpiFH%K7pM_T)U}3OXJwTFeoj#YcHgj28oOA8WvO
z%;`hPyYjSi7n9`)*Dm*2Tlm$S%1iJoJjbuCt^DV8bK$($jMp3=zUHT5jBD~9=PLH#
z=5mr4#V&j&+rks9!(faPPuYUJVcz5($A@j?3G0XlZ;&{|t{n$Yz*}HWc-3*`D(A}Q
z<vH<E?S_5uH(U)DWwUJ3n(Ae7&ejnwRg+;;a=l}USMnVjV8erX+&a5%b4oukm*!v0
zH`nG=d^DeU<)BZ<8Eh1m5li7cxyo;PFrRa7v?+Gu@A3eQOt*F(@~Idqrpt$H);h8c
zzHfb<i`-<MVHUO|SMnXP!ZBaXesJe)o^Ule%o@T;jt3X}9(lv@yhi6@>*h@E(o^M{
zohM(zdkk~pJLCuT2FH<e_4MIy{GVM|E3w|3nQO<OVTfJySMzNy#2kNzr_3MwaIJE_
zSRuahA^N`D;2h00j*7#uMb{7ix;}o;#+7`B@8?rujhrEe@OASBgPR}65+~$MagtqI
zKYAnV@4uJLuugC*8?#pUpd9Xc9n*RF4QKOfwhNoGUHA~r@HcDE#@Gg&YaRW!YvUK@
zonP}0Ya#~7an^-xSwFGcy1-R@(j2-DzGH3qD6Gp)U4zfi+u4V>%)i9}|Lt>lk7J2}
za+dYvi$3cbU59nH_C8}h_>A*4*J6it=2zCjS`Xp{@gMJF)2`Qi%1<;yzUVvIgJXEj
zxxu!69GmthPkRlv_nmy+vDlC~W&2+Dz48^mF`w4PwL6CRLsPewVk^He_rBlUx-P!$
zJYZqRk(XdY@AbWoDPD?MbOJGgPnt_{#&;Rk!29RP_qrbMbuO@=bM-eq$=}%xe{&pb
z#JA~TVwUf5Z1d{;d{$0zEzXH;@h7&xc73nc#Ypz%I&paR?OertYpu>?oqVU5&4%dp
zjw^OJhWT`UY??io57)>ZCgwcZhU*gReO7!Mj6-~cjhIJv<Xpseud{o9H}_t1oor96
zF)yyuF@2uB%YW?O@xA66oR>k<a9v(^F5;^Jo8X<^>)(!VPW)|ft(^<|a~=L|j;%Kv
zkY|0?dHW9b<GX#Q<5({kf}hI+{MDMl{^n2oV=H2l_lvLQ(>ghp&pC$IeZTp@5u5|N
z76-*o^XNOhF6Od-udyT7G5ES;vTN@(XFe<U!YDpt{n(N3_jliKE#HofnscAG7GC$?
z&dGc`cSDYIjcmYqxE8kN?`+aJnJ4~d9$dTgGnee#YwTa1HeWCSzcs(sj{Ue6zUVr9
zr`XIM#agdfBfr_~U>tEg=kl+tqxbva`{t6J`L|<Oci%Pm9c%`k8njKmWH>M1!*3jy
zJ(x?^W4_pn7-)VR%lEiW$EWx3U*GA+@w&Mland}Q1J`9veBSqaukUj{eBIxDx9f9m
zzRU1A$MhXuvkuP5Ie4GBG>87}d&OMGaqiYeOmZI9fS)*T*W)$Ea9v)v_Rhz-I;Qw*
zP5igxIZyxXdVRkb=Q!rdaoF$R`}iSSH2=QGv7MjK%6I(UkMnWP?80ll%Q>)9*X?!3
zWPe__j{eU6e7Cvvy=>fjor^hE>vR3S-y9C+S#vBN$Z1}8OrK|W&e1u!7HjFe;V6H1
z{6YU5JO}4x9=vWiFW=?!*3<PmhB@<D*EwikeAscEvupOc_lpaz!Ff71pSHH*ku@@}
zj^n(Yzt4Mp@H-sG_xt={3}ZKJ#=JY{!L@M?-tTq!gU^^R_TU&|fZtyCKJW2;{^ouB
z#aug=LHiV|oQwDHN%7lxusw6*9L#~w@*VSJ9lgfBe2=+wjjqqRnkRpE48IM>_dP!A
z`^}y25g)vdU6>cYz1N(2-DmvGJh&F09gGvc)4cgUYhu2AZt#6xcRtqCkN21xud@@M
z^_p`UeBEo_=f~@g;m2{Ei}UdP&dJ~Wc-`L}({J-NILB<lF}%-t`i%Fuw!!o8cmHi2
z2W`vo9mo0eZJ)D-KI8L_@86E^vwpnpHN%g2_v5?==hij(o8P`;@OZAtcRQBX4Bz2<
z2j4q*Y=3vHejM9x-|ffoe8%wOectb9@S42l-+sL2-;V8iz2@J8e;+)K--Gk&x8pfi
z@AYr5y9WPuJincj`58Qx*9YI@v(|lZ{(RnN9B=U4{LL}E&$;@y--GtyS{;W^_&vDJ
z=H0Od-{<dx=VHEmZt%ODn>iZ%uEBr%9zHTSzuxa$2j|mu_#U70p26>TJnQ9kw(hn6
z@9U21$KM9m%D)GXKX^X=<{0a*v+S720Djl`ST*|KE!O_&#`)KX{BP~?2OPBDe*3Pu
z$@*&#8FI=}`O99v7{AAEOa6TS-S%+I*HeC&VS{zoU)MIhmg)`3&Dz%<GGf@U;lqZG
z7(RUXR8x(ZdgRR0j+|zik#l@+rs-#%XU@^1=9zQuxyLN9#6n}{TWtQh=U#ZlA1t=i
z(#tKk+~|c?UTvjiR$XG*<(6@f&Qw!PHFBDfvrjwi?90qM_q@ye|Ncn}-;5*Ncf9V*
zH>8@eQ_t9$@>nwQkW}s3pIlD+)2Zt2&|$+zOf~g1dBdGE45>PGU3LE-b6*)0*Y|DN
z1Oh<<A-EIV6WnPexVyVc<8B=wfuM~92=4Ad8YjWsCAho0H`BjY^G0f>YW{DeYPxEF
z>i%%|y{FgNYpuQSL45rh3I0EWzw7Z892T%&zyH84hK!?XibCar%Mlcp^M+cy<`16Q
z#2F2znQJgA8a@Fb5iu<tJp&^X7dH<tAHRUaXGtk(8Cf}X4NWa=9bG+h3rj0&8(TX!
zcMnf5Zy(=~uirw$zK2J|C;UiEO8%LWnwytjP*_x4Qu?d5uD$`<*wozF)!ozE*FP{g
zIW;{qJNI{fVSQtBYkOyRZ~x%@;_~YH=JxLX;h($^;A5Eo{`sHgg$>W^6%rC663Rb$
zA-wW}2O>7o>ksV6@5NM6OkHrOID+2bipS;D{6VGWR6D~nbDcoLr{P+sJ^v@Qf6MG&
zODy<*E3^NS*niDy0f2!B$6;(lY&h+^hea@Czxw|&m}V-o+<cg%-}{f<it#O9ktwgI
z0?H(P$-~a_w5Mlil4keKO*4iw#UVW~rzg*rXU?_JM8I3{c1<7Cw|rm<C3v%LTAy}+
zbu7z8GQhC#N$AXhrFh|W{zxpRfaBP952wbR#G3t$S+m4K6O37Rp8bv#GFc*4BM>J&
z_(Qwx09bpHMW>Wfxzy>$I?PP@G!5A{sLVN|?$PRrPH!M66?n75(0676%%Df5)TDaI
zG?a92hIFkG*ovlgV6A>5)8lLHd77hYnm3In!f@@KXgsL=B)w+mpk{l-0l(v>lDH}e
z|F1*K{ZRs3qBkG*#yW)xL(21n()zk|rf7Zjo~W+s;VJ9|Ac2c0d@6NEvOdBWHf_~3
zU1-#jHVC1f(9Rl8J*`_tmz&tQxLOvNodEAgiOD|s&Q9aQ0=g=l5ooe{>)!V+14CS1
z05&^NM|S?n^y{Xu>Y6otk)^5B&h6OhZ`H^?6&GiJzR1x-<-94QV#G>3D9jRRm$s-j
z4uH4cY;H?g;2s5dOs-9@yI21;E3W2ye#7LPr-QbetfGTB!fW(5Yy{7BZ(jg8i0YG*
zwr_b{pjoI-*d^)h$#_jKfI|J;7r?j@P;S=)Yku)_I_LgF!F7``qC<-GUeR@x+5)Gt
zmOH;XB&XQ9DK|}eEH(M)dIQ~AF{a4e9mQ62gZ_&8x>7>zPJ2_B(<S+Hss%-#!yyAO
zI31RFEd|{W%eH|MN1fkyQoiaf!Z=dGlb%lXH9J{gPODlPU87(V#q5+`rg2f(zb9r~
zEjhPb$p|o6bYeMSU7WN@!8%~7WIp+sQ{UdONF%46$Pj2bHom2WS#UPj>07wzmZO93
zSQ&c{x-VqnS2Y-`IWNGw8Z9|P?^3U^=k&7?d{cypvbL5r+xQX3|6Q_pb^Hyh^{{HE
z1a01_`Ejk+jx)nn0LmzYI=8vMo#d`?LwCJls&#)&)8~V(h74Z&A&BPvTen+Z&F62!
zNw->VJuD8IiLqPQ(`qjE?p#xh6Oy>0xT=zX|C@nVv_AG<7ZzTMULffUATCYr1yI!w
zzG4?g4rnrkwL4v|R18p`UTgpwIAr%;tNk*GAMMLV${MZc)y0?12)x0Z7<g5exubID
z@UHhOk6dfY{g@u8M#IMx<)lHw7g6PJzrwHA1|@>wS7kU1kDoC_Ze*U=UjPUBGZ|q7
z?y3AmF968-3&4=+S`~cv0-(5_tkT-sP5L7*t5ist*Us?7lxCMyQr1_%S=|zk+^DhO
ztSW=FTj(l{i{M6TR{f+|p`2&ylEyHr|JanYGRs5sddyXD&0=;(($$F5)Tz|l>c0P-
zSTWD7@Vh#NQsvFQO(nsok=C=SNT>JXtM)3ZQfxV?_To8s;*Dk!=IQ1|M3p-a%O@4I
zq5K#QYsW4#$`veLsvO9yAu&=+{M>KUzqtBYY=kb7#Sqm!`~7~bM^}^ri7!#`TrAHe
zQ*<BBrC!+!8?9U{kbK{gj<C?hp1xM&c<c6%Sp|AqHsr&_-igr9!oOKm!fpIJ=moHj
zI<?7OtSQA_c6D(})=|h1ucmFTm{*TUYUw;<u)x@4+fNG-O5fbq2nN6J3Ks06V_I1H
z^$JtpWK3A5+<>(vH_H|M@ZClEIgOcf0dFja#x+s7>=Sw(PiDjHSwLdEsSD}saeb2U
zDOlpT$Ag&)h$cq8gSe3H>@y#Cz(_Zt$N9DG4s5=mXhyPZv_b%d67swNtTZo;XMUQ*
z9c$E61dCv_VNC2_>am~NJ9oVR$Q&ZB{DXRRZDo4};~pYN+Bcx)yUO_f?`kGLMAt1_
zZSTZ;=j!{cVK|@Q)>s}P3~XkX2gt8UN3w*pmF?g5w?dc#qQEGK_j3~qptiQ2nx=H-
zA)5Sn<z>n<pxk6ruwa?3DY%6yk;dasPVo)d{Q2vhkWw83E&_ZtRNUhapEiM-{iPg|
zG#t2bM5G>Cgw$u;H-=-uLOji8^M#2{xboxOE&7LzZmEi#;&sW&3G&lg!m1$sA=!^+
zvbwQR#b(kpn4EJFq|_5(oJanak^xR7{xoM+dGQYz@1VC87B((-h>*!9GWnZ;3EHJu
zfy^8mWih7mLEsgRdVk+&bC#g0QByJetx?$n)iYd=)q=9k_`siVY*JUf)7=#Ql)&~)
zsBFF>Vi@cBLiU--M`t?Wz-3x9txe$O&yA6uvcn5tIh9W0A)+Ee@-?oi=>K-u-nqe~
zK+Ld?4{%)VvC_&418!MOb{t+%JY%Q?W!W!&aC0u3jsXg^vi*pmj)giC6sXlEQZ**{
z{N~?1F9QX<x}t3lu1^IWnIp$9;S3wxJ0mT*dU4CdRh!d9p_`Mszbb9dM_Gnka%+L)
zwAAtd6mkZ?%y%O=DPX|9XZNz@Lt!PyJo?ImiHf+W1~i9J^YEV@xDTPbFyX~HsuWt1
zV?BLVfsK6-`F2iJW5mbSyCcq(R@i25*13-DLeFR<*s*$H#9;#TI)6zcxT#OE_1S)6
z(8t7aAVzYh>Df&t69krQgi6{}6ng$h2&svU5%%fP(39YG&v2a6nKEntMi)*q`rcxp
z3xyQYnLiC;skcWhugsG*jq}ms8yJ-q7P~F#vB!A#+O@PVeYcIFe)*P8>j~JIZ;eOa
zH7y2<tgs6QMSYd6t@Bm;*j4dqcg%i2E2?EA<f*LwktV_w5A_-aIaY!yitOOk+SWOw
zLYwmhpFa{9ribx9ys*J1xB*R`(ey56qj_8P{cH3ff}t<K5IFy2f^bMcxPu1QcJE5|
zKi&Jj&m%%9E&;Xm0*6R~*rlVcNr_z?_#OA>mKCL<N(0xIIB<6%@O8l?G>!C07z&Vf
z+<cfMd?I}Cfb5VT*jc3fNaQ!YO-4b%>snzeTNj-7AdxTeVEwRdOIH^Ml|`!=U{9FF
zQu_O3UsluJFwK(NQk!BKG&dZceD~v;LUmu_JDnZ%NiQ$NJi>*Ze%kF$lkc|{E#ev9
z03Y|5<feuQgMj+qLDtVZGftd;(yT6iK6qW@kwzbB^ST-BDmKR0T1}mNmK@y;@7079
zUvcXURCM~pEEt=3rY`l9#)M>bhD;F&`MUKm|1e1#(Q}G(pV1O>wB>khW81)?Ckk`O
z*^RsHm#!)>qVS6M;TvU-z!K>`zoPm=Qr{;vLjQBKbo$E{mam*R6$j!BLNRPOUWUf<
z4;j0bO(7L3h&q##G{-{XiG#uPo_Ob)B1{B#`j#XM%l2qwW&<+lG{SCZ1eQ~n!fPQ{
zE`CBjtLUejxhBCsdap_aQ{a4<qXs{UtT37v9?o7o&<?*PdYY~ec$;bqxPFzG`+$`y
zUviO@b7tM!z|UAD>7CbBez2ND2}>NbBPW@?ikHgCH`Yg(9&#K63YoRf*u>rx5;p!e
zLn*Q|_%56e358dyX~lQ);xn#JSB3&xSsQ*H%lBWf4vm5SmS^qJ>lx;Xisb!z1wAdT
z-z$gFQTj;2`|vovB@RW)x9D67Fyv;BGvr19{?%Ys?&`SUv^BoI$AX12bJVp8z5uA%
z5?=tuu`hr<v#%JB{E$<U=gp_R5%#p(X!tus-5o2-(#;Z7nu?N&)6Yfw)nOv$F92_?
z49lDsfGp&BUGGQir~MHLcc5!vZqW_*+rEcj;U1N+uUM~2PIB{t8lXvcgU?es#M;qy
z$IAM!!BEDzQyOhdfNYA$MHSe1Xy5Sdq<^p|zfp%AvAxur1e#hlWS7J-amE7F$8o7u
z2^d$uL9+?C91<%meZNtnT%jXYsc&oKzH_p{^ONb-A6zddg-b{QK9RSN>CJ}DBGGS}
z^Q)a-S6O&_4?WL4(b0=biU2y%i9`VMf={2&v;c4DF;}$OsjB?_iIZa_a?)lzZo^t$
z(JSazc8TN|zPYTG*D9Qu`7ZzgvQSs;72(>&8`ihTMWq4xi>ytrKWPhw_aE0ms_GqV
ze3vUbY-z%+CJaPZ3`bhOpoBkT!IyX3M!&Iq`{ebaK0CFpLg((FSX-_KwO13$!?XxN
zEAeW?wW8x2x`>|RTqs8(lU1BN>6$NM)Qqm)o<K%eGT@Lj4t~A^6MFxNQkJXx09E{%
z)Qb4nE$?RZ-(5T#ffvBrv9-UY%{?>6Ny)T5iN)>B;%MR(wa)#^W7Ra%7=I@HKQ~8@
z-H4P}K4+Ag9EUG%C6jGBz5tY~^olI9&LX^j>Vl}{XGrg51jO8;63HXhaIVR(<{ept
zY(c{LvzN9D70^?mCcb#&qdmW<jqJD+f5mnCA>H2)-D*%guc-?;IX_CR3B_b(r{LEO
zUez7?q2HEk#5;Lsr6U`OGvB7SwZQe<4bn+gi?!fweP8n8=7u=SVwyjJQ?L5fB#G3d
zsiFR}DMJh-$u8Tvz7`sWISU)5%?QvtW%9#)SO61xh1|lZyiGxZL&DHjcbhz^HAN^B
z{6vjQBu80_PT#=#orTK05?y}@j`l?E)A{3pnr~JMnwY%(oaqg&SViP@KYYUc$TMj%
zKFRKnkx9P*^pfLc#^@p4+E^6be6im;Ca(3RMtNnOS_AFXmh8^G6I3J6NruvFK78p{
zFgGXS{B}5vmcl0KV-sO?`AbkJVX9;+K-#Wn=9Ip*S&>9JG09fj{}Suolwxjr`T;YC
z74{>3iT-qAfnN?2{lkLtz6N)HWjXwg*VlDh|13%tBJ4|T>v-q$VD%Mae4?JWSr)|h
zMgLF@-$dZk(dOUT0+Ty0rT9@IHaaJs6L6}JuyXbdUSm0-1!)BN2JR%WxHjJyx6#AH
zoMLVK$%RMgo4(;A@Q0ItVr+9R?F4VghR4t;MA6g|G_G)fQFTQ|a1E5(%sp=}zzFr2
z;l{NBdJpQ0JSs`=D=q+Ws--wnTg?_k!bf<yw}_Q{SY_qPk3s$+#irW>_c1`ZD>9Ux
zW~c8!FT^@tQOk<$-wwVp!y-S9XWlPoWJWF1wfjA1cWiOPsn}e3)&oa-2>0dgG0F?z
zLmLjPjp79$r7^ZnDnjGEjH{|c_TfK5dG(CQ;RGUC{y!54-TH#{7r;FcSI5I+<UiCE
z;f9%aboG>CSL)&0zhP7Usy-v>F%Ew5(v+9FZfOEtrxbY7>>qG~BG+sJ_t~><zB#;l
zgF>2WL-WzNLedpc)XsQ^iT?#Ko#kth=~H-TuT?waeplEC6>v;(V;yOjc<da@#CpDl
zx%K6SKIT79T~uFj)$~Rc_aK-cV=}fV1v<+Bnf+pV(-LoqDPu`oEh#RBl5UMJpGpgp
zo${9rWvgtDXadA>7oDSIEQ|)R5Lf5U%Am88%eGUURll^OH?X3v3CFHWec6&8=pro(
z%TQmJGeoSJyhp~O$Xc^$58;{!cNUrh9yNonOWR^f%uC7>bPZ_E^FvWR;b-9@!UD5r
zQKGriidk9R%TNI=GqTYXgco@f-n;P1#_gcyj#qQaa_W!0eRh&IPs)(uUzxneE}@(9
zrM3L*l`69zG*j{O<gtT1>!F^`VkaHD_v&#%)#eg4(!-5p#RJAaFD9NUPK3c#yYj(#
zHd{r*?f?8COTSpBWMb4j6LT;_&Us2I1~yC!ZJ^lt&!O{d8HTR4oJnY5i)dhhV~y?K
zI3byyu>#s;8_^#%A`KvV6O%++@mRHE7!}b6s7zwlaOPL&zf_eFn9L*uHCQBC@lS0{
z<!Q3Ertum#d`>#RBVx)wio+@m3CWV1^pkb)cTSKb3CMgH$;)VnN9-1Z2!~4Wja8Se
zyq{t#ubWqVq+T^px@FVw&lwd_y#i=UVF4LGSP+r-wdp5|JGjEoE-9y+SmZz8FMR7{
zYWlNa?2Wki)=;AAgA@Sh{=hAbMpdn0+3OZU{#N$OJYWsTeAET6zXXy_P6RRdEQQ58
zgvh^oyZ}UIzHPjvcvSdnsArJxHLHzI17iQpphTnI>#Qy08>D}?!afD2p8v+x0z&bI
zkG`OP;Cm`oS_o3mv3Ot0sMj~cRTde76l+Lg|I_Quw&oHVuS!7Ui2HX@t+>w)((VSt
zc>Xm<t<M@SfNvjF{ubrgZpu$?G^}z~vz*e2T(S@FJ=tv@#d+41O6Oq^8~i|WTC82<
zCo8`6a;6DygW&%DvO{|@{&8gRSSWz;#3E)=`ByJF=vyA9b3x5-`s#e|;jf#BzaBpo
zNx7zgy6!>+9>-CL@H@)7HV9I8KYwJb|LlFdgJO3I1d7}f-c-`}!9IfIuDcas-yC~b
zr}!>OTC(QISM`pBEd9Ck%fdGk_52o%YkMd@B=68P-2l!H?EC6LKoyUeHJzn2*2Wmk
z@4t9U`bP!K)7^6mB$ap%ZkVD!+N&q$E{(K!rJmoC)_jnL%Eg#rl%p&g{|I=^Pco8X
zfCnn@!sFjRRAbSnjr;3DuAiAQMp5C+?<HJ7!c4{a7#9Sqi&4G}2<xb@wbiQ|H~36!
zrLBd`7}Q1Wxl_EjpzQm%KGZ&m9;VYf37<(rK(41dOKJiYDT3V!Mqbx3H?4?g2OUQ3
z;z~6ap1KLtY3f|`-#VdsM|p=R&>5EbA>(_HBJTb6r5NARh6Ij-FGwc9hm*?BL|RV-
z8(2pmC6W?(E>i_wG=U$$o)amAr-S6a`}c<W;_<wg5UZo|BFf+=Y{Mx#l^uP~-Y5em
z*CBWB<9|@_KP3F=iNHZL4x#`@!N!g&cHNo0e^8L{YV6-p@Om?Ah4-;Hfs1$5sU*LL
zrr*Y35=V-GszG5S2TtT5#T_enwF&z==NJZ3;03%gnjt5L%VBY8VggrXQDj8}nK(RH
zo^`=O{m6B<=UEJTQ?GLNwaCmcMYs`hVwCuXhZf&^E(~0FNjUlIY7e|l-z-8iYs#^Z
z%vhw;vGfLut*hf&BpdChwrFMlLXx#kM6YTDrx$JWBL7e=>N(9fT0ITIp@(07a_m%h
zSJaT`XyVe<?S*)+v58%5IXZD0#80W6(M<o<QCn~FwyR)(Qc-+F{{wD1s<tru>XU#k
zVH_r{)KVh?q*(Z^h9yyt9OiyVWMu8qz`0d%DsNa7o8Hyp;CY?r7C`x@*kTNj^rqKV
zh`qe0axdvp0*re}V+RFP4gWGvhu;g|;q&h?i`r*xJ)NPo5%)8<&*Qy3fAtr+wH61I
z!;4v|B5#}BL(i!Jul^*P3fB&l{i=@cc)u5-I~iT~s2SJVZ!PNec{2~|P$!V&>?Vh&
z@S&ku^Td=~<AaZe>K~Vr)j6ox0+RYHD#7y<47nicNa4#CVt-&`F@x6t`J_Bflr_>;
zATG)`@u$CwQ~Y>6@;>EvwdzeZ6HYN%`MUjPN$1E$)?}K(Ve4vDLDx3m&DCDLQgFv5
zm{U2?!>s8qqc~cANsLQKf4+@8Bn4&U(!AOf#@$bWe)k7BbJs5;h*~~9SsA(6uVj9X
zocaPd)yISV(DfpFiut3y)yXz-oACDmoTcX?#s9lE&=fYLO%4*F#!QWgTD=*D?2ATj
zh`#`a0#MsaSJ&l}M_!Nqmi=SpQWv#`sg*V=m({Ag)%9c_KYvd80w92^$8`Ch{3RWK
z?V<lBWxmNv9`+K%YMY9Ff>`0DR2^d5_zFFQl+~=8g^OIpCwvn-QDVkA>cA%9ZyVR9
z7y8_nnxzuDv1@de7?XS6)=A{#C=~nIRhHD$8>L~l{{ij2HhLn}Szv8h?uz{iRY&lC
z@4Ay2%)t2tP<sL%<EDS2Y>qNMKi*`uWdDt+`TMEI<2E^I7JtOe$AzpFP1KeaRLbGZ
z|BxEWs;!jaC0VS;cdh#aUi$HGv1z!jo<(~%Bc_3gl7IhxluU(Q<Q;+Ef!Zx+-0gn@
zgXKLTUJcT6hdnd3?u}ocX(%?8F$gVXOb;+^c1;J}7U;i|s5NCNcGQ7@THhpO9Y$hT
zVxphq?49_xFgrexKliv9@icf-Lgzr*&%6pEuCe^yeGlEYuifsx*yqMbX3`{4|495C
z2QvgRkyW^(1bc759t_=7eB`-SZ9Y{hFN-RT12F<U_MDe(+es%tlx=O$dKpuV=c6FE
zAOmR3@p@$M<R``cV<%VbRqCsIaE85iFxF8wM607_ir#jqn-<@1l?nCFkUN0*;*!a=
zM2%f<&sR4<N4<cam3yfPFFDlT*!t%0F>4jo%0zg#pFZW<dLuBJ%O(?hg3Uzt`0CEl
zYV60H0?{hrC_1@IoSF}G0rV}SGoM`H6rVM_{!Nbsb=+lKx|>2XYL&F_9I;3GY?4!T
zUx3|k7g~8=)EdTv=ZKG1d@}1YL?VORt>CLv4TOeLX~l^BK|Mc$f5W>#^t?IIL->sl
zwgFvYku5LMK)!Ar9p{wXbmoUcSVcq0vwh)Y{Tr%F5L?v_FMIW%v5-7fFbB%e7wI;0
z0Y^cc;gro=J@-_pCO7kh$8bIN%>5bg`6M&e29Cl)V8~7l19gVknC1Jc2W##<5gzO;
z{2>}Y<p-h9$NWn^u%DIE8%wHUmg@}baWtw$>}+9_HL*$0ZpIQJuHKH;GnrbfMc=iK
ze4=qx^<w`c5;@*~kIi@)dPe_%cfvm<>_6ZwN@4Wre(}I&QSH~$@iiAHKaK?gdTnR+
zl@vQ<&lYV)&ZUUlwuMT=AR`V}9u`OO*jeliv!y)aDK&TC?4=$n+(CSp&1GYI2d-nn
z!rPCxC&!yUq5`(1B4eLFNx;R^y~3FjOD=2Nh`|LC52jeX-!;KX0JPSuU7Z^dx~Y0W
zXf4zhF;<Si0F`|XB*Kmr;r|i6c7WJ`s{9Wo5siVP`W>X3*s5&(&WUT!q}H-NbuP^Z
zmm*=>WsG}$l<T=X(Y}NSW)ukC^2K)DQX<i*H!a@xZH4NIX3%~l>EgitgAxKUAhjlA
zmj9isro4{+Q8;qQ#%R#WX@k8<A#1SuDhq8<j3@cVhnWA^u$B_>b}{TjTkTi_yB-kB
zSis|+pM9v<U~}r(l<3KR;t!vz9M{QaVB7Tz;LE6kxR;WC23<+P!oh>Zg2$1WObjNL
z5kC@nx9_ZR*b}>XHYyEN*GqoZAlXb1V>9Sjzlr}ukFEU>22Pa8ex>prFLayvVa{^7
z+=Ppl5*1G8gWybXw)A0UNY@5B=aSym)(U~-X2GokeR27qcGIIF_}ArCc+e-c)S)k8
z_^xGGpdz@gY3@&8((Dw%^^=eF#xh<Cc3HjDcTQI~>zC4N8uj{`TV2uVV`l^5;f+oh
zOn_Mn7Zr`+h>^FVH)6#QKBb-%0UVo523@=W-t%s2Guk<F{7gCzyh3RI(cusmc-;~a
zsX52hhKbEq6!7*}X3*k}Q}%&<x>I<neAbmPP`lOmw99Hyc~?=gEw(agSNS<RW79?c
zIgjF&<PvX0?3`KLR!eZN>T078p^7y{8>n|k8NYCXl!+2ylWuAF#?ti2mTPv;wy4JV
zQBqK9^=G-@KsStkoWg2J!aXBE6YHunN#15Fs&c&P1VwI}`}<bSxpbH%t<rvxXn-3w
za5CKs+1@+zVs=Q%s%>(2x+32rM&8@>QVGkoJp}J}cL!EI`d<*-g}`o)(9PHBd%*aP
zn-G;wj>5f{x>Mj&pi?lClqizFVxk>^j4&eu{4{3daz8_V&fOhI4$%xi)VL%zW-XsV
zNRg6Rk_tQ}da}!1&<nJv_cS%|=3Kw77}8gMn~zhB)H`RXgE$p6Q$f+yjyvh0<HR-8
ztDDSJ6D``zBlSrm)1F#&wiQ^qloqZ2+c$qI7I%O)bcfP?mmA#WOYzks%&*KCO*pFI
zSB|=egSlY)8S@w)RmsXi12glUd-H&FwYy8KX3zs3ck;Uaz~b)(p-y&|4wL9F%fY+W
z*A=XemiV;@ka&9Y>jk^2Z=gh>54qhFQX^zPsCNiAO-hVW4V9TEg;ue>Q)RgcY>mA0
zeHxje)Fh(EP*0S}7OhCtn8l$~edeDD8B^43E=xgiS%u75XGIUn-|PL_ve|YPW3srS
zz_EC93M%5AqH@?FK}O`(s?TOaxyC!b^B}H0!)vFfh<6n$c>!;Gjyr{%dG7L}-wc_2
z(TSJ+O^+CnuD_xu8%P;}-Xec=Ki<Dc=%`YT@CS($vynQ}PG1MfL8wIS^D|hkQCGwA
zC&MjY6}Lvb|FY8jREXA|mF>5yG*p)IE9S4VG?!$lHUn0@96BA@hy^-RR~vE4v{x#^
zJ;Nhh5y;y{08OMA=WLAIo$`WV(5GluR}Ml~tOmRO0=4p;Q`X@;Ij%Vt&A8!Z8&77Q
z(p!A3eR~=|=vVY=CJ!Wc{t<7A=oKqNZeu}wUM9g;I{44_^VfpW`aQ(kqu)%-V^-(|
z7x`Xm6IluOg1>rHB5qnGAcq6P%0UB`^0MfH9-bT)H4mu|7-U3~+4n0qQ#D%~OuZGB
zgAG&D7pV-n4ewMXaRL8oXoUuQ-bE@<7q|SQEZ}A75o0|?2{=6mNW#tM2*4w+Vmx|S
zoaGvjLL#+=EM6}ubuG9wP(^T-C*?+?DX}uW^aX&)IWSi5l-9y%raJsxz=F7;T--~_
zVq|CdM2eSmif4^f<Kn9=VeUHWnxBTH%hYux@w6S|qf}G8m*M1vKG1N)oNr<AUH0<@
zxJ}zNFW%)uQ4100<7~N%YoW-uAT*hN<TeJ<T0Z7Sx?jz$b3&{v+6`6AY&j;7KOR6%
z`aHz+&DAQo8mCHIZ60hRwj3u?SF9$k(wL$~YGCo&O+^RB9wggFMQ1qNh0n^T&;W4K
zM-z2vFjE+mKXQ(xRXgqQA&w3zU#xkDw)ov2p)cpj&VJoi`wnWTs&S~4*?B<xoKcy;
zk{WPbv3&Ja(h1{z80h#n4Q3brQ(5j=Z}KxFSAQO-#mphDC0QupK6R%)nptv6NOk>B
z;o_qBnEQt2*I;jPZEBJFW!?B{6xiE7ue%xbJhV^SVTO`S@x`Z9gJs{esCSJ>o^xP6
zMLrG)nnzwAuHcP;B6U0x7NhUTzXa(DjMnlby5#2vY7F@KHjMT~e<>r4^4LPSn{lKz
zH7;}NrxpZkY0*c@Dx=t2^Y?sheW;uYxzk$1!936U9np0jYq}QT<!<+C|I(xk{L2Q?
z9dx8uM|d`y4&480{P3pY+nz{bf+PF-2oTl?fAraCvr4Lg!8tz!njpA$@f*F~?g3=@
zAhUfhwi7KR*dti^0!x-_zzHcq#)Z_*5K>LV{pU`K@uNxOIo|llZ0U|_)>_yduCMcJ
zzRGf=&&|f)SXt>FL61CnB|r{?CI6)tz%ML-_UB(RdFa##dzegxIo_#(X&!!bJo?>}
z4N827++$tk-t8NN+mW3}`4L1q%WQ9`h4<%&RQF;ERp_N;XRM?MEq*v51-x~8ue<Cm
zvR<!<#uLDmF_&sWQ@L`A@B8WM^eL0=30^jPb<Xa?p8vi8h$Ajl&O;Mz9+HX*Y|m|H
z@BFgZ%ucAshDC2kVR*8_L3N|I${h_eEby)QhrAO<s5DuRTRSg>wE%fxAGYoR^G-S#
z<NE}7PpO_DG!KN;t*yuLcERIHTD8V<TRoOW;R=zZ9JnHqIA!PS(Oy-sw0~>cyt2bd
z5;TX>cw2mDxg|UycXyDiCrAfzaeDpmYrXQ_FAz#5O7W?VK8zY}3A5CpXE~21iZ2?r
zpVdw5w||J(bj2nmj#5pIS$F%!3Ta;E06u%ntsFM^dc-doDdPgF6(@OS#vB9o51I}1
ze_Y8!@CJl7^?yy}e3$+iU3b)zC5-8d;Z^DzShb0IdOW3awp>t=$3yqi*olFC8pCar
z$$XQHAu3v184=bDIWP4J<eI?4%BaviCOy_hxx&@G!TOoW*uo=1KD{Ge#TcIV-TJh}
zzZCdh(t!hP>Fr#I9uPC;L?(mUcfg!HHQfGbmbJ2*LptZL481b9XIhi=G9T>V`eCCb
z2|bt)S>==1p30OjGrHSgD<b(a&;ERnXQJ4j-LDkWsfRtT0;gdg{b{`y+M|<d-Ztnw
z+}r>CbdniX`poPnJ<D1jY0QIBR`p(LS>*+wdTK;&8J1dn$g2K?rOnnY`A5~4`z}K>
zzu99+F1cE4m!bDo>@rZKo~0sRH`t^B>LZ9G3g*-?%VbV8x5~3;z7?PigK(c5|4ou5
zw#A5X?S^SMq7^_yIc)Q0n;`G+(vHj@1$yaHPuzc-aNv^jAtpK5?H0&+9Joqrb(U|+
zk&anNp3R6%fy?b^c84wDN>}Uf?iE!daDf0O;Y<JQEBgY-W1elr${EYqqZ7=>UQ(t{
zo!F&C2B;`kqHu3@)bT!rUMW9ZCBT(p?b(_7I+4KWlS=OqTvdZzm46k!|M{I(Oc30<
z!cT$g6fWRBv)VFgQF!Sc`R}?3y!`}HC`O{_!ct5|B_*gFSl4Xu=cB5wm^L5c_@phA
z{f`HeBCJ$JGyHhOSYDr17&bX|pBA{W1y0Z(DrGk$9N0wVET&-)(%_RAhhOZg!X9Tw
z3)dHbpJ0u0V9He$M+G;VU3y7@-^$6&$}+)q%>)s*&8kbtv)!{@Lx<3rjb7wpO^o+(
zri_Kbd-!%tbiy>t&IIvI>AkEDSmS6qg@G%4-H*q&Q!;W^z&3YYitU+NAGzxsPB1yT
zUA-%T8^{@U4@rq&p<e+}9rGs^()Wq_i8K!uf%WtIdKH;PxC!(4*pi(3a^-1q0_pBo
zu%9K|f(-Q}{H!05uyCUA%%mjkGE#ViHXcPM-38mouC|=&6~TlU7A(5_0}p<4g?bDz
zuO0isDEjA^^X>?grs~<f-X*RGeINc6ioH8UF+696wr+sINJ6IUxLUv{7>$W0UT5Hl
zxJ5tp0;n)D-hg1(`5I;vjGTUVJmoc#e7D42T?<+felz0x1%;5bH2}Ckv3sv6tSwhF
z%ZiU)mn!4m{nNp`iy4_rxQAhI*t1Eyt665!y`z>3%3CySeOc%ar7toHPTRx<o(0>t
zXeK`+JB0FYnwDnLPuHVMPjQV9o4=lU8qRbdN({%7#|aiml&rU}aQaP775Z#W9Q{>&
zVd)<1F*+Pdp-DL<yDS^B&?oOS7RGh?0#KlWw>U`JbqzCs=kemqyu9@lo%FpsuCVoH
zpBANId*vxIf6ljlNvsKja?O5mmr=$2g;LBWjp8-@3PvK-+0;PXdo6MP-p2Hdt~6dD
zPL_q1a`{Q^S_O!$JGVlW<uBkFool#k=epSUfulsmbfswsXMev(O|ko<mDq--KzTzZ
z0aUPX+8`j0^xpIL_P|3Bq_;&_S*>>bYP+dvsT!3!NSsZ{FqollI%4Py8mcd;d+Jp5
zXjJ7j(*6A9DDntsY#O8q`>+Ya9x@3$y(vfnpFT|F*->8#)ORt6<Z%tG#q6xe(5g%f
z7LX}BOTDG7bqZ20LOCm`(ZzLzA*S?&_Ga+Y1+e+B=+q41Nqs;SIjoygHc0xSHP>fE
zT}wvyX?b(`N68Cd!eh>?)Ne`NJn?)2$2Qe7tHa*tKx<F9llSN9-2riTi%hHJMvc|p
zul)zT<n&L2ttX#K13XJ;ATFwRn;I?2y?Rz@g;I2_4Z*V1Y9cz@u^?^w33V6XDOO+p
z*=|_g6jx7!wiW+JmSGXwe4$$6sr3kYPq&2^K<Jf?kZ_4Ia<VPy`9gpH{=3&YjDN_l
z%L?wClpe|ICTz8`>+E{End6=LE65y|F~cglaY=OtphBBl-1f4d1@1^Imo%F(Qb;qS
z8&4QWo?SdHTVtuQmzNE0_*|<;e*XGubG!e~)m6Eoea{0=_)oUV1^F+WTiq@B>Wh@l
z9Wl(1mb=8V0}S&C_nvS+p)dViXN0Qvsd67(4Q6}B@b9uz>irJo-#ARp0;-2xoF6l#
zJ^E#)n$UbR(`PBZvJU%dXAn`gRs>^N-h&H>jl)j4UjW$BE>%m8x+Lz|6e+(+KN6yk
zV+vyRwuxVUZb-$$pU7v4z<Y(kh?w2uvV-km<El23!N=$)uyoDC@7|Q|v9PMD7Eo$F
zp%I8DxFDpYI$egDJ^7t^dzE7%^Hj*FfcMhs@kHk8*q{LR_bH$t%!N1vUnkw1wrrw;
z%PZ?GojGKG;6d{v;hofw#st}#%z7JCZ9)dTT~x|{CDK;*cd%FqPq_R_OK7RHGy`Z&
zHsZbIkuaECbq1~Q<~@ctVtyEbn|d_xMUgnWaM!0hNf|Mx{)@AR{FPjH*%#o#7Vl=n
zI_#723!qciqrhlCX%4emzgeMxUyC(!SxPYC)~br6LYeL@qn!^eZh3i><_~xRQP{Eu
zyE6YrP%k0&-$6Z&NLNk$qva+u&)+$g<2_D2?7{@kofSOB506#B@YBK7WyxLIp%_T<
zy`H-V;NECKrDlTj)*3Eb5=Sd1CuP08q*HamqdKOin_G;0|9;POKjQJXJ9MIJ5WSJs
z6w8(*&ByYsh@@Eq93qj8)&X&$Uvhc1JD$Jxo=-AX-Ew$6PAW4VZ4874Me3q=B%`(x
zw{1uj@>a?P91+P|=kk=zGyQ(fE_j57d6gcFcx~&hCMKCOqLV5hqgyuwJTsf3bC}>-
zk^Qx%t|^5Q`xDGU1p*d)lBP;9GJqeIjVoML4;w_Vt0A8wP7Gb2$tD@h3=+j%i@U8)
z&ZjP3)!%*pd!q9u*N28(y3V3Q6s6rh1A5*UcH&VumD|kPYN7~PhBtY*Q>Y1EiPR?(
zgnEqOatv+QC)k>23=}T%08jH?0EZ$!D<f_@^|*J!o)d2P)}a(!R<sCt;8VoI!_2n5
zTdnnyB9hQ3fp`Uf3N^TEsF7{*1L@c)MJ{U?thd1hGP><bZMF%d^iSHDy}h$G`ki%(
zDe#PC=JzGc7Cj0p1*-^pe_aw^BeT=0nP+HcZ!4UB>f~enG0ll4k2(I0rARk%nPtvc
z!5yzYuN&%V)qC4YLv6tJC-y5qVEtd_7XbdoJkfkmY6-jvisM*&XQXBGxqu0*D$V)V
zlW`BSb4M?e@HiWr_2jNKQ^ZsA%$#->a-a3q9hsi~=##|@;J2iE68L;CYqw3I4uspl
z?}YPxELw=oiRU?ims|(jauc05H0GFAb85)?<5&ME4b2x68n5E(4E#Q$snj8r$l>p?
zze7T$$cU894JxyW4DO_Ri7j(xsy=c(%Q5C?HYa!vXrQQwlu}&e$ufK551$+o^rR{@
z&xL+;IKFu<vm0`1DN2nZ1FA6FsKo<l(h+ovtX<1pSMbldE33mv9jTl4h0D`rabmI|
z6&{*9Fut@dUSExeif`Q%ivvATvsK|V>7-2Q0qZRxso)49>q`AY+nl|#ZYVP`k%c8j
z&)`;2JOJRuU-m=m5j}Om(N^zW2Ts*bFxglBCz@EW-qE>{;@Y#`eyhC;el45RRygZ)
zEV3NCgG;ZB14QpS$s|Iz86f+hmL(e5%-C0;BN^b~pHvfBmYr+sa>=Lqg>zr)4Dg#2
zZOxy$;sC05oDZF=5Uy;p7Cx?{0W=(vM&N!7RGrRpF?@a>sWfb_POYYRlllwnJJSaf
zuuq<TlAwz|TUBg=rhaZ}st;w*{qma@fralVJN2+q+s*jnZMNwPAZ9N5zG?&M%rgS@
zVzzg6*eGvDMgKw)m|@5rpo>Q$F9DV~Gc3LHsTY>wNxiTc9*k%IfUxx*7!FZW@|`X%
zjlk1jiur<pc3e3f5bS}7zWoVt5wFLylK9fq%UY3vp^VDjwtdV6WAly_=L)_fShc-c
zP#GlPCmhVOyUZDnIIOcz5Xr!?-i2%d!<46ROGLgY66^h}mzT~wkPN3Ly2NsF0vBjb
zwD<VgL7ipjc2THFuyV+vE$#-{-3nNawiVcTD!m=f?`M=>i*5J0_|niu`oNt)6n>GX
z*{Ziv#%=cMKoIu{ea>Pnl3Mo}bJ{uCzP{KyK3gUBy}YWc3Li@j(ks<*ZKC4kfL}MV
z((F}(Sz<6@J3G1lVpchY>}?q&FXY<QuGE0%PRj3{7oQ9#T&A!4<i_dgxt-(<7YeFh
z08ZRdv<z)Tt`YGw<bIpr&|_QdBnJb1oUbj>&gTi^d@lgXNA1W1d>mV76^QRXIfsnU
zldAo1BQ)Y*LEdLm_d}wbz^8r_--!F&4c-u%+NSt<G3zKI5RI@Uq&drF>JXxLs=V-#
zGvUsu|3ZL)8U;C`|L?!teD-g+9i|9Z$BX~5Hm`GX!2Ml?@J^Cx;|Ib*C~|<0HF}G|
z7-=s(RGpI2<4|6t-p36!d`qP$q}rU@`tuJ_4^+8RRPv4XM!JF*z}GmG<r>u&_>ppe
zL#>nBg&nlnr9LEFL{EXKKV8Te2)OahOJg*5OoowoC<W4w9qLB3l1d)5gri;t0|j_R
zoGmNDzJd>AF3k}jwlwI}jss25mNZJR?L)y8v16h~fI$EFVy}hEyP<c&%mSUNJNLT%
zqmrDx1ao@e;CjI!Mg?tb{UlugQWZ6QdQ9T+6htD%sbpAxr1I`qH@nG@SqfA2tC~})
zvKjbU;(6ULGi<$rx$Def>NwFLifd#z`dTEjD`K1GtgTxvbuQFeU+@Mn;OHIdEaegt
zQZ=<d+tA9t$qX_wFIwrlA=BbeJ>C-H#B5Op7a14t)Fm!VnW;`k=!q#LS$yN=T@$va
ziqJcWw5+mq)m^1zyiI)UU0p$LQp7TBALk}?f9ndGkn@~3#*TejWA-H%9V_{Bq<D&b
zm*d_o(@7FJ-w3UPlu@W3pWbV-B6bn*5(ghFEJkL0ej1>7s)dq&aUZ+56`HBQ&)M^m
z7&&IKhQV+8T;XUuiLC?^#d0-*t3Zf!@}XVWo}{3uPE7Y3a5JVC+Hl^_GwG)UVLatC
zz1%=)ylGu<Uuht4v<ZUr$qAreyiYPh@qEdQwtocPoCz$tpUOP4Hyd$X5s?ZJjnt09
z;*@EQxaHe}_ngA`^qO;24fQ4cY`M!1h#BMZoc)47+2PbS_7No<^?C><Se?gg5>@K|
z5us~5H;M)>Qpq^RG6#pCoy+i2BP5&vF{U$Lw|Grhj-MLTpTzErg8FF3!DZlpAxIzB
z=^Jmc){nxM+-r@pT6~~sx>Yt@7FA`TxW=d%u6WxM;$?iU)i*Xb#F2K)g^RTFW`pZ)
z^$;zxpslM)w5{a3w&IgbTL<uJ@e81Pu0l~jw8?zTl1$NuK5`4h+1HTT8qrA<%Xw_D
zYs2*0_e?9-PW|iVOd)|vy5$6y;)WsG#)%C#D{tiAH~lEK&X^h@2UwStp7yL(yGpHd
zY$qqPHrw}!%QN5C*bhD-`y#|JPp~?gv_WN$3v|sKqY6_>^xAfkJwPN(11t&=`q?yI
zRm7pDTJahM6EHH>eeFN$rOT2tfx<*1(k=l3=4*Rbs9Fn8I)?N2Kas?7Ok5FO0M6zi
z(^}CTJ!IlG$Cj{eRmA91X2qynknVSYxoa&3#?>>wA%Rv_*F&nLi$mweBzj{`RKRYk
zIr)spyb)GTS*l__uk)RoXsQYutJ6n|7Ezy084-#7#;UEi0eHDHx5j5j7u57n<2&=Y
zbVM&_&Oc!f+VM{u)tm<xD<Zle)+8=rC@)2B)uG{SR6S>*jX+{2&%7n{T@UPWU3xnm
zhL?DDsf=%g9|OwfUQFp&19||@$AJR9H-)RNEA{V>+@av}ZQ!$;)3$-=9&>$%p!*}7
zvn!<CYvUPkdkJI%)^-~FfzH$|ey)MK+OE%VCrJNZi(3}A0;7Z@;O;N>X~g#y!5=dt
z6huoK==vssmqb|O&Omj=GlQmx3koUir#}>vzl3Ccq0KcmqvkR*+7|;baDmQQ!KA+N
z5)p|VAvz9hpJLM}>*I-%;Nz}*#maN$+<?U6eB<V?Ti|4q+c?5PQA?BGP;z4+=dE=1
z5mTE_ZQ}eqo&}zl%nKm49{RXCKEqU7Br+m5-?5+l0zi{@_9KIL2G)ua!=lcm04-s+
zNk`uI9nAp{<w0n1W&VPf)LXjpF^IomJ_+-b7pbLr%J(>z=y=TR2d^hLgXI9CbLq~S
z+O~~CR;PAdXW-1xd<SWu`AWM_b3^>-fxb^DO>{)+tgXL%3GU*Z(Ozf-L;1+RG#yyS
zMR8B)zWVU+--zdW*3SVw|A^-{MAygB)#*mHgXevu7V%*v1HA##dM&1fI%#~wmm(e$
z-R3mr`zp4zi#@c%1k&$D(GvCt;3DO(xmh*4o7L7uki*vxeXq-WjCR=TqxjeD{YpNJ
z>XKGU`)UCSjS)&N4Or&h4~ij6vrbJ<fA028s$yy_)hJIZoQ#|(GkiMD4QRe6d#4)3
z6+d@kd?r5gy)}$t<yFQeFzt8h)@QdHeqbWUA_XXnOz6+kp>p>b%L@KXY*bR+5AbGT
zn|GU|tGpQ&7GIV^JzI9~c;8&6=Nv6){ZQCT<J@fNgDm9?N+OFj7QspESpes#uzkr{
zR5&oy0Rec(nnz7>GOOCAjPAX2qW>gaWG{x59(bS>f<z&z4eyVfwwswbq7qboZ?}SH
zQGZS>ypyT)_nIM@HUJTF5m@h}e{S$jzjGmQ=<#rcWi9Fi3G7qz*VpR?kh+>WL;Ee2
zGGVd*lW144FqRoJy7Jjg<of-I$Ge*OJV>T&7CPYxfiNcwk2iAKlmGB7+pgkyVIu4E
zKvR2b@P_Qt6$Z~2g1?B6?I5EBd*X7mMav;;TGUErrF8G)o+7RK=sCsepyLX|AY^Sb
zbm$&%46!x(vmMm{laxltJ>*c%!37uNihz2Ro7vU5BjA&i-yE>i8!9$lm0LIcF_R<=
zp|vCBCS<&UGir8AJ^vsXo1=M+;}>a|L_g&%d~ep^8dTVBMRHqf`3Bp5K6nNOUeCaF
z>AvEJ)a_Qx79n6+-}AE8?e&kWLqoiZX;rcM+Q#?ZxEgmqXM3Z0tS{ERu1EvyNz~5C
z8WOB&mp5rts$6Ah9uSruwOL;PsLJ2DDXyXgJH6)ccN3GWu}{c<PZ#qD=IhT~wTZJz
z2|J0$;iyFmm6*AGZGu!zod^<t3#8W9Pe87D3rlm&3gkCsg*Zz)`G(hz;R$f`tS#mz
zQ25G9O~BxjhU<-A-V$`rEd(za8yqlP;v2T$*h_D}7RKX!70_$9C^u;IU9aQoV#{50
z;TzqnL%*_pWaJ$QTshg_OMS7ZH)T9VL<t%k2jn!2J{~UQ-Ju-*Wfq5D`@lD4^hPr*
zEJCKGg*ory7eFEmmWEA+hi$>>ULQIVrStBDV-i6u&6#=DT;Ivoq3NY`K4>V_<xCr<
z(wh^u)@@hM!2Vg>0(Fp_n<(tfxq&KbK>*LzE8V+(q4(0I>27=WEw37l-`_dw?1%c)
zFQz17ovgQl9v8`QuLtnP@9+--?4_{Z^~!5q=xL!KdGepQ{JF*3H81JId2JNaMjj@G
z@A!3@IMqYKUwXZ6_V~8zYrEL@)mq3&mJ@t{))MyjtfAJj#9q(5*i1Knp=FEKb3NTz
z2gBL-ajsThx5th*VE1JA>0IMF(xx87v#IRq9^uX~{BvwQ_3(G;58De3FXOmSTB-c|
z^}MGs&hyY3g73X?riJ~Z(6^1}p<47NNS@RzV6>|id+%dbGw62&QW<Q~D@43b8*-H9
zNg;KzndxeITYy!lsPpKSiKU+j&gx{_t7f|an_P26!6tdv%<@I|vIJN!b4+Ee0jOCc
z@3BYv&>+KQdTBrOj~o_~XMS!iOI`qhtn@^wz95*@3yLAV#WVmo^HodeMN!_>7r1c0
z$9PWN*?HwAD~T7LtyYHX;W8sbeU_j5MX=jsuTtO>lG?0ixHJ8fs#{Xzmec-&R<sAb
zha0l`4A-6qh-0I7E%3x*G4sF=`vmi?f79kNroCWj>gPq_mU{vK=4M_1FbD5Cz{jb_
z@D+c?M;_S0`P<gNM{Ab)@MeK=NqfbWvjBxso9Q`;on|K4bw8i2P_eM+i0WHBGO^-+
zMLzi-6>_-Ma>2e2zP=@Zg))eaRXnxbA_zG82U_JdLH%r3h>(etMB1-?mwD~ju^#N;
z%<G((?T(OPMdDRJV`Zk3Z=Zmk!S0*<9;F(tnBqK^K7eoPRLg{9($6WG#lj^4ch!Bx
zy03}Dk&Yifya4>QMhibLXl}`Iwxbw7xz7qWz5wLIp3hb8W_|L*l*b)@_PLdgQdt|7
zz1xNlXrmg2;H>XowvrWEthW#T6#436NS9NjZ|51h@~~_bs(||L;fC@WiTt`}e-MUw
zE`7r(b6m87#nZC|^ymo3y1%-v+@{e|37iz8<`Z;f9P-Oyjo~m33x`idoiojP$jj&h
zn`M<ypiZ-CptGBSBHfR>Z5<vCSoLzA|4dxzorqmEQ`{W`T|^6h3M35lvhT}|8unR;
zSzD7OHq&4uVL!Ftnjq}G*1hQ0QtgDmC5?KlR?_>@kOplypHaku&sWIaqXk2R6t$%%
z;T<e^g-zSxPV~BzoRTg6<a*J05S7&}ZHYAmu0X76%%}o|Xf&ugwyP%iG@e=fRHmUN
zPN90y;5ENGr8@MoLWj!6d?6|du!ay5Sg#gu^PYbd`Sqhn$NPYp8AtZJHTVU$Gyj}C
zssC$zPB`uWs<ePDIUl;v{r+w$5qH`W5!-W)CS}IruJg-nIDaEtTD8cGj{PpO$BQ7I
zsy(AX_Qp@<rzN=xg3p`Nkc+5Wy!ML$YRl!HkEuI#V;FavO7;5QB%h-ZTe3dYeXXsr
zqL1;Rt0NFSpSqr@v*}o>r@xQ5WY-a>-wkxno3Qhks6unOGaM1!ayJ7KZ(Mi0UFdO#
zNuRQL`2A=IrV`PC##&n5b|z#l&A|(=H&szvKw!kNI;`n0t5hJxp_@UMo6E+&!dZ<?
zzPu(fhZHL5d0Y<*51Km@qo1T>3*6y3L(#`3j)Q*OvXsr4w-H#<^Y5P{HY#n`C7=&v
z!$};tHQ0P!IAq@g$_=Njx6Q1n`fMyKITP}|#t9{RGbW*i6{-S#IK@76^@TlQ?Q2K=
zDZNxvhh9Gibmn|_pJ`I~NWOn*u&=V*6VIxXf-JyDxP0f5<uIq6<DDg~{JN`zKe%^c
z*}udz%0!y-pfoQbGaFM$QiB5B-5l1UGP8YSUklmR<#?i|yHIA<Wwwr==pEml-bAG5
zyBXz-*y~b@W|B)U@be+PE@IU1pn?j<c_zp9v9J*n;d0;!eG&?hHNXnuwmotzI_oVI
zYWYs~l``|IE4(VI#WFX%=I`nG>zvHd7?o3#*~f(t6eKSxCMEqn3!lB}HlHG!dwBLX
zoFdKU1+e0@#f)5Ca!%Z5k{iK<hQ^Tl<==zFhByd%uKiahBU!5@dCHgf8VRPkF!y7{
zFd(d_nRe8rK@@8u%@z(kWi!n#hMu=nqxO%JVmd2KQ{Z}kZa;^z6mg$8aC<9cJ7PXB
z=9xihbkpvjuTO-n9@}nX9c93c(B*m$T(oQO?EA61jq}J0rx)ePcSXp2UO(=^to5L-
zxNU<`uulbkVQ>GJMP^;AFx=atONKvrxRDJv_w41nRxdc<$o0?I8XUQ5jvET|NZ32W
z`MJIHp{btV`$+gy-0H0H#OD4PTC1=ZmSRWCKdqmOikpQdPBnju)T;di%4GxtESda!
z)}p*Bo*k^^6As`IrxjuHhT(3@tF*asG>v}!>43C~#+WsCRO)rl67V!4t=pI8p<HF8
zXf!GH2fc-tCC2~>cAMC7I+{!}fhxG2*^7R%UTJhkVYBWu?5qoncT!NiygG)1Vk{u8
z@oBf{1z^;I|2D4v9mEZ?FZY(m>hrg)#2czt!;1}TSiYc!Ya}*O$bVw*Eu-R!x@^%(
zNJ0W6kOcPx4;I`h2*KSQLU4DN3J@d&*Pw-a;jY2m-QC@xC@SydyZ!a(zWr{G@BVnd
zUNhKLP-j;abp~hdwdY)Gt}7NF8bDK%l0Z$twv7w=V(D*7b~xEJiTk#1?RKR%{`8o!
z>GBKPL=E3g`ELQSqEd6XTBNgPjwYkAkixqs{StRB4-mQLe0#IE94gLXewDO$(yrKz
z0P&e-hlD&>tg~a{S)eM04|INHEUpz9F88v2Dvzizd^k=?ah!a`M)NljNklV3Xw<~H
z;Va?#mYmOUs=WR>kc>gdqkG6cJY#v|#|-pBg~_3PT2p;}5n1TQftDw{HSGCDpKLnU
z_E(%9$;W}TKcJl)lK~#<$4(On$8{1;<?8Ae6qD9JHr!}m$9nq3&7$p81Bo-5w*lm)
z(b|^3el=H5(!BY+)HAw~mw#1Ez>bM40xW***7i}q^(!AkcynW`>q^FU$tQeEc?t1C
ziSj~iTG18dNXgE80V?Zz_lW>xW6r`I4>IWL9r1aHpp*~Uaptyze9KqbJ!kPV@8{~w
zkyF<CT&2A=V|)K}zR>yHBOOC<H_wQLKq?$*xa}RGf?d7iH`DXlkt_se++%L_ZDdOx
z^Xw@qVM!3p{q<qqWlrCA(9ovGOPp<W_(+7)?wWf^m2SmwB%Oo?V$hB)W*l~M>xbZk
zW%VGp%E7}4l^4Q8n{4aiLD`)?R1-g>i)0A;o#zD)p{ghQ^_MWn%Y$+^e@W?_`O4Bh
z{x1(b0Dm><sU~f{%-*1;*`!WLhyNa(YVUT2_1Yt%qgikH$W>={ID_&XCo0Jd3CgRY
z+mKou+Vd4<&PA#rYu>a1Q6+!1vbu?l7U??Cs-N|`i_AM|LGu+Q2*<SpA;|g{8iV;c
z3~2s(nPSWwVZEqLua_|Ok*GRQPI0$6ttxHr(Gc2wh7(8qC{8;ce}e<ZL3-WvvkL$m
zk?sG%D(01K=eIu~bMv}=okv&8b)^O;I=Ijr;ey**>3f-|;G>Q~3KvlS?~*B$R(>ST
z?zwj0)+@|Bi$l4~^>9lq2V*U|!O$QK7TE&YQ~glRbPK{3REEeAL=bX7k4CTKOkXGD
z_(Um*6|G)dBI3sH3Y>N_-sDkJFfrPnpbvlsJsWUC3;OQ{jQQ0cQ13tvWM&f#$1k2A
zKRrQ&HmE=Ni2U7_Vv!jR5+}@s%?bEanUAyMX`9M)BS<>l!?d-NlLK|ugsCDnw89K+
zdhrHOQ1TBn);|_HuW8EWk*4xrK8Q+L3wICbH-%l!;vYviS?>oHEov_RBBY9y3MyZn
zg1+A-yJ9_2M6g1_9^VYSv!O7HC{?_hkzJ9MtT@ORbhjp1r@&yXd!p7NpQF_BuG+d^
z_-WfS*u{ZX76In7N{%BOjt8zo)<tOyYEjqoaP)7ERriGBBy_@go-Fw1X4BJf*V*ys
zL+SDiUA0>amnF7Rr=LWN#V&N4;LeSBRkbmcpEoym%J+H>#v5~=POh$A=g&N`?w&FX
z#axA4Al-Ab`&p}7UoBYjIxfh)pmo6a-n1FagDZP6ugzA`tErnLZF@Dv)V`$faVK`#
znXVa#%v5gEBX;Sz+b+*Ja}6SoI$F`LP*XlfUhv6hP=shz8xh*rWWHRzldC({2T#XV
z;?fl5QIK`!7R{|_t%#XaG==O*j2v%awB|^$q8*YQ(OhXoM=?KHC5x9&l+S{sL3nkS
zC@IL=$N?rEJpC)3H;&->3M=&ZZ#u5xRP_<pCk@IeCbdPK+E~1&72a~Zz-Di}`jQ}<
zf(Y13hnkka9ocNbEBcA{2oWHz6r95T%*znG&_*EsGR`3UCEv?Ph1bwT;X}`e?x@eH
za@eOpO&6I6kaFSZ5s29tfhqM2eRjDB<?1Km1EX|L18K55W29wKL8et*)%V`_0&NuG
z^(8(RJxRpNOykZnOQN>cPdgpm;}7xK4i|h^jsZr>{(EgXlf-3EWxyTKD+6SbZY|KW
zXy?<U4yeuO((S*1>XSJn)C6*xOBSL>0^SeI;(BnbbW}Xtne{q5CgrS&e~I>D76T|$
zU?KklnlL7tZfI0lc_gS~6v)j$??1zDh!^bSetDpec`&qnL{D4QJzk7Y>fNQOPjKM!
z@kNOjh5OTxIyN17){-vD$M!1(L+X^UFWc(%OOPTtoJYe_>H8njG7KyW&Clm_JE?sW
zj(4J4ddf*6%8DrM1Li>lIxgS`4;&3FH;{vX?>;?i;!e?Nmi*iJ80Cg&j=QMOX87TV
zjnYxH?z5f1%T`Pcjoh@b?GgH8*SOS>fE#WUN~g!oR<t1E(>!uGrql)I4;$*4Dj?O-
z7_HM6IgwA+J3X3gt7f2-qT=+qEHB}S`NI^-W!~6w$a#d&e^w0QR8z~+V~!-y34PLH
z_OVtZSgrk^Km6K&{x-cRX_!$qYL^H6M_kGDwYvRSFzE3Qd2To;qqAAqqj|H<xY$^J
zqfE{uGpNd24n1=z=67eLbQX?Qd4kms&=l);3o@reSCemhFfs-5jjX(SA`+&WQDN@W
zd1uty1Ipj`Dn(!BduNyu>p*2l{U?A*mk(Pl<cLqnicU#i3d+9D59!+}hwC=Wx8|WV
zd%wh&?UKqY-<T{Qs_Rf5@iJ#4ks|W$7zii-1b=&QhqhfPxf8$bnq<mMky1%|Me-(r
ztzIF5K?y+9?DYQ*y#5}8F=Iji`~rCOe*)MIA~Z?=!5i4N0RYB!1fxl)10NaQO;9(*
z6ZJi=QFmS957DLm{E`*-(ZDIDN4-EOTXd&2<OFT3DyJY?woAjfCOw8bEVd{uwJm!}
z%!+LPL$=G2b-}05-#d}w8){ejcc`svB9f9C=Cyc^Ny`5yL8xlOiO+kW{_EIOmBD*;
z340wwHDqYf!Z5}zJ$uA~J{4k0RCB~w<^ts90f#v<NyT@$OF0`_C!DNJJ5LX;bG3_V
zFBlWEmbS&Ko~jCzc>+a^I))B59<dG#!6l&t_{JK<egftt>w@|=gXcY=o=Kgj-qk}v
z-`SI;e~Wgi^_O6(3PJ<a&W0ApcG2_ZYZhQ~P8Ffy=`42<tLfu4H6OMak0x$^>**~m
z^_i~my_q{7COj-vzC09cY33PNc@=RhHrxcnE(Rgn`^!YqpAU$c$#oCq)yQ|Qu8RaI
zCMG&OVztDf_M8EBeV+Cf{*Ldvg=}wMaD$=MPNYmTPB6o^U7+HC^{BbZmQjvCC=v66
zJ3db4SdkS~OD<L3_tr{;82ods!|c9Xt}dUVZ?NX?{qUBoS@^wa)#-Gjx4o-l<^kW=
zX-0KdkX0%lP_eIHYU7s>QDW5{fwQSzbC5r)Lp4<KL){U}#~5YFfgV-ojItqTt2DR@
z#%XrM?y|yh*-9Su3MHLnCg!qBu2L()a1#AE6#UB&rBtrE%dKaiW~QoHZNFVsUM_sv
zQ*-U}qHtuv%ZS?-1UDt^JaK+9K{pPMpoX)5KvI(FZ^}%6J?7qhYLuEf0Du#Uu(SDE
zqnpk5F<Pd+*TaUNHZ!4_k@Oi2Cb)Qvwv=gR0oOJ(C)V5t()d`pQ*}au{s;?^{%=MM
z8e7^Z{*sN2VOH)V0bZ8bW-Wx}l{Mp6^vM}$$$=pYiBuE}(xgq(^=DUuEBgqNLLfxT
z4asb9seQF<a-Lp;|L8`Rt|mYmlWo(bOWEG$`U%uAT99?>XLK5Reb1K#M?}F!Hz|z`
zBZ63cS+adbgB%DJbAwL7Yx0(6!t>>!QE`-46xFgb26H#u{_9Y}CH?B}T0W_kcI7WZ
z`sl3QQKCd0^Qv&o%m2J;<biRJXv>GZh|DThs3a!yIGm9!C+wYMx!<!!L<ZFTwz|CP
zJ5WQ^L3XBEnUT$co>qP{i(b!VSORN5xqOpHIqNcX`>C5Cr|n6?xx`d0AQW5Ui`?Hh
z;e)?FgL=KXs>rYZ15#264+w|A>`fK#Nltzs6xju>YKj}2W3^k(Kz0J?61RelqO?V2
zR+{`o7|B#;s3Eq?a5>@dU137#XL+g3YR?ykUY3@5L-`~54D>|e47ZC|$6vC;>w5G(
z_F)K|yv2e9-CDwyqK`|C{GDqWfG7a+Q6-^|l77zM<>+W^ao*gV#oBFT-3iJHg+K1Z
z%+XG0Wb`1YF7}p-4xufjJ^APM?;rQGRp8xTmnS0znkY{LH+<79_2^#D+?amgF5%a2
zkDB?ecVQGgLej*{KKzDzvXW&Nv~Ssmu-=G^rl_lO`G(wH;WiIOQeR&mUF}WZ&clTb
zaEfKWN6ScuuVVP#%?u|EZPv~gpAWQQD5~G5+dXw&{Wz9~X-!qM(7V+=?M!o+d8vID
zI_XRwrnEa^Hz$B2E=uZG5G}7oTe5vpKNwdfEQ+m!|1S|+2|=x!M&kgpd<-}hsac!5
zc_PJRnUO7Pe|?Oe%iNRVQ>LvJi_q9p!X35lkBfs&gwvQ$Fq`P+wS3Lwc$ij(i$&~l
zep7Syp+0fN$<A>x#h=5U&zWa0mwkH*+8N!hip|Y4@RL~TFf1=lb$-M1TNJ(SvHjw9
z*0^oU05#=EEaL61C*cJy$AkBp{&{Yz{sCebYJ3kh-!Y*Yj&rnR?L|$*w~E(WQIrYA
z<6B6Xk)+73sbKwROzTc2wVhhi(=*;|#(Bf@fwG2XNyaTbE@~@;%ZTSw{|n`#J(c4U
zYo~jN;PpN?1@bb8816Z3eijrogZwH5Sqh7|EUIK{;FbM-Q=+ZwoY0NL^OJ8RNLz(8
zVbcO1zhI|_lvMxDEAoLHa#|wY)i9h;VxeU;J>zQM^E`?=ntP5!wM<y&YSR#V1J7<-
zT+=uaNwdGzE!vW36Y_koJ_S1RxYEmY4Mw`~IYy~=Vm<KS2&=%YO+lo$aPbxITb-{Z
zu?<BrMF(JGGxeKYdzQ$z=TOxiDUL_k9LbEiIVC#saqUZG=e@nd?g!y%S1y$@I{iKA
zI=4g}yf$&}3~I0MGEqNVNN5zy+lk3*jqolf(sWod3LYbuOzI|{IDFEv>67^qzBohS
z)<Wn>*VV+^S!=?!**w^<s89UnQ6E7;(*38OQf`dwV%pu`dae^)YEPcG`LtBQ7QK3}
zm|x1-@U!H|(g-?dd$t`e2*HGV$qU&^pVZnP=vn8woxkLg_Ukl{Y3O>>1LY7WH{>vA
zp>Zf?Fa3o<GO<B%o^R($rxM{f`Xq~=qv3(4;MZ2D={GTz@J{t8T`$S$BvUiWvf5y1
z6oz(4gltzJ<U<}!=SvqkaP_ME4Miw~f9x>3>nPn*$SNhO15qM?d54T`OnFDtOE-Bm
zEN-YrjQnu+vPakD%=a(=73o(kr|HaBGdM#S*OSjok8+D9kl+Hgitr4vWvPo7Yis+B
zPp0Kg^+V_4Ch`vmdNJfy6HsL7@kIT#xt3E%OfRL~v{LKPx0a=E2U>gU5F*J4X8G7J
zn}#xxUy$sn)THw?j*hvq;GdUAngqDZ^z^~RZ!b_?!U9ndpq)MC1FfyJA77c7F*ezP
zzuRqA@*Ebe)WgwMTdSKO^j<aULeOONuc#YC!p?XRwoKL~c@rlxH5CK~w$vQ6TT(j&
z2Y%x04z7kk?Sh9`RFOG+IjuIyYhlf0{zb2`!Q@AQ=a(gn*%AnDrJY+Z1&k1R*eLz2
zLv@0AjvJhg$+)_z`TLUO_F(@Pg<}u_1wZkl32d$aFKhc9Q3lrabz%0xi*A%wGL{}l
ztkY#~X3V0_(WPmDW{OzP?avgX^Jdc9<S<8-x>)30wxj=~@dCIPZBif8OUNpsrou6r
z5Wx)oRw%M|^CL+uF=@=mghBtvlrk;vorTWZpX!S|E37UaL~eqyhVzxEKydX2ywds&
zvM?9~SMKTXHgCBuvH`CuaX36^fd`#D-63=tlJ(+hWT{GI7|yt0!AjddARnDSpu?&6
z2u7g9xOkf4X2A+lqzrEYC!gZgK+lns+ZsKZSdiZV?28NGm7U<#uK~B3m}mO{h4QFY
zf8Rp&R^1Sx1zSNpqwTrO+6Oj4$)}js%6E`A^(|F;wF;Q`W^_R+WhA!NKuz~54Et6;
zhk3cR)%N}xe65x0L%3^rBI~nqJtcmwB@iHZC;*e|*1@Z(l~F?v&N1kFKKH)(vG^zP
z@yaIkwE-}isA0ignBeCw66yq(wW_qbja)F{c5)9F>ha!bL@`hqDK(r!q@7?W<xJEN
zzg-*h%R7F`u`d=n-s08tWu~%h*XS#lO)q0z*5}y!z2_b0i`Sgpg&zxILe4{$7t2C5
zqrE0#{X%F982)ou|9^I+qW=e-XATGve_g0JtD3<7r2GD+@_(oH?#g?8P1SRg3{EWe
z)E&t0ex+Kw8Xo5;QKxYJd+-sHrtryu)?2OYl8SG*DqH$wBhyu_^kzd$MoDZO+%Ko|
zi0MOPNjzNh^fkIHbEK<`ZwE-5&ErRPM2cyk(c1Qyb9F^YBM8531UU6m-t&<}M%|MB
zMtfJDWY50z*!MiocPyE$R4O>PC3+lHRLkvx9x~L9&WE;1cS3f>FfO)h8_#;eNXL1a
z>I|81ei@0rA%25e08aBRD$xJ#0`4kaA<MRp*wZ9?3Ep&^1RsR9!r9efCLuBQF2Zt2
z(T&`cxANJ{E0fN62t%@aMp<B4ul$4t@%HMeF+sUQJGzj1bP0|#J)&Bind>QUhqTw8
z9xuOd{wjEFlMGk&J>BWB?`l1qsPFMi#Jno0k@&@8w3?QF$)OV;_T1{JVD=+%{>Grn
zAVbhCN{56BQwl!xq<;rK8RbUPA+rkks%1Yzo`S3{zYf+DRcr9oEX(*@6m!T^)a#1}
z`kKJr7!fTHs&Z-?sC>Lj2-yH}81r*vh~KbV3;4tzAaN}IfD|ex80L@R+kBo*<m}PJ
zAj#iksYV?e`mb~ryR2;sy4WYUCB`{S7<$rI6;D{So{#!VPAF~yfjkpY6*>}!Z9zNZ
z1x^)OPhFTBS=?8PH1^R;0Xa{;y=~1&x)1Tk4`SlvUn^GDO@n?45?&s2FI}sxD)!O9
z{L|2-Qyto@Z-jK0f2*9bw24f4PP-%)?Im?Jxe^)=I*Jil8U`wdhhmaHSaNkPGX}LE
zq4b$D_SP{JZ8el|Zj|^`)oZ)Z^-(!yTmbBPY7eDTfxivN&(1RGwDd<p=k-m(3ybM?
zf+wDu9dFP5(*&!V(Ir%$jn$GkN*3|4<R&#xsV{4TR*6kwL$A|;mZ^q&n(*yR_As=2
z1q$kATxZlqL*Kjgu(n1EGrO#Gkm}cNaVBnq8{x~+_tm!%rOgjz&1sVh?!D9+N9|jz
zD2_4Vtd=vIoh3M)&J<;ZvBa*_Z<S{GcaxvaK<yQH`c|De1`*<uwpByV#<kJwt#wQM
z*ggwUxv=z5%&K$bSu_NUbfntsTORyiqDXi_7kRAseOFvAHz{DMbDxTyG{%3|tn~F*
zlc;;{L40ijUIJ@-#1A#eL|>5(J2~!yTlE@00*6<^1W#OZxVfM5h8SvTjIL#i3I=@3
z-)^p|wXR$ee(S;SE5C2q%P&*t^KLP^P<|nOGXlP&g!rr~$X-XK0)5XUL3X5Cs9w_;
zd7uTi^6*M~HwG9mX%=aePCEnS@!L+q&o%0J<@=oH+S(h#abym;-u8MFq)^Xyooaa2
z$fHVNZ|Lk{9JiG47l+Xs%~zRv6{G?r@fEwx8zh~vExAUIh<Zqg0S@mShwY7_;{&}(
zKYT{9T05C%BkkGlSxSWcRVn7grLMf1roMbd^x9W$hX5bt(2Zz5b>Y(!rTCFf*}U@i
z^wnQ_-8w^9UkTXZlcir~szj^HP-xb~h>M<qk)j9saQGk49AT4QbJjWp@pHQM3Q+JW
zINX{InFC0$ZWFaTO>G0RNsImefJjThB^O<?wH;A_`XUT}t3#qHJClJ8hX-IQY9{^5
zUYusP5TqE8veB~sH)b{c-?Ul)0zEW-yg)^@-@Af^fi*Bbt5c$kN*-Jl<JzXS<R)n~
z=qU4K(U64i_z#&{T4l+^zInv``)a!!#*qj!V8J4>Kes`WA*&S{n&P(xBsOC-3$5A2
z71`C56F10?RL-Ofydx$!)HwfuBmf6Lr9ie`mUe%wENVvxfLRW$e?TQ~0NtfcFJfK$
z2aKPkP)ECeOctj&g81i@#;fP0T(^KyL=pA}^k4^QG-7C%%(wvc3M~exi<DOQOIi8Q
z21p0L0YZ8G1zW3j3;245tQW0_y0UNpS*Z%FVjhtY3RN7}{-P9{FZJ*g^#bwJ1bO1V
zq7|-+Y(qHVTwRajQvzwjLD{7VXxi}}plsDSB8EJ=V>0rBTX3{AB>gGc^=N!tdhz4H
zP%;s@h&7Y%P@i?Ad~soGuexT=UJYC<`5DxVSoryT@`8Q0W8cYidFtnD&OFJY#k)a~
zYxCP+Vf(k&3WQwBKxS8t=SdL9TInus?GInO4WoXrpXgfatBu*2R4<v)mNpo50opqH
zNo)8|T7Vu}5i&g$td{@XLL1Rhn_%u7W6m#n$|sez^#{}vME0#HX(wzf6};3xIC%>#
zsUA9Ni6AntZuJzz)O>y?zWM?joPDdCnG93%)-$H27vAbfJO8+eM1!2|uN~VkIn&?S
z7(bIPDsaUi>pXN*gg?4fZ*g-Jmqit>nwWXIq0`@So6TR2*ppujqEoop8FXjvl)oc6
zfgGgh!(TcU8M~blj1O;Rpa@#Dcd;Ba;+Onfr$L0@K#xU%>eiWTx7Q-KM6wueXb8C1
zk?P36ldirY&IpRr<uW*Fy{%iZS9CjH0BTTZn&aj0+T~5j%KC5{Ze+nId)}qi1?-EE
zZS`wYf7|VW&5aD56vKsy1)LRxT*Sac6%`m_c}z27F-CPlEu-H^seP;1c+add59Ag~
z>9t-BS&mUWRiG>7zm*3vkcZ@vEr4h)3iF^{Rm1V2c2c^<s_yVoZoLNwW>h{oZmd(V
zf0(?BSc^p6&}}2fNPFsb)A{gO&n+5Vg~k|GH*!Dh01;|U<&`=|D;eeXLwTH+fzNTW
z{I(f6aaxn=V&A-mPIG^7Ub|1<cjb+x<whek`54No{4RE*D#*ih7mq9q04KDo_i)+m
z6g#aKh)L4m4Jg8m!%}@YY%Gk~Ma^5945xKdrvgy++kg|t;V=(IL_c^U8zG-dves)6
zKWp@_Zo!w&O7zA5fTHzFAv3nSaV)oZ1xmLo8Qp0Jd%f0G0gZhhqHsDQr)$$*uPbuQ
zSfmC*xCFH$NqE|+*<+a{aU+l*;}6JNa~S-(XG6&iQ=QN@cs*<Z_oisG#jV3x<Zcu4
zyKtY$Xyz+jizdyY>5taU3?S^Bxg@)n%enmlT!C>T51w6!q|7reL@YfNjs)Pze6khm
z4`|b|4!DM2Lk=f5uD!v%iQc997Xkrdvp93#h{V-;EOxxi864dBROj9cQV`7l-q^-j
zAF+!jsgNUv^Cu!r8kSx>_ToR|#G+;TZeX8=Tj^A9HKb}|nI*o4tjyix<W0B^xWw(+
zQ4@_S(|Cg7yOK0?ItiVJyv}S0;LOsIwXYrfxPnkX9Q-=pJfBwx+X|f3d4*!gJyOD_
zo{eB1&yXg#`nt9gmjrYT2B{UgBji!{LJD%Qw-$rBsIz7h{$g-V>(wQ2hD-5}^v3=Z
zM(Y5kIODg9bC^F8TUf0d1PVO{pnVYdRj0b)Mo_y(4^XE4PRChQKR87HW&6LJ)A(2F
z`Y(Bnc!*HKf0_bdC0_jm><5)48!}A*PZx78b<JKWtt^vlMj4azC(8Gm@Tt0%&x&_b
zv?K7(00mn`ltYQJBS;7U;|AmpNQVljqVj7-?aD*aJ{TgK0Js>n9BKJ`c+LCY52JLo
zp3_>AUF|R<{guI?br6hGvtG>&%2iY)`E~k5{hl;@VPGW;CPUT-LN@6;FtseX6)(8S
zltbnfloq?$>}IbE1gUOK*nI6B-~9o79s2{yFA0*GT%Bg`<v`b6f8lGi+^9{^LvdP~
zO5q&!EzBP(%7aurZh5Mv|J2-~zyGu8J73fj((dvCSy3}<sjQgE=5+x=0m!HNiN$Zn
zjhT*!H?LHX&KHQNKI{nWe5KD{!-ERTxB(08OXsCUPEN<AMQ#ZL5sLCdP+w^p2hkpf
zfZRS(b%AOySE+SrMEDj1v%S#YBSvpVT=jH86ghVGq9xAJ_6t|&C2JbC4+_nBsnL+z
zPKUMQJ(sREuSr)k^6^e)KWabZb<ZmOY^9<WqHC;{Dd>mSXP^XZ{sLLw1zexg?+>&x
z&DYzUiQ+0j`M&xVtLNgx$m-fNOr*Hw$j#r{PfN%470k;a!%tO{CC4@cGB3=c;#3TR
z4??f6V6m}ZlUeK?k|nkf6d5hGr9uHOs(q)m14$nHN46>n;a?6px8gv(Jk<NehnV#<
zXCS$IYFeU6^BUUOSOvpV`|<?>k~bV}UYcYL<B;WqJ4TbdA$E(kKG_%qHNgZ2+pI3Y
z%=B971tndqd|x?#J_SBFgIsFOq;FRiow4qDJrDDZI$Z>!)}1Ann|o#5Nn5t_5x%%K
z<m>YiFo=Eup_orX-$59*4qc|iptx~7FWtB7LU63zd5IJ<r9No~mE)Ofq67BP6BIE?
z<KaL05@)9JGp)tDl5z`jm=f$5pC%p7m$y|1E*fqxdecj<HU9z4BJ_zFep7AAzPK^C
zU_Q4UZg}4ER{Lz{K>7Yoffngrf+o+^(L!kz(<;~4C(vJHdZoXkMMFS?pIA*>O-CAY
z2C$J`U_*e~28NKuHap~w3V!q8g8ZRN)<uV_k2%{wT%;4Ie5e@anDp=9S-f$|tSsqe
zJ6e0%hy-8h!?*B|->*h)2PCb@Iul;tD$)G`jguQ7c=$IKIUy{%sO=}We?U{M2eJC_
zx6><~0yIbSs0)TVLtnjy`MTW<ZtWmwUekq4dKTg-iz_t+>l!DE*6zpFb3yk)nb1ko
zGnjlZ^qhMUK+Puoz9J|PZbpVdAH0Bnnk?J~X5bjlA|~7b@7!X1IvUwXU<18cyvAp+
zejo5zEs~~Ra8ruUn;v>r*W>T}F4Sk&1!#Vu9y_ou;Nslb(0q?+9s)#3+%VYtb<Gws
zx7574Xr&T=r;2!rfMZ$1!=$N7h(%6L;4Y#2q!;Eo?U<`HHlX;s8VT9ohK5Ys8stB%
zYn}M%Rq<g_d_+l5?SXTuHDLc0v@noBE!ERbtW9H{`e%_@8b?^hM2X%sdi;-U4Wu%<
zeM(yT<Gj<t82KcIU%B;0;X(f?WF0hQCBJ&#ocy02+$tN~I~p>yJkQGDb7cE<R@GR|
z=k^Cw{|dqiX|E4iI5TQ74W=erRMnpVmOPEvLcYEL4l{BfSqJ?;QON%xqv*dp-U=*c
zy%4#7EACPGfCN^kcSm4k3$P&=4R|hZxUaOr=PgTA_~svXMa3J`OR|iL$JvZRn4y0_
z+2Y764b0v```W+osnQ5n2po(Egr0M)KxUet@Q>>0x0OiIm;Vl(K7^3oB|uuzJBI*)
zYQXx)9X3Y<`~rwah4Z1^I^aMz_Adk*PmJ&s#MkL}@!1(kXEAA{D<a62d?D>E-fD9n
zYS^m%4R;;&{JFY*Hm$!TT*TC5!bkdAN=3!O40#<wZ5=1Z@w4#5X(t}09z*rOT%8Xd
z@>dG8B7Z<ui2!4RcB%i;qSAsCyK3@eQ=VnRoXT0Z5JZ#Wva0qbcfDk2Ls4>$c%+NO
zvbW4%ETF|RW_u`ntYFoL5ssn*4rt<``Qc0liyO4>LYFxAU|B<5hX`4uH5S#>!gTkQ
zh#6q_We`7>_J{#!0mp&QqcI@L&EHH!Thb#FRPe~B*wSyazm3rbFLexd`JB7%x;18B
zS60~&5(Vp{k|<7I!(Z!Nt%X@TKRlkl_oXAE2C@@g5h29OO9gHdGrVI|Bh-Asj_&8u
zzT*nK$PeJN6_3)>4P8Q$2B*DEbX!P(PRdsWLH$AdTQutWH76{un92`cz$XVV_o27-
zlJFAx2+|t^)NVEW0l|sXQ@n)4W4dpAUoX{&w$mBjct7<J_f=d!HA#sUJF8RcZ-}GV
z5s2VmyM3+l2NXOU!Lhx93z^yjpGYI(o5?tOZ#O#dkW{$nMyKT8>K*A{PhuDXxkRS2
zIh1oSQMWl#%S^XYmD8)@Q}ga6HS;Io#=-T&qfHKcXlW<ws6RFX#R#FXpQ8Em6+J!u
zwNDYW%`|NL*Zl$%zQ2&h0Xjd|OcE(1u^W~KL!Xhn*O&~2pGv?M_m&U0Hw!G^t-QXX
zCdC^sp1YBB>0?OT|3nL@WGx{Rg4i0?Kb0mmB^df_zQZ5YA&XJhbWwv5;B;wA9AwQ5
zsc7hXay2ytJc@ihNg5ooK<5**k|7GwUmfu#5;@|^6r^(K4;z~Lixpx`txb)lntB3f
zWYW=OxCCo{l5fs&B7-+fsDk>JP}8-p5HmQi+g7dWGo0a=?A<=M)Au}fgW4Euy(l0b
z_JW$U098qtjI7d%^0W`hZj`v8Gvgv_@TSOX^>%uu^;g{dKF-t;YeyPx=xP(jm1Z`_
zRD+8B{j48THs6K^Hd<3}C^U|LfvVKv-juwECTFRQ3E!#Vn`REFw!Af|9INtrDRo=^
zhV0H5e}Clx0uwY@`GEIcIx!Z3xt1y|T-Oqh5Xy8C6(&v|dHQ1nWm5giZbkQ4L!j7G
z4boM>*JxPQvmO2rP*are-O`}|q2-~xb8yBVp}2d!7w$<vBsL(gFjH%%?LRs|u7h-b
z+vs|%%SXFV-aC(Aomj08SDUoO7k}T7{v0&_+c(9u3}@7W^yQdym}oWnE_Jkvs?w9g
zBHxK`-uq20+`uvkJ(Ac2g4++{kasG%x6q8wt@R;rFAos_+dsW8y@^l)J5`O&{%q4D
z{O;GlnDu)3^D;!M87Ck$+Zw037^_>Jj@UpL9<sJ`TlSr-((G8?me&q^iDmiWVBM$W
z_pc)cfOB15yhZe8Oe8PjNLd<Aegl00p;j~Ndz@(^-yMvHLd+@kuiA0Q1_=j%TC*Yt
z7S19FwKo;8cBQZ9MKR7Zr#5Gfe7?<MH_z1U9DEXHr@`#?#0r{6aZyT9NszotH^Viq
zgHoUU)s2xNo*SOT_&kg%_EHf#kYrz(B%Pk){DN!p0%l<g)@q8GHbL2a1<p~-lh~Fd
z7*V54vNl>;8d9n#1B9}Fxup+|rzo)SZ3D?Q`YgbT^(lX9i3lm;LUwgQhWt(k>%10B
zV!o)I9BWDc8`_#J>6+pU5bdF>@a>^1u$m>`>|Ny%jM>NI=ur>$3heoD;P+8~$N0Gh
z0DedfkXbVU;4^;dr!xh{HAWp;%48l8$OszWbh8FUge5?)4grL~FV!qA<dfU3np!j5
z$#)8q+be&T=uI;|cXk)0h2_TFSqV)Ls}nw;cpouUsdo^wZ<cqo@|jB5*)*)<bfMGX
z;|fU%J#wjAeiM7fg`dUC>jh>|z~RS%+JU4m0h77w5-8zW5yK5hA9N*Iv*c(m?&Skq
z?B%g*wX!chaGQjERaI{re&t|iIqHTD4Ny-)4$r<7SbY8H;Z6mjl|aMTAFASlet<43
zHwCkWW!3ox8xsGFl;A<VD7>D>jWQCh89&URh*Wy|#3xP)LU3#ISoJDd%mBgCa&d<-
z4P=<VY2thRo`-3h;y(Tmb$d29i-kwTGt~z~`Hj_cEa_qn=s4yl+7jcm94Pr(d{?pn
zA#jFwZ>SX{S2r=eC@0nRUPgbrjhh@WOiB_+fq9}<haEY7+R<(;zx`>ME6<wBdH&cy
z_uFe~OrO>cAh8H7s0+`POOW9d`P0&#U79j*eWTx@UUc^rA2DI+*?YX&$_eK>)RSVS
z*iGjTo%Xk7inkM9Jgk;0SRCHQf|j0UO3O=)SVA;+WWxniHea<}w=Vc9EJIGq6gO7z
zB0<y|6+#DXC4)&D{LH{EbLVI4L9u@CWRK~C^9Su7_%2|Sh=m{Vct6|j^OuPGU3HFi
z2&Vb8;Pcw)V#ds>mg;bVrryA%o$!`C8glrI^ag?q#o}9JdUqD(si1*Qw1v74Z%x@~
zaq(u5T+qP1aYv-clO9kwPY(*uFdtf-Uf*5fWcB=kHKuG$?1(wW;76k{od}0VrM#0y
zGcoJb#r$AmdAsS;AEDo{3c@idUEwp?v}hSBUmkrEcxvY{?7tp=rhA>01vm$Cz3w5B
zIsYc1xT|tgkUKT!%xvUL$UP|*W5Z!0;_bg3OF;l6`uE7Fa}+I!W+Ox=N=xy@Ed_r5
zuBcrSTg0TPwH>ZuU|t_*4}LdYoh;rc<Ta<~d>1ZxeRQNrcoOVIQmE;j1V6Kh<lN%i
zKkQ#F?B~vo*`9T<Oz`&VKA5?N?*v~8P`4YUrZ?Q{c65t8pF))hM??&I%%E@F_hJ4#
znJeq&(ue`KXFTfJmfz9EO<gZVcXQyulbB#OcIP&y{B44gP8BY6{kZO>1yWaAEoocF
zy|Q1o{gPny(Ip72`D@iXEqQ&V;Y7Uo+)x?TI)>jKYV-42G)uJ+f*TyEIr*Pmui7Kp
zOB3lGAKRBd!%_9|#~HR1VUzQ=gTz@A2pqgsvSk~zRn4I~E^oW<?FJGpM+C?-ujMOm
zeXey@@2pTadag1H-O}V~I<)!v_giP+YE=!b6dx9-w(ZyzMTG&){$KBFr|tx~d#M4L
z>4d<s3RN8?08AQ+c<=%!lngXWdx40opI$ov`Y6QTMNE!0G|D};zO>1ARcweMqzPz+
zkljxnhJSdj{qP<PBdW^|q5!vh43ZL`$yDk;!vb0q^=HQpJbuL&4%Rx^xs6z>lfzwK
z2lgg1M^LgvkUENIZkyZvY=z{6!wr1Oc=RaYM3UZzT#;5x?vR2<RFedd!El_exc#M@
zVwUExAgq?GkdT?|sAn-&{?n3k5u2c5(ec9=q{i_dko%8<_~m7`b78^<Y{kA;9oI3(
zlFXfuH#%=OtBXa(`M&mCPy%^mc{ITYZ5KIbqSd^L58Ys)58JEF+@zB;F=+ByMNFMb
zExG*VmRz#PC|8Hg>-fEhy%ZJm^hy>}H`T_-dT^>`5tb`yZu0h#;htz0&?Msx%gr&s
zKQ@30)FmtRG8Xn%)|A~hPoHu(KQbsXHcMsPK!};gzY#ItkbQ5ufKA7W%l(_67ipwC
zFvWLZ;PlN8rBvpUV*Hyxg5CtU`jTjgKQhoQB&$}`rVxS>(s?=*7vX>T<4f!0;pg)~
z<EYLIaUsy=&Nur0G`>A-%9&_vlt)JOCivG+CTo01>Ka_{*)i#92i&o6DGowL=H@gj
z<;`6^Ej$L1e5aEj=#j=&j~Pxj@>6{;!hS846$wYS_b4Q7U-`@QY+;DYpxS^R>G+w+
zSy8vpQ)su5hlnve!tlUwhRq^gI5^FfVgnsj8g!m_Z<_$ddv4FdC77~yQW|he1?kue
zl}K=LMdsJ7kiPbs<A~2^*jd(9YA$<wB=uH4lpB{YS*{L3^=ozy*u&=70+DK+!ILkM
z=s3SuW9BQWhnNJI6>21y1Sd?L3K#&E+xrD*hvW~aJ4vBA`mJO20<HYIKDO=~qbVCj
z`O^Z4o?SN0aq)b;x7$lPI*m>u^!*y}r+p)9x=pw)K#CbwwKR8nn02Nfgo&|UwNuKC
zObNn!aD{FfeIge%z0}o`@gk@n-%T;AZRzSO<gox9PyV5=vcpo^Ye!30V+c-+h9u5p
z7Y;@A`_Qi8sa4;}8<;G(9X^~@y1Y9=1&bSs^)c?y0r&pwArIX-!L&H8mYCjHHx0Bt
zJ{~;Vt5N5TovEZ%bsI1i6DLwQLIgEy(q|8>6GdR@=xFcr$|Aoh?Hi%=CG^LsiNUcJ
zBSedh)nt#Ix?|tWZYZxk9NO#ZSa=kQSR0w*bw7QwaA!s$C)r`Elx_DB(@{q^*wooo
zw-}GgG3D)iGpcqHoK}!>VW}@LdVll?#iD}kDL!gG%M;XH%b;?Z68ST(JyG^84!gq1
zFNfAbpY7h?bjx!0DG<=*47q5mG7!8p)nk5noSVmdqMGAKeIgtsqV-ZhCWJP#X<`b)
zG^FROsnMXKmSlhj@e%b3R;TXND{zo@)`Re#19tC#QZZU&#%y1S7I70LPA7`3W(?>p
z|9a~)opHz}i!l)Yy#5>i6if}#BSmoaua?0N&y}@*9C|;|-Ucg+?T1AS`sBuNmu!qs
zEs5>_bf(^yF{?!Pc@V5hK7aO76y3xLKKg1BWmHL&_0#0|<j~{@i?lTc+b$-1A0?w?
zW3~LN<a~f^$S-S%Su(KlaqD9J1Cnc<cujgeY^FMl^9$qcUZliGHJ(W2yCucmm3KvI
zYF`24jrwE5%BryMCg#G{!(uLl;TjuI10`NFmUk<j`HS{|KO*Bez~)87NUa%u?E8)n
zkdIGw(yHC`&7!aj$4aPsJd?M{GC_1VYMe6(yhcfGZm_Fo=ZISCZ32|<1~HQk&xhX4
zjzlor5}1P9vuMt7d`QSt>j{Ennhf?0K7cuY7ub3UyFNKzFpp`D3zg|3wp)_~Z8&l%
z^$^eq9DI;YZk+Cn(OHZZ>gYW;N=tcTQH>iIHXKx_HQ(pRQSv?_k+VNs!J|w`g7hk(
zrOHcyxCXuyb4T^A&fWUg(Qo_m+KdNQ!MGp9-#Z9sDD#mj@Ayc=vKI6ro{3QZFf?{$
zU)Qf82wpCJg-y#({HkYRy0Th8@4g+b7iEysw~1G!U2pXKMUvQ|<3gz6BH&J;IqGDo
z((J|z)%ad7RPtF)g4`4pA9O<iKa(v#Yl@%75^>L&TN$yEtVy%MaKCQbyCP|+hSIlm
zH}x;f?(wTW^2XG(^mJkC<0zha{W&1mA&dW&$0PL;XZ2C`D7%3Rtu8~7PVe75uLSD=
zuhU_emwK_Lg}T;vykB(<JijU)!}i)PkM=Zg2)mAY=G8pwb#!{EQr@sognxek42v?9
zJwH0D?OqLuON3aHdNZ}Vef@D5D?*v~yl5Mj>>JKb%lno}-oR92W3E*5-1f*9J(ADA
z=myo24cFIGnG3yPiG1{pq!uLb%mdBbBY$FRDT+5`fnwD5>I6f$WO0AmQD0|Chaq@l
z;KMg|Pq$u@cKA)92Vi9V7B-xiP03nSF6l^FdZFWP_&mGB4t3*lyUy>j$0}6$+DvaO
zo`V^0zm{`c16s)-Ys;7=@m|n2hQh`OGwqoWO1S?_QZHdiI{QW5&%LgwSGkLvSV25?
z;&wgx{3>r#hJlj9@VcBcw$Y&W02gzk75b(Mh>sZ4N@5>O18+b<;2AydlIw6*+2+*w
zEXP<-cv#A8qD7{hzQA5i5A2g(jJH$D_k}%w0>D^lVEl7ej%|7u$TTfCL~RXV)9Hr<
zjO5MglLh_ip+qT5^N{~_#TQoMtJ}8MGZPRmX+hy8kW?os3mS&h1L7{AuLjZo6#{6F
zw{9{62%x+1myS{?@=!+v9JU@b0kKGK?b}(nbjJY7!5R9mc#TiJgQ1PSk0keQ)urIB
z0avI$-Us!@n~kez47_{SX1tMW2kWVJNTQ?A(9NREPRCSIEPy-l#>crE+9b@_(zjV9
zA5VT%dY8Ouoo=J>o7j{`z(cKCTWPdAM2<J<{8n!G%aCC~JepKwn-0pZ)Oz_z6WG%b
zBZjSmQi635<{yz!TqM2F%<GwG4THh5>*BIBVVP|F{WeAn!@qPY&QWPjVve*FZ~bnR
zs~bYLpTo{9O1EmZVmC39&B<JO@b_6pw0=#-^~cf9js%qRdYj{%f4f()<2so*kQ;g2
zpxA%S;dE8&*T11uA3$@yWZ*|2xFI3@ReSP7=thf$##OV6*`}qK+j^)mvd^k8U!YeH
z%$qBZPzK)s*g4O!;3mhnau|lcw+*gfpCA$8?%M}lUG5zzQ%5&4y{I*^-?Ln2v>CRn
zOFG}4XE<@G<L2H6NHI?pLY1I<uv!(36Q<F{5zV*Ve${V>?))>(&e;nbVexU#iUhK^
zmu)K-I_)YPr17rsH!e!~Cyc0^KW0G>>qj=u74ZiBq~qe5M+Fly7lJfKvtjYv3PW^H
zBUVvY=>d*W==65<N+fT2QPwp_tU{iJCtM~pvbm8o6%+PlU(j;aEb4uHw1knW;$#dP
z=&6hHt<TA))1&HQmjT9No7#q|Orcz%?_BX&bsM|($L3s?7VM?o7y^!By7V1d9^T)G
z@;YZ+wb{0g@1u^7X7XyARVIQ_I)q$X|0>|(x|~JpFtFOGPm$xxZ<17r26KER>k<l-
zAk$-ixH@AV7vd-Q8td=W9y!JZMXA2M2McpIvFUmE^{Fhj)$~l1e0}Vjw@$u66W=V;
zJw+#qnJLf%{gwznqMj8;>yV8yIuIIfYN;i|mVQ>@sjJP{i9aGI*%y`{tTf!yR!0g{
z1>UJG%kz$JtKFNue$x%6Q~VSY?ih3HIoZc~$@G$TpG(=-ieEEh?p=R!@<8i7{CEJ4
zcG0WPIR>d~?Qfv>)~tpS?Iuv^devpszH5vPk*Ov5!7-rSV*QTi08pvkX?1B@KG+!0
zxaM7zf2n4#8)j4FPZn?fB#GkUUPxJ?mF4h!=OWj3kxh{;ft!Tx+m>z0*K9@wn}=<I
zr*syNqT{n)#)Jep3sOXzy@tLUEJdE>j@L5C*Jqb<9D59WT}oQh6S>Sw*kOn6TVs>H
zI8ZT}JWS^X8bS#s`*N(v(zfYbSk%%r;sN`Cvb-}fDE`BOB*3^Bvmo}rw=fI5uOd^2
z?9w`uH~dga-gP!EI3-JYp!ZGggopY+KkGuSL&7bk+iP#sJtlq}Q%2$w1@fCxR7=5d
z4?~=c;^syrkwCKfGW)#O$^rCYL#BkzX5<s!yPE`m*)ih=`nvF+DMm5AI;2H~eT7ot
zXPH0)`1-4otZp`UUfJq8{-#8VIq}=1wF8T2bJ~>4^<+nY9<Sj1FC6)Q$Dh~cKzj8C
zkd1lB?;mos#{m(S(G-9yfRO)$J-zNpI#aSZV41nk)<z-DZYR;ZYp3Gd_N;Ihf+PIG
zeEq507BS<XnH}=5S@?$7bsbuI=#8nMN%obUiQp_XtG>shJ?TVp#u;OwNy*(0`{Sau
z5=DqtTGN+q59fFCIp*5ytXZdNfi{<nCX>I8t+s;;9<BeP(-U6xLreWl94<^yTy!KZ
z8lk9yoB=wp%0A&ln#I_xqLV&zpXE)lKhfbrP{2(xNJ29wdNl!4?-F~#KcJ6sptGoI
zdEyO!mCLaA+)Pyq`8EWb@*kvwo5~8)tgKWDMg)VFE47oFBZPf{{oQo-2#(&;-yd>E
zaAw1C&0_w5uzMalTdxBwZao#psv0?(>YJLlMtg^ABs4_ny0M~0HzonTU-O-`o8~W!
z?~{QiRvo_ZX|3M(_2FV`s{W+*quVj+YJ@JXyuJMT7`!^N9KJE?esu5scA;^qBQzxt
z`A$cj<Ct^d!l*t%qX)<;j-g^*g5Kov{&2qoF^J*^hOhme@9*oYAs(x((aXj;4*Wqp
zF1ut)H)6z=hTl035(@+}EnugNT(I(2a1D|hqZXt8AVNX^s_^rnFiha1Z0W4-NRg#_
z<5y!{n0>Xz>zGKl>*C#G_9baazv1g+Y5JdHkPikn6O>W)iz)$|SdRV^Ng)yl9?(;u
zmnyJBPE+W4{0FqLS&ci&T%fL?E$k*5YGCmE*TY(5v<mKBL_G!RR2KGuq3v2?-kpk$
zq?30h8#U4Hr*hKvbi%Z_=kFIfM!B-|7W=^4tskbnudcc?TyE4^ZR5(g@zGEp36X#f
zKh%;pL)IR?3aG6wGqN5#ZnIHFeHsi8_@RawR!4yf`?QQdxu(y0f2f9ngq9jcTt1E1
zQz6{n>Bo8~+37=h%q(z?nYlxjqpBj&M;nrT^&#CPEwh2^tK~}!NoU-gr^u|W3T;>+
zO9<{4mEPgsHso)=p(>Bm@@9X|0JZ10M_70gPg-&LV2`8!h?d*9RnW>vI$mBhF<%eG
zJmJPk2LE8M`$1-Yf%(9uv;upX)A$tkS}cm;h2rRV=%bKr)3dM!|IPW{orfB9BnOo1
zXQ_U0W+2NY14JuG?RmABZN@x=fPE&8g1}XkwAfzHle4}+?zv|@NFeqIsVchVPUP6g
za%BkJQ8+`-WHeY&^T3$jPDNdA3XPh3wE<TRqfx1y4BcLFf4xDKKrn1Mcy3vBD$$j5
z0IABlWdBqdTg)@27&fGLxjW+((vq93W;MggMjAq&gq|cx;!HJwJFMNE5ODIYO39@=
z`IjdYS@vKV-&f?3GuJYC%;eZnPk#y678J-iG$pfrcmEoxD2hWB;6(b0dq%LV^|HjL
zwuv0F?ghOX`U8s71^;-hyk@EohTp&^40Xo~;Ym(F6~xMce3kBm|1O)<OlnhqbHPgQ
zmY1dAgVb|WiS?0n`P)Z2L*}=B8%MlH3;vO0U*ODS<CV0@P07?rRsX0=EBjl0_OFg2
z4}C;{HTa+bviqq}DXW6p>1**TVbmvtSZqt#Ulx2p{we;NcuB9~++#RmMI+8==OHXQ
zFZ04Ue%g>a*Xc_pfb-j62l8YKk^xPXZo@v8vUNV<&l=p<7>D&uxes+?+L6*(v-@0j
z>_$~zYOa(#znRC^cvKfpt6j)iQ)OeY_BR@RC~Q-KuA|uhK1!OboN=-i@_m&<$b)?0
ztE`pT?vCdqRasgr0~CsuidXtip;jf0{j?nFglLr~B}kVg<}g#*{2~Vpgg6fsm&=HC
zlb=7w$@EC9&frWfl+7cE`x@v*qfn_m+!!syLqM8Uo>v=8<$I&K2iMKJSJZk2Y{wou
zSn_vo6h>X;n>dBNh?+tz`iQOh*qTtClzi$q!D>ErPX9PN8FjO+xQB1H()icaR|omY
zX&EHtI3p|N<U2~2&=YWu@#5`;bnrTU3AJG3r-<nUc7;2m;a_LtnLZkfb~9vHHpH)O
zjWK)z7HiMDj7HXvOupJXZ=uYyqa&$vrb6fxV+4f5pUI<4=j-gxdlz)hl)bxTV!Kn1
zlZUuELj||Z9Utyq6yAZ6g$eo<j0(pi;&o@?F<5-0n!(6TBcD8+IQxybVaCH&0!pM`
zUH=CXbJi*REFTEoezf1~%%2aPI~P2~b61x4F^RU+w$_`Ny{aER5O3ZX=ZjheP{zbe
z$M9r^MEm_)h4`x?>C;$sT$aV<MSi_6i}}CsQFA3>2Yi-{gk$N|42L@m(nc{Sdn!i=
z$!s0X_F7i_RF%g8+92QX=SNC_oazQa`UC;0&YCW+^ji6l%Sy9@FmpAZQvE$<kPS8J
ztAlDE*zX561;86XI79l^;KHX%L2ZnOkMu;H^Gm5mDV#2Hx~ey9*5nu%k4C0*L_ZyG
z^~<@a@p#Z?mjAC+c=<F45fp>0Z#^$2+~p_vAYNi^Wg?NNe$a-Db3#&z$_J!cw~?9o
zh-)QH&=W_~E()!_+Qe8-PZ~B!oKwM)6CT29b4K4%Cpd^^QOBM<9(xlVC#W*Q1s%Lt
z0pu7PK7R}>3*LQ%?WT9`jG2Cw6<_Z`Z4E?gi=L+^Zg%|5b{LS0R6zT$X2}1?c{)k;
zrbYU*A1$@(Gkau9d$z_46h#lIOI+ZlT`yfa^HayS@G4Isg61==*v^eH!QZh;%NQUz
zc9W`(<qn_c8_x7<U89(?KB87&LHjFm>f&8j7$PV<8gaoeQBmrJMRTgMdcmq#MG1rd
z8!}f;9MFmIi|Bg4*a_#32@!U5HnfML?|@a6AAqpzH1+_$XCAN{0z$_CLq*jQrp<Hl
za;mP*TIH&V-f@W@hCz1@5^R;&|C@GO|9_hc`7@`YBq9w0fgS_nql$tkD{zku3{f{b
zD+6;IV+V3Ib0cG0a%C|M6-`kk;K);8uzqCWQIQvx0e*b_ce0(iA-S@Xt)V5ktg(@~
zfr`A6=6{?islo>QstyccD=Tsnb1P#<asvlrauHiQcL#G*Gbi%@{T0X=$^TAO`g_ok
zT*=tc*ullvh`fOO?>qmO*&_0?vcQXL0ORkMikZ11Iq+>j?r7_5V?=IjVq$FQL~i0>
zYfbKCX8d2CPX7P$VgK!^R_0$F3>@5<ROHp=fLH!MoSA>T>;K&R&l&iiGw?rW;QzBT
zpe!r;8R7p31bXCux$)qPu*H@*uYE8*+_#dl)6$suB>5n`wmy0P)h#$H-N(l;bbyK7
zxofCVA%III1SlH%{rg9@av^dkG`J2{Kf2pi^U0;UR<)C4OsYF|0^>3Rk-VMkU@J&1
z_z6zvO(Q~ILRq4YuQ$PphAi5@8CFQvpnd=AMen?aa?~%3^KqQuN3eQ6HBQFNL8P41
zZe1ncG)GWX29KS_k4&;R9KkOh=PRb+exo*S?QGXykoo7|^IbL*c4G!>JX+jSqf+&w
zV;NOU&WU>r{h&#oA2STo`{z7N>b{fw^ZpN-m@sT+G`h`yzV3;$5m^_N(C$qymWhW*
z<Ad|{B|`n|*-6;&&&iu%XSKI=QY^3ENrE4e!77!RjvEi6_GNc+Jvke(TQn~EH_4xM
zQ_ebXBClt^urkm_(MC@FKkU6jtSC<SEO>0&wr$(CZQf(swr%^|W81cEn{#LJ+stl~
z$^T{Y-s)S_qC4Hy=`Wq?su*8#vWF5|ghHl;tW0F>|Hl7s-G;12CHGaP{6)*J_+F7R
zpy}$q>pNUGF5qAZH&V$%-@0ROW~&l_tDt?%!&<qK>-E?hQ5pAvHS`NCy`qDfrR&{@
zvAJ(9Q@h7RCVnxAJz~eUT2dUKRca4|47Rdn)!*BJb@#(1RTa#YuQxfMO_GDSDll<9
z5PwJXpa|IE(NCXS)rin3lQE;QS2()YO_-zAsuJM3m>SUj*(`wH_iZ<$d9EWIz4g!G
z^J=MDGEa9-qvKYG$ZBT`_OY&Q87k^#0=W7=p1uvEW)5xyqeNX|17OX&^}oGTK$(RV
z;DLuDTo3g00nN*B1|zdi%db^y$JRVL<+lXv)39kj+p5_C8I`uN-guLDsa52=uHr??
zjg_lQux+p9A&a5r`;T;B#DiQtckA}+FU|}Y&ncMY`oDBKQ#DfvMs-|Nua@Ni+({Ri
z2Sm`^wiTY|6w6}@+TIlMN&Gi&sXuSIZVnwr*E+V`hNaUFesc*@xHLIip^kW}Q3nC4
znnjU3&I|zEN_MM6Y1b`udWID5j|^Qx|I^jVHNBpQa_e|cn8CMT_O+@MH_pAr9YefO
z51T%MFBI2u>mrm=5B(_bq3K<pNAtv7*x~~&#h6FlQ0!O6xF8n+tEkiL^7wUS7Q_#Y
z{7m`3{rs<fUjq#I1b)o@S38^N%OA$V!#pM5k2;#t$J2H1R+GP^60M}slpCNKmwNXk
zq$E~vpv(<!q;7HX;HuNZ8$Re@N-XT?!82K2w!YS_0M(@{>uFEV3U<FZiaip(QLpjM
z{+RknVlM^3EhENfFX$C1umwGn*eVrcPbsHYIfyd;i;0@9%*au~=v8`BhrcT(3y1Y`
zV7K@FzJl=;tv9+W%E(BJ=DU($ARPh8jajXx^8St^Zh66s=ya3DxY9UYyKQ}yeG$Z*
z<VyNFm1HJmD?CD|TNtIaTqJtqJ;DOYkDIJuLc1kM_g5KBaE&_%>=!brkc81&{~*+x
zwk8YY+2E7u{R2O-0sq_Id)@GbB}$NVrdFwc&z3s*Pr~WDa+*;47dV&{bXRG)*VAHp
za;T-J|0G>>daXbqZ_mGQfecgu-Bywz4j^BgT7N7i1v^hD<vT>7pdRT|UvY~?i++>U
zy!fhJ0tLrno^FQjgqu?mzr_wQkx*anrGNHTZ!p76@3JdPPx?8^!_JAn3V!BR(@kpp
zX*$OU&_Xb#3A#LRpzFS<G-9AX&MI1os~}dy(`SoToZVQ?d<n<9^ll7Eq156|o?+G|
z`B|{Is$VE*!w0*(n&caoZ0~5>8QVE20iU2ClNqu>d`^|8D|aDf!tP!hjrvE@<8e##
zcHMivwKp4aq5Z@kv=0Kf6R18~ZQf#gvparXDkeb53=uYT60*sCH|js${8v3?pe_zh
z5<LIk^2aam#vy044(vbv%sx<|0?Vl#_||tPFNMxg{l_2lJvA#=?}5~E<S0`7?mFgt
za%oD9c2O&?`xQE~p<Fp{{Aer!y42~(WQH51zRT7zFYw)^R#7uKjU2iC=PFS{+^xNg
zfeK=mSS@{q{scnZAn_}Pw;e2cSwH%aooty#eO0Uuj36_IyujpP&Uq9`PeBv*+!}_E
zQZpfkH`YJ@@d$}G28(Qhp3vn5&e0wf+2egj!+0H8IkS8H{p}o6{t?qxZxt&`ocIB%
zdS7M+1nc%>@lt21$5@%umtufYOFF|Yta0yeE+wX30t-Q?Cfe}xOjA)->K=$fH<35X
zIOUI<KB~%DP1NC}z-8jV$%|Pd1{h83uaPAnGBH|y5nyI$8UqW*41b6}@Wmoye=*XK
z*rM4o+`z!5Unie{B7e=RNkrd>Sr~;n>%~Sj#OXfA%u$X>A#`iLTyc|85`U@-l?YR(
z;@J_)Vw)_ebZUoeG0D*hvBo-&kLUc;ws^VK!uE$jutYVV+SFHn>1R4_`##K@Cv@id
zn)qEhuL)wOMVC$vfx`)D@)p~sCjSr%`#-1n_$Yg}&3;k7Bklhuf4FsuEO0n7llQAy
zkw#m~SmpC@V0S{>DwD<HX@mS_B2z0C&64=3-b3AO8YTk<a{ii31M^P}ua)ty^D+S5
zPyW8Po-QIwW9v|326Ty5Y5gDke|CLt0IC5~8lzAj&g53{;CuaEq{tbAP5yY|I8?$T
z(<0FCA5+Lx8oTnO|4B)s;}n`XYcFpb#Wl4yd0{VyH)0Q^=9Gw7MGZDms6N-DHN>?6
zb!vrU8>2_%NAlX}Erxk~g&bz7aq-u3v8o2k*v0dcn$3?upqTAhNb6Js<EeKD!{4}E
zYNxs#p-i#m@N*&9#PuKQ`@nr-F{pLXF6pFa*~)~2mzVx*{p$~iuTRnsRXK^#mW+7X
zET^I1QnjHA)-c4rqJxP;EQH=`#Z>H!fG#_0<C8thFC#DFi&DSobu@NJ|0OzTG{E6v
z{e4(lJ6Fs;`y$}UCLjg^&X-}{x>jn)KGWN`R>-vzws{BTJB@F%sgWh`kFqcx4?v_8
zm+{YjG7^7=f4YN$j>_2Q_Q;vJxEVi0|Hdm^g5e-O*}3l$qrXZ+Z>nu~5qH-=ui`*=
z-6H@gEe2iAwBT{`DLeV5%oH91fz1o?o<x(VpdH!H0_pI>dDkim+c+C=Oe{H9kc@U-
z1fxR9lA->RDa=###CZUN$zKmFRGYqq#gGsg&+|6U009s`<@f=<r9e3yijxnAOX!NF
z+_I|$StfN#44e2T+6t-bxw3Hy_Klv{2%t8O(si2bszV5IU&}+xJezDu`R)7udf=2k
z@I+tQOK7!kDXHUQL}pCh#AB>ikRMG<qAWs&+-N02vUmFD@*Q*PTv8&I*TE!Z-dRto
z;p+fx?B&TW@KK?RxF$hr=~1Pt7ir#OHdFlc1@M8cMV+XiE)_V}doB{v9$s&cVwG`Q
zr3jjw1~m9pRq@8f6Ai;l|B5iMYpx~^G$7&YmOSJ>0z}dv)xc2qe;53|QtXiD{Wh>;
z$aXdE^EM3;>Q9jh?ksfq^2Q1ZRGG)^R@i`H8Kd`4xHJaX@TzCQ=;lZNy&V{>n%9Xx
zXZd~ry%pYTqm>fGVqEK4D%wY{*%KXt6EO7Ust$eZjxJs^PIiOoXeC&od68xQG!;<j
z+=D|rUR`Sg+WsaU2-NdFI=t>qTN<^S{aUYv4-O9!5t6C7^bzXD>pcz&6<7dVmmy|}
z9f2HhCFGh4c&?#@<qDN6kN$=dHYP@EKt>~zlzxg<n<lY0Yp8{g5!u`NZKwyLr~==*
zyCvKrcwp1AWRdkhtB%%sp|gtI{Ot}k??%ON=~TUvVHEnz{0^O{BiWXVSYTyO^7yrx
z`leSEK(5d4ZfJ3Ek|uBW*ZM3sXxF|>HW|7lc-|<ebz%Rjgu9Gn&mBWJylLL@Hv0k1
zL&dg5$c^^a;`3szDAdI7qT&aRzuc?f_S?F45)$!K(4{+*yk4e=k8fAzATcxgRb$Q0
zDT9#iIRA8qoD(1^VXQUJn_(|R#el}_;?of+8i+f*vCOt1^DFiO7|?N<gR<yq@5l*}
z>c_YkHjq2Wc1C#UhT{Nnfe3*169Gx?^n{n&#b}BBxEW6KjIW)PIgx}qeVtZ~%A;25
zq_Nc=EVUxCk@Z)4rG6(OgYsJt^4g84h$@3M2`Z6dV+0J^4I?%}v!khS=vLON35$dm
zYSlM@>LHqQ^rId-c5ngZ0jbY~y@%MX)!E!DU@ok`KC(Ck=T2g+^bv@NAi@^FNGov+
znVY(OY9a>~Mlv!E2>q9!cm=j2ipQTaBJfRDy016t4NaElH|Kfu-n5soWWag}jY{s_
zh}MTQdjj{nQq=Zu;=EOGm39bv^pqPB=htyH=B_ehAG!qEdxIA4EwR(!RAeqZbu=AJ
z$Ih>Us>VA5@6Fa_s`XOl4@t4G2sxzB<y^RZdDu`V5~*D-&7dBN@CdTpeg!EbyPv;j
z@S(1MIE?SxmYvk}R+tbb19aaV#bVJrmmiAwgF!Lfi%?*EkK*MH4#ae*G__wW9F{ZG
zXbLNbc`vA1cCcA165mq;l#*{tVLDj(0~+!#GA<`YZ)XCt2e;tN%XgHkN5e2iC!w&M
z@DfoEe0bZl%pK~*9)m+K3ND$@L&`75kt&!(^}6p5Teu+H^OmvsAy`k(w~%C^cL2M|
z45XYe>7qP+7FLqTlCCu_cMG2w$9a2$dLXnd+W)=R>Puf55+n8@=76RR-n<LN#%}Sj
z#m@^hE9OpIwI9HTwk-SwX4{7gB_)w80*y#dV@zL%p&=^IU5}xpM{ssSN|$(S){4oW
zrVVs~pohDgMLSAWF2UjZt2qPkXdHg+3*svBV!~y}8vV?XrE!&)^rlH|e3sOFYaM4|
zLjYOOnUIchb~8SD-O4TD)m_nWF+7{3WMI%?>lI6YU9VWZ=<cSPJ5{8|<IG*eAGNKJ
zh<$!G6dvH&*kf$0$xcU+(g0gHFV)l2C4GaTOjVE{d<eaxiz9OZd(72uz`Bntw?z<9
z)qEUsi}NhhSjplBoUve9QVdTBNs%%~B!!c1=aJplFeeHtoIN<&{5gX!9iHo(LgE*$
z<q0=vijw^_496f+orLP^3Gn`Tg5<$YKY+S-9TpX=6BXQzu&U^tPmHILm5dIe7*kUs
zO;T4kasD>NrUjt<a)=bvx_X=ugAwrHReiR;*$OCpz{Ri{{d#&1P8?)lN$oc0Yg6ir
zFnMfwB--SozaUvT&tR+m8OFE;Ghs`Yyb|W@=`#dH0TtkL3}BR?DY*Bz0j{O5kYwz%
z;uEP+rrNvCVw~*2lMFjfmP@>TO)#3W5!wXez`Ea4vJ`v>!Z_K)d~c_kf!8Q5T?bZ`
zQUX`g4n+}YSKogHxphH?TjkiF#0B3ET72+0VzimkQvt(A+WIo*+SUa1v~MepV^<&f
zj<8cDt#%F^>nZ|+>pGkN|2KRJ-|yrc;ZNEF{q8>ZJPbDY>K<H5pZF3Cb;|v-9M$#f
zm@QvM`Owo9oT!WGW?+=sOweprMTGlRLsuYI<R!nSGM?$%<8ZxJCZsXPSgEH!+^CKD
zVvGj6Wj-l??<p=e_@?-Z*ffh`;;T}LlKakPL84l=C->rgA00VAPdpMn-X-sqeisbb
zT&6MQ%j=I8sL~U~A#ETb#WJMNF81T3Jl=C)oR)HWvJ!9O44E3luGj;zTr+&O{cY-}
znW`l0PmFbWo(~RSm^g`Z18<exDo$u_W2p(49ZYkE`*Y{SuoC%$heo1wI?I?cp>aw;
z(56f)Z^t7qJ!`45X|Bvq;S(e{o1;e>EUW^%YK)Cav-L@4!D@=c^t1<_1VtC4qcFOY
z&9jG|i7R5gDxN-9EZ+9teixHKZAPidl4+bm)mjOdEQLwZWydxmRI7LNC+e?~l<pwM
zv=-Z6rwn)@8el@PC=`SPO!daLu=IJNIJPTVght))h|w7c=*y28DJI3(=P2DETMzSB
zSkQc0gl>qXKKay|6P%?Y0Yv5+ItTQxAB7fKQk=)?pWAW^h_{ENTjnoxqIkvqyg)w}
zzmY_rf?$?}sN20|AS7?-BBv{`>INTw>R#F1@Ft$ZMps{J)m)52+J%zm@)P8j=w4MC
z9s2Rp9MNY`6B?GDs+gkGT=4pSfVPlotZG{xIe#)^c<!1(byG^)!yqD2amHfJw^4rp
zQ2#Vy_<`j=a-+-A&Z!-mATMjq?UTy2=nJyyH__Am@g{#FwkZF8J(M8NF>5Yj@Yj;I
zse61a$s;$-74i)WP{yJA=msz+3`+tm8*?PwJ17kQW*ifa7U2x)zMU4~(Dv9vNuGgc
zKs_BLequp^OQN+BDD#r(bFf+KEOwm&PD59)s{ENNFq)>x9>4cYxV>|}PKG;GBM=iY
z(#?bwe8kDSt6GZ0!ncr_ic*71wWyPaf}SKf3vkI=zqaY@eMw5Y{pq9MZRJBgsO(7v
zCF9sZ>ooyrV;r8}{Uj_vIk|8Fd<H-77IgrjZP?ELp@-f&rMg$971##NehnEPBl3GR
zN^o+-g_yZ`mUZmOG4JpnVUI7=U&<1n8Eq)?t3!GNG3?|!Oc32p8Vt`{yI0dSdO%Gv
z<<%^6!_2_x(r<sRpL4fm{wU|G!G1?HV`Sy*0ycy+u^KVn`eGjK&mqMc#%gGb)L+3q
zzXzjmaWmZ?ls~v;t9@y5#;fNfs#Ex-g9FdTnrolc9fFQ^)&|{n3TZz2397C!0H)B!
zm`Te%IinRpCVtCqMmx@y&=2;h2Sw{_`Yf*cl-SJe;9#a|xMpd{iw|!25pZ9jGEgl9
zp^!U$PPiO%d;C`a@E2;_cwydqLsBvZ-c-Kv*y!DS0%ujl%%HhSs9=Cor@;$_KEVQ`
z!=vJQdzs5FEI?X;ako<CO-Fi^-=X)*3KNqiOllziOKc^GjPVtZ^`#(1LXv`mUhUEt
zQ?i;<sx^So!15D9Sdc-R_tZ^pKpW1GRUC_q`-R_NOwrz{Jx>BOwe&C|fM>!}PAnX6
zrw%<BbjlelBtYT2UD+%DA!4c-)+mv}*PnbTnPIxcjBQ~$46SUe>VJ8vxbNZoD)CE#
z!h?h$iWJ4yhGPX&bo94sM{GTINUHT|opfZ#f}eEOsQ!a<U)1(4G?`aEq4RYBRffGc
zfp+J)M7Yfx*cYUXqDr1O6d+3~+u9f{LBAxbitR)&)pvcwgW;#PJmpC<a3E_i*jPw6
z@P3F#3-V#vrJ!Jk!6Jcu6wT>xG#;_4?r%AoI^pZuEP+?-+u>`T4M|guY%?0Wxs^O{
z)D1Bnp|%$Wh`L%05Sk-k5)TLGDxh7EM|kPp)nivO9X<n~hdE_V6AAw%JNQK<(T|pZ
z36Kz8N=s98VidtPXSi^?h8km3Fx|K9gnOGCLB!BqU)?+{e3&GYkj~Z6AFRQOBYMo(
z>Gc#(<ioURL*B!PXBz(E({|T%@^y(d{z3E@3Uo=rX}K7#LD(g{l<06>@~Mb#%EWt`
za#b<32gC@yyVX?*ei?<nQpDbqWO;Vilxzwpb?+om$uWM1sKCQH3Y|k2qcW8AnSG6V
z{WpO<bwq5PT`rRDD2F=$QxKHmY0}nnMii^H)yQORy4lI{teG0KS+>CZR8MD5ODjzX
z$l}sT2gCWZ>|qWx4P)`#sm$G+wtroxkus{#4(Y<FhMGBR;ba2M+({#dRH}VGHePaW
z<)hWub?9={^2})PY3u)OLj6J_%?{^VtG1|LnoM^*uF8Wvn-b|xvsJwCh{7lAOVcR=
z+O0&{8EoqCUeD_gJ-nMPlz#%Ha@$(OECN6xUB6B8Rra^$;PoX)F4EY)Q?#&wb-sSv
zU_35Xgi*9IY%Ap&89M0q7mCpdeDy6r#(Nf8mQhHI+S(g|?=DKyYSh5&2i{53C_QOn
z!7L75)knny$(?y_IBxCARE$<ssBc$2-k?IT)!SRCR=z3HXjEI@q_G>fzBqXWQfu~e
znwLO$FH|e0Orl2;zrtB2b5bg(9v)?*zY!Hohwkpdle!=S(!VzcY){D4Eh*`Ok%z$Q
zDm~$-a4w{Tz;7HzGoQ^q?nMg1iTifT`AU5WI0pEqKj2iXrUf6d{oK4{>~-Y>V_AbI
zQJ0@qc9xdKgVN{&NqKm)p+$uR+YDr6t7FCvUQCpCEV?|LU%9!3iNhQpMG24<*8)wp
z6#GkB$}EMyd$rSDW;xSn#b+BpiCBZ;c$C=IERk%}VVA8OAob@N)u~%C@M(7iila$U
zRuWo3$K_lS%Cyo0RSdvR6Pf3!h5A=2)!)nRBA)5+vuoGOP4K!#bxAWIomqw@x4niY
zPDp-vEsU*@WrJKP!;D>pVWx(7flHElZ{D?Xksp9xTM#V*sgM8XDu>=QW;%Jvv~=`@
zKvC3pOM=tF_uFur#sR4asl)BA#*av6`6ljX=utQ>+L6*REj>}<?5FNDt1s{fG?!KL
zS$VBlUDm#b6oTS639{NR=xI;SQO}px2gL>SGB?!g1T0L1dtN6vMsi?o0qi@=WbXlP
z9xCdOI*JF%Zf1Djj1dval|p71#Ue{NjN+UzTD`Q!-11{sobbuadFI9h)=YohvDW}V
zna_|b?mDlUc4?2&&$@HYt4WBpE>d=SbSYPo=^B=TJ8#Kz<c82W6Za?nRn^<qY%1FO
zCWH)$b<VfeVDk*bsnA99|0;aH5yQ0zqfij~LR>XeoFviEfQ7legi>NO$U5O;d!?Rw
zW{!@ZrIM&177ROSR~y_bJggF(5SW2fYMeDbajL7}K2@J*m8ewILZ~Xwv{(8@Fv!k@
zM>;W$uOV1r(Za`ql(B85|M?BVp0co?yg($WwOi0C+N*hBdU53$v_mV>hXgAS%rU|M
z*9fo<ARv2=$7a$-*ruq%*5;X5z)0P&wo&$OnQtLa#Hw}*WdYNuYsD_QQ@4f~@6RER
z2zU{e&-~3NAQ|Sy44$le;iEC}61%zT%|KvkAP-xc_xh2(AaJGHr<VB@gXP@@SVEs?
zdY1M&@jhMlzrK(CCpPQ3#-sdcxoUUDhV*sT@O|~|GjyYi|8H-}#5PKXzDji??a#K(
z4_1j~#nq_D*nkou+rbXBA0k&sM?W6i<+*a6!2GSubZ*{rKTyX>D93RGq_+*H6I@N>
z5&<FExRidm(q*QYzQfI|dsHqbZMDgXm4{%$K+W^a$J(w<JO~bYVlfx$%D;Gw^wHO$
zW3;8ECoph7a8H8%u{tw&TgifHe!fyXtO$CS*OC<|z<~LpkQqcijwkQpc|PuFr1;d*
znnw1Heryci#_-7WDcq#NClTv|Hgge?ADA(B9j)da-4W`SfGC5UOkvijf_)9AfZ3PG
zh%q9=PRHev6E$<~+UEgb2nuxtW`x3Pnl}&QOl}OQHrdwYf&p{7E-<dPT9(3vc8rY8
zWFodS0IM^+;lUl{-vI2Ny2|Ah+R(Im1@O(zxIcT&S6JIMWy!?OfT7X*WIf`cltY#n
z?hy!7h$_*4w({kvBpff^D^Z(4yP3Ylq$=q#Kzlk=iFw*abuTzsj-1p<w<l&cYtOlB
z{OC+e>sUTpEGR2zvJyqs1~4=1*?lc2%8k*aURS{$PU%Q4kuE-ly>iQ+;Be+#B26c4
z!_#!T5Ea>CaMh1Lg!at^^0NZDYoRx<cXEhAs)|-y{&`m<X7}&v92bkK7+xgXo{90g
z89as;w~<S^0@w5~j)Vv_zUq3bf<yN`wDfD=Eq+YP!g*^B?dO_<Z-8=a%FIip-(W*5
zuzf4^0N3}oy@I&Ma9{rDX8?rZf7&#w=V|45K#PQs+;%pCz$rI=)D34zIlId2XE_U>
znaE`VhqXBr;r6R0Ey{gyVNuAEH_M-u1;RUKUjZTNO>3SYJ^2yAv6^l4wLWwL(l`GG
z1F2N$w;PJluG?CABR5K=#UB;1=ZzWct<ng0U;ot%$=FJFJ%m-qyHHHj;SFP-kiQ|G
zKsCR?u<x`*edoBr!imy#sqqr!T9)@NIS_{a3qCD%E!7dcUr)Lj(De!$oWoT-5T#e^
z!%c!S8vgs+<e8$j0)l%$B_;gej^*u;<6Ru3<K#rJkhEYR1iPW;IE1IN+N<f+^j+kq
z$hjg*RAEBl=Kz+`5h@BWkar#Fe~9X9o*@kb(TuO`0|)7*{GrcThDFmR+q?&mueCme
z`PDJ_0(zDqhcnA*Z-90y?eBE(sq!Zdwy23$m1samEgfOq-+`#%@7q}v4MTd|eOCq`
zI_f|XT=Npl=R*$CX!_&+ruIsJwMt%JHYvS5rsvy3S=(E3`8pZICW2)L+q&KXn4V%(
z>kmHI>Z8@5TG#<P#)h4`IB*AnGAR4j8W=r3Uel26<FD_Ii%mY4QzyPd^?N-$(Mc0x
zN?RYQzvW86jGqme9M5z06o-m237;Z6boVrIOhN3~P52e>y#a|Oe!NM=cHe*~YATtL
zFn5=7C7%dCcs7tU6_Ct&9gsh|a)a(vm)(LNy{pBO=EDa7<RXq+1X2`aO5-v^Pqn77
zZ7%8>!O(Lkn+vhYnqKSeGspxr`hL%eYmRFK0C893Qy6v^$0B4>2%_=qlzgujGmNkw
z)MX_k`=SbxL_p~0#?vKbf^p&jF|pd8c!<5B_h+sxVb3$t`Zup;hY-$*Iy3Jcs+}nf
zYw+p2d~7%@it3d!6)pc}zo&O`gRqao!9PW2+R2Y)ypSQ*6^y4EAwGo3k?;fZUH%va
zV4!d;^V&sZ9-~L;*6=kICjrD>pm43-MNqt6Nkp1+fwRXnSY%FEG9x4UMp-1cpZV7C
zAcd%=-w5o9@D2qKdAww|(P9EENs#-phkS%U9HR<kfxY_GF^e^{h<10=x~DX4QAZ!j
zsp|;=TQz}b$pY@PKdwx$P7v4bYLiiouxK8LS9%6{kyL9ENG1ft<HR^vVF0)32QJOw
z8aMOiR|+@p5N77>-*I%u3;L+K@s&I}UyvPe5-A6zLx__M=C1W*AT4mc<z1217b04Y
zG%_PL-P;FNf0&z$3ibmPgw-&Sx9(JzUS@#Yk!_mYjO$p6E-oEllKx)2%wxcq=A|Jd
z#jN>=sLlue8Wm5j_K#@^3h5tl+&MVY#300VuY$p%DU@(eu2CKdT4w5(fSR>sGmQ&T
zpis%{EIQ$s5d4w?a&2*c%Pqair+es9Wfa5sHk_o0DCYP%f5!w`C^2K}&jj&+%RSRN
zNt9q?OevO{HX4{akd3}yze2uZU5^-~0|<Gy5rD;_Uzu#=RT7gNZ(;c<=xDa&I6~!R
z_c>P0l*CR>V&vA&bB5vee0>$70|WzCNX1dSWU||o@011EFI&q4@+z*KYpjvM)F9NA
z_bqjxbV_FgR7Xx_RVCgqG81awev>WJ2bk!He}LCzg1bIvVTN|<hETzI=24}<)$9?^
zI($?A#Ug^|&2H>mumx@qBcDuL(o|e7ptZhcvFB#Z=sKwSASD4{kXC7`_5OX@C0qSA
zQ!_vU9nD&~a(g+gnz8HBcKoUJozp1~UE76Uj%$3cH}JlnT1i)*4VytUOzKb1r`UK=
z0?uj7hx!TVfT=rTHQHvP_O+(m5a@sPN|dI}VW9#00tnbE)av2_GiJcLpm6UepE>+t
zFM2pw6K$B0E2gbfk742jO6#kwa?ALYZva$BONeIY%*3aVpZWeqi8f&mU-lU@g1EOb
z1r-V=k^;8IaY+f=Xrl1-l=xJZRf=`6m{4-!OaM=wI2hB=9fgE|nDX(=G6pu)@iXZN
z@h$kKHv-}&mgah`?ewpBsIO=*a5BQAm?3Hj!s1&h@pM9#id1EDybkP0-y~%}f6+G_
ze^%LAwPeZov|;dM(_;6lg!+7JY1Y*&B<-c5E$~B=QY3naic`)7O#3@BQvS#d^P&Cj
zr+Nc!8jbE^8SjZt=cJfTr@-?`(YuU|^=Gft%HYu7(EMlI!qkfORvD7i*5QYxz4i)h
zj+}wfO??6?v*oEls6flyW=S4ER(}XPLr-Vg&a;Eb@^P`DohT&S2VSLJbl}p0Q&huL
zdp(h$8E=X|Y0Q>q0>?WyQE{Zk%)Z%#9IVpMCWb~}=-q_=On|rT6}e_-rmUnr(V9l9
zzcPx0@xh4Egwi^yHLyev3kt^8s9R;4pK4XsBJfIP)<I+L8*kjO+qhz$?*D6CccOUl
z#_7-<DHG|a5WM8FhLa_XX0G7Jw$5p<d2k!QeLL6Za07bR<bER<D0)BecSR9@4$Q6b
zOZZSyqoa@e$wkJ!ZUp9WwHE5Ao^?B9SVJJDJ7hy;pSj(l4|+K5t#%I-0gMh|mEFLE
zI7<cTNr`X_7H605iU{WBFG;N@tWJ8qaJvo9Gu7qE5g}IK;fBtT)F7e@X~ngvKJopS
z8plL=M2mvV+aY(4fhCHuoYGtHO}`8zbS-)sy;G>YyW7caFfyi|t(3(1!}?$SuK8O7
z07K`zqk!=Qcz{$nCo$yWcI^ga8>hn*jz7niqE>6`H2zF7Y=?I=mxG!w)*i4Bc&$8@
zlbunehgj;nr<B@-Po9j^RQ2k~9K19dM7ZX}=0<Yu3KPl(pB<PXij0PwIdqwT{r`UI
zqMoIobLO_0$MGlc;L7q3-g&G<c(aWD<{Z(d`>G~1v#%Js+B_o(`U;+|HOOyDof65E
zR)5dNUNKaI{c7xPPKJg_kA#WM`5gJPbqSG`jTj4R%OTKZrmbL4R~D*EDjY!Th+=UV
z&$hI2f*uI;5R61}yiX1P6J{=v;%b)c=zzX}Q43?+e^MzaW=51wiqwb=*q8l2P1(m6
zrO`BQU*-GX-Dr!;p~n-`lMoJO3NPks)l#=F_Cfv<!%rH-Ql!Qc6zS>J|C&TFK){b2
zMI%Z?#rvyvq5>+<KC`9klp%c)AP@G}Ye;nS5!EE*bzA=uUS%Nc5{yqOx>z0G4HuRj
zjNP!9p?|uT;aM`LJdVe5-bqS#0P2ZFLyE7G;P~{f;*7T~GMRfqyW*UsQ_s|Ah>~jx
zEW(Y@XtFvWiy=^k0?}D2)ilPLz9AOyotjRq`0I~E7<Xq{#_=i^!wu5^fK&`<Lm(#n
zkmT0ppUa{!H2?l?i^DZ3UK!1M-%dWG?8nJ0`y=YYZk@IAc}#D3U^b-Rlg^CF^8PYw
z3lgT4B$A}?UzWM+0@6*2!~ZD+&*K@Zv_`sNBRq$ZA{(jKNOyG{aDY71X>)_!QuuCb
z!4P*KQ<KuG^`@hd{oDrK7U<-&m}9JP+D!3GbCPXA$cC`%j}Lo>gHnfj*{(#>i*YG`
zI{K6MjyV)T!nP(0A9T`B4KKRAfY~XbXy5rkMzBO7Tj>`zerpZARJWnVMO3vWWs$-v
zHM@FZFi-yS7O+*3ANWLfm3e)~J((3~a1!R!LoGUwsl4xcdBh$qhzl3IgDF+)+w)}}
z(E0JfLIdc+i7v^&$GvUW;t;S9pl#fOYS{K+%l%%a=+v2Uaf;GfB{>iC41<5J6V<rO
zSVDc5_C!o{Jh#+-=io8??UNWix$gX+gXG4U>ZE<zUf{#WIFxoa8YpZ)t{;#&_<26k
z0%(dSQ~Uu_L9uBtYA|2&W?GB9a3sbGTKM2N2x~h{lmLg8l?(AU;G(2_Bf%g5YnUS2
zWtwnZAyGVVOoV$mq*r6z;Ad&<%ul!h0fhln{(V1n(^L2jqDj5F-=MEr!R*Q@f9R?}
zQR>L^Qg=-m3LcJ30YpO*z<oP+5&TP$znp&emR1aF!e-Nc6vpniJ#Gl&9@;}Q`UmU4
z#=&*QSxG1Dqhlt-e&gTKdk32Ovbe6hdb*>!pv_FAoH!XDtqL~3)o>N5NKpnQ5*#ZV
zqxQ^8d+S3^_EZfi=BiKJ_75sq4R5?-&Hs%N%W;(m&UnB$xlS-C0*s;jvl=Ai=?Z0T
z6a}afNShU7{jFP+(T|(u%`hQ55!&cqP38-FV<Xdxwbj|`A`*@pi$V3-BSDH>r*>fs
zX+Ek{P6_N@I)=)`2*ix#Ja4jy#UWn#ewaMb!_mZjO$^9bh38hK4vqHS-W&_q;Q%{<
znIDGX>T)Y`<o))bZ=X?oq5v{x6WgSBPMZwyFGsFXc<-ufU~jhQT?KltgHdOC*Uu=g
z##9yNv2`a`{6i|dnGtGPYTyrd0o+jO?&`8Vmq_G%q?TN8g{=1ulfi_T!3!dJ=6AM~
z)xG@8yzYbr(ct7Zacg9%`7=`uRnYF!CCpwt^nLMfGHN$hirME|${XoaiWxz3>^PoH
zjinvJZ7)7-nu4UQri*oC=JfpdPV`G}9-t`LuCUICG>6Mkbw*1TOzhu|J0<FplP%B(
zV1u#|+{lGHvcHo`IiMj%aaLw>c-Ljl*osGc2k1^`={56ejUu+1ZHHkS*o{K^p<zpD
z`dRi?aH_u1B%}Lga2dXR^o;f80-LxV?t7Qqk=(uPLa=y)K{VN&qMl<TPEKH?emKjE
zGoP;se-a9}{P_XaS+k8$)M<*>xHam2wFB*-I+d`LaO=a8pZ;AHLyV7YH*IECn^1Hh
zDjB0m2pdrt$7P8Mb4+p4-<%19#UYfm&q_>cCH8rBH<*01`;jy7_W@C@Py23&srf<$
zO~x8EZ0Q)3!q7|0XilE#zs2s+A>~?doWY?xH$QM`y$VECoz<B15hvS9QP66CRIWuL
zIb!p@s%d9=(aMr&HqPtRdUG+`NdM#q_2?@EZ^PvU2R;ym6mOh>>krUF=;@uyBcwSc
z4sG$*y=FkLGMRHDklj(R0B8P_z2a<WO4Iwdr2RZX-e47#b!85@VwawB*u{8sHWxAW
zAJ~AGg(`RJ@43{kaBtcHPmqWGt@H9!{uk@YO!mn|EVYv}h{yqRJvx0Jkg|!4sZJzZ
zvti>^+y`U%XOI0i@}Q-(<sFfSU*x#R*gke#cev<&)voD}CnL|{3D}svW;G;FJrtoF
z*3h|hEj@g_O$gTl>gpM@Yd90ZsXkj<RiuIhg$3_|Frjdzb6AD6_}^~-?K^kI=gf&Y
zA53^Os8OM{zT%h<#k<Mfl33RbgdVxLHfERZ3Ami=l0Z;pRFm9;l=_q46XV$KV%NWy
zu)z(fz_%h!m^kj7ScUW4T~!c8UBRX3c;qr&^M4fqO$GhSaOf}i(5559xa~|3)-+h1
zN=ZHhT|DoAu;n<I*R8m5=_bK6L9x{chI9Cq@^R3mk!8Mhd)7s<Syii#WE?jeMAzxY
z#l123$S-rNlz<#QiARo&Fa@#+6Nh)2w76nRzaJpV7)^4P#n!=IvvtFw-=#o@?LXV^
zEbZp&E2%B4jA(PSUDELa$UP1wP&<T$k|iZ?vPNTV#Zn1d-h3Qt)mcyx_BY~G+0X7r
zc<uZC*{b=>y4=mE!G~|NyR_fu@Ep>=bwlFHy7YDF$=>5H$ZmE0v4maxiI(Ie=acg>
z!SKQ;JngJ9MT%uuLA6_@F4_mv{hQ1d8eqd*K%n7U^Z6v915P=#GRtK0c%tgu56a#6
zNny(3B+yNYD}--1`D{^tuvRL{axlESHw>I_EYcR8!m5AmSd*M}qqn{%b`+W_v8hl8
z$k_5n5l)&OM?t`-H$Sd?yVk6=K8g&~*qxywzHOtx4z+Pu!_UGeM6DG+pgLl#Fk|zV
z9hcSGS*RyCGZg)bNh{o78OIUQ_HEBHW>oEwi2~R;efsp?o(3jeL+btSRz9u&h7cu8
z@sh#H2p1Yv^%#&;wj1CAx1WD~0nL}km`)HAoQdGsLsF`hc^{=X<rhPoFj-`K*7PPU
zc6U+Kpk%t|ZpC2!F-jTMEC|BisY_GaiRMwy{4h(K1ViJS0z$@9I%&pZzAp^9refD_
z_+|O{3f7k&<`NJCxPM{REn8Mu>nqD(4T^P8>XN$SVdJGT1EOd-2wZEq=g!y#H64vM
zq9Ono&je6~%V$0XkiLg!4c4O0?!Ga}ix>@*)+QTgmtZ9A78G?C`xU%~Sl)u}N4h_}
z=-N4H>0ZWkL|36C92o(0tgMf6RL#kAMn#JJ85OQJN=fI1G|o7`dC=Ux$eL?4;Dq{6
z;#lv?*X4cFlKRo(6y$%}hUCfnU?pJ+j0-cMpGmEVq@+v2Vp(EnAk&1=n3^PC3z$-g
z#|Z2g7ZJh&Ic;(j3*EZI3GFh__OJ9>%uw0#WLcr{lQ})bFoj*c{zkHc9Nja4uTz65
zX^Kmx#zIB?%7|uMimR{xPwV&)j6IGlYF^Hdk)Y!$kC|G$m?*mynPG2{iAM0Xk&H#2
z@Srp(Dh*FOoH5=iy_+V9aoaAs2dfUq)pCd88qEtYtkn4qf{D2#c>>BYC5&DF)6wBP
z3RilY_uK(ja6wD}dcd{ffKhO8bGv6h9V^I42iZ87ZevfG8!|~t6YWDyu66ps``_Q6
zz3F?hUYG@b)vC`W-ymO;m1rLcDt`pJt<qfJ!@WNx7}?e>j|cctR7Hrbd4v5_z$>4r
z*@V&IN1ur_d0}hpr(7~}pBT_mU>wKboO$21As?X(TzTJmC;hXP4<oau+x+JwH}h#{
zU}Cq-yUg7Oc9u_~<fJ3tdx%?dEtPzSA=`+|P+;OeM5Ll_L1n^2)U0d#mm2TwZoS$)
ziibp-l;1bn*%qt2?n~;){ovIqi?<MreXg&Hz4eplU012{*wl2M%7(~+#HdbwZYFl|
zRjAC1OU+7Vi4rXijfS`iFUd^rjBo)#G+o5Bf@{T@@UE8=MTQZ55S)y;F*(G$;V6Y0
zIL50Rc#YGrRh~V<!Sn++3)3r1U7rQkB~q{$)n63=z25h=_-0q+@X;cN1K~x>0~D9r
zVh#MDqzq)XGXcQwS?wcF($+7G0A#L*CJDV9gGx`^iw#+IvkD<IG3yB_=#qS|AbKlK
z?%S=B+IK__ED0DV+KG>YnyGV6<Tv7JgrF|D>%Go#<<O>R+@ebRhd5Nbm^%tG6T3*6
z(e6vQRilXk`wV#vSwW(1&RiuyR}MZq@I6Ti^%22aK@bS<Mki&jXccD}u=*05KIe(K
zyVu(jUrz{L0=k(R(_kfklWPyf84y3)5lvcLXVh@K3uvs+)2tL9+oET59m|Wu*)G<I
zFt`#eSvsLrX@~UpiphFAGSI*Ity%o<{Ja6-#o*edbJ)LZ8_#*9a?Y^DU|^HtBZ@4Y
zFFXw7DLrr$x}}-26h(bWgLc2?_y}wpbk>k9qewoW2u1aCAY)7!|L&ApvV)?>L}G;3
z2Uqniz=hM+QxL`D)j3Q34iL5ND<gU{RaW@b*yYNN8dWUK$sI-_p`K?_&iD{SN$Cs8
z@v(rby73BuG>b8i>{2)1?EJq-Vq^#ESMS0uxkT%PeF<gsmhgQ|x)^_LA47BDcW0nk
zpj0<Qb*K7a`uii*W(M)t7C)19uUs+I7o>4+DIZnCXS4N{|EBK>ZofT!OaWPe;YE5F
zvaKXoG#fZlUVAglSNFEPkX))7i38<>?GxWf*DiVQw<qJ%;UQRgiGK)i7zZUx0ne^e
zKBu!6$+}z4wav?N;;CD|ot<j@bX(k5`-5UVnDLKz)m-0*0C}P+B+5$;I&EsJKl|~z
z&+r2SWBx9JdLEonL>x^}-NHh0@+iJPhD1r`ViAt}(PG}Zh<<#W5Lcg_11@rogi6QO
z#OE*yXT_U~YUp%eDtD`GPs2+@)+JvWy@QrR9@5TImQnD*uj!{lQ?q0P0EB)$dW^3K
z-sLiC%WKNcuwYcyPESxNp2_~g&YpZ!((jFC`fdAA7Bkbx%DUX0SW2QdHfM1LlD`^M
z?Ib6hwp6!@JGQxAOQQsJL+)j`o!l3qsMq%7w4fslr9h!Kup5I@aKLhPSH~GUBkUug
zE*G6ZKmsP!o6l9OjHea%Ns!~4KxTNiOf)dYdb%u)ZAa5P?-kCxadYDJ2<_xSv+q|x
z`GUL*A4zs7$)2=BSu=WZ8DY(WiV2=}55bg5elA-tYhp&#jgC#?V%R!oRA>GG;&!dd
zM1V6)nqSU6<Z;k$3H(5ugDi18{Rqs@n2u@GV)0ikx2WmR{x~2@bY|9#xfIy@4Cm3=
z4d7kiwm4kn8AeMOT6-)S4d}W0i7WB|-TT`Hn;RTut*&m;VPg}i^fEB+nNn@~ZK_Kj
zq?#|9=yRO9Uac=L6~9I##TR)i?3cPKa=){i=UlNXn+WJMl1xf~5Se<9ysh5cSDw0I
zDv<`9TODstun2~`RS9K{oiXmS%pW~qb|w8T8pdFVC#J@C19*}@E1qpX?Njg#ML#Z$
z8FqbIy%oCh3W?L%0L`_1_5=1#d3lnylfxjnM^JYwdzO8HJtQ`_TblxOdRhx&?*4(H
z!1Vbfs)LuU5g1q4N#jP~c`wm*xXJ}irXIp#0_X<zRB~cY1YGmI#2rk>QD>ENVyzMH
z!jaJ~M34U>wdLOrQ%g1qe=-m9Zr>`)Z6e2f)cB<aMU(d<fC<9-%oPIWhrW{fu8_w@
zk2KPFK}B@{w|)eJz9Z5Aq`Q44X_8;-JLoysuI3PC8Kw!Bh!1+D!+49I5;E4f%;_bo
zu4Uwi92b^gAjXkmlu8fy*MS|pKv)n#N=2LZ{8?sk*Z4h9qM_49ZtnXADI^9LjJv0j
z>XO8o6KPfDOkqzoy#t>NYrP+)bYz-C)Qtp3`k?yw{&<ZYkp+uwSqjfMsKX1a(SAIA
zQ6KHoQ*^6$T}<e-EJ?Rx3s_!QlI33Qj4<Q<c(K&?xk7H6b9u-N(lR~LIGxC+0cZ}F
zOPCb*ZpQIsN7(>?K+S6G4BHID(nbPtyfDLak6L&6)reBYzd^(qR<}iLXBN;|Vnr?e
zeTi9HMW_+l`%N{a#P?r3)d}R?(#DlW?jZW$VG4z5Ij=oVDVr)}-{392bQhJ4yTw(?
z1fyKFq5Cd3zToDU?+r&pjRk0gnZfH6459m%?xJ^K&kff?u<e!esxC&by+frwK50{i
zUFJ$-K?lKS;Cx~i&NT*t%ZWO$)Q=p?PA)?5wCcZVfJx68^BBRQj0@*}_C;jd_#BV^
ze&WrR=;a2;a=;KcTR!T{)NaY;KzVDLz>Dm<D#u(JKj2X1m3q7ty81ZR9Hd^kV6dad
zVjaqLlLElTUxirvM7Bpr1DBtZ5DX`=dqN~&;$$$6J?x@fGxLxY|Coj^0!i&9riyRq
z89&6(er?>nE)6@q+lW=Q<++hBF1#+-gQ<p54Vv9EiZG;P^_vZv@`g)zrU1{cnDvUy
zb*;CJR#9TchT1pYvCQ%Vlm7R+TO*#i5oG@)_{v3dTO@YUC_A(#_p^|-&lkt`<=XCt
zNcq_^7k7T>lF0LUk&lRbaJB-==r&EuGnzm}j~vP|l(0C?Cj6;l62r^!?_Gc+O4qOV
zBHES@eTuo!cSw1+Yq3fgE7PjawPb-hyS~ZnXXMqjK_MlJl<VM~o$_G%E=66$C1n<D
z8g8DkeglX>t;ghI0nyv})Ha;HGJ(-N2=x#e^-VU5)_?=%@5QOt(?vtfGw;WMtBrAH
zVw;e0zzgJ7Ru&jHg~#Sey=K<bg>|rVOVse&4~GY-^#JgSk7~K9QVCXi;T4$wB*G(}
za1-f-ANR|1u_7zVU6MwW36P!YoNa63)Y-217INjOqPajKd$Q8}hZH~sP>@rIOle5?
zdRObK5DeAE)>U##?|1p#6O8~FdybLRDGwhW>}4{TQw8@LDdz3Yb}QYK0&T&(o|k&!
zs7poEZ~!~jMAsD%j(3i{`F2(qjZ?TfuNg}p)=I+%r7nw(S86}aWE<=!mS(_S-6S4x
z?Q*DxmI@GGnK*AvG=*J`uZ8|68DfXR*};`hxn4DInda<_B?qjebr;nREjVN{WNUh*
zn&N$@Ky3=l6?y})6VuNv5k07cOwbG`l9T*LPDxS)Y$&I_YuBcIb5d`3vR}L8Q%yI`
z(mKqO2+BPpaV~6X&Qs`XbjF|5XD;wO^M;h1I+Po*{OglkE59qyFphoC!ws#r<IpPS
zpd{q4wfLYSi&g-r^_MLfD?V$BpgrTSykP4Zi*x*U#jNQxPy?h=YD{%sCi8YZJ`Swa
zFMThhb4TV%T8HaTGm?TrZTQr;Z{IJMeLXwOzgM<p+V{86!p@qLICwq|?W9!1W(=)V
zDOj7i;!wquj#>lk52AK<yR&C2HU)pgus;mW`MKk7^8~j5CmSosTR=lUWqm@~A&@7i
zd*Cl6aYM%Zo~BLS<J_GJweBler1M8<!3D9Oe|R}_86V^3$aMmKrKIG#)W^5aLSTu)
zT2KeI8^hDMXoG2G0am;rqWhXE)jZ^ZQpgG6_L!E$!Y#NuZx8-}xCY#tVOKZveJ!7t
zn_k0rFhmd}@$TnP9Y}EugP|N?mzAWaqH4{tOw*fFCKs27q8nj81KCC+%VRE8+D(S?
zZVx7sbir`eT)F0`3{w``9uu6?S3Db<u$ec?-W(m5_+Npxp+<N_rJkeNsE%vR#gaDP
z4`-?87mOFaINyMY>?hAykW0>EB(dC^2`eoTXMfZIYaa@E*Ia^hSu~aH4x;4jbNf!d
z4Y>=Mn2EO1Ru(r3vu2C^P!#C#9{7jGu!~6_4vz~FQ3T=PoP9?(f+i&ZC3~R%$dHDE
z|F8NtMVr;IFQb)t>QiBE&&)-78A!QyhsJ(MVgI4bSPk`=tKZN+6i9s|6dr{KR!T;s
z_Me`J-Bh5pp0xGy2{R#L|6FhLWU}!Pqh%=N$-?V_$9RhQyMBG1OluDn`}_pR#i4b@
zS-FiEm@Z<U$jIkH9gut{$Qds2ZgapBcrI&l^P2<i2-xH);3sH4%L~-Pk_BfJ&J0n1
z?r{rIKIA?&j^;Xox`VP3MMO}5e2f@u(dm8$aMf)|x2mfl%ZXvkzaH<=sAa*p<f0h_
zw3aOT<aTAu3r<424^hIySZ9bKG4bD%U)~jMdwlWGBL@_0n(>}zM5S18`6vIwLA}^i
zY$tCi&Nrh;v>GxAdmit(k1o{O`-t&3yQ~g&>*&62yLAK*FTJ|a$mJaD#Xw!m%6J%2
zI7?>I;ko_RCQawP3t%tvAd#Tr;x?(M$Oks`o?}eAZ(JVL+l$RI5j>&){(gBNHb3{h
zLI12yHR0h?Xi|-77?YCvgoxtxSVn6f3lQ6CKrYl!{9LK|4i`>oz3-?(a(XKGasgwG
z6H)J+zPUUJ&5?Ce%|fO?n1wv#z$dqTQmT!e9w$YgsHv6(xorzRC-OeYDy(j`(~bWN
z+TqqwE07&eTcx2ACCWn1b2@wkp9M|kh%ysCVPS`0qqC*kelIF@jX5(egTAE2%E9pi
zuV8;!=M}LSw_7M+_`(ZRh1HuG!S7q27tmAT3JmnDH26`TA*Msa>ukAgz#(5P-tLl*
z1r#<8KwA3x<Y;>2W2BZ9@GBsE2Lk&p;~DhXYE{-2UB|8M(>r&_xP4a0^%*_$wt&dL
z_-G*l>1H@vK+d}Ln)@BWMe0z7m%5oenj^6Csq^uKa*#`&z=VlkB6hWPv#Mg8aJI+U
zJVf4lAA>#TTHE4|P3C5Di}unTfd1AQV1wQouhowcag=PwSbpV~TLQQr;gBf$Ty~8T
zwu@4%scNIT-HUrn@PA5;{_2GkouZ7YSLpe3T$zDb?uQ00CEgo3__<y$c-1|zaHidK
z9ZU(C>)SKvhq0$WbUz8dOQ{h0_a6DaU%`b_ye^y_K6U4x`{d_Tzi{Utb$=$OBM79E
z#qWIm0!{{X3=~^M&k2NEHP1r`4^t}yp6uDrH)c*hSY%K>UHTj;N{iBkGf_d@Ek#g^
zn=n#Z5vpdAjLK{A&ibVFvxl6ud6xqkWz;)@Fy{M>zvO?=;Apv^NAh(1J`it+V))2D
z%PH0m;=--Jjd1qoZ6flSsCT$;77Q`6j`k6Ln2-wU7{rU-=w!o!#I;FykW~I&h$1VN
zlWC<0)dfQ7On`U8FjufXg@nP+<}Ar=xX?!t&N(r{QQ3enEJ>q1Y)tIjZ~DW3l+sew
z)<;n<zM)Di;@%*Wg=x3D?B*F>y(mHR>;81U_%`QghoMWxhs^4RBiImbK!&nOc;?D>
zNFllbp;q3bE&!xzI@3cW)hCeuv`IkW%P+R-YcpdQ<`K<WMnsDq8L@TS$QIrabEs4o
zWYDuOx4k$q*)tYIkYj_>{J=#p1-aNk>Gh$TUvQ%dq6<iP>e&ll!;_i6;2WG??8AlQ
zJ<FM0PM~k%=?lBoyfuK6Ws3C5e+GyC5QW9ytnpT94bjW+?$!J?tpd@OU4^R%J%H*O
zU>#rotR_^-DQ)37Z|bjrKRUI4^Be-qLrzSkK7*Zro+&?QXY}rkt>7y$IN0+WMQErH
znf*48n6kn>s8>qKwABq5`lfB%i6j^~2t>YF4&8tC<o&;xdxt1dm@e3|Y}>YN+qP}n
zwr$%sZ`rnO+g0zI{KGfv?$zU*<>2IsJQ1-K%SvdO%0{OdjBrPY7@-g|d}6XS%+%Oz
zw8g2&L;nt|M3aT)&KJT|-26vX^f~b?RkC1kB@ZT{cwGvCiFyfGWkN(c^T>h6FN+26
zbhPr4$E0bme=eJw5f8A`XM(p-T;k0ffdU-Vvl;{@d%;1SV!o<z5Ym9%Y}(Vkeu*=2
zEjATR3LEgR2D=~V^+C!<rCk@Pc;T^$7b2_J|9aGK28k98e{Q|fF${C<p58*+Ll#Q-
zt?QFoKT&})*k2HtR|~@yv(;3k;^+k1wtgpzMlx^+rUZPaZGL`0NcG>p-yJ@^QlBl|
zJM-J;^RIJYICz*M4h=>nESVB;tI?_Zw&3n`=783JWRK^A<&<c|KSH0P!BXLY-;4Nj
z3<7XXguyabEW5A)GD%DMUtf{PTPtiiRf0j6ObDKDd?ORjA@+0#YNjlB!d@;{YonUT
z5u<vuvu_m;Wb{g?%NMVxOH+7038F1HOTcsj<LAeP24$T^%8w{i&%9E^b53fy=BO>K
zwVA#q{{=pQ)+XCTQE801VSY8auw`G@_YO^>a718B7AXS0`+hi%1F~7GjyN9V7~7||
z>j-XBZbBmq+UL}J*8|71Ca4&^ukgwfp)LWsI2O_}*s#$e_tr$`r{}KFmBiD=NA5Tf
zWBH^|PK#`^<L)gOsTJ<S)M#>`hi~`a544BSb%JwjDo@93vPS%r*GquCxycI;V>T27
zALz{JCmC{#l!vf`wtv?oEn|S8!vFJ9&)}Fh{bG{v{h}!~(lxocNV~x8+hsJ_)p8Oh
z51jWN<<;_`5ls?xN7NIlCa*60Y}#`NkkMvZ2LyXH+qzHM|2#i8=xb1XE6slk3i)xY
z##|t>H4NpM(LU_HqSdZxNMp=R6-IrrOaGzr{@g^_G0mv#-u$Bf8)?Q4(0kt=_8fw%
zyB$?RC#PkFT<~Jvppe^<^}(Lg(T1i9S||8C`7Ohlq}YUdy!I~?IGI4U8~3l?ucUp*
zo&uTL7--7f$NYebd2?ypHP;Jtb31$Xa>&Y^A1z1NdtPXa;^)iT&@WE4;yypmt?Ex2
zf1N;bP^8TPYb50TLk_4{K@(@#7;EDNU7_?jqZ6C~!#3$%eJBwq?@ZK^x44-jEv2(p
z^dYx1o#9C+&2!h9%MK6<+_!VW`@s^63S(@+yOe_Ej9c*3Y4ohv$XeW#*fo2qquHJ>
z*DpRuh}yNAi(?w!<}kl&Z)Ivzt-lw78f)r(rd2&|6#wwd70R6+5#zYMOhgw%!9Zv|
zPF?qgDr0@UY#Uj2+afs7>Qir=W^@9ia+QZXUl2wCrk58HrMq<NGv<!>7PR)gO89#i
zHvN|}zcKYoA9NIn79GWP`-t{wsO|Kv5FPFpOSmA0JQ=^1x51J*9a~*2NvDedMiowD
zV*mZmEfsK1=V0J{FSE?zhmd51ZxhC!s{qMUjo<8rNEweUFGaTfmiJ0H4_{#1sHCZe
zZ7)VRgWO@%uPrON)Xu04)JP{jEMSfZc?M0QG%Bghb6oMYC*k#wVm2;kMn1AC^k~Dy
zyLoY`5|`GvYMeFii>ubY-OuT-3+STlnFj#HHG*(_!RR5UABnD<M(j@t;q+pX?>}pa
z<6|Us=5SgE?*7e^Q>~Oqt~QqR2))HT+OjP}6I7x%jqlJ~7+E}Y*Wk_MGn7nv2iy0!
zWd&orJtT|uK;VQ?mzBJ>+`8HR@^=M64V9#s0Ovd+#B~ATh(`ls`)Kjqhcys>$nc@b
zm0R~&l5<HtZNG)N8zpJC-v*jOtM^0aiD<!#GEwx<lOMz=VyhOahvPhuG^&jNC%{d1
zBN?NC8o$hZVZZy~wr`k=5(lM#l8YAVT8lvT_P>Oo$Dnz-Rj0pK{NYxa&ydob-ivWo
z;==9f3|UfkYXAy_#yiixL=inH077JF!xWk;5q}4Ur5u{!jz_H)&>OA@;T{QUP<S`}
z=82_I``s=xzkH^&h@%LaVU5)Gd!f6btd{0b$h2JO8m6jNbWCw7k^xz%Glk)R8Lm&{
zXSL-R5k!I{4rTwoTtBx!W<fF-=^3On{+NFbj2Ns6iRvRjvUaI7i6O@7)g(_+LjZ?_
zI3Mjy40$o|ifG!3LB1lH!O6F|a*Z#xPGOclt29+vT`73%<BCeWD~UB4oVO0y_gj2h
z;Hsuqc*aN=iq2?Exe@kOqUV6Fy79$R>rL*mm*V@HW!QbzP*P8SbvRAobRFYvlz;xL
z5?M?kCCiir8W1Bg0usP*%3dJj2!39*EmOk@ml`1AUn?qV&tN%(^5LX%^WKH+G8-u6
z=KT)K1(yrp&G51aiy2*%Ylfma4lpT^lC^(@Nm-DFw1JV+^?JXC5x~b{KX3c#5N;0_
zuK8u^U;e3ivDgr~z@&JD4(CCZk!e}En#(Qve&8O^8S)zYDA7r*j*XAs!Q9@Ljf)<P
za0Rwev_fgjp~XaaN)`Y>Nc>E<o!t13dKw?eYyhzV1E#e^0r&OCHJo|fw;Ol%>_rw$
z+ucKE<*hE6)fi9QjJH)n;l&8Lv)$u7j4-8L%(sXz=C^9%k7D)G8f}%`C+Bb#*O;F4
zZK2<vUW)45tW7|Dr>tO?WhF<BANFAZXj$XDKk((8NlZx9nX46d9Qx7|`~AQO43yV0
zQf4joy_6SRY3bknjrIRVrQrt}q%o^X`(V@VDHQH0)hXI|_ReoGY&m~yn@<^rds?aO
z-Sr_vF?O1wcA?6p;nA_N2#SW!ZOSO$W$-8kwWYIBaC!YQ?6TP8Nrq0sjc2%5pF9y-
zcJZjvm9K}<N7339E0H+*!1s)BRCqyy;T;WIYG7X=<?zhNHOA+c6{mB6xD1?QdHfsm
z!tG4V+(=rl1r@&lxKMhQvB&X@V`qj+GzY?i&e_#kV5-0|rpqy=TpLq3F#k0CKH}l4
z{@hswLy|(2$cErnj%T)xXV$zgFUAlirK*>j%GRZ9T07g`Ft4PwZElz@^8X8>Q-m@j
zjy#+i+A)T2^N_rQOUo=o5EDD4xRUVdcDY#z%djz**DPI?fH$ejDm-6lP2g7PayOJ>
zY{jy%qz<FISb-{ZDHufXtc9{?G_p#J91h{Fm+nQwy?xrDC<=?){Pc{?`Ae^2Q>W{O
zmm?pzQGe!5^Ah-=bWSVG2qf)p)Q!Wo`_Z_th!=>CCb}}lckOU?p|!tj45vtOZQ2xL
zSh-JseXD@e!xLovf1T6r>!%Wh0AHa(HA0IJY%2IRBtr$n)=0a!8xphF>cIj0U%uLZ
z^MFEG9+K?yXJL}e!8AH>#jNM{Wws2ipOGgAJVn~0g2pi9Q5rhCf7yO=&_d1)ot3!G
z!=HX#k}Zr-4E+FQr<!9e1BT6G-(Y}Gxo7^fqFI-1UKpPpwe(h5&44q%T@LHzZ4ftt
zqZC@tL}OtLaeEl|*IPKMR_1$F_gtt2&mHNzHbNrUUoN6%i`sZ)hnFf{lMc?JfHCDW
z7QxeeZzQG-Jjv1HS{wO?v}C9A0&pFIbXFzGhKTjutTu=E41##h;~g^(x>JC}B0lJf
zqcK1>Ss?kv*$or|R=-;sWz)fXeeNBjVGze-^4_bxcU(pUe~|4pBi9GXBy-kad1}i1
zviB`VqkuYLQSM|+av2)d@YwD3L~=IoVI<<W6XmSXgpS80g&07~g>?zyGc5j>UzVs*
zH%&DQ60?5x*Cj?lj8qVLjy%i55;n*ykd6+4AtE6rRI%E?Z^>!roa3=XaRe<~cc`DE
z8@@Up^Ws7~EaJ+<5~+<Wh~gs0jV5@H5J4t*dMftb4f__W^-dtcGzT}iJ0Ts+EiRP9
zM4`jlAURT)UzXkTHLgE;nmwd^2Mpe;<w?4bl+BgG;e%|9_wuIwRb@=FaT?yNFE3dA
z<cj1pdP@Sce+(HkT(eXw`8KxHJ~|_9gy^Gd&zG9Ho7iRJoF@C=5C5371Csa$nk$r^
z6-_Jm=o&BDfA358N==<4nI89rm}ruoQAvaWqQ&Ssgv}WhY7LGjL#2Yf@YIUrQOBE$
zW<HNf%;P}$W7F%T6?So1b7Ifjq;#y35(B=YWeIK%c2S2&#T1b!@k<}BFxA2J7i$AG
zZNMI<Y{?R+WezQv*3Q{4)b1%OXavy)fCcZS`VZkrKvsxX{{8tOy9gg--RY7A0&7Zg
z*j1zcRo-O;GEP}-8er#gtz&YS%p<jvP1x`W+pFJJo%j&)LNrp}20<bbN{MXtVPL}T
z42AGoI(7NtvX>VwHyed~?}WVUKr)K-Rg^BsInnP>V6R_r7pyA^^JFQo&4PJAX`MsN
zyBBc`fW(ge1|#JL9oY$fDwwQC?>0)T3~tJlGwPMFN$?`%qNZuY6Ln-MT+5LS%{qc8
zJSWZQkLKmR0<<dcLIVWB_3qZAKEA9x6`8CcA$%O+Z-Wg3o4d`|S@e+a@VgaMQ&51P
zt$R=O)QP_cc4=PT5#B&$j_K;*DhNo8xHg5aTDd4dW8otKdsB2h0Ob&-qC~qC)Wlft
z^6{5NsZ7jL04iX7Ehysa<v^l|L{mW4G*R4<e;A2^O`GbU%@Lp~%72dx4Ie8>YYlvD
zFXrk9+6N#lw+4iixkQ-q4~lutYraHDI0E_S-lEq!ao2&zHTN+68nq1xwBVgaX}top
z`H%|Q%d&_--WiJGembp{6>W%3)qBEAb~^Dkcj?|bVzjL#jF%4dfrWNCQ(Tt3C7#Zt
zv$tng71GF-I9%a9Y4ljA_$)U_KR>a$F<Tt~_sD{qPMb7i^+HQU!h*`fIe|l3SWfVQ
zui?OUQ(C`qvtn9*vAiEZ=c$eb*EZza`(ORvqR{YrQ|=Ym3`xrT;A%!jgiB;f1zq|m
z+c?CsQfPrd)|sj@PVnp*01Ze5z@l&ghT)6Tuox`;l0ehb!+g8U=by*SxyG-FI{z1v
zweAD22ZVVWF!WRA;GUgUZ9_j@Wd0BMT1u9$^hw|u+!CmKaTBQl$f#L4kfK5QHq5%t
zge7jyi1_!Srl9tu-NNMskLM;47lr)4IQ;N7K@5*zeDfzl+(qTN|3;~TsAHEhM)pvO
zcl$D6j#gWw(CO>S%bszQDWvJwUZ5{x^d6Fg`!LJ^YWgpH#v|cV1**+R*E1{>RPP4~
z%0zPBNPStvj4@qgdoKQmFgT|CCo1quX(HJep!5(cV_{ME0C<$vUd7#=e-x#KJZjc0
zc(EkQB@oJE$-_p^ldHjc&~36=ShL5m7J4%ChzLGg$5nlDh^9`sYzI5Wa(jg|v&mjr
zK#x#1(K&g`sCx>A2o*E7e?gQ6<dbo;lq3I^L~;zCT>eruA1kf&&>i5zt|lj`gO}g)
zYcY*AfF1{Kb_3+FIqWQ3TXDdetPjOR*h3XW_Ob7s;3lhq2mq*i2xo7m+E!wSB75@v
zHN1#h_v!manmIQjz4B(UA^+?eN2SiD_Mu+*VXOC6a?W<886kMye%!>9;zeOR*+Q8I
zIe4z{5p*iMF3I_Lop~AdWTlSec}^0gQ}|wYvXbTA#=)y)Q=eA=O@ImNH~9x3QqlTA
z6;c-KjZjt)3>+RR25}l)wV6c1dWHi5t^{U8t7A;9d~z=GBh2v}hZ``W?@SKy^%`x<
zQ@f3@JYfMt=z!sb&D|${W9HlXVY7$PpqY!$ouQTs15cL4=CN`nqYDjC--!kTNUI3v
z%Y+!Zs;KWb0c3!=B3#o5pv*Ic*Og)<Isegc+i#$jIQY_<&}1B{_(;ks_g<1`JnY3j
zYEhJdP(mez4rC-85D8Gww(`@;2;fyQ+1GujmRqPi;b;_+HPg7!XyS3u5B#t_n>S+^
zHNvE|u-xU}rdq?oA@loHMX2(1n98o0x!gl`-qtfDuTy{GEye;-Oj{#Rwpw?N#?Uat
z%hE<rIC8`-xJGU$o~NIuEbv)8rQ}U0y#YDR42#9z><Wd5?V#v3|39bI%x1!cMOMMn
z%_2FJoKSGayLyL?pd@pe%48%jP~-(UNwFw3Q7?s>8D8{t>D7|~%+HIDRYy7QM_|$$
zt~koFhEXqkZ@jCci=Wi2S4d5md|p9^B8|1X!slt$H@~I42(=P)IW&R%Pb3hDfp9V8
zl@>aUt_8n<sSB<}hDJ$Kakr{PO=G^aDoEK$y15zTI~_9I4K5+(SGMy45rPypDnVZ;
z>C|_$6D0`H?<lVK!#?c-4oa`wR)qIjjs*{JYLc-gn-ZvP{08Vex|{-8sFTy3fIS0w
z;|6ChpE<TOHlRM-SSe!)ly!9%UPznvF;8jOspOZO`y0b46!H!61RX@~+AAT%Rk29v
zVG}>B*qRhSNTI}M=kyo9ru(lU(*aQPFh{NFz-^_Q>PbB&`O+99!g+Y^(mw>CG5U%p
zS2&gYknj=x5mj2~iGD(}SWRZ@LCmk(Bs{o?Y;l2&P{S~G;Wv0Q0BZ3&ivWWl*?U^@
zWsCy#8X6k|LNUKclzeGo5VB-}-Nx0$bpI(@7g|SSGS_<;dd8@pd&l}BtDuS;2rJ*X
zf+-n4%RTZ0IsT6In|E5CCs-5zdQrB74DgOK25R&E)I8S{wR|?Ey`*uXs;X`*(fHeG
z&Lk)49~WFtnXL2T&#^58*PgB0%9;I%*Zju}%;;G<xT*Fdg^xid9U5YQ!w|xMlEQj-
zr*8S+QyolS%}OSEb>ba`OV+{lfCl0AD94eAr%G0Cq<VFdsX}$^z`nFXb`r&Z(1ah3
zI>i1IsZwQdBst@BI*_RT&VWQ9R7K++Xi~imVu>#4wIRFCQ@iT&3QEw+j`K{BHKUAE
zG$5$92hHgg7U9nJmPmWUABP#x4@hTo!~MU@{i=m}*bySU$Nrfh8GU+580%l<f%KY1
zJvO7(1j)|n$$K6X&I_4Eg?HZOJ?@-cq<A?p^&I2Oh>9GYdFEdiQf?`yc6@6*S|OWl
z1XuByIZnBDjj}p%Z_Ao3DWb@w-dMqL!~N&ji&(TT61C14jgeqDJuiLPo5ula6?f1Q
zxX$tfHI@hbmcXktq&E5EPo5)&@7g&OtHXv6Q7NUrk{8Ki<C4*@$yc`e7euE)r_Kxz
ziD2BJ!O9`Zq0-<hNDfjm-kBMQL?WnPk6FLM7Cg@}(TE4*J?K52;`N%_RXA3%(Gmr*
zw?2kwfnGkjeUWYmi3K_0;^r+=G|T`@q6`6^b8(YHEMwu#j<JuaaK@6;WYf-a;HoM$
zJz3_pPmpMkU`bC@VgrpDFdK4Kx1v0%z`ww*D3unynaO?Z9U^6PK*F1@zY4^juEo0q
zuDMjVVu@%gL|NW}ja+8X#YsIUKaK6>6-Pvf9pc@{KQ8PqanUDCD%kcnw5$UTvj*j4
z=E^_6Jk&vS60$R#a)hf4u;Ua75u~=-@HBsEpOCGN`(8(up!5dC2C=8;v*f;!sS#=i
zd26Ft*0u?CnZ?Y>{--}|vR}GYP09Y*KWmrNED@X8p%YOaS|$tV=Y=#`=-ag%^RD%k
z?Opn%oO1LtppU1XNC%~{u<0WOean$^g$WkAYyPf-A=UofA&HD<V`3R^R0;Rt0*jhX
zefNzuF^374-ea+ha1;kDA0{o&7$kj&P7wS+X%YdRd<Y{g*18!t)4nFU55vh)BImGp
zxj~w_wq$z#kpAS{^50<u>e>ESh0+h3;q7Hs^_li#6k0E4umtrw>YyxnEwRB;%jf)k
zg<9Q^`S;LmOiS!NPX^=oDXsufmiBUZP*wE|j53{r*gWC25Wf^B6~tBl#bGs2Z~{j?
zH?}crSLX^lv<1_UJl`6L70Z7JZoXy}Z%h(^!9-XS**G5!JqE(JssYFsUFUD7o~GZE
z2yO!>p^_?90>9g+DASc6Et~R`BFXfJeUV*xpnv(S#a}CBzfUVE3D_lJ{mAmd)afVG
zL8RSLyR*Tk(RQ{j>jAe@VQ+^!d-zN!D3m+5zyAi}7=fFd!tS7i6^Lp|RO9?^B&Y<n
z+yXcf7vSFRr_bq+a8-Qns7^9Kw%;|g!2hrfwAgZ7)A4skGbpdE-E}=<9IO!bW~3XH
z5k0E3by$sA)x{q23MaFNi-Tu)<q&9={XDqZVHO>j$R|3FtL$klQXPgE5vV{KE1+$o
zy4$TC2IO_SpCA>g|FJ#8su;F~8@aVwrw`ly*M<6so(5T^H-2$KY{0~Y#Ju7WOBKXS
zl(ynb7LWdUT9%$gk)zjc-fh0VJUz*Z4668FpQ7PQn=&bkSJnq5e$t*}vo{asKx>W*
zTQUD_rKJ#?R(>&muJqu>R*X$p(#5+prK2T^H+iI7fM6J6K)BQK|I_E%^?S3Ll`jV1
zt61WUrgs!IX?2e$ZS$s6uomo16-=)G)6d@srBZL2T*qs{p)#&E<ziwJh|O{e^w1UG
ze$d*hY{J~E=U~+n?YgsuVd|14Sgfu7?-73{K#{!Wx}#Hx0<BE~jZ7TyLZY}HyNy_J
z{<;zGc%NHV$*b>FQ*j@}pK$>G$gZ3_)v)t@u=_QZyP7D95#Y+-C!a_{TcJFuo4lef
z_$s;pG%e(5tMD!TADfPVMi-gkTmz~RzA-&;ZS`t(nI4>U4Vy1^07|K`&vt2QR}B#k
zFt=0x1>snrqFZYo1bMaoM#Y$fu{B(kziOnKtjuMoa8(bheiQLVqvw~NQ0w-uZv59W
zRul08aq=fJIH9*q_D!=Xf+O-DeiS9rW)9zn!A!Rr{M_82Ci3Hn6tHV=l%rLcf`Pu^
zsI9ABAApeNNd2T!E=)ufgUmlTE?$JiX;}rtlG(S0NorqHpl)oy``yU^D$A?hGxGCj
z2-Oz@IO?`R(_1pYX)pE#^b1MJP99C@7K}e;anRN8PrdiejAW&m&keAhpz8Obn*1ck
zh4bw5)tGd@Yy;Va&jj;&@vfcI84ds=UUk=KHJ1>INpwT3CX8+b&1yt;k18dzl+lec
zMoMB%1JIA?nbB*WxEb2#3x#>A&%Rv$ri^*XtKj<|Xn?qVyS{`*63m%EM*L_T=&L2K
zLmSp)-<R`KHHshFaw=>a{MbaO-Wo@-Bis76v^a8=BX?PT;U-&_B*zvlPrGWWUx*yL
zUSG8uN?%nocL6Shi5_IGI#%CIc59HSUQQ-`B^RJyi<q!A1AnfK$sv{^zVA6X-aZ<O
z(|71g7COL<Y);u|fmUQAiHN_i{~2Xrc}XZY%j-9WZAD=dy^|bSilvCC+3d;>b(O=e
z&)nds0k9mGw+J1DT|8Ow@5`B?ThZz#4b0*BDKa$J_hU2u+MyM@;!&eLuUl}Bfey0=
zgi5P<N%z8DYV09;qyY{F4O^tV_~+t@;v-L_wet9)6?ojmU+azas}3>{(vEfLi+NZ~
zfYEont7s&DR0*>WBb4dY_PbbqS)yt14`6||!4IWfTgvMscn|?doNtNdt4p2rUc@4)
z-WyLe%n$UXi%-D)Wvi|dZdeLc0!j{d$Tpsj3?Uys>xw+qvbiS}x3ej8G35X0(5xHG
z9lV7<eYFdHYe_K6FsXSs%QCz$4|Q{e!@r9ae0<PP?l%1$y_oN5hr<Bjl+t2&-kO`-
z;onN+Dl3&0;Zx$1ht0j-DdTt5@s;iLQSc8xG%?2eY8{;;LBFTerJBG$fO=TN#&mXR
z(5G3wl8d<PROyvT@Ks43yeiPN)I)<IQc*Jnjd)aTLcoil+xZo0Gs-)0jt9$uoD@uG
zxb97Sx}uU6<A2zE;j`RWsewyNFw@x}6ws0)+H@Jb_&9$g`;r=9S5E!U4=wBM@sSc=
zCD3d%esz)`N8T0VfTvC{S$c${_F$3v;DGub9o2^SSv?F)I)2#o{YQ*27fOdT9|pAB
zm&x%Y$$C+R4tEe*mRt^7ISh6tl+YCYHFFFhr~aiwCrHvM8b2D(ImublDcXk>K)ITh
zeVxj#B=<LROlI;ycKk3d?@b9tmW$<Hs;;spHLOEh%MHW+#miNS*&I^D*h+8~qqGQz
zM*4Kgsm8qDXU<8woFX1baxwfHTvWq+8K{5Tp!nk~ZkzBgyq*qVwMSq0$SMa=is1A+
z-XWxVNYG&=jl+#nTo3zr`4lEs1OSk>AJw8&5RQNBP8bPQ$*pP{VU2^LR6{>jbUwn8
z$zb2tcJcsb{L|(hvY5P(HqH(cVF4qS=)FK-_sX`Zh8#lbqLJOJS;-S*7(5xReZIKf
zl)2qGz2W=sTSaCpG0)*aP4?kqdO748q3wf_aM?$vSLmV@X0)9rx@329YoVV3-(1wW
zV!P1jgAYV9c^L$$*;ucHyCz?KooJuMAkXvWN1pPqWLpi@{KLEZz?TlIw3?@~G--@3
zgc5Y%AoM!W<9(aTByvF7$xu07x0tM?yv_ODv&#*8m^n3ghI#y+Ypz5d+^yQ{kAOH$
z;UL|6AWIf!QG6E5S^d8qxgnn6C1WfH@3Pnh9>~6*J&u`^$`Ky%F!i~G_hKEUpDDx2
z8Uv`k`b-L4{vE@s`GG9OqT5Evh;jj(yb1GD>uKdTZsJDH;ei#J`A;b0V%|nLUW#8~
z!D$MD?H%;uf}{{RLxLfw<HC&Zf8B%u*?GXxfO7wW5QMynoA9WD{XJSjqvNcTWo#z@
z<~S&-cYwF&wH4;fu2SISXLrUNZ`S_P^^a~Fdo|Bj;d4oO7gj9*y|}uOg?Es6hD&Ih
zO}frMZQ@EtS}yYu)N!JH(8{Zv@|#reQc9m60+>~@*b*phNjE-i+)M~D0q4yL(8_=H
zGdlTzl;>JM4N5q@F1esFbGq%4Ma8z1JMl+&E~10(gO#LIU+8+xBMikk7sb<)uip{K
z4V4uKg;66M#J4m~y~K4E3N|8PAD>2qkwRhgF;xIb@_>h+DkQ&!$Qj;gZu#2>1xGK{
zzK&_HUAqs=$S*hZ+ul&*JE=#x(|^=^bTW(#bAqmp4$DNL>isJ3?0102y5E<SQ5=Xt
z?^H=4w5VHY@d+ov>u*wK_*D)jYE_wmZk;6v`@-CptR%=gNzuTLwM~gtC7_ZN(X9!6
z2UKdXJkz1DTWkwnrna>1b1#>H>=B5>h#@2t^l%K=?%*MBHuOeM(WEPtju^>91DSzl
zih^+tt{#+PG?Ci))idz%@FEidF^s{uvARoY=ORo9YWH9)r%hK9Y5tEO#iF`ELqFOY
z(Yu%Bw$h1i4Vp@A%|?ue3{ZC-3r4?tcZA>>2z^#@x0u4V2N6d?!?e&obxi-3_c7>V
zStpd+lp1>~(TY~{`HUG;7t9C#+=xH&n>yZXsv;9y^=Jl0^VD?Kc0YnX(o9oE8%_HR
zfzr&4H6fjJ3L4O{Y&aMa<<%y9slJKe)b2c~E~BmCotv!bh*h_Z3G9qbL%O!;TMJ!J
zVz321%X{7un1QN0lB`4?@6zC=Bv0#_a$jsapjb^Pt9Y$yx}p;(iBe^9K0Wm6M$ckV
zR2**apy9F78MsQ8h=RbUE;?N+=!SV^uQ2fq<j{iPC-eg|W|{gHAXr<1L<z!g*j&I{
znc+Zlmo+^Fx1x{z?xRr>o))daqBX?BTX<#qYs-Hx&ks=CKpfG&*%4EdR*xg751^hJ
zSJjtFAX&*d>mA|Aq4o6+TZje>A=$=n1WG~uv`Vy^bkyOLG0)f9JCfBB6ZE>ncRjXR
zt`L2;N?j)agPQD>EYqNw;f~LZD6b-OWhX9!e<^-53g=V%KHFt!TTCQ=U+1r#d`Y)a
zEYQZ$?FNLQ%fvX^@qb6N>c}g7nzI9*P|y~~jF{pGfwYGBAKxUij_nlLAO?4Eju5!0
zD`KvTslQ$h-Ln!SseMX?Q^!`wlZX)$z6%sz5M@8>4f^8oP%ad3n!yX$OO_b{c)F7I
zQW*FoqQ#@m)L*VThCe~44{v#XV-BJrA*wdWHmL9Sjp)kiKSM{W<G>KWuiQBZqeq&?
zxua@RE<o{NORxK11o8{GFbqZfe~D?YL8YkqkSAODaK$a!K|y%d9f)uX+?dmx#Ft4;
zxyTpB8h*fwzdd-R>4hL+_q{W%=xsZwdm{!}nBsS@+0(sGz9lGa1Q%*|=W5t;N*(ZH
z;I(1tZ1Iy*1aYeZay}?3dnkaG69@~^ded3$B`aU^wJEV-|Kh?|U08<>%@3+T6k-c3
z1D=8q>6y;T)<8^5HOegV@|Ull;XktC^H<>Q3p0G~KvDo60Qkaj_UYf3Tr{xZTw3oW
zx4WpT!6E*v8zb?%RDAHNsd$&{lpqBymW>KOKa;yo*&E>bEqQa&iNcG{Vg)S#02QW8
zj}+mxS5Q|BE8sg6G+BUp>B;?(U!(mlm!RX%!e#rH*B3H)79vP&je){607|<i6cY^7
zyQVZ=D?%zkPB=nHjAolaX=v>@SL_uo;x*SK%lc<WrICG&p4rhoFGw&vi@?(h0eGsq
zYgFFWM{aEX1CTI3BeO=3`dnxaSHY1SgkmQp<$6mBeX1b#7U%uD&06Un#o71}f0K^G
zOe{C8BZ{@lUcrbpfK8_@gORcK$EQc*?A{{o6wl2m%N=4b-q^)X10lz6@ZtesJR*3{
zJs%T9$!IY{S}UU89_CB2f{#wN@Ai~GY9a(d_OEo{MIQWzu2(3bAVgA~n%9m1R1vJn
zBY?M2@+^;g`IPRqD@^ZJ<V6`nKSU|-IihyHG^B?3fwBjRY#y2W{Z@jyAlv`wYZ>^3
z9}uAY&E<qVtUz@8aiLGFVRCp9u|kpSbJUz7@8Pg@Fu}fqj)1B!$G#x7D*WEJh7!Wp
zDRs8Y3WWxUq(ntjp|E7>XMmW$hJ(HE)0rb6OTEcgP@ZS==8lsfYk61Q-)=>I$Ti@S
zY^-r#|I3`YYqkX4JeE=Q_neKE#DJDD)tCd1n)Kak#^)nXO|8oDjI&xX)oHeOXpkPK
zA(42dtbV7S8C-5tZuK<#gLG@@yrxwq8~{f+R@>V93ID_2<eAaZ&xOuBC3RQf+_L$=
z0w&t?1rDO<_vQup6r(Q9J`h_H#I2@T%*0=H*UC9wrq%%RF0JqOl0@5VCr>RD&SxuL
z`+8M>vqB7C`ZSE1Q~Hxv&PJ^J8VVlA>iN~VKT@&Q<x(vV{b`_8hPFaQ&UhX6v2psc
z^;>^I_=<fS9sUH(98dPir=(H3aF-nw&?S3|bNO+7*tKg{3S&!o;o`x?(*W{s(=tWR
z01%6VAw7}j!&{(wCUHQ6MEZWsZ59Oym2;r1-pJ5KYHb4;_2sDhCXA6OZfDB=2Unp=
z^&Mb)f)O4<)eJ6YmHFT*-digxkIA@>veTD84Tfiru4m0&e(K$qh!WW~_9}>v@U$4u
zM$$8-l+|wjw4yk*Ti6hFoZpAm>F@DGC17``ReWK9=*gG&N!M4H*e{Pl+_q!KSP$dn
zbfX~cQz5Q58W`vQEgk)T)9I?QG`a$=6A=IF(Mh1kr^_Ta5x)+ZKwkmhy|!HG9qup0
zxa<yhOXx7W2Ke8-+pevo;bptr+16|X)_}XFA4_G}A>z*shpq892NLY5->ZN1C5I?L
zgU~tx(0Z>k^fyE05n;>t;89As6#;ebB2A<LVec&c#=*;@2P|3i92RjVKeFrb0J7`L
z=M`Ys`OI+5Sd%osu)-%e)>D%`X-?2rJXrPJSmVsLRz~0JxHu+{5lcjedzxQ@4QL|%
z;;v4PLfjp<o;>~5$+`I)APp(%s_C&&Gpff#e8ND!cpTT}*^MhI_#>#(!Fi}qffbrs
zd+7#O@gI;2uoPEP&E)^<VZfmSUC6rdKU5^F4p%nEGuO^H8)WuPU(q<H)E17Vde%eC
zu)!mG$;iOU&P4k>>I<JSY&^m=(3ld2BM&bU8DWl5{aL|bW38=~W1^~q#bX7<1K|i+
zjbGOQF6(oC0v9E^J=S{g_8FEsLaNE6gSQ&rFi56;X*UzI(l$ybjWa$dpA1Sr7%$-J
zsnjLC3M>oZ7bdJ;8s0Y_9glbYMV~-{<qIao8Xe6wpU!G3Tt5GJzTcQa)ym*uy?|EV
zjVJCk5tLb$XMW6_M4Bv<?%lgyS-xJE$zB}CqHdzS<SKD9HJ@{8YkcOXR#g7=bNe>e
z_0XIR?<2>ANWNg?-U-+lv+7}3C1tGo&!Q*1AD3)4z;7KAChgJ;eA4d1$=7et6Op~g
zK*5kz-rDDt1N~jBj!9Pe96K^f*gvico0wcUbX|RQT-geSS~GmZox$a#@cirbCpG9B
z)^^6>EO!dN#bhe0n$k8#Ka%=i;YS1&r<G~Pyw}?aEA_lzOM+tZaN~HfeL@jn078Gn
z(w2IrE3<gf((V2Y*0#be70R($a~vHp;ef<Xh+8U&f~xV6>1kopD;BAaqAgtxc?fOY
z<%><bG2i)Edr}8~iHrlm-Aep>bOvBUHYR7X0xJO^fXCLEq0nGT$cjdeT-C%Rn$Du5
zF_O3ogfI8AIkv*hJ)3NmgCITzrpioyJHO)tVlGzjxhWx0eBcw+ah~#mnm<CnsWfox
zYLYHX#S@h`!o7-w9<L1i=luFSPUEmhmU!dbF2QLBl<HOLkzbA2TQ|6^YNro=9ZgEW
z_if$S(B>AA(EBAtDHM>)H@IH{-|8e8)_PF)@dMFRIy;&4M|2$%egG?-H|KJh{d$Uw
z&GH~ns7TXtPv<c*yE(v=77eDWSBx*xTzi-SXuk)8^`3<@yWBse2`2YZyL;RZN|G(m
zTL>wYlN$x6wtO$o_HZMwcbC1WLOT#)>=}>J^LDvkTb5j^6*>L5N`u@y?CJ{cWbLJ)
z!4U5Y@I5=U>z)#9#NFC8`5F<#WEB$UPby5KSPTFK!GW9F%6$EbZJc6?<p=^6U<Oq$
zl7Fu@Wbl=(7(K$er-YwKEtyeHwn+(2TXmVArcf9OV~eGs(p5N_LVIFO8`8#K{Qi(u
z2)m^RM;Ngm``V500ZkaKUKisA@wXnAka8$$$j&DrbO6kS9I?zneDhaDklQ=TU)cv7
zNU&xhr!bY(h3s_7G5KrNXT!*j@{u*O-M?22>G4In8%;-^*8uNyFP0$4u_18VyPF-5
zCsdLU%(ERi$^y^z^%P3ze$4O=X_DHX#yXBQnUWcNXiiJ-;fjMnbC&~ag$Wa|2apP+
z_xf!Lw~jFc%<6lM<)v0(c(1uC!3_a(qnfhkGyE*thZC`>?!yZIwBpmO#wJhO3zB7E
zr>@160E=2*sdiMmgA=vF<UmyI4<*c?WJ2qX-Q2O!3ay$S-tnQ}H$VMjo6}hZ*YidY
zEjf5zSKd6vcBNvQG|pOQ#+`ob^Onv~Lb2E`2Lnxx)Kxg9_v_=hOv)qz#&WnIIgVEu
znt^gfQiW|=;Zx}Y`zRE5)h!1JPU_5)$bW8lVk)OO&d$qcHa`0nuxb&WY8uT&1Y@X!
zk-QxwK>v9>@x-Ze>Rg-PEOLjE?`0Tkb<bDo$J*}KV5l#!uenikM2ObC7yWO3AEVZ&
z3#N?-3-3{j=9c${koVOnru~PaYu$x(EhZ~1xBlMO*rs5FNns<9j|e9(FyO6r2|PT3
z+<?077fs2C9M^5(|F7FAV|YMHg8S7HVk!y$MQa7v6^fVBGFvlwGSMirr{EJErEQi{
zui^oS#liW;Xt2mYp^gHVgJ-ld>%^sj{^=Umrb#pvs-@8i-I&t^PM1cnio4Yr$wrsm
z!oVE7SH~k~Ap@nn*MRBS2fiOZxX|IM@si;Fb^o&6g~}$`lsO8I{U20#m57X9TB*t~
zWD8xE9xuAd1fY8O6vXnMJlnQ4@4<bxwhJH}DNsK4hBpLB+bmsTr}nYa*!|7qcf}Lv
zwmt<Rp&Fq(#0p~P6}GcA$@2`1!fYKlbGeIC+jEq_q5$f`CFqTe3k(pE?@o`Wjeyi`
zxLshobkN=xEJ4{iTX$egc!wTxX4=Yj9Cbs|XAfQw!DR)?ViX5;<vH<?9hDa0>b=9J
zJd|BF{0N&cP9Bl<CfA|EoY42iOu4GN*flz%zXF!+bjtig80XtMt@V?Gp-Y2Zc;#Jx
z;et8Kc1<K}=1ONyhr1zwFvALKeB3qZ-#Ac=g-H)yf|Nkq$fdeACeFR8=)Wx)F<|!X
z|Jbc>YMX0n!RN~%ge)OW=1}sd#H@`@f$GsgZKc3j&v3M;=EW?oLZN{(ge&n_%siA+
zjHw5uE9JhDv_x$@-85`I>yG1b&!eR_@Y$328)^0{fDx1K`(Jh;Qvl|}kG4jT;yr+-
z#&Aw<@;)tLW^;)lEcg$Vh^UrY`d(AcB3Lv&R93J5F@ErPL9<3cfj<I#8^X8%Y&>cD
zAE7fDRPZ!lbQIoOA9(L9;+@KqL{<D8mPQvyc_d-N2#rmxpkR49x=-4<t}vbXxd1th
zBd^6TlPWG>{-JK+%B1SSg*y+XC5kD;q%GmZejC!Gbhc348PP;FZUgazu?!p$4UNBI
zJ&ue-YLd2cQ3A!3IYHP#T*21*3$)A0C&4)KIX&381b-Zb=SQ9=!;IyubY^Xz{gWxy
z+S<mNUDbv;Cyfy9=x|rLg_=$2a=!7a9H*yZxHXpM2>mHW&L6Nko}*dOu%$>0>!$8w
zPGg^{m>b+-x%vm_O}^B(LdF(U22jCnM#i@`-PlCOC*dO#IVZWrfke4Y;kQyY4mKrW
zfiZD|ufQV^DhEjq+pw}qVnh4GJ@EK7mk;d?PPErmH!{=s^w;gCv;-OCn3I!DEajY}
zO5oNhwXKAow4X`j*+!PK#QH!%avxZCY8-t6Ranng0B?}J<e9%(#zucI-~0GggHmCi
zu%!7Q{jYF0ij4pJq9KY&SG7^~z<}uh|Jcx!YmjzXLEZ}#XWMXaJ_(RyIf=+5;4Om>
zmC?l8Wl#NhzXw8?sG=X`0j5X!W@0~@XNY69sZ{>SZFhxuVWTCcpYTEvWyt?Coiepn
z-BKf>re4(!RSWkMw|I#F{J%eMLz}Kz2vwQ5(h7cNVU^l3wPzXqu?7wb!T}O^TX!^!
zuo7NC;9GOCf*{3O0gF~WPG-Y!%V%AsG~J{MKlNCM@u=M9FJM9WWrJnH6|K&@t5^-u
zIjFubBRAtU<-%Hkew={jLycgg791@~03;XufKw6$2^L)6y>Z16s4yw$2ZWetEk@QZ
zT;1$lmFc)KZSQ+t%>W~)l0q6=kQ3s{n>M!pT*DOLSWX#K?_&|@RCb^!<(wP|39^Wl
zNd2b@935#)1+xRF`zN2_z-lR_S1UMDuGqWV8~x|81}qXqM8{^CZG35pJ-P>6=Dta<
z|A0oMI@bm+XZ<uWHa}yVw!&srFjT-&SWW;M!5lseJ^z*b_@;)vwpNbw<l%m8=rA`y
ztD}WN9Gpz6#A3J8>3Q)#f)XrCEd`P5Rlmk9Ss;-2i*@i-cay-AkbX2&=>}#))IGaR
zpK5#?P}L#HM%4c3b*L=H0O7Bwn8<%pxPu8&HMuA&OC%waJshdCH5Ez^&Mk?~PTmK)
zIiOZ-PQ&8Xl}>mC?D9-uVq7^-VkW}(s-`1-{o!p1_t--6X(o-c^Y}vN(i92ipzVw>
zXK1%R<F~M88j<O&WCd~2S8PM<1(QiYtUu}g@kD5724(CaNC}pU-PauSEo*2_=+wek
z3Rf5~YKcGL00Kj6--z$55G#Y#q!x1o$9-P*Om&|ZC9DR34DKr~ZlH-dFdf)!X9v+5
zdw<vbpoIG4CF_d7dfiwq7hmzlUvRfEDg=pcAoMegLW~UQn9tP}gxutJaB!qyv)uMm
z@y(+#v^-tUI4DF3|B64SFK%~nJ3ra@Fuj-t1eDk=la?1zHoj}{@iLP$P^xJ2_VHy>
z6C}kb?=4$!BIb|Ic#So)%-d=#_Ca2epO_|m3wz~x#-xdNm#wqXMV1-lgD?jcrwk(`
zVA4>crt6uM_PiG!GO(m~JN>vgdKh}1_-ir3Y@@Dn`9@FA;guv<!+#vp3j5so#!1tn
zVFZtv%(xiXO2^6`AwnN?s1se37;)UGjd14YsC7eXHq*<RHm1_@ecZd*kYDi-VF_5d
z0bAPC{`;pW)qn%>aMsmd_%vP)v^lt~03EBP8O|haG}X816RJPigbROFedFE|u%(9*
z0D_zu*sk?Sg;$o25VCyYIZy;)+Pc9o*+7umM2d;S6=Mfc7`(4BVV;BU9haE4Hb)7d
zFjNhX(T*W4J1q9R;zMtaTcy=<UwSp=cLQ(qqf1s=k5G00raVRfX4@ZKH2dQgGkNU5
zkdj18Yj&##9$Rp6m!x*=2U5Jd+TgQgb<bDywi>Rb<tCT=LW9ZoxPbW^%gU&Y_1L(N
z($(|7-YAN`S-p!j_F>xGP6G#@*!*fLqnI_}kWqNP?zo_65NU-70=p)P`IyhrG{UM}
z5vd4E=44x^caF0HV9Ki?VSrxV)$B`P!cnBtrdsY!sz*_t^Wkd91A8X|2?YsX*0-;B
zbK`g79(>$kz-ni_A9t4Qt&wdO!8=Qu>V5rFyDUgtB7xjY@csm_jdv-wkM4J*=vSta
zpVb_jQwVxwJ<j@*C2uc7OU=?ayJxs=_q<?@HnxDcFwtF3IDh!8<h>O!O&ET}fNf;a
zqbUaBVwwzeY2P9EJ0u=a+UY8sVd?-i@5*@LxQ_q7>iGZsLpn(nkUnJbs<?fG%pU(Y
z9e-!i@c6zU>_`>(ID+nG=elUW_93nIF8=J+3~NX^?6TrU#wHw_iT&Fm2}4M|)!<*U
z$A}~*yPj7X$EXX2`W-y!TFt-?$jD5)ha($@5<k=6ePVgk&2o}H{aYPkN>$|Ix&~Vu
z?jT?7!Q9Fms}>)|{YQMNZzLNbfRqOKUgjo+w;!2}_NvG_>Z^274rz2B*{3l!Ke8QI
z1Hf=__W4TEG&2yJcOHe~{X^Zj6r!`LVykR+WzkHZ4u{ienB1%AZki3?CW!O2d9D;6
z5Dx<bEIF0>(e)GH{o@UYraIP|997S}&cIFa6Aw9Z;OR(zs<QC$0P@Wj60BqWV;PsV
z(oL7j`D%ZPTNQ+6!r82vlmT`DDNJBd+1SYrRWgT-Bz9z!S}3|dig_eG`Bj)pzo<iV
z)UbSnkQerD>`ST^6g)t_3eh><n~x39QjPy0cmNAfT*RRUqmROOQ;kRJU%9}D>$Qkr
ziQA0fF;V(by8<7(=zb((!aR`ZTba5jF{m2dL0r?0YEoyWU_kLs(043PmceJi*<E|)
zYiM_w!o`aWd4y=jIa$XbOYHW&EvsCS0TRqHKwPWbzzN&jmfJIzkfiti!_)y_Lt_Ue
zt+WP?`tAcGHk-wq=rFuA?3~azdlbgUP#;GlH+MAMOSOCUH_>p#pb_Tk7(S3n_<{3Y
zaB`eMwJ!SP`ToZPFIWR#o@`MMLeQB-LFsu%A<YIXh8k?43)?@tVcYTR3`Rfe^GL>>
zU#*XtexWQmk-!hbm^3Txqb>F?DRjy==1-f_$J^Snj&2#JV?OANP&C3=aGFJ;mlY01
zX6}5vloATCucRvIl?!B<b#4~j8Kn|gtjNHZI3o7y{8A(cNxq_Ox{1;8ltIUJgmff{
zx8C~+#HAvquqx!~(DAF@Ne2XdHz+tzR~Gjwe^fG!Q~&N!^TA?^)B`=60q?L`OBMZ?
zrc}pU7wB;xl<&L40@tLLyrFPh%R~qB+&{MQV-CU|35tf%ikh1L`b@EH3n(75HLIVt
z|G(`g6Z*s-zU&J)bIFqA0IeCG*0ADWfNZg-J;Vu?p)lOSxiXFwBWSeEKa0D#)vR-1
zV4`!dtFuidu$4LcX5agD(eQnQR(haV+y~x|3x7nZd`T?;M~I{ddB*|qzkF|Ja|X+9
z99?HY6eeOWD~U8n4woW8P+V~}9ceb!Yd=jZU>noMxl9={AeElulk7@$@F1ZMc3ns3
z%uCy0D9ad6|FzFJQ#&DRfs|{1_{go7JR{^og5n4#*WR%0Ny}fUIoKd_#4Yuf*ad#N
zQKho}o_v-aJ%86;16|1%2CB&%o;ZcZU|7CdgYq|N16^#3D0**YS~jRWW^2A<1x_~W
z+wgw5!JoB66TpV=2b*9}h~ixcLs|J!YEs=U=hY%D?kH87OB9{9IT?5)UO4K?W3haM
zjbxp8_~URy{cTKkT7#}a5(N99m^#7SM{XkPA(cRk7h<I}+?t=&lk~LMuJS{5r(w3&
z$3i4HX=`gP;vfN8vT>n8e&??wf~w7nh$xtuf=D=O%D`}=`O%39`K0;}Yrmo>m7tMa
z?sxv8W%oUTx&HcC0oR0t0v$f;hgGkOtf!OG*V^+jv9|Y*3UM-z^S3qA%Dn&p;+0!S
zR>H4kyR_;n?&-VX8oX629=h0}1T2#TT6uMAN^LP~7+r%3oD|BWtDb6gVe*CpUgMP_
zx9~LiR1FLiexc_xh6V52s9Iq{okyE<kNr|DeaD8yqI}v#J8<wC(m*bz)tj=auKEpK
z@S1f6)<={Z0dr6d&5Fkq^8YY5w9q+y_C^EH96U#)o;mb+BprJRHFMF4y0c-(?oyb#
zGQKj(Ikd1tN7M_-02(EnB>yqR;)H?RWl2s1Pd8c|08J6d>+KZ(y&h-O{KC09xD61r
zIhu8%@lvabz@3vru3Xm$+s6{>1I<}M^Ngsjdsvs~fo$si2k&&LH767VW?}n19T6AL
zGgiLMtv%=E`d7lYU>?A*V<wtF?a1&+#dA*W5g`K&ml{HJotM+c<tIJ^p-L{3;`8Q5
zKS*R^qu4*nNo0+XK4!2gc$4|eB@CK$xbycqbT;asyo+jE0|rl8>jC)3X`-3=JJ^Fr
z&3nGvq3M0+iHHVz1x%ATd2!9*rv=46C}rxxzmyQ<ESLl_@2g_R4T49pOJ&_GTZ1vx
zHbF8}zzqOA#`MaKLZ+|A$r10`APO)Wv_`vzxHp%>BC$bFo;=Q$o<Pz<%#q@=q~{SN
zofR5FG0g2rg;-A6r@1Dr;lVbSgttV)nEBx~Xl)wmp!yUdhETw)qWe;;?ie?}&^ON_
zx!Kt$=NMr)S;JA=Q|>vnJ@me&mVZKmN9yUfD<TAswI;{QiSP4tkHX1el0A)I{q7b$
zdIPz5g&yxFw+4D0Bx$4<W33G^2<4S*q&q{=?E1Kx_tx{_Z?B!4`J~Y->X1|ht%1Qd
z*vCBy!?*~{Ua<g9xRMW`hf<u)^^D%@SfQCS)B@R`SymHiAdTmMs_uwMi}Txv?ed-4
zhut$fMyKIiSa_o*Sl8z6n%C`W70ZVt31~AN_ZJFoM@zZ$K2Qhe|NJY9y&Q5rf6o*s
zw@GUhDvLgU-v9+D&#%rlS;({g_Kp7;7sp0ti~hG{r;s}5otr8Eso(qE_>aL*<_3jU
z{dA4@LwWXaI?^?zgMh9TntgDVWi$b3E$p+jHGfVGN4LqA-e_uz$bH5%y_bxWa_^mr
zy=Y99hn0I_OnVUtefIMKgqJ->cBjpPeZ`t#&$@SHpNVGC=f(uPH-&kC^Hw4NP!Fwp
zTdYcGQ~5>w91&R#o7SH>QQ)&(iKN<mu)+nY($3_2+MiV=VFT*LfIpqcorhia6O2<^
z<`U;W(m(|<b_TLrrGl0!b(G1Hmgx>EJ-%3K?5O4T{u-rhKbLEbKYV73|JGRLln6pR
z*>ct?m)Q+LMjcb(o{)AgcYxi6-r?<eC<?F{BS9?eQYL?l0F;zM(%Q6)W@WSRe_UKw
z_CNzASx!c*n=N(hVtaDL9;to2#^>_D9@_pmsCLVSFKw{x@xG<~`<hOn!vqK<5e+Xs
zH+gLg9!}yBYog{xr@WW0vgRjXgs=2v`+mw?Y^XWAcfE;<?U1p?te)R1OyJecX52%{
z&iboUjDMk!>=YJD=xhe$AiDSg164)CA^c{{$HN9%Bm|!R$ccn{)dVbPe=)rUE1|ww
zf4U7ZsE%<ll==mz7AvRtMKhy$|A)472oj|Uw{6?DZQHhO+qP}nw)-?s+qP}n<~x&r
zcq86>5qF#sIjM@M%KY|PJ9=PKicP`L)O!S1O^V=AhymM--NPfaH<^PR(GgDWaHiOh
zlqV<3*qad5pizLM0vnn3afr9Gz774rXFD}xaO=`aVlKnaBNe*{=B^|~c@y~T8kX5|
zHQrN}0W5*?aPurLko)x5y@qaIBWhb5mTxuu8o1tI#C@d2W4J9iY&@27Tb7@1fDe}6
zeFKsJ0Ben8P%}Gw1ErY`NZl?966Lwee$0ZD+#KMc9_DPQOc=eo$*&yy<*2BZCm`@~
z%^K8fF2}EjSfryTjtT{9FRb$#h5FBoaLiJqNHZ6XGSvrTYBia{^5)fkN?iW;t9V}t
z!hIO;fg!gy@<bUxxycsc#<>KIjUP{5vP@Kku^RBkZ*6u77=Y=7B&Jyj=xjmzX-);X
zK#7GP-D19d@2BGHE~b=)=$%DDFOy-ZTOy$%^X)jLW~uGs`We+CEXBE9pT-)qEhBgR
z<7AfkIv_l+HUZF?a$(a?$omr}--3^v=9FUCGpya=fm{#FWHZSLg63WU{3*-ey_Vf@
z(ny*X6=mf7CzvMHfA<C64uk2L%o^(s_}jb8u(f0BR}Vi1)z>?J#JVT?L5jHVkx-c$
z-X@hXYFK;jOSd3FA0#!^yfJ3F2@ai*g8!@nW8ymr$mHprK)YEEX=(WDsv$J&WygOr
z`l{uHs#mw^Clgbw8NF6DP9LBs5JbOD45mD9o)_)o2*+hK4i4|l)$!J`P1^{<Uu(Lv
zorg&nwlC|R&e%u}oy``oAOrL_s@Tvdb-FDUpD0@kJadwwh7853qGTR>A}h`)3xtF8
z7Mq@OEd<h#kBN^rc|iYoPiX&{0o7_CIvfVsSS-VR$kvJu2f})EYZe?^LJzwmcX?-N
znq{gG)6iFyv3IgdzQ;GS{%P0tQ|J8G3nzbIpAljj3~lJuV7R<i=*M0&<@J?g7;T^)
z+U+Jn%>Kc(UrqNfOgc}0Ivn86Ezhl8ACt1ZiZ-*sB3wZqK9*DfDu&A&m~;ZC2v`kw
zke@U*Om}EZgM;)ELll+Pd`mHu<;%KXKHC>XTsg)~J9!A^h^@o?r8+`PovHcAA}Sx4
zYv81-7+>>kV7T*kCITJR3K0+2THV6)XJK6h2gMaOa~qq1R|A4Z)S5T5$;TPr-fJm+
zwefa>mBU7n#<8eVA4vj|H4<{P$B7S;7a7F#32|(fdGwvSfhQE=Wv8>oEr&pe29WZ&
zF^VZgjY9W``L8R3kwLcsvCY;9Sf}@fa_4h&1!C<U+dmf>UtrJ`k{9HZbK00C3@S?h
z1yg6_f4QkB44%$$;;*;OlOKTCC{J$1D-#I1wn&H_JdP(P+Ec98>u=NQTe(orSvIXF
ztJ@s+!^XwfY#|972t_zOCtZ54{*VfnuW8qGUvjH2y{837s_b(mB?9B;Y6|YLv8IF%
z`Ba7j4Y~b9wJ!51jq*77LX-o_bJ-#zqq|HN9<Mej8-a#X7%;Q9QbX@&LTKS*Pi<w9
z_pdKR<L&tsxiw6o2a$+F`aCpjVy|gDy~dN7o5~e*hO%o9Ed#C*ul$#ouF4;fCjk0q
zrPL-D=4nW~3$r&@&@t2CCG&SJm`%l{R1YD-`gN`kd{`!NQIyqoAU5CR{+w+11Fa%3
zivzEl0RhS`ao`)(Y=KSIY`?^%@ZMM8Y9DTewm?!4vSCrrAcQFZQT0r8Tswco;6nfY
zg)Wik*rn_L?OvMy_Lqg=Wmov~c<|r(`DwFn@XyR*?0<7`j;>OVbp=yTM(cmpOj;@x
zb|{1siUb@t8W+8dbp*s8Yi|$g0jHTONs!}J-!ciY4T!Km^_zHOkUbbeR6N1wyC&zK
zql@f0mG%Y0t3?z*w|}w={VQjd16hE8>UW5DL_F~eIaXxBI-i-G&MU87vF3UU^)LY9
z@XYsB5U2xcqCP#}<`?o3KXgUkErz1_o&W7`72uLtIYKZAq8bKJe~w2%xLH1LbF<FX
z!;DWQLSq-ZE*28M@Mm%3Sy-^R-fTylVYs6c0bbP#=VhYEOQZqVRPN2QYBAGKCho)<
zB@bwJz1+I=$;`#Fv6s3YodnJEfI$Tn232=SYie?5dco|ED~>7g=zt`kh^Da_q|;@e
z-LE)pF5mYyhnS0mo|_1OzAp_ZE$`HE{`O>~vWY5Arj^NQN2r46xQ<Ix&)q>jULR*&
z9*VO0;*C7(N2Ni67%D69YM?UXav(H(ri9BjRw(4lKK@4(!|zI!spVzLC_K!>%?OCT
z;#G?+bxHK5r^IqmGv_SENALNa90CPCjceMt3WLxQ4S3wZt`zmZ##!F#4KGF}ih2b$
z-**3zQh=W2uL^Vaq}-`)f4B7G`-a3aHwgoojeW{Vf<om^ls>w7HAGcz1?HhDp=8Ei
zq7r;bXJK6US*!hgnbN4Gp%`;z8RhcP-oU;jtUsco2)j4KE7wsIaH7QJFdQh1gj)I&
zXKC`I=@E)E_1<Uk`*>Di-kI4e@8%aHz6A@~;LJ~(M}oczUaaJ&u?fWf_;O5hTBuyE
z=v;&dD`9OJpcw!)JKVKezV-I$5RS!wD4L%BjF0`*hzu{%af-X7e%d~}MPec`C7bI9
zTS*-RF-Sr#f3EChG}5UG`aAK0<~<;IumVVz?&t{)Rf8PcEer_{8onxO$F<o&VMaG{
z^RUbiG@H%{!kRQM1GWkTH7<(bzZdEBo?sR;F>mqW1AZ(nw>n|Yoio;D&$57%j|0jF
zb1l?;L}kf+Z{|G!(j$@`EKtXz0fcMrYVjDP88q96A^*l1Q`kYyTU9jA>QI2csSx%B
ziV!fK{QjQENp&;a&g4`LT?QmCMyBF+>b&I^iDwtT4pz|zkaP&jsF-SCZ_<#zWtFH6
zF}s)B{e_)m2@e+a#3OpT?Zg>b59&Po8(iw3!_nZnEbEp?uV1;cVNxBIDt#bQzjS!6
zQYR)V%yiHQP^dC4XiWJ1hJ32rpl0$V(X<civ+$kRrMa7!A0`{g#|Mzb9G1SX(097)
z@be&f@y1hTc?uS|w5`*Eo$b^ay0dGV|3^u=YT-{lDv0IC6F1uS?KGhysgcRY@=V^F
z=C&V!&J4|~G8QM+ijr%{TPb1ORCt$Ij0=p9V=aMj<v8zD(#+o7q24Fe2z1dZ4b9$i
z%o=cjPv@)2RLInl!s^;(<KL@zWIlTVT%rs=169-{Ru8=|zT3HxAUba##3Lot7lGZt
zQ3Wd@vM=RF`DA~*&7ElNY-t<r!vt@E+Tw&ud6^G4T?b3AFBHxr<s$}qVXGW1D9Y2;
z?>M`$>({kKH5uJFbhr&e3<>Pg!gIpYjZ-tdJAJPuWCK&nuu=Ir;=5|tMZmt2X`6k9
zFR@R^>pJM3sz(hI&-2v&-Va_syx6->3#8cWS#@d!UmO|WSxD1cVAV|Qo*uhwpugu#
zM{q_p4FMXjs;;i*5PtqE^(RUu!(A9?@|5fQ!&fi%$`uh$XIZ_<wKg=_O40<r#u!@-
z<#Uix!fd*&zkKkKx_eyf_2WE$GWXdWNV#Y0FYEyZ#L05%?6L=;!Wv?)sQ~f2z#P`y
zzp%FBNaSWxsp_8~dJw{~u?r+Blc7s`T+FF=*fq#V(X|9oUGum(i|^v5X7JWub|WS=
zmy3MVn7ldH^2~R0*X-f=SK=IbEe7TGy#dpiO-PB3+dE}kleYc96II3T)&FvgRF^z*
z_uF*hd^AX8C;EFXh8tZ(mp`J_i?nsu7~(2?;SUMvtG_`gH!H6*IZVB|^K;n9_IHU=
z|3c)F$9;@jT$Bek?~Xx}n!HVVjR)&{L*;yOYyHjvGyG`(@nh%_*I_d27#0uuTqZ7K
z2={V>e1+?32#pBoqy=No9+9RItE0}a$#jg`;er{3EXX(1B;H&@Qlu46x8~udsZ|B-
z^1B*-5|ymqN=I4QxV)sA8+x69HTXVihAL5gK>{buw`SM!@xkQ|P%7%zLm^nH62=g8
z$(0PgS{qn(cTu+)BkEcnAHGFTu`e$!KA3kN8=n~xtsNIm+fv(U2FuY^==1)-?a0ag
zG|VXp6t8<OJ`P>Ttr=|`!OUtVPK;x<Vh3@I8-4`ACB@sQ;~|rLSx`Rpuu<ycBSv$Z
z7Mj~Q7nxRApfd*uD3F@WIjKcBS&g$@Ba1vi#ZCMTV8|n`=uLXvW2ySW_#;%S)!yB`
zM_q$1Az)E6i+>Dt2w>d%Q*x)TX>zg;TS5+VgHFHs+K=p-W;}>Xy}rO8mP!juUl4{4
zuZ_BIykC-)BwfHT*LWL6<-(@3)x_BMVJyJIG;1k~haFBx2LewR%Bk<fo1t3&t!#hd
zjS2;0k-{Huz%HG}+yRcZ^$(q8%k$+q!K}4)Ysuo2c84|~gwfUJb8$w=>X0}(88(06
zcl9!v{)=JJkC$ve4Yg$ue!@=~enzsE&bBS6y9>W$jd-R}iH!~6fgyaxw-+XYqma3Y
zFS*n0nXix71kgm+5@W*^^=hDnJ^#$_uHclYSUJoCe*4Oi)wpVx1fmCWAhlp?d!id<
z2o_5YKd~Yt?8@8wIR5tU-3OA!@#)9~3mIY;SK+2}#nnR#T6l|MLNS*qlf*YHMHAB*
z0d-0W57-!5R;i_1Dm~shEG6HJCjkT0g_P~DHd#PzpSwDl6mVi+)^_XDXjUXO*|HAH
zlU6+B;*=GcZgBK>kiopAdr{T%F@#ov`2b8NjRoT=TZq%k|8{E5YxpNLD=q%Ji&jOw
zR>WHLl>D59MwTtc@9Gh;-UJoytYEDGwJ1C+hZJA4iXSRksirl!N=cA{;B`GqHMVRe
z3e5-HM8sk9-f`eN$kUB<mlTTgPQJHdapzm6aGH#--CsFSM(5LfS8ZdGvvDZC;7iyl
z4;a#0C$hx$&9yEui=OAy_3_5aucWFcn7;`E7-6arO~+WAMLxlGxCp$U<EWHTjq^85
zs{0r(m%8%B4)aUG;g**>7Uy@1a<VQ|;agt&&JqGTN<W9Y?~tF=BlSB&5J*@LauN3Q
z8+XGrc?^rI+ClgTg)Syovf8+yB!@&MW2Le18(l%Z2~8@#<(+i5E{WfcrJ<2z%P)>Q
zO$)ytD>^{1ZACfl;V|BEVX&IA`f^j$yo?xP211jB?7BMmn@RX6A9p+zLkLwABdy->
zWc8E*{5d?dNx|ZN@m4O;m3)W!z{L{cp(vAtvFKEWGq(B%S%$E2@xqj*B*P9ITFHdG
z5xGGC9+j>1;j{BZ3t>Ha`lSd><4)3&uv`U=%6*|CVbmvUS3ZvKZaR(3ECjpf(EOxs
z@_?K=x4`y@X(^S_W;}fy!a3_I9pD}HSvP~seM+y@-YWHO*R-R!D1u4J)>6^x)3bg4
zA&9+B6pz2S<P{zQ9e&jFS>2<wCzQ?C+dfg1;ZJiba4c4{20t4tzYQNho_J@(#pzp#
z`EQP!$>Uo1ybf#Ru;dDPNR;X(c&1#T=`L>BtLg;<&fg^O@ceQTyMXN6mSieiy*+2!
z@QaS6D^2!h@b)dZ9;zew(0~^4HRpfSl2_!6G$f7P*$GMrC0@Ix?nxTbdji{1BK;A;
zAMzdxj50la={@4{p<G98^9XY{dw>TlTBrqeYMaJy67Yc-K93er!@*3Ld>enyh46UT
z;Hphqa3Q}wS7j;zqPNZfk>KwSo3s>f`*y7StX7w+!1l|->(b8*U4n8o478O2_L|*N
zYQDp#<DtgJr)FOX&<G<BI4~D#gCFM_0ha>)G*W)}7E?Dy=-0~EuvOoGcG08wZl(?@
z4n^-?<{{4wl1D>iZ5CyDhE{5}V+7}u(YqioB(+og9}ZM?w3_FCarqRnQ6J~XzJ`+H
zo-O%+b4Ug4!;5ANB+?~SmBGvjGu>c;RSz3po)YcK3>THNv`A9bY>fKC1IgL<#;WXm
zW<OfDm|ffv$)Dou#-Ng|cYhm4{pz|(BA>2_D9}lr=4R()g}EwMNAk4An#K>p!u+Sa
z6wx{yq&^iUOXfs5Z%!+P2@-PGozoiw3YAF-68_-c*4J-=rjBMLeOeh~N`g8EQP+KD
zE;4^!bRTe7O0*bg*MiM(v|cHkyg{g3+JQ5eW@=W1n!eOitvv9=Lm-Ej+)*+&UWedM
zeaRE6ufMGVijf+U(nGx-kwA}5DC*kTK$`}zHydsN=!NdkF~Nvd&PmIh*ha#HU%Obh
z11Ca#G{f-CF{LnXYvp1ml(EgwB(qe<2%s*FidM<Z8<K>9Dg-ZyeumsuTBcmC<oI2|
z#7vC`1pEt*-hLa84?@hYI4-Z|#;(6SDI*5+)C&L#srzya_Q8ba$%Oa9cytYMDP{{j
z4mrn0mMBoF*r)OjokEZZSA{}BmH@=~uW?XKcKf5f9hgPJSQHiZm<-d=x|SK!!&aq?
zZoD%1_w-Oa5Rg%m3h<QtIjgNG$*Kg#_WmgBHYMt)@+admWVatrFZ@Vy3kimQ^@wez
z^H==;o=ddK+<vP0<g`?8ZdpX{^47~(4S_%q(pP7v3B7D`JII_%xW~5UvmciN2l+&h
zh6>MqpY#N&)vs(GKYtxw=KHCcP%da=D2*vaGJ#+<B;SpkWV0_uci1bN2~478xt4r8
z+tlj@W=TlJ7md5JTh}+e;ez4E)lp{5u9ZUDYD<N9ESf(3q`8kQ$Jm=P`mPVrEqnK1
zzh$nt619jK739%3?}s^_W^^xJ>z`M+hjhwfw9{rIV@HSsvF04vt4fk?!g>uKYxS=@
zI}}y9-_TN^{u%o|ogj`Din!_>m>L0&`YdJ<Z0iqLC!glj*>Jj69VrE}aKypD)CO;X
z{p$RQ!^I{k4-!=36Jz*mG7Zc>HM~~Nzs}15ct833+IqT(ERC&0jTzV_TCMf}yRP=8
z((Y$nF0Jo}VgYclr9VGBVd0ZQ)QhqKeUmsYTmL_C-%5OwJfrq0A@sv{5kIleRsV6{
z_vplqvL%k}XjdF%ivE|!85izYM;2_f^*TsWO~~z{5~ROx%Ikwcj3mM@c!-zUJv)D9
zCZtF=WzU)`#D79-o3iCZ*tN4E{J?Y#f?E}iEzrbAz-e*)%tOQ=gK09A+)185)--s&
zaAJgCj7Q<Y_KO8cavn^o;V{g*<9J)yC*XRv4-_lQ-3brQHp97w_!0%VKg|TITT)-I
zR?9#v{-l8ToNag#3tq(|{xz9G<r(ZLTTEpts_`!;XRM?ueZP%kR5jcUEtRu#HMT&#
znsTSE^cVXfanW4tDbJHw^0?rID&rX?_}ZKjuPF(amlZv&B1gHEsahq1DL`5FdIug@
zJKarL9i$9xnYRm-(&Rmban0~+7RV9N4(yD&X9g#ktJMxKW%$JW&J{|wVWydowtm#8
zn)x{gKsWKlizlyeAq34x?5MCBtBs6hm4;rV;eW_u03QU4LJ8I+xS%m?3R|lp-JrE7
zIJ19NWTS^OtI0l{(h0BU>ozk#tQn^xsOVxJjuqI<9G(Z45u!|1@muUFWUQ1Ei4v%f
zxiT)@Yd3wSvzN}GK3%vF%iV!C3wQfP#;qzXd|}CC)sUA>spQ!?9+&(Xo?cNb$o=5T
zlVH)i9d{`#vh^0!H78F4-t~%MO}~KieG{VkihhEGMC@{6He$bKVZFvR5N?sYe1avJ
zXQxNZ?9%FqSA)@X-wmXdI@MW$QMYVbgyGjIM3N`?%%XlJ(uXqfCtnJlKLr;e0=qi1
ze4eYZo>!OhsvLWl`J3j6l`5^lahpmKh)P95O;sHL{P#e=tY}8I(#2{R8i!bd1E#$y
zmwgt2<8B?Q)=TpR@UT?PUml#50MvQOM{|mkzz=BdB#cIna^-c<oH3G4sK1eWA(p2Q
z?5GW3aO=@^Y-~NWSP&^y6K9OkvhAVSp))LRmX1is$v}klFtMKAoMrBOC>MOvgTpv7
zAta3hkc?1)bKIqR<bu$Lhz7*AJzN|bDyP*K$Jg*vxZ2cSf;V*UT7zItnv+|OW7HsD
z_!vh=p);wGhz$m?Ne96e*h0?;Zra5W+b}}pcAU$7AZJV-s;iX+hA3tGRCaUAch%v`
zuKkh^<@0?R;1O7&Dj`25UXdg(!C-NKod><xDd}s<aZ)z*d9O^cCl<`$FlmkMyhEUw
zTncc=Cqgkg5`eFq2ORvo&g(ZlR}%7$klRv?vzB3yQGZ`<9YY5>3B$vfV5p?*`(Bg@
z?JdNzIXb_)&1#aFM8=&h`8H$%;+)3mFD%_%@uegZE84M%tl+AREM-wFQ-Q${KK|kz
z0E-OsmkU-b=4F$=>b!7TGXUz^-hq&0^3~WQ{+L1jsA~+k{0g!$jh7-rvIn$KLb7SM
z(Ke*V_E*JS*_d7io5*4xkc<*1#MWbt0`V^JuuZd-MF#`1nImYZ=?M*79UikH#tZ>;
zZ{9u4LT3S15_H-h&60DAR5bSd#()hG^aGK)szqh@^aqx7wwS{o!){vo&AeaFn{I(%
z4)MLk(5**J0b;(lcK?NZS`XRq!xCZ}4dE@d2zC-(8$Ng@u6t{j0TEcB!{&@G)v#p_
z7dHy&fX23#Y%bVwSi+}xgghzNM$A8+5W(Qxco*Huh*V>4N@W0L2}zSfz>iP(CNSrj
zcte8q`21Q=LDFE=!01c}d&U5KBtL;vhYrCjB3)(BE)o6osx?klkXJ}rguXirCvk9J
zP<vpt7WK>wr2JL1SxTiKM?0V??YiK3n`kSN;OyEzRS)u5ixT;(5tH<sCEBn)MA|^@
za>V4b0-4x=u=cUx<UX&!XXIdYl0Vt!HiS+de7giL0RTRUv|NpHTN*Ifd$Ky$*|6|l
zu|XzE9qOa>C4b~)nEjCBD71Qv>kcGnO(rz(>$hA*Oe36ULsJ@!hf6!B6c4uGv8{A*
z4@}OKKYZ!<sNeY@av#eBTC2x9eW^QqCYvg`L)|E`pu@Ads+RC=9^bzBk(Yh+@hR%M
zervxMD|(O#f6MBX{jISrGQ;?NmnPu*UH7B!v=x&T;jiJ}l>dAl%%rD&^Qp*+6uiPL
zh2u?lD=tDmSN9(2Tq0<x!Yx^*p1&`w+_s3c$Hf$SbS~ZNRJQc&AN6WK8gf&70e(?5
zsoF;cWM#&g7`Nxny~uj6x5~uCRu=_krOrZNNk+$slND)=&N}2$-6>$~4!i0DKng@N
zk!QCvP%J&GpBK1b1;(zK&JMV_5nLJq18JzbP0tBuwZr~(e9*t(R&-UTCC2XwZv@;=
zt57=thMVRYcYLoA>@fOQ7EG6f`%eQx3I_cr;hWwvBe%S)IP~T<d-+M}?!}rcri)xR
z8h(xV;SVu<`gZ7;x(H;pKIyAmimcGzqcuhBVft-h^%1w!3IXJ&R1pT3uM!BL8}pX|
z1dNQoV1U#SuyAD2+P5?yNjHa)@V@&+*xn-w8CZR(TQZXD%hJrvl@%V^9E4L(bm!HT
zt1Nuw>Hr#ppi2r$%?hDfu{S_n8>)zVz^VA(PW+M;?ue}28v)7d6Ncrb<(qJ)>keDL
zam~+11XKZF>D&xzRXwz9Z*QIqm}P!-Zy6ftR}|hLH21(qZeg}qeuH>tH=4!v_8r8&
z&T<E&$xb@SpY_8&c?-Ni<=`-ilJ)vyxo!k#*?_8m2Z{-KN@H1BQN}?jP4Ntn^***>
zTtZTH;hcZ5jH1**0P7JmXypOAYOAf`#6O0)RqVkcP}^eFF<w&*Rt|ajpTillY;tMw
zI77+a834FOJ-57TM4o)my=|gww{RxOEOBcCtPX@4&1YK=PsBtqys0ASw8h9OAd`fr
z9?%Lm`nzD1T(-O5<pe4@$NTV1JS$)Rlq#AKV_VcI7U*Mp3CcqHo@P<F;ZW;dw7Ck`
z*ivPZjI6I%Qp7{LQ?vIvKJ`F`pk9$a*R_~0Wc0aE4>(BiUd1Oh2DUyJ3U|E{0}0=-
z`2*YV%7-kooe)40nIyilb{PmfbqIn*BMp_=$Z08><7E^HXb|JZ`g)pK_bMgh@#;h=
z{Z7fqLYR6d;no;q3Rc*U5&?1R)2pY3>G1^lJ@ovVdzz4lks(LR#(|a+oTuQoyqMvJ
zNY(94Hbj@6oQ$l*d;OeN-Y%@Rigb&pAeHO!wN=4G%EGsq5rf1r5>|Ly4f;vT#<~P;
zc3B1|iE|=*U8kyG2|suzv)ww*v>EZTP_ZXU&49}N@{;_lv^_BQ8nvpyw_bqBj5AZ}
zw0Ir}_eJfodGU(0(dxL{j&ATVhg3kvpq1@>lWxVVfda~QK+9QN?tK|k&Yo^H5HO#H
z{)@@Q<Io_ly_k!A9B=Bm!#=ZhVVCl$lDiwJ%^`e(V(>mQ2r=OB<FdPhBdMFPx#%QM
z!6vqMkI%s$Ji*-Vk&|O`$b*6~p|7wXAH%K*IFjQN+L_ZiK{gq1{c)s{4jF<^^GDI)
zr2FRd)bUahTG=F;QkP*1cdB)GdMhXUwP1w$*qeaNUwReyqo?ll2FNE~5>@>8GCO+#
zjlO@}t`tx66?Ckjq{%afG*QQ7LK3smdV-c`laxYOksZL08$)Q&Dn`gbt((JkK^whP
zbErpfI~$<`#>inXUdiNTHAEbme4OE%JKYt)J_}huTv~+QVhcV#w_aQ;);%J~@R|Io
z7gEfJV;}9A#_{uCoe^_&#lFg{h;_*r{KqC>_yEpXZ=Sn*##U|ToTVNY^3BrY(<~b3
zk*k&AuBBHvZAh$v>RYbjv7X4UFNdq0K+~8H>qdUBBOJXa>Ep-1PO+;>+E=-1rzlEr
zvbEs$w^YdwXV6?A3<mLAM(V0CTabiXYHucNu_p&Nii>qrhaoWy&9O-Duox*Y@E4*0
zv32bk<HSBBz9lLw%9Zq>+n1pT8|KoyW^NEYwg{J1(NAyO7w<})LmAz;SIOY{>2`4r
z1?KKRs+K!?$QQLPT@0vf0^n!oM$O*1FJ}GhN*gox7>{!B+*vtgItqklVsTM>f|WZr
zd=FEvuK4MvC2j^-V*(RoV0?P}?wGeWm)HrXX)@_o+%<f??B(}{wiFi2Fe`f`wt#UK
z@@0ZUL-H|H$U%2O14?eECdRFtuc)aRCC@Zl+g;?IWL|BjOSZH_nIsDy;|*WDn@vbz
zFQFDGOsS&~M;d=rNO8;JCh}&czFZ`7FXdh&X5KY=hIFVsfm*L)mx~zQkFn~d;Q6&U
zN)Jz2A(PWVM|{C~z+Anl95>lDvMA$l&vExyW!U`{uLGP=>NwSXP0N3NTOjzBnfu$F
z2iqU_{-s9Hqj4Z3jC`c@aLUZgR*=qAar|t>hKI=-waA&(l%H+>+}$Mv$4VqBUaxQS
zJ<Mj*I|Y>f!Gse5ZE@1JVqxIE;oW%;H!pjF%W;+S=2U-0M^!8II>ra1PO3!h(6;l=
z(Kt%zB#vRm_U9*PUQ9f~_FEXM3Jlg|={dA35o`-{nMw4#klr|8ZLfGs>@5B|8U9i|
z$WCkFU=&z$Rt%1zf5JtGX~3$)u33+JTX##sy8uMNeNa4(bfAC*iv~+{ff<1S$ej(D
z4Nnm0nI?z>%KL8$r5ZiG8L3*^F>w%Fdo7`TRhuKJ`nmHRfMcOllC-vgpI&xeVYw~(
zVaLjxJDfQAKuT<zHHcyDeitAoXNi_QV*(l6TDwuu$OIv4YeJ3;TM<;CK+R+6I{1AH
z>u%FCkoWNr6E~(Y<P70P=+UDL*pr9}OhNtz_*#hiE3GetHZq7+2hm9${H#hdlQ@?e
z=q0)Ou|opEnP94rjM%_`d|au%Odxu#ylg_2SOD1?Dxn#4?fiORrqYiVr9UbLw$biy
zL1|O_izY;CnG#+>Ny*XDkfID8bTUCgWO|c)1Kv%GyXCbR?xb6+;VRnk?ehP&7w!L+
z*M=;$x~tlL{qx^^=d$|^lF619jFWV+v|kg<`$m~VSlt`>9G0S;t0`eU!`Dbzq^-m;
z=@()^8I}6-r?E8&Wa<H-o+x(QPJq%e91XRuH=^7+E_#eD^6#>%6j^=%H_nTHm_3T(
zqfMQZT3v;fG$Bjkj1(-K8Jf52w;o4TwxVQ;W41o7Vd2a8v1nt;OgV<-;&q4?ENmA9
zyNK+PkkMqQ`G{WY-C6~dLfe^5ccy#Ax(~G?vSBS(X#s}m5=zLQ6AGhp;G8k6QUMEu
zOY)yk1})VP2wpe{5t5o|DBt+b1@zr*PJ=W+3Rgvm0h<dI7fY=JEBN0ciNFwyc!bD=
z3_<MfP3R=cG(Wpf``Qn>Z14{e0?S}BgS<1bsj{8&kQSYHmgNY?>r?<m<IZ5tSPaq-
zj3daW`7%6_QY-XpQKcf|dl-bFYi)j^bd&^3z&#2%x5RvRSVrR3%YevEAtG5qFmW0v
z9S?2Gwf7Y^ZMs|_{%V3Zx~=Xd<a)?YZpG;cj`tlm8M1Cy-O!gZ9~VxN-n`MZv(~jT
zL-v{8KBbY3n6vHZ9kOm12UM2Y@_jWn%g3j*$&*9_H_ko^EZF3(RS3DO6_4xcTrPdn
z;;|#;DFKX$@BrDbn1-F$8I6QYH(XJ{b+X@N+a{maEzpB#t&b{?eQkaf54_h)%v5+t
zbyBHmHR-b&*m}{KH0DtxF2%pMAUh_KUkUUU)7=o?<_^uu=ixy$Op*j%?*i091OV(*
zsZEtHOIvH>LtHUM<CvP=7irEJLw>=$>ZJAejpH;ShrDN=@L}k4j1zyw_5m|kaX11b
zxx&<8P~UKhD5HSn509U|Aly%Azwc;T;=~ZtpNA?zQoLf}zhcPGq(2F;Ca(n{P-0hf
zFE7$d_v_sknE0+I(+EZo`kr3CiOaCt*K>HRL&25x&uoZP;)`(&0nH>pHQ^<Rp!3;P
zcv7Fw#B2S3A@|96L$9{`s7KxiYX9p?oj|Yx%4K0Yoo(~to++ybm`&l7V$|2;fvF=_
zN4Jm5l}YR}JxtUgPf~3`Tx-d=v^u4Gt1|L#J}EC(r^lBKd$l4if^?|70;yHCo`n{9
zKlsQ%r`JRUXCXezwCCBC{v6x{+F}_%%;Mc9qc9ak#K4H@zu`A!f7F}Yw^H}vXaS{(
z%Qb$Oh+{t71r72vHBd^iU;a`)q0?7GP*w8Z?lqv%q72<Gt@ky@F^3pVZb}I}0G(({
zbzGVTSlU1zr(X5QWUC&;zkoWzv<XDIKbo$Ly6@r3pgJG#;SY`k`*wa#%$P21qXzNu
zW;sKQRUta#x)Qzz`(g@=-qD+DmDpBg+xZB>4F|3gf@`(Kg{p_x&+yiA9vid>gTHK+
z=WJ}@ShPcQk_^bcTxIg(geLV~Sw7-b?yY5(_jW3jzqFw6Q<j0+`s;4xHTL1J|7CzD
z4ssTH$JYZbt(v9?gI?IK{4{=#t1Ak|0zy!!b0V)f_c?v=aw+@rZs42^=TTRV<+GeR
zE9iV@GBq>;4_4Gxr3eC+Eh3yG$PDX1h{1X97=Rr=^J=<;;N|A}VzJe~-OlKEc6q)!
ztz(H7;b2+!AV*Vt;i(~UI2;_%{vZ$^gDRpQPo%dMC0KzTD>Sl{Y=q`qy^KT%WfRBA
zQH8uFh@1BVt3er`k<<*-A8PcavvX-ROt~xJdzur%pPN1yH$&1(Z*0XOVDh)&mzDL~
zD7~?5(fiKu2>hnUJi2Z*bm9=Q3mHl#xMe(n)!YylKIlQ|UQnA3MU=Wa?vV&2FCHvI
zlfv}(9*S0D&!x;24LXcQXQkuhf^a9~JPBmMFbWr;H(t)p6Dx`a{>Kb!n`jNcmfLnl
zE`!W%EMTkhF4)lO5+whCrqemF9&@%$I0)^2csi^I*P;+e1Np}8(H!Qr$X}(%kAMSq
zo~k0WuSC;$fH8=jdUn%Z%2X;3+#G-Iz+BDK&8fai#^zzJ2#hB&Z=6?c=F6)>8%4A3
z?_Ih6ZP3ZB%EJV-Q6^T|6x~6XT|4~u8Tl<1Wb16sI)>y96SEw7>^bF+F}-g&i7plM
zzv#%n3vmTH3R_vkt49#?NCIrtUrRhht~4uKy+&{+XKdEk2!m9xg5#!RI>{=y;7=HO
z-mc(vGR6AGqw_*^iiVl<MKR`rZh~OjwyJvMY_y9%Nc6oGkWOZuYgR_s2H<eFAt8n#
zNKeCdHKw#ibkB#OHLynYk5T?dKbFJE-NmzS*JY=3GUI<?uu(7yFzFmYUX8ELE`a{b
zE<!m74OmEeES-vV=lFL$5A(3AF1^Lt#3>Pb5|t8}F`~4Mi_H=3so;ZD6D(2m)_=%D
zWyU}5n@h&24GUQ*V}V7^6?+1;yr$e5oy!x-9pKR;b#kkpHS}v#j-9w$yiVDVq0tk1
zkLo!7*(Vc=<A6Y_cJB2nM|#I2;=n}QH7QX*+5C_DZ~{$cGt#U;oXD#ySQ<K$<hicF
zkg*snWGz*Nj78AtX!W=;bKv3zEb^tJ86Nlv3omJUWIeMg<DE~rq*vTbl2S(2s-@&w
zAnI)<L(@#EBpD!OaS+7i8w*_hdz79C{mLHJ)%eO|%tj}>BIm-R;3=^?hRGg?fM|=>
zO6J&1vK_hOo=n(&bLrWvyL%L~j!va~mo(+FnO+LSo0xpqWcR?2W_uad<VoRs(UO#F
zU;SNX?9clP>q<QmCPQTkp;5XKjQ6$~w!{_?T#_22VZuG}YaP4Tw%YBCDT;3MUX%pn
z36vuS8kf9hq6HAw74`>vaGXIk@shtzp=NlNTf8m6AR>h=PX?*wHr*j@xNf^-Eh<!b
zd`6aEkJ&riLVa0lunXP}CQSC?rz=02NgGb7=jKX|mbbftIhA0)c(z;WK|;(83|Vf1
zDeWIU#Oc}d?H~6OBX+#8zJJj@D4a0lPVaGrM$}D<MPTUjTk;9c0!wyygWsgR@nu88
zX%#o$Yytf9qBZEpCrS^L1p>uADEz!{Q6tN@ApC=jsMal|fgQprzgp$OGIq2^1;<pN
zR-4;hjVL9!mt<>65cE&E<yKTz?ei|eLjO4j#Ab%pBB5-Xg}56a@KKGa79(sys#7*x
zj~R-l>rt-R8S}&~jq&fh)@gM)4$%M`D=XZ*64knB_br93{bmQdayi>+hJB;?05iEa
zM1F3nq*Lo_gl{_0Xav{Gk*QceFRpSB_jvt;&^5A-Kz^}^QWYf|y_Q47mC5>NBn?S1
zEZ3^e>?sYdx33b|+n8*T$%dx*?JKAemwSCRpiw18_LJLtk~8=mun@^4lIHXD!e?9Q
zw*Y{;q>QA5nNo->^goXgk+T1GycuAjkY4sUVbrvUjqm!%36l8P65g`9LvIBU9(a=y
zxcOEsQKhMBCy~lUWtyPhwFk6tK^VSA`U<>dmQO{40Q-z_fSg^vV>@pW&*e<*P#8mt
zwAM)6bJu}yiBxjdqm~n*UHJGI%k7Lfvz(B-fW6T2cEOlQ`;i00Td`+be`CY`n|ik2
z_EhFNDie!onyaG8?jrYqfWEE=uf@T{Y`#Cw6s@!2xHN8U%|WbBSg`mBWP4Nm*#1db
z1B2rGIWt8MdW`@fwx?Jjy3XAjDA;;kqAT->ifGi;_k(}t`Rs(vL?-9ue9kHj$Fyzi
zbq{BMf@9#;O$;EJw_=NWY!CV;bvSPyBAua@iDHdy01mzA17MW51%ch6@$!Sy#L|`J
z#9JEldK=5O(L<TF|6#=IHDPV5y^$IwwFoGm{2LA)9b`47HngszfM8N1kM&$m5u3N2
zMU?EyV5TcN(%NatT<C-7EDJfYICN&8myu@%>D2t045p{Sxj5&ilxX3ly3Qk_*ESDP
z51qKa+7BRzUd|%^y-AFV3t^MMXP>p$MzvpOdM+KwKw71bz8Pd^eO$`&nS0~*_k&#2
zUg(CMVR0;+EfX$*dxBz2u*49a17mPV1R}FT)PaLJ2~~RiE1L#PfT=}xc;<FKeBmm?
z?jS@n1$gn6<e-|>yyjMO;PZe0^>6I*k+>~Q-z5F<Rhn-h&fA>#>_taZqq<FhQg4bE
zF6ijkf6wKAYi_5A>5uH|HDv&QL6~$Axx{b_#o_h&5oni;25_+=>tKeE&T3SA)cIT7
zew-}ns48T0`v!G@Mnd&Dh+cu_4-=&ZkUrb33s7rY@4VMMxQ#DZFKmLGXT4Bugxeur
zh093%YgQj-bQB&xw_}0N$l6n3)$Z?9G!xs_hies26U3ctlfwQp%pwq)jz7f~q+YuI
zJIn5(KD$sovJr4k$?e#VhmR~U?-nvwjTU4i$-q-jWXQAMI_+GM=bff5^1~k^Q3nG&
z5V_i<Ufm?qdmQWc!78agfF)Zgr@V)bxyN)8mVd=?xW%9Bv5*Us0Ah7{fMW@XBR<G6
zVlxY2%Z~E8u%uNh!Pg9<{nwA+?*-_PLIMrXLu})J=O6=w!+f!Tgzdo)F&34HKaRr}
zje%Q>2Xv%(ylkfJrt%w;4kZ!(n;!fzvOlJmb)|em92W1mq7@G)oNmK8dl0b8KNM0Q
z%LE=M?)>|0xxuo#3j{}Jx2!Mr*D{F)Owd5OKXqcjQrO5q;}_)dbO<E<Wjc261eg>|
zikx^;w+Y4(D3>LI`gWiAfu(v6T!Nr1fJn3gSCqO_B74>#(Gv$)ud<oQ16^3m-5;<N
z_p|$}GeFU|&~JG5lD~QT_p(Ay*|$JtBZP>+Hqud!;y(zvI$4@VT>1SF?~|x}sq}|?
z%6`ucUC~So1jrndtrM)vd-O10t&F}hW7yC?Ts8=22kAFe>oKc<`+lX>Ew@H^y2gT8
z=O(g}#Kn7OKLf^!CLj_J;o9=MOOI{H$|VxA7kxA}Pm>M|2t3eb?AcZp93A=>FE_=?
z70(XZ2hXzMv6q#9%K~9y(lK2cYrJCo^A_>*Qi6pJ)5RdZp+}TgnYro^UTv?e`OnYx
z9pBTuEQv_>b2<blrA>9G7K4$vQoeLtXKonJ%zlwwcg7ELM#nf>>reJNU!>IHD;+D4
zPVyou0UDxkPxgDb#mcM)waJl#ewnXn4XR4^a`}*gk$UbMm7Sl-5>U}pKlY3<YJkbb
zA!iLXIhX5R97PHSiC8y&IE2aP473XtQe{{S2^2)u*%~Kc0hIt+mP2ab!fe>Gx(v;@
z!sq`W4C|&U0j?ZavU{XmS0!MISoU@LOnZdiQN77W>2|)>?R!qa$;Ibq@h`$>>DUr`
zJC^mlLjW}o`ex%H+WjgC;2Yu4yiw?G`W`Z@^AUUX#8x5MZ#Sb7VHsigAE@A%GD#f(
z%sxuTndg1JY%olEo@;_siSKiLV*0sZTkD}5fICP50+)Euonr90IEMSA7CMYBpTVmk
z;-S;<FOS~L&{LJ&+|><lcPo^4F=o7drX?v(n^~&)rEKw3%=DFH7Np1-Mb4?3ZSeD&
z7n)pW{fjJoE`(()T*m+BU7j?YQa?y2mT8h9;<%|eLV(V~MC)vHQ8nfdhCCIzK41rc
z!}2Z^bznJpEZ;gVVTm1|1u8N&goiV%uLPD4`=Xf)oP0i3vmI+Wr1*eb8&3Xda%Ow!
z2e~23eg^_0)1d##-XC2}Fwr?Hm1kntt(m?vIl3e9Br>Qi!^Q?Jd&p&80aIkyKSJrf
znWqp=55gf<iU$HY)<K`)CKXbJaywgwqFfKg7ZwMj^hc!U3V2_f8dtxYkkzmZ&I)^p
z8wSl0XY^o_KgZPV)-;rT(Y&C5dSU)(STMuh)!JPYqX!Uc3QoP~o1A7x=%yg-a6mD%
zFFT{>Ex~+8{K60N{4`BWXz7KJD4*k8C<qe~eKBytqw6K3z`Kjg#h!|`Y<D{C!77_)
zb~z~JaY(sRc~XM*f3J2!{$aWHr&nU9x>5y%FM=(u2*E&TcC?pwV984dQ!fLK9BnVf
z1@VU~&j0>vy^KsYdVcPe-!m&S%^<5MS2d_Vkql{)td^W}F$)Sb60TD|=7(W#5V&j7
zNJFWcvgpuDrOQ-f^7imZHH;(H)<2(Weo*7$v5OI`mptk)?JZ#?F^VW3Zzz}E4D|kG
z1A=ttvB<`6|IU29Pfb8XM{eO1O46p_g>Pqbc0m+vTS3-3Gz4Xaay=B61fE2mdx&XN
z2tn%=(<_W}lq+!$k;8=X@5DpJEtYXKwZZ*!{=nAr_-HkVOjpa*Dto!$H%bu_*4nb6
z<^@m~p1%}jm}op>L){t`?aDbrNX9$$mn{>rD{{Gd(W27r!!*d4cYyOR9%^1qN@?;L
z!@V2${DpiOs`zx3S;ODjC+7BP{|%B~lQdBXdT)0dj~DQp^8N3dpiHrLbd$#UcoSDV
zH07(w`ru-t^HSCg7xoqJ<sFc9GqE4XWo5qab!9obS`9)210Xv%5#f{tx5Sbr;o8vL
z@FX*zekF+D0!9b??&B@jwhF*5&qa0xQ#_;X;nQBa<dOL#^})>B?BQ^kp<YMH!9vRg
z0Q69A(8mr4Ig&v|biHT`s>ACvQ*bV(4*C*FFo}|!g*!Qxu~@+5`T(!8CtRVU-h(gL
zrSW(!N`ETjp80BAkY4Erz4z~WT>7s&W|#?WK2{pMjJgvwhi&3hFYp0zDxL#_TjdX#
zSgDugV!JNJZVGNLJ4bw6vssoISOAQzm6FEHZ?xy)eCN8g%;D7hG2j$ZH!fnYT1EN$
zW<PrSX7T9NEGbBDJtFvZWZ6dt6wOVxYlZ*#kG}I;V~Lx5{u%0u^$+{zHa-+F0AqLT
zp@1XjYNCj%2`eYW_DYUOy%iaEXU&}RPrM?)ou6TslzBBi)G@g6YY3S-8u=GlStA6O
z0x}XX51qkF+nQIV<wp62f*b<;tB6EQ7-`V2YBUYRp^IouKwqEnu@&cH5aO+KBncK>
zYZsJvUcq?jvyG|NF+k-&akX=Jz(ax$_z<i6wEjEFImpltx5G82-({ju2^q+V=>!`=
z{{4HTdH!l8-w8t*7#JvE2+IZgwz={cJjh*I2sY16fBSGRo8Mzf^}Gc4<?uq4&(lF;
z7{E6<wY7B-wiZr_Bo`5ByQ$<QHL|+|qlCdcNvM!xIAA+~iU(D+MHQ{}a&Cj%9gTOk
z{e7<PpX*h$_yxzY4rT^k9;qCBt~z=~Vv48@Dr)Rf_NTu^&?L_HN`l{x51|V7|H6G%
z94;a9tha|2W2wxF{J1iPRuf9uZh;FX+_mc`1Q{9p120516;)#t23ndzfszQS4uCtE
zLpZ({-2eSIFTV?vRazqE{!h6oVF<$|Rs~nN6}rv~hZ&cT%%jrl`Mi&}r>;5|F4|8o
zE5}%6f+^g>{r8dzC<Iw0PK@*Yn<-N6#lAU{m^N0{V$zIN@Ix5+ExLtvspT4>Gc%F-
zi>M%?@$taDL5n6w9s@w#k0B@64^<vM`*sNR7MD#o0t|!23$5?Q-<2^xRI=!pkf<<a
z;q7->d+_#mXL66ng}b)>Yi7asX2!6Eh<=()g*CyGk8dmtISt);D6IMkt5Q9(Fa9nK
zRb?_Osh$l-uY^Ihq%9PckZ7AaQNHwL;1HxPvSQLzc@aiIO-u$j=Zh#5Yi(!&;Mt)E
z()=*UauaX>n5{DOX((amUqsy)QTC)Y47TCwG2|so^P|9Y{TPTTsCcIEj#6#QT|BWB
zj>ljO*R_q39LXeAC#G4M4aaE)cb%U!G{&@8Brg{Oc!r7>Zob5j)8#nZw`rQEN@UE?
zl-7U@AQd`Oo5oAICU!9H<xCi<)ZxCT{0|^n{QYjzqx+qU$CFj1|JU`e3M}>kvzo;l
zTSNzwMXGC|N%HkE_WadrrLFn?J1VZZQ0%Vs#-kDrlXWUOnG3-W+Z8Z4t5$tB)}*~2
zFgE@N^cSwRef9SLa&A&Z#)62E*NZ4V+jkj=144^@dH3GmOVP2iF=R8lP;?&ihVlO6
zN+%(97-$JRxykem&Z(_LBD)OnTc}`mT7G=zbtJB^U@23$iTX*9#O2s}?a#CuH2^3Z
zZ(!rRKMypPL+XIh6CI)Jg;A9mGI+(OOX{VAA%ea*nZ1ZnvWZ;QrT0_M#j%W*)4*{3
zO#<Rw-Zzu8LB!?<_YIC$+IP-+&uNpwDw#hA)<NEne^MlB-;DFAqw6-*N<2sUT~2Dq
z#~|8FSPsscQJOR$7w#xip`_b8OQOtmuLb}sKi-!N=5q=6>$d8*HXghtiAJ82k02}q
zuG3UOG%~gD)bzf6@CQt%WuIA?520kj%e>QkfV8d$%<By~O3zdMjgf#Qr(##k$#xSh
zlGL2UpnY9HdSTj@-0ifXr{%|#2OWsJLQLu|UJvigBxyTi(ig|UUYW|ke<^jLF~bRs
z?9-Hp|Cy1uHl|p?g8JwxyN&stQ|&C!)9D!+;qs*z@~(iz{+JgPfAcU`BPchTtBu*r
zg_|Ii8j884OYl3BXnHNW%NJiq)}Fa`1dW$l#8O3+3huZQw8x=aVK!xFICNPq+=8P4
zSzl$9@5LjT3`4x~e|#BPPFjwG-yeOd6j;65w!)X+n~y4V%y=+S8+&<?2MD!FyAM>{
zkKz&T{s!B_WIQSn-+Av^BYuHNijmQ)0|mo2@OJ3OX9Vs3RmTNqCJiD<#GH}=aB%6r
z@I>XY7O6<NDerJf+kAfC;xP{f%gO!&>p4CpAYO=Id90kOcd%<Z2rVc%6{dRGLb1Nl
zP4ZbROiB{|aNq8V()}bMLsvP5ErPVgiivzIoP|MlNtmMSfyS>*ea_y0TO($%^+5mN
zODFoT+4#4$-JHCk4+5XR0egmcu8Jj|R^I^|@}9sh5xEIlH}oX5R(u|)x%!%fK3~5f
z<EQ&fSq;99j;ztg`jsegaXzw!$%Tu1&V<v*!4$v~nqEw(B6~rR_G(K=Z$O(pwmZQJ
zLFdXT8GW3*cBYjSZImdzBi~@}riB=yfm^`*Hzvsv<5(LfG+atw&)e2sX1#G~Sz02x
zCq(W2!Iw(q0vfG9KP1jj6zZO#Gibrqzv>RLpK!D^XftUXUnfIIkk3;tGz*t^KV}Dd
z7{fVuH;L3tNU!td^Lpz*u&<qG1TSFSgF$#k9JXHvodHN5!TefJ4XqnI-2G=AO|?3f
zzy6*1CbYnn{{at9-suJc!O4l~H_HvL7$OdUEsSTluSruxE?zr=F9ALa-GPwScEu%f
zT^ZW7hrV6`mnc8yWToWxHXxbd2%4cOwwC&*jlr@k^QF{wUDDk@Sf@L3Rsc%lWnspe
zeD+7<^{|hRgiM>*H`6D?u?ZG(VrZeTaQWbff!F_IQD@`%)O8{Ex9MfQlOuJj;`&VR
z8=xA-^fY^&N!eUT)Zql|$2y9(zi*z=+}RrJw}qSuK-s3~LAwz|Jgm8H;>##-X-;EP
zwV0=KS7M#8ERPUE*#w3u@eY6p{#*JSEx?j2J6Hq!j6vX{$f@=Xt`tryle~h~g7;%u
z=F$xJVHzbK^Z<p4mkI8#ft99{%0&Y)?Lg<jyHR}Yb19R2k)He{)?ZI|#82f=9O_t}
zOWh~?T8pT}j-Ogi=(qMsZLaj?;$P;CQulOs14pO3ItdevFzs1et00;!W@V-=hI4hG
zZEACiW3um<1=yk#haT|N!AbNN^MwffP+6ibHTSx*MLK86fIgBwr}fdy{z+X)yqX%>
zM$f7zL+J>GZp=YyYEJSV$mjvM9UH=eYL`n1IhYZ*#28Rbw~21?mjdC(q2u@){64U@
zrD;}L9ZGoA5lOBLq@!yT-D_2TAz2XbKymjosH`+F`(K;4dIsB5vR-EFF)Rp3sdy-u
zlF#KFMSM#Y%)JGTG56h?w>WT?gO!oC!HNhlw5gm}2l&bfDGS;q*rY;a2G-!9=$igS
zq@lh*0dOqU8gga#=FyW1H9#k5=S!Z<ZD1AJm;Adn!NZlO(`lWZ1I3%6AJ&}+mSOFz
zEX#Z~UYPROa=<{G@cDR_-V8@emso5D1r#03T)@2l`ZK5k?aID$cWjnHCJg)HqB)IJ
z{)i*y%5Xjviu<MNa<lP6dnkojNQaw;6Xz~7j&-<>meH83{U6@mDM*wq>b5M~wr$(C
zZQHhO+qP}<ly%Cs?W%ho`g{2!ZnUENdFN|J?wNC~F)H2HkmBhSi3nVx6q%dhk`<wW
zzw@m1roI0(?iqc6c8#WaT@CqXh%&g8{kUJwd;sl(Yg%#8K+HCt#TAl=0mOC5^R6W>
zkh_*)g&p$B_8k^tj7Y8GP1vj1*n1t@Fy28bJtsaTGX~zEM1X3!FfV*`+46=Y9#D62
z5$3pBP)g&1M#$G5C@cURyr6!vx75A`6JXm78@OZK47vRZ?Cq9iDjGJh34b2CCCosv
zqikeqJVF;booBSVb_jZPIE@u0^L&p?h)m8~D4caktYvx73Yb~x09>d;AMbx2*hQX|
zY7-|Hijjd$($2H6&imMiIdZUiDb6UXwFj<ruv(u3TV-W~LD(|ae5sWn8zrJ!sEzvN
z(I60-g-7t0P9=-ikk5tCs#V5*4E8mYJtCs1r;Vs(IqnPTc*3i*!u>`0!t)QmO>uPq
z)1K^j@krV;MMKCj@4Vm)^g8C&LJ5E5rAL5cF9xFRG9rk8>;DbGVRt4Bbs#PJ<Yr)T
z;gjBMYI_WZ`gu4~47Nuj5nKXKp5ZTi36UR6GPbmu{Jf;xw%L^i-N*T}c<AMzbOkZ2
zY$cX%fYPnK2_cOiEen5x(EMI8v1on{AB+dC!4?L}f%aIzYp!C7s+}%$pNy)qKbt~p
zaibkC0X4buH*~!3%w{fjiwEjKxOy@ZK|xtxvc~@@ujUu~QYS<NXF5SuvsQi|FMrzN
zUA$ezg9pwvNX4lp8epL)+R26SkjPhKOAZUG?Kt1CCf-cdyE`^ued@@cb?|g<kd-#)
zGwdFYsX;8o&{(Q4R{nj-pLe+nfXw9Kib_!4KmE6gLy@0ZyxGSU?=$ar%Iqkq5}K|W
z^$0!dU$;cy6zdOxLNP0JQ@+A*yB7O+U1JRMb8bwZ*viL_32`AXhoLWN0U=)v6)aTN
zXbE13Efl1D>F|zUoz7NDm>9th``pM77g(I?A*zifF}J$lEBB3VS0}CRwcHwImZhA7
zW*6nI6P(HKNl_|zIj77pB*dev+7e41NQEyLoS9Hv1D~8@KLFhQjnK~Lh*H|yt1`n+
zwI*xvA1?rJ(y-UKa)B<WR1XUZ#@0xrCD5Dv%#85zb3ll!5Vfaj@6Rdp?8Y*Nm1h5Z
zcflt(i6pzglfJo_@);_<e2I-am_~hi<cspTAer@r%!4u<X+oL4=>%OHNL<==y3ORN
zzB`&Nt;V(~<T^@1uD1LcajJT#c?m|d+WDd!MUr}9%<TjN6YiOq710KI;C9w@0E&1t
zs}f{^zrU`wmY~rCnE^xNu62adj6n^#6~EB$tzH}-nwyo(0Wj6aNdLAMy}oBD)zd=w
zl1c8R6IB8QSUXRylSDb^!i^U4v-jJf8wOYFYrl>dk4nuZs=}k|!Y7qOt0gXf@z<NV
zmDWXp=Wp$eqiFPvwR{yFMX{`n{1q2m8@dX>&$h>(4!~WTn^odulLAM?<*t9MPkh({
zETVAIYDm{(O@y2bcO|A~Hd*<LojMP=AA<cHF>O^(Na?&a6(ir*ZPzbun_jymZm>7u
z$#sw5ZpMjm`Nn}Mi@rU#MzaCss(aeDkzDhMmlB^4Sgq~k?vrwyLyZ8<irXEwLcbS3
zq>R7TAfNpDi)014@qL6YD?+#3jrQ>?e0FPU1^o90xSbMhA{Q4XmlFa&Nd3?+d)##?
z5*|Bm7)*N@`Yc)!g<*xyTxeeW8n&hdYP-U-e<FFhFHN)__@$8p*vnW((Do0hz|m4E
zseElEC?wV9U9tvH2c#f@iU*|PdH&wvKIwh)AgAws?J!GIG6(+x)N@qOWt;;sK8qzu
zG-Q+uGcmXai;iOLG+xEp*kJGmr7{p8cCQbsG1CY_KvaYkZS6N(llBAzvCH<#qiXHE
zU**)lo!&36zfc)gk$wH?E>69!1aK1hf0|4Fce%!Qd?xU>x*5TUM=XcfyX(Cpsb+ag
zmGB-@aulr5*cnDms*HYQu@-Rd0mDl2DoEJBH~MB%o~hMl{iqs0Yh4-d{K{I-M3>V1
zVj-de(v|+&GTx|@4r#Cin^N{WS2A{A=2|GtPUo?u?#}j`ijz9PL49mo5b)@>^w0+u
z<T`Ptp-E7rc`UXJWoSd6hL4T|r?x@&Iy2J3>&%zJR^><PxzNR%hEd1b;TT?Qi@hM?
zewZ0j;PNK2Mz@&hFxyKH$hgx`)NVSCu&pcynKfH$7A-9Lhpmf-5N=eZ*MKaVmP(@|
zS^1ye$seJ;Zk_3JtUQ(D8Vx9Smd*oDDj_dSkZQ7E%W~7gDQ2KE5Nu*A!{p`H&7v^y
zEgdbml+|$v3H+@dD=>nVKdtD`8(-*49OZrMZ|NmSII%n@Ny05Ne#1SAOj8zEMD^z#
zD@)p@sUwF{n>gknoDc;y5?pjOMP}}(jr6yOBJ~5GXF<mkqZ;oSPq3j=f(Y|9P80V&
zrWGet7YL_FFKs4$EA)rrFGefD_R`=UR;N>DA6|4J9<<3GB{%nq2n6Zzu-8)Tk_4`r
zw)j2iI63T<*<EaZS{LFk=e-P+Zi8TF!GVWCZt<to%yz4|6h;^w5LqQ+?{4S*jY)}k
z2lci2?NMCerhKb~u<kW8fKdQUMr?)`X1so99~y^$E7^y6+yFa11z?iuT4EOyN_|9&
zAw=dj_a_GOqW0QL>6~FD8@4Y{|BI3EVxju;41WRTiM`}gF?2lzR~iefNve!0m?sKD
zA9l7|e7%;ikwxQT7KqI<q}`a8I%x1l#h73HhUht^0-STKk<@)d7&-(&2z7mFLt3Tj
zy_X}q>seq0a@j_Yfj07m#5T~iWJ({7JX~fSnGE9dTc92P^M1)-jk{*?<=~ys*bic2
zcJ|U%Ny^n*DLWnwGJKAar$IVy6e#wAXT@nzfG-s_KMhjb1A;-?KcKU`s${IVB35I)
zkh&A#pcyW^fBsCqc(Py`SrR7fW${GnmkmS&i=_jMQPln(u$v!9v{@~};C%poPp8H6
z46MNrD;PyB3~V5TVmz#*jCDAI3ch(DZypw&l&46%8p)ID;vJ1eB#1wA+<8jYpM)*D
zfuo8ez)Qq4k1SBS>yBMS4kVp0aVfh-UL_t<;Q+wb>PhAE{?d;?ux>d%k?3I79|0Dy
z2xa0X2)Y|L;CNTrBdR^VF$<(HYxdLGSfdEVk5$!4n4}J`tx~LRv}Qvg9Sjz$TvnW?
z3L|7NJE*a=?vm^-b~%*ZWjC|u%I2Q@zcYci1|#1B+$0{_R}0^IpJ_jxCd&%UU)H(K
zqF(*{a54Y#<CISJYlB0dQ39q*8iHrW3KN8~A#!U2C$)e>flD>vjpZz)X0%wU1QB%H
zzJ&*_XmV!$j8A8o_~7Z{eXY++P6o7k<FxIIb>qw|7t<kCAk38<c%ZuQHktI+pyB|T
zbj9tH%7eW;73RtCju@)_vr~L<z+kG;u}DdFvJVoj$wt2S2V0aa*+cNxvxuyrjTNB}
zbehS#D{<I;a~j|tr#L@fS&O!5&c&yoo#|OeVfZ6%<yZ2-nM5_V1CpBm#xUt$*ekb`
z9i@Tldh)mn^^*cW@C>muY?8UKg_ZOXUZ%1*HO)YX6bqoQ52v}g!x`HEuHzd@K=Tal
z6(@=@6tsamC?XlTc^Q=z5I;SkX$`a9jYzyH$Cvh|y{8V{u~WtPb3SKUD9E!W0D=(y
z8?uFW65j(iCv(L(*Fu|^=0F3Zfb@OYDX)>QPGPoq+W8oDsVUrw)(2h9bjbKs(fri_
z5-bUj)~(0hNPb@sZP=M4eal=N>o?3b$mitSd!ONMKu_%eKH_RwbjY1j?I$Kx!A>}d
zc9P$y7(xP7-!4K?cQ~LIUEGgxnFI}^Km2GBB3?(!*y>;V*MDIY$Tm<>OUp*@RPa_N
zd-3t#6!h)9Mbj$XPh_0gyh_X~{LJ@DdR_wN6;AS{4S8<tnOrz_6Nyo12zrt-m#;(^
z+Zrdg!&{l^oJB@&Um#frFeQ}cs%<#Ah<Z^~l@g?t(|M<<{mt<0$;{$TJk0PJfm;1(
z;Vd}l_n+nRMk~k$Xb7t0(TP@LYWRO1`<YkssmAW!MUMilX85}4rcd7!F4#|#34+v#
z>MjE)O*zBse=c>YG1EcmjVw(<iyG?>f6D}no3vJwY`qrvPWvGe9zW4C)i_CNS!Xz7
z2RqBcstwdhI#z+&H^`lD6M)AdUba|-;GVJ4ILRSDV5Z{s*4U~0y<>y_a;RTX5)Rt7
z$CkDrkvuI%cBg`HCWqy<Ndq`UTqJ<60;>_Ys;!%x8z#J3B*^`B4lb~Vm`lUB+*=6O
z(uZD?B~Wy5f<%ZD-vje=@X8eT<*(^V`bHEbI;u5J3?~yd8`}Q5S>@-rd@h9^5O5_y
z)=kM!r>tw+qDop#^26DP>lUk^-6Sl$c`W$@HW{^b>y+IVNYA59R-IBx0{gKLAzkCT
zRK1dBRZ}E2lqckKLSHj(=ELRVH6`aMQ*@w(;Mi7@G!=J0mwN`s5N-}GUE7!z1v#-9
zwh|tb<D9{ohvXrID;n`n3qO1z*)=9u?7hxg$h#b1<ea_C8&J%+siI<S8_cLK_4$Lh
zU@C;*VtN+H6y(0FmiaQDbd#^dbmm!>_VV`41;&yY3H2NWnjE7g$XSW{`<4g7lFR)^
z|5)C6Me4flN0RF|0;^~1O)20HXk_MTqVr;Y_QPe#@oe-4{q!4ihM|ed^K<Pe0S&#G
z_#m}Ic*d53@w9l!OZS~Oui)%D0;upA{}5c$`;YuaBL_C#C=E<kPB>fXqdcj?yLeXj
zKz&abMXu>F&v_%|#-`Rt^KcS5GzNc;WmI3RHP8BhAh^TD>Vu6R*<M%(<~Ue8moZxc
zUV3g~t{pFYI!!RW1DW$>sO^*(GTqrTH5y!Qda6nhOjOg3IWV1jk0mkjtF$bk`$C-)
zX7iXOwjkB*I^IH{p$PL0_W3-Rjbm3oqrSC@GfNQW;^-EW-@o5=^X*UL-D*-k5;4%@
z5~|l^M`&uf>pB%Jz)W*9csNiDfWZUd*(cY<XyTWdr|M@>TBL*92#Q{W?dVg*NWoce
z&y)dK2I+l;3=XzZG$^Ec#a7jLD(oUx=^hyQ92jd*^sc65Yy$7%11vjP&FUa7|EO+_
zvff^hN{4d;P#4JdoARm}ot0+UzBEH*TF936CfM2YRK@p4Ao5O(b)gxvi?oTMQA;b%
zmtahDj0zug+&7N*A1X(eWy&o}Q_af3*vF^&Rw)c_XM?1%$ZWmnJx*O!xQ*z%gLG^z
zQ+?zRzLpz80H8?8{nR9(3`^VZZrHg&u2l<=#<@8UEr5SG1wX?t9_|<iO2Xe)vMf&T
zy*srw30b!j%H#bA%|BzhQ!I<3vUwH#R|%<_2fW#|I;Ht6bKO%I4Nl&FqGFVOc`A=^
zXS~aZP59A)Tf$`<#AtWGn-wvQ2fsFmraepyo+9Hw-5G?~rbM@cIv%+MiB}))Xi~ZR
zQ=AFo7M>bCT=(dp&fT%%6hR9)i?38BgTHGq?Wn9LqYBbe^nk#z%FQ*N(f+K6YLJU=
zY0Q+)pBY_3v8*7Az8vd<AivsPYBF<^A@Z#Wfl-ch0NFTH$e|Ne-l_7QVKbVQ<Wq=c
zmg>M#$uPXwIG=6b_B34q8vHdaaiis9idQyFE1-SaZC!UC+^eLZ`p;uZwkVJv{C7)r
z^AF|7ycllHd88SoaOl)1<rjD?|4lNj6nboyI*HdE9EEG#vwJ=$VC3J^l5E=J0Q(KQ
z{**o%<CXMdSU9SRX;OV}AMkQRf_*z58LfJBsiLTOOHa`o5Y$C|A(<84GK82{;hD%4
z&Z()mY#im$S;%jqL$e6v|N0=xpgu1^S7*%sIcEhzNp{u_XXIo^F=!=hgjp&8RWs^K
z*JY1OJXgN8MiQL6L0W>hSA9$cxfc|2dx*r9K|a#%5R{IN@V!D+6MLQb#zxY67GybY
zl_gzVdSdtxA&BBAaJGjzj1gM#%0-J^qXc@|qv9?n!_+iEz0L+az6UqvnbChky4HYv
zT>)<;B?39j<tA(^FJbRr<f3>|7F955=VAMejGacy3cf{KCTwG<&KEqB2<kkRSbhd4
zi&4-uXH681I*JbvNYpAICF(968hFbf8$Up``RMPBs9Gku@>jHkjcEXHjb|Y_L`AUJ
z8EYnEhWd^8d80$dgu1`kTEXO2hp@Di^L4;WAI_}r(f3h#=(>1JqM*29_n7*OEANOj
zLxObjf|;3I=IOiS9URz!=!p3vE<7ZtJN-`-;Q9A;p$hu$o`h`rsIge&n+~RDd8tme
z?~)(PLZ@4{wA`F$%S+rXR8Jts;+rnc5Lv;nrDqW)%67`v?_dU!_V}3T1BGSA*F%=T
z?rQ3@9Uq<#bgKYSrAYBr&pgvEmRSoT2_!am;a!6zNH0H6*BhGtoC$_BQX^~qO~2*-
zwXG_@f-4>{-ktIPSN?#%J-}1}zLoffi2kh3;Jgqe#P2<9`1?~TV^?le=>9wX<SPCM
zB4fUp?t7v-l_NR`PtB}R>>F`3Us}j>@9?_9K-QO+phWl{u~^j=B;;N{PqeHwIE3K<
zc;F@hm~0t!#^CaWI*-lHYCl>MriO4L%0JAf&C27V!28{v`pi8w`E$Q(%Ue*IhZ1;P
z!^6Hks0lu7<rlx8(Xb-dV2+e*;j|;6erkQEs#HH0#-}%NEPYk7INson4vH6Dq6I_N
zehQ$$&LdIdeqAcpE`v;sU0Lrl%)(~nkCcx6@CRX-6e$0`Eff%Q2Y)~qJcGzJ3=mOF
z>mCbFp{0n=AzDfabrD;wp%;t|18@!`JdO7XVi9F}6FKvgt{YEhj|k8nXANiyo2*vu
z24}~$%KPLemSk<42l|_FGk*PqBS0F+fj7b=`)+b+Cz2uC6|ZP#aIaFrd+}YfBLkQW
zL*Gc#u}spduWgtz`xZfOl!1VRAtW;+QwF-oUGypuU`@aGniei}rT53mX+K|ROGGX;
z;L*;?Ww52<V8Z1G)FT@_gG#u{p<2|u3|mT>7l!-L<MJcnL7t_kT0Rq<J6KpdtNQJ8
zOhA#;EpV_2KVZqG5^|z&qzN2|M|i5x!vjDM(cpMxqzt7X4CE-hMK3U?_hYAlst{Rr
zvx&a7Al${sT}UonJs^o~9GH&k@M?{v?al9?ZSoRLs9_=v{OG7^LN&OnOB9P8gw3KP
z?L_uX;V*!vm<1x)uWB0n?aylkqF<Tzyy;nT&D-N~Z36<GGwdX$<jE<rRM%`jAhZS3
zWoF-u7ke|3GBTbl<|&cQW+a0=tznV5V<ag~q^CiC<v?RON*-%u-WKwkUycqG<Senp
zpoX6&57)1_bmK)2^Zfrz%3(sAo|WnG&at2Lab}OZU{|<07UF`Iz;F>Z(F3axwEzX0
zfXv5K#0^v8BVVUsiFYK|IL${5puT0q=UaB!zdRiGL<aWVm9|yl9deaf^8W^=D;Q*f
zzV(>=oh|69-U2_nCgmn53K#()W#&oH+7gsBRx)4jThC7*NXO78Zrb7fc@wV)W3%-F
zXpg$%Mhaf(5yQe#zw1j_^CAJ09h8Yl_H?EO{0hU=A6vATDUN@T(h*?J@_f#mPb(u!
zPDk&(mw`MmlExlY_g7oipg{Z59TwXy{Oy%E5y)Yf)FM?^(PssKk`rPoZ;Z*7g>V!_
zp<NsOyDxSTBo}?a*&M?lrzb_S=fvU_c^th^t`Bc-l^LHF3-2sW|J^0}&WVeu^J6Nd
z7Zq(n%Oor!H1qQ5zIQu&%scYSBzMS=J1=J+?rj=Tr!)yjktu`$K}^DPVC1;a9L}Yd
zPbJy*Q@Ab(9b(G~j50Oi!94En_?{<fv{^<Nl;gA?=$qV1m&W_gnc}A5BdO$6leP^7
z?DuNLTfF&7Qx@<ZOei{6B#3o5)nU3XxB2W*_5?3~$tjIBF#^2#6G8EL6YF^l&<v8X
zQn9}ESX;}UVEMT#qY1o51Jvf|8@E${(ee%jL>A%2H`dw&o{iii9<{zuG#<D8k8-C0
z)g581FfQ-KVa*IVf}S$*rt&Px!x$2~HDky7Br5M8*HP&$%$TOk2mlN+Ba1)5B4ji6
z&dl)eRVT#SKkY-S$}`<eu8_$Z9M+prwEZ2%zi8$JiFCDFvXEaozh@22_N><F+hiz#
zN{thoZu%pt_?bYBw7d{fuhujOw3P6v@}3=oW6djQ7Mv5t(v=UOv)nzcNsg}hkYE)i
z^OsF?9@Jrw<3{5h%-29l-Wg+BwAYJUh4Oc(`h%r?<CxZrQfLzz`-L{K`8*Ip>!E_@
zk*k0;9TUbDy;;(m>16yX@mY+(SaxQ0y`yIm{-+I24#~^i^tmsi?<iO%qE+zNimenB
z+Q$??RQEu?cDa&v2x#<Ovd3;kHY$w7`BVG?KGDhO1eoq_@l5JfxGvI3@28D0nquc~
zkWIa))2G!zm5xaqhtXlfrHG_FvVd^kGE|F0YH{0X)SOz5tF`lm7@kLyY|=3C>qAFE
zH5_g_TgHwdJ$$7xfYl#HUIbm1(SSQRX{P$Kg{8GzJ}KVxZSPA6my;>e=T6E%%Z_|L
zfO@0J>s?QK&Vf4G{Ej)@BlLRKrQ2nvqFhHY#}fi5IvL(XJFxOk<VH4A;CFWnEt#M+
z!?&1@KsAhoyXF+UC&!%Bq5ijGC(Jk0lPgo2wcz3{7!M<>dnQ6;%eXI;ae#1Tkd9XY
zv0+HHP{YE}>Ksb%+=Tv|r_PUbWDx2zRcZII!hPFabxN`l{!`Wr1@$HjE2@c(^UmQi
zf>L}M2rV6tt6|CS`2aUcO`xMq2DS92qU%_?L(uv(INR%0Yc2-dhWEh=Ih=)(JnPyb
zNIzkJ`mOUAB?GjvRD<ZV{Wa^_mQxsN9QCd!M7HZ|<Nm#8eld#pBZyAqSFdQR0~pyl
zO$e@R!=CZyk^|il*T$;-j@j!+SnW%sez4f}`_m+oiZoFdCU|tTUsi*(l%7_hAz*7;
zTBd~5UA$)na6ERSE@#NtI$UD1kiBvaHZ1oI=H#=VPjBj%>j>pc?JqeEp5+F}b-~mN
zMYE#@>B~UOW$SuCzr$QFvO}5bu$V?EYbb%8oAdP1Yqsr-bpGf#=5(kaS@;lJA0Cwo
znn1BXT44QxNgB_|U!X##*!jMqrp>DH77_MWJ_S&7ZpfuYM##jG2rHUfFeB+J6t4+v
z<O~&~T2MN~vvR3--VR05-OYZvkGKEGDA@v3UST182m?Czl!8g0dl?Yiu*EiLDar1E
z2AbqD&b1P1YVt#@s@=K9{BQun)q6!udi%13uu1PAgLV{3F<h~4n?;)_^C4w|%O}xp
zJ05B(S9UxOg`<x8(pj<OibQ&F_(_(>bb9Kgez(;fcvs(d^({S$wZnJLf8Wp*v?5U#
z+HYlTal3h9P#8`O0X5Xu&Jfw)csn7np}oyJ?snzeT+^mbk3X|!mG&PJ^BE%tNlctQ
zy*F2VYqWdS#lE$-bfz<3Z<OCRN*HuB8SbQ7aQUeC4A{s6xYX2Ts~ULZ`2}HFlB9_7
z%V$$1nVL@c!}l?KQP(L-1hJ+gvOl<L_$*yQs)?VbCV+nrVt|6J_!)p7=6RhjbDdC2
zPrB}bNTR?nDx!83W4G4FoGaEs-l>#-s&sC=fmvr_Hj&5vfzj2RzzI-mmgf)1?96)0
z`ZZEgtu>d)ePOOVZQ;a*aF+}&=0`~KH5~B)%1i&Il{2OW+locNCr-gt$g|sE5CDmA
z0&jD=_CI-T6is9UMRoSKi8g`zmu>l>`(GL?H}Hft3gpZ8Z$vVScaDY~Vm>|wP+jU3
zqd=}LXHzzH=ME);J=vvWup)M34Iq1N!4lE<gf6R6h35%xI;ErR#%m*isoWKZIahlR
zWm2Q!<V@gn&4;z8gg!Cg^KEDMIu8QA+HAS2d>6VaWJ{zc6lcYsB4QlnnEYj-=YbGX
zeI?V`8(xjtn^)GSksBc@Z7<qC3rKcQ@peei9Y7p0xQ5&aKeBJo*JgQF1I=WZK`UD_
z61E7#=@D*eoYHLKEFBZ))y$S9gNSbZL+UTGa1_@<7tBJ0v7DK@eqEm~P!2vDD~^9x
z#DvhBTEHnKA@<PBAp3Qj9SZde$05=0y_4#Q@U7+BpGC2nkA@EZSFOa>T%AhZ3k^LW
z31AMDXj=g4_t{8pQ{4*jW|Is)9gu0Yd?s3a*h%^-6wOT_>SjKAE9Ug!UVgKGoF^6Q
z8eY$WekP&d7>)@YDgiwTS5s13=ESIGl9oVpZoS&|*kh-Hj#UTxG4C~y;!m8JL(I6o
zouS?F7y4%V?_|c{J403S@7xa!oWw3&r)=sRz(+3MYYP{nUL_*>4YZ}*QidxzK~59s
z!MCha*2e(O`c|EV5p~;4fsB3X0_npC*^CGfRIi9(f2mfCJ@vKy3*1cT+7af5czDvQ
z$!H!hqyo~nSuDE1C>EUg3Cz*3ICftJGn)Y^(rZZMIFvT@a_*k6Y=<;gZmNA|N}uxJ
zXhudO<?L!DxEbC=(a7i@n;1npu%Klg00J<!rwRmW;i>mL6F>vi$(sHRN0@qZh|fe4
zpnC(8NnE6oFewbUZ*4_vcl(6)R2T&oEDKcrq+pwzi_7@>VX(>3Fx1g<pMx)6*iS8-
zV+-4&o%B^bY4bo#s~CGm9Q^3DE{fj9t}e;N3&VRkqOFGV10I>I>|NVg^cU|6Q9UU4
ze}qySPNlHC<1Y&p)#)AJ>y~Ui!zJNg^1tk{A<7hFgqb3efLLyi1`^rF(wug#wECE!
z4znlqks_*d+@v&Vnrud7w3wY(*5Vk}4n0UJ3kMi*MTU{`2)*r_(D>O5*~wmApU^mK
z2sd4^h!Hr)VxB0)rDy|_BJwsS1p%}u9XCShulrl6XjS8RHQlTS_sHT$4`z$k_6v)w
zf+rhAa`*X8lpifc4p~*TbY@s$RZfkBu<JvvB;_r15r3G@?h0wick;y#JfD7~m4?n3
zYk6oE!%enxUorWig*tRfJ|N9j%!M@;#bSP43o;olZA%5~gy`6vhn{KoyAi;HxfezU
zOd7Q~BwqB=nvqbDwm*}(4du#+nBQ}C$<7Z}arjs@^gn%Hh{ik_O#flm0lddQxxWx4
zqGSh4o+SBuW}G{0$QbNFlZokdhTjt%KbDl&dsgQ;1|FDy0%DEqJ9=ODYeh3~M{pii
zE#NAhk1aho5YEK%Cs6iuhXULd#Dk`A@Ih{mVLq4!WPFHv9#B(mTtg#3%-BnS_fvcf
zK+}pFpqJHHl~MN$qh7S6tj;*K1<|NS2`;h#&`Rt@U?EYGaBT%H*L^Vfw3i|@r96Pa
zphbFjJ!i<t8Wc7UZlaN_4u=HFNpU-9@L%;9cy{T8vol6jG&0nN@Zil&Avn|T_8$md
zB`ff<;ylo2G80-oddF=NNP)sWYUNjj@9s}&p?D6Zx#{}pleKcOZ`s(wcYydu*<3x+
zXvDrM6Rfz1SO6Bz7;5GND<CpbZz6f1MP7RsnD}BzIBE7Cq+9f$>n=e|2L5+F{Qp@`
z|9|&fFL;8YmgTcISV~3nWYgjb>cvlKMHH+@P+l;g!9t6v73H*4#lzh=ZBX6Br<Qly
z{6azY4f`GMf9^>=h^D2*VBVH`YPw<Fek7=Eal)N>QH5m8a@5`3x6FLXgM+>W>{WGI
zaU%#!$PrwCoS;_eS3JHNj~ui8Q;^F4W!lN6`w%?(FF)#Bvt{EyFN3EJGG|MxVl-xm
zgh-%PqMi`ef5n<)K7myBmk^0G1cXuE;?Gg7#QDD*m26ex*U`-^8XDiYRIUUYRnoD&
z3M#U&wvy4nXSBb>y*IAV>CvpnZy4>(!18Uz0wz&<yR5~B+R<w#jD~s}qJmRd)@KcQ
zO_$m%16rX;?rp(@`|YX6?{P463WDgH1*xA0Mo`@gBC6ES6a5V=ap-yXD1S;53^iQY
z{9ysKHq0d^opuImFSLWrB+87w>AcNP<nvH|yoeCV=CzCuowPUxMN3OV`~fvYjZ@&G
zoUP|=y3mnD`%AxGtJi9&#4cuPXBr(Yb@J6ldQy9hc2<oi5AT6Pi`_J^LmTq!@lTcz
ztbsvnRpI|a2yAoIx6tb}w6)@(^Tkn)Ms5J9G52Behs-Sgn34`em=`4SW#;WK2j^f+
zaKBo<Vi*~`un5uy-o@DJ=9L}Y_0C%<eX{2L*QaA{0Az74z%!ootaH6Dke9vSJ2FjL
zNww-S<gMb>8S1!P@=xx>=I_Q@v#PsE<=FP-F=3x54s3Udvi;@Mml@A*z*J~UkAt4>
zjw*l+aGoKC3N-OO!ogL}V8WL!$K6*wWwbw}WBDZaoSfnW`!!KZOO!WQC;%#8PRS7E
z5F5pvF*(89pAuuE;A*v>sb+H#whQ;z@j&coV@xt>n!E2fV22Zx=H<bINGscP9Lmc!
zCN7`=|K<l;!?Qo&T?rgN{YJwlv-53r5$WVS`M%Uyy7dh%*|#zeDnwSkUd5m4r=uNy
zEGr15P4I^fkTZZ84i!DRm22`h<t_UV`9*NLbI&@U6%I3S!TOcc!^}GPwVEzKB3B=c
zG65U?Qri+5SJF%lmtH&&OO5j1eWa;qUGrDR^d5TVjYH%Z9$aj>Nti|Z@I1;%+{zHP
zf1Ww}D+@42dW;~sk23kV*)nteE*2=OWUQKqR9l!#XsE-K8i4(WxwaN)?E9W)P*zz|
z13u}L0P`swr`G`b;4G{Ci^1uu<81o86K|{jh&L?Ml%I$C)(ow_$=7dBn<hdIGcOA<
z#x{a&5J??K6<KPxd;X55xm$J*JG0mt3miq2VF%WdiG+H*bvwAo?;HDRBm6EqRL@4+
zpOP$hTlVGk{JZvL&o<nXVR`}}NP7oHUEv64fXkcfE_EpDRL)3dNQFDUfi})_;cuO|
zq(y@j)G>&CfDHSo7l<<9w@oON0f<HV_3*h>FfOYLXQFU-0CCj1PJpmcWsYSiTguLK
z8f#p<1XL{+$AwZm;P{x??KlqNhS0<kLmB%%I(>}g-qxG^GG{B$=SGR<!1s@a{-TVv
zTYa#IxK`Lt-lly`DA5}47Vc}F9w3aXlg~;Fym@7pSeuA?VLL*(<2?WurjWOG^HYT2
zpa7_}CNm}|2-!oT9BhjAfqe?H26I;)j}(<xKsYD<0tim)lr9s>K$ZO74E)l`7CE|!
zB`)X+-P6gMt|m|d*iD*nwvK$`@bO$aPa0YR3}mUN5|7~(yI4ibr*=TN@V<iu6mLYZ
z(1Ab=e)J1xpz^?1S{%xBrH|8xCC^vRWR{YDty_<pe3k2r_=TRi4ueMQ-$Es`={U%k
zwlUG>0&+nS%&9d211vv5h`AQI5J%_CFwV<u<B_NEkof@xL}UTsx!6eJUBnqv`C;7d
zzHT6CH7y}6f6lNO&%?iFpjo7!TtJ1=#Ug4K9}nJrdD7aJG(fzQWPY8;1v0RG5l<Y{
zQc_43ZMEy2<&D~%6AEXUcfnEh_o4;V73<cb7Xjlj6MnBoV08$rkZEo@qio#^M!7;W
z#I@H|alB!`64wH?oE=@RKFPA#RS9Cz#ybinmJmKN%;a09AQmHP^+2oTG_>q=0ns^q
zu^U*VESzGYnmqHQ<uOg}{V**?MVt&-V@8&14#hLchmlbqi@d&^BA<}?jI;E%HNHNp
zzlQ8J?gpd*tbBK1dw51){L9~;n(S=@udnVS3jL5qEvwq>;asNV7A-!_7!HyVrN}>C
z1QDN$hM_;o1C-|!Ue7cw!{NK_@~>k!dB#dtFq}EY`0qoA3o}N>eLyCC+GU*250dT}
z@T)!LCPeI&RY-wI)8kr5{r+8u(4FmfskZE&IWnVfN@H=`zoqX$%7+5{2u}gWys&?`
zq&hjAj0U<O?>n7P@ZO$7uTo}?la`Pq!nMN%ATKPhRCH12X0(Dv;U=0=Z+$TQXo}q?
zRN#C9U(+G7l3AWSgJA7yc#wDD>I0ri2^{dkD>(x&D>%({)YCPJB^}n3PRfxs)N%?X
zfx6E^ZWRVqE)-DfIiA5@=PYCj+H`03Za`_NX#oM>ANNA_v00DM0$nzH%pUiyY{H`X
zs6Dbv3LfaMT?|-9{o{Owv8r`(T&P2GGia>VjQvQk*Z#gaWO#>J`p=y)_V#B=jx3XI
zIr}=bzs8)@+pkl(2)O{WqF*TJb|%a<9S$X&7oiJ9O$DEIWh7m6@QLwBzm`#ro_8^Z
zsAv-S+<6BwoA{yvEBoWlJgyHMbNBe8Boa0@X0ZUhs(1Kf*_p^t=9CBQxpX8MM5#H^
zQDO97f~}k)`^??ku1BS)iYM5KD1n{<5;ko*x0+qey01}`P&mVN0XKAe32v~{&V<LZ
z-IOqQ87%UoqvSUyUhA;#C>z2W5BptL;B}d1{&EK7r-PLyuqur|GJWT|z_!V$>8U6}
zSJdc6SLv!&a?#)+vu|S(^yN@j@uo8_^b}4#QPQIpLLKDZb0)!#!T;f=FDw&kRM^)I
zw|tmmw-!(5XO<X;DTeoaJ-3H}i9SF7SjagXBYRTomu{Kn1<>rW@7zk}6kZlH4^F+*
zi)jB~5sn$eU-34#@Nw9X0zbeBE|zk+ZJy!d+g>dr+FJOrN}lGpt~IlC>Yyu>$>hD|
zwY?S&5ITCQN}((MGk*kpZ^<Y8<lvV4+x?9vg9kJ{u@1xyA#!~opOS9#_ZE(@kvaDd
z=&H&q4>0Hq3u%t@*jVOxvD=oUse4keN^A4<n>quD6^sgbOJg({fwZ0O9dGrA1!17_
zOZo<S6?g_W=nP@p&O<M0Z9m`jtm(deVqNh@j6Q9syh^_WCe!8S!$W^mI!seNePi2D
zwDFo8vJBKVtT)qBnqo->WXtZeYVqoqy7$M043VSsA#cFad;IidmGeffdK#ZmZ|j>t
zvkdgbU5W|;X^UI6hzYoVMLM3s2+0R~e0e{Jf_%F<Qn6724{C$qWOGZ&3a>P9WaRuW
zao!~f>`+c89<X(87I#4M763fKiSCXp_sr{Wj>`@sF}VnbeT2tz_yEc(m|>5P9yb8B
zrGUGzDF-%tCZJPE=2TNu9GW&{C_*I~QYV;v1H*|kKrU+wx!MO637Je->!%QW<J<YH
z*(R=8%&vB7!uGC#f|8JW=PihL5Pad|Ha@a$ySc|x#Tb_XGx_1Z%L6G2*2dmC9RQQt
zx88YP&@P86-Sa0Yv%Vr!7PVD0P6rLHdNyHnl`6a!K=+tw$9}~cW~JoUEx5l@!|77(
zaSKCdj>tpBL^RCAl<6{<MV?7ettL9IQ{>edm#_DRy*S4Q%14i;y4|1VM6C(1_losP
z;N*s~XuO-$745XoozV4&1mGj@0dYjJHx27yk`}S&=%BrFVC#u^l>oOB`hu6n<$kUU
znUlVY>u8*C@rYNqH$!}i-FH<=y2dhBkviq%xdX_G&(8Ce0WkR@yALj5%i;Bf_nK2T
z>aUBr5%%bCYApgrNS*|A=X7Rlo|7I&*qzPgFk&FJ)XT<~j)AX{H^?ai+qR|1i2P-G
zp32Qx65wzP8R@~9%nzz?4wdY#tK4NDe<(3RPFs6pTU^s)v2k*G%%Rw`dDyjTbHS=<
zn}fkb-Sya-VweReKOjfiFIih6IgSZV$<(T|J=v#T-f{fqO$-?4>;?XMw4*!JMWC&%
z5SkhB?nvWeO?36OEffXvm(ouxCO{nbINJeSC*p{SBx6?D|K=zt0l4n9DGac5i5XWb
z_c-JN?Nxp@ys=eP8ZmquH#5GL!FRh-x|11%6JVy#i~L1#a_v2b-|tok2mO<LHi&WE
z)YPN@N-9ZL{0%X*WP;ORMBbtCA)1fn*;9r?>03*~)b}G<@H?*7(1${tQK{j6D%Qnt
zjs-Whcy)q%fj`0;yev}`y{qAJ+d_oB)Oq|JZkdHR6}o7N+7LQt;{L?Hs($;LOGA6#
zgpeVz&i&T<e|x^)gyB|<Q6#8I+H8q=8_oX`!UfVL4}K~H!QefOx#TgXc>F0N0^iJU
z^3S^5famvrm5=uW<2ZHMVhX4&EuR=HWP-kv)*@SI<wN>+rDt-slTTrI{?|Atm}Npt
z6$ZOSBV+J7llwCfZAx<2O7rdQaTCC0om6ZP%I(b&$4}SkM{>`#sP@?1rv`Z&{RGTl
zQEA5T^gXsJeW&<tqZ)|?llC8Xb;A&>n}3NmLu|x2n2xkfc4YyS7cQ{=$_>)O)~laQ
zGL~$n(Tf97(&d(}z_$o$JoD|Hg2M;DiXpZy1wRc>yL8Q8cz|elsJj(BWawdg(Dur0
zRMm#WLzmAEK0I&i)+<XYpSwdi+9gVlKXCk$lf72Z7`u)^N9Pd0J9DClhuoq&qDev(
zIz-lc?5VYohN)*U*cbVC;dIc3vP}$&l={ScE>=8EaL!#OiBZR@{A4_wU8`$#+Q7&G
zZ!Yn{i3$tcCfe$cRr37^#NZ7dz93sb3>tZLe3j@hUwRe>hq6V!YIas968({`Gr8Ir
zO!W3(ic>W8`3#2{z{-^Y-RwI#kwOAd4|8c3D_dxOClF`TD%-sn12qPTz2a0>bC}e8
zmGY8n#P61Ukf&_?QDfMmM$5|cB)$nCDUiB}UA|cUI|jqi-%D)o+T{{ONzLDl__c&t
zR%xfSJ}A>#!c)Yf>EFX?yYjXcnCfCE`CSKO0+Ftc5qa_fSV@>*wIVErBcro0dQdl%
zR|U;H;4eQB6hkd;`6XfvKlSzMB|=jBImy+BG_uCm6@Ig!nhDI^y!^?8Bm7sLMA1)K
ziE2h+s|&WfvHV4WJ>RS08jPVnwbXO=OQIAl>-{43y8-|Q9p-d_IU19w8~GKBca2`|
zqzm{nx6FwMeJUX(87sq@dMXjU%f7E0<4a@{##gT|5;Xx2P#}=Ptl?>F28V}G3)lRI
z7m}YHq+UVpQ%V<Bye^c}m6ZHCMuD8xr3pNVRN2;0fbg-?R6kFgEk${kuZN)VIr0il
z#!Y42FhecB1d?xm*vk^vanpoVem@ga9^D3$1iPbYoY;SKLY2-x;sOA#SGMYFh&PJn
zVbS#Gs(;IZ9|8>Y-TO8bWBdpI?8!R4;RsT^_vzZ>JDw{OW6)BNd-1o^RcZ*Fjn*La
zh)q{g^+<ZKFE+5EV$8YI+3pOrp={$`C*oe1*i;E84z6JY$XgE`^e8N%%%clAY3RiV
zqVW7{iAw`XA(bKEf%a$!6IgNmYsbk!bd<I?TKj{}E5?(LJYfmB*jjYEE#2pS72xgS
zY>>ZV(tD-8+gbfcwKg6+i8}m09(nozta)%lv`t6y5XQGoyi&7`2#ed0V!41U-RW&q
z|MbuH>b4=nY`c@B$)$~!iR2!-$?pyX6%r`pt_3axi?y}*<5QTkG;q@ODpE)_l$PD1
zK&j9eu2_f-l_C^vmK+#_g#$wo5Y~_!mr8zSY5GR0hqQ&cLpEWip?WCWomgGCWbxOe
z0A(1#O+*>1kQ##AQ)t*O7l&5Zjk03XXpOr0de(sdOyTra?88${Z53768PI3h`|2q&
zku4>nF{O8=zB5H4jLNy$!0{jaTe(8@)Q6J)&%bDzbExmHoiP1luH*C_K<zb3BzF>0
zaCkwDTNB`@7?COx5ZHsipW)|4NEqsZrn?&^&hwn&e}Jp`#cNgp18SV-|F@tGH#J<>
zZ98zkCx|~0U$v<J0d(wy<Ur<oQ(EqcJfR~a#CGr8H07^-Z-7O;G!hOvlu}fH_a+jG
zE3#VEj5Hr04D(z){a^236fNxKw_bd(^aqhD%>zRdXL7Ba2G-y3%>W_A0XWA~*R@qi
zLM>@GZSfOn(hQlL7Y>E}xY&L=6wHN406g`VmBXl#BooCfVs^OO^~oqVU|zsLR$UQG
z+M{wLMJijO9AsH?eN2I|rNSY%1J$FH`~eUz@7_}qS_H9piUjqB@HK87^t^Nnb43IW
z5iM?O!^n*}x|sMoG59lsV9rcfoOyfw>bo79D(S~Dv+O)geCv};5~n4A=Ld<s8M#OR
zeum<G$z-_Jn0)xNUmxSAer?#<6#cb#y`z1{4z=-Nyjc4TcT_Ey5whbs&G$pZUH$pX
zL_zSHWFb;Z(B2qJ%J*8PKzJtRqxwY=U9eagPQMvmg*L+cfdOlIko&JI1`Fuur;*sw
zh{4b0+m!K30I44TOJkZPxs7V3Z{x7)?hK(ComA8hN}7u-kBd>yV>Sn0GQx~PLz!B!
z`1I!aL<g3OY~Rn7@@9Z^J;6-B5|^5D%hg0WgMWIMMDAC2&e41l`z`2u1RTY0mgRwb
zoHkD$<${=MDkdN3h@}UuxojRUP#IWrQO+ylt>~^04wMq_^?ZfDXN_8+`5ANc-1EZ=
zy=<)<IMOhInQEaKQ*VLh+c<bE)%ad=?viEXiG+fEX-GGHgdeKmfORkNG*E1SnDb*Z
z4Kihl@=})S>uQ^cemT$}+?^0A{Vj6)(Pwku`cK(VAtuM%+Aj^TFM*qR(<72UIxlOt
z7dDE%d9q=!d3#&3Ap>uL#%}{$yHdnD=2UI^v0$Mgjyxx3F{Vr>l?LnQ*wZ6G(ry67
z$Gi5iC7!2Jz<p`nZ9H*|R&?np%Q$X%iFg!VSBFGtV+DUg=ZaEgsT-rY{_)}Kc55EC
z0mw@5s98U`X*&wKb)we`DFdc%eH|93dB}YsfoA-L%H*bEnnM*vA{rDcQWJGMM0{Be
zqh(-?v?NeF943Jl9wnzn{TssBek#yXZ^f{twHo!>ol%-4&c{Q^^N<&ExHx$j)){<p
zHMrrvG~6yKHzL3%_(J<sWx3+e-;tqPE^tv(-ST#q%0H`4ZTAUbH>-+R&a15!0awKM
zUTSgm&8exPUap!OTh%@s!S{g*^?PYMPIQ4sJ<zsze2Q|wsJg^L@DI@>&(R-UsRza<
z_+!YQn_T73ygRtybEuU#3l1ohHrwQCghk+)|Dw3FImeHUvrR=8%9GH>I@6v$#^{c0
zbhY3m>KM<1%P+4)2D3zs1e13)W$$3n*&inA@k`#_r`szB*xYQB|LUdB0)bmGNGnSq
z$8*Bx>nwu9swg<tw=;KWFwLmXej!_fO-thoJt`eKr1TGkGxY0q$1Y4bk+QmBC{EuA
z5V-NW1M0s%tLF4{Lk;8f<2j0lcZtCrYrkHKZ+6-$`AB{2Um{f|6NI`bZa`BX*DNon
z`nG(;o%qW51cF5XneAYVh*D&Y^TYseCld!_@w^E1)9pp~U}fJ#qio^*$cyvPgI$Bw
zh_W6W6>`xd3zVP1>oETXynPSC5y<^hcY>2Cwu&`_%V=Wqm@fJwIA^kXOm8>GtS9Y(
zkB(kZoCwZ3eoVbH%3A4=ZN6fa_fncUZFK-|mQK$V^ondz@PJ#=Z|D;AQbAGfhdo<m
ztW-nShxzJ7nH*0mrRtpsU@eKFS)>wFb+NXA59;@hi)T4~n!+2H6Cl6ZxI7>gdd$8^
z69uW6E<~O4p@mmDgGg8QStrX>Z!l@lAdCAcAut{KmrV@a0jyOY>zANPMt=E#bNNTv
zZMr>5uA3IdJXuYSNRjkmIH@Cr(kvz<kL7FI2)#g|V-68<lG>SGYhY(-t(AX`ODqOh
z^3V$!h0Y#HtP<$9%8`WN&oQp6$U+O!gonEf_5A^eduXd8Y_7S|@M%O?h%uo?Dv{rr
zip7AZO;tKjcs@u~Pfnusk|VgQhja}X!NWC|XB}joNqab$<JXhKO?&=JH;DN10N!8I
z|GdMp?6ysYL$71Z-y~PfB&(aP8ew<l`^02>`FkOaEE)_(1Rj5cK5&v+QLYewcg=6W
z%C84LQf~w%Z|<5{8NAWyTjzmEyVCx^FM}Jw(p^Z%_L6&vQ^-aigo~}Ne_ya)E={{U
zReM=7&szPy6lOSDeC&ITH2Xfc!-<@Qi~vaPA$PcX!<1ie?X(wY9Vs?|OIv>&!*Ia5
zJGwmX-@?FlcqA-(jq5-9`Ru=auUsfgLuyGl+8?L3|Fh56^gZ)d7;~j2ZC>+hrQVuD
zh>I`5G3QmeLK4-S5?40@y(_U&wwI`zhJc=P#;4_U;G_pj>ILBcj4eK`Kb7Z-8NJfs
z!TN8Gr#`gNGedP>bAEG4I=w*?7NsMlI@9-%Ir=-t<BMZl8MiODNB~g07lf4Y@<*U^
zpYd#_^WdAoKg4cEt0$I9-dro9^1|M{fXdP2oFZL$g!IY-C<Ysv^M~vY-*Je{!n0VR
zmL$gE|H*(4j}E{Fth}h#i;9{RvNm5LM5^19(fAM(NwLJ)1a5V^i9~-=50MGU!yPsO
z#UY&le~HDccrj4y`yRtu_4JpR@VAMtgzox@9Sc18j3BGS_16|yrU*Na(7bB^ekm;X
z7-7tcW&^!U!d2&+af)ce>F$0=EH_wmz^*A}oA{H}rP48zXrPWOx+STZ*GiY+_)}m}
zqaKO@syBmO2+}QoIwFnNx0DbZ4n#^iKCX@VAK&^>i0)#IjtlX4fF(7V!Ghyxw4&RZ
zr9qw}49j%^RB%(Q!2stQrm=#F?yFphw{98~$AIX!PL2*(zY{Ae1x4WU9XP-y^)&Xs
z_Z6>5osO$P6CD+Fj>v7?<W<#>l7pH|WT)Ht92OSb83|^b1qYi~f;s%dtwLcF3mM3V
zNYIC8)Y{ogF_l|>{}cxf9P7EJ%ZW8Zz&&MDQ_GF=Vj~yo7Vf2d>7kw^vU{-()0ogK
z8)KdONjVZ*Xi#M|AR5=ZKoR0jhR+Gxmw)$OCjk#hN{PWfqZ1aGH(vFxO0xZtEb^Et
zh*ndGF{S%o0jKl^2Z8^;{AT~tkH)9J))fX_N7H69ny{{XoP`{D5Y>(-oN_YVbcoS9
zlFDT)K^(Ip1ZgVNj`FjM!27b_5aimCTDY2eul6VS-;&4waX;A<t;?mU6FcY4@w?}m
zvvd;DlBHh&b{DKt6|m@dn=QH{O?*5>hL$$j)YN9$<(LhyKaF>~=?y}*@3Bp(_|uy1
zb1!a&c)sfy^mUNno`nl4oS#8B#@u$6fh@T_zl}RJBEScO>%Im;yUUvp3hqzRA+$f~
zK#qpY|E!YCY2Ro1Re4r3|7DTLiHG5WCyKf%Gc!lB8?*<M!TyZMyjp0A3zUGBQp>0B
zFkm%qx}o{s{%FZ_h}GsUYpcObUfAFI&IuaAT|@C@3?`0l4ValifP(*?lbm%<LDghL
ztbr8ReUZtaoWMzSfruB!23baT@29)A0QaogHym^F_7*W{@#V@Q{TXDl_5^n0937Po
z^UMzoY)}bP*NEms;@9s{47$`@jUMgwsgLmP`!@wWRzujXra{g)nG%QDfK_mGU8%j>
zNTJEI8t3=Pc4kC7Np5;6{X8-caBeICj2aQRlY?R*Gr01y5|oipM2}ov6H|v#c~H}s
zO~1@k*-uNQcp*{nYxOQ=x3@@|t=~ouYHCB^dsa@u??Zo4YYH_=qfUx^!{!Y#3GCcT
zwX?(WRG=(p6*O;MEs+&7hzLe2zWX?HL#f!uc<1SXp_+BJTg@(|pu2UswNGB833n6S
z?=bL>o9_d6X5J+~4C)8i{>MpPz1qy?m#DRd<&{ia^%=(c%81O@+Z=qBm!2!s)&$Ve
zG(#<He?vB~+BtG#eScDVhoWCh({qYJ>!u!<Ch$0q!z|k~&lACEsVBA{M1WqkgtrO7
zxoZC}CA-lo=O-QTv(m4rm9uB6*7Li2;aFuJ|7Pl5uch%E!kl&4ZCQsP*b%i573+sT
zlq6{qlqrH1=@w`sq!-tMozJh~Q=CjNG@j8gR&O?J_n9@UM6lO7y6M6s*1nx9%yck3
zSIL}Ud+>&T@{hN!e#%@=2XnL2{fYnfqPM^Aih7q%IuAN2XAH7oup?OSNscOSCof>W
zOi}^p!EEl&{Qsiu9fC#KqHWuSy=>dIZQHhO+qP}n+RL_W+qV9$oXU%MapT2}U!IYb
ztmK#@dvDEAJ$J^*SWAehcy!nWvm}e7X39KlJwF}wAB1<WJ%=~8-Lm&O0zpw3LJy17
z!jhY@C;+$>UYrAIAxoA+)ZkAKgG9t#a_%`9<sRb*{Cj~NV@g2dKkZp!?N@UUGLi+y
zLUZdEc}0B4ziXu9hx=q9mv7?GSu5SMRgG(DKq+-B)je%pBmLZbQSf9dyNq17zg-Lz
zRqR(|nvq7rQ}}tjd(Mle=NS3>21qjhUh-~F4j{j`VW^py;r=_az2%%<xk%jT11SKs
zzEr8%sVt6lEPj0|;TM67E-%!|(5Aq(AnAwi*vy%S>Lusnp;-}3uzGB}z&R^t!7<XW
zo<Nt|#tKjCNprlDvW3SPqmNIfe)jLV6i<xk#!)7BjeN1MSYZX{FC^)RM}g$IOVnWP
z0wkl2_qS8>R)@hKB$E)+>+vU3($)ty!x?+S;Mx?mPUNSvv*+m8oR^n5m5pf8c!3fA
z?o!F2TCu17z+Zf$r=@+Lb|mrUZYb-^)2GoUyISRNv}FbuFM4rD&n?BJF@TZM%qJm1
z#BwyzN_lnmr44YAuOI~BGN+dq<qSpRit){EE-r7Swbh1k6PT8*5SHX+;$iq<w(%nr
za9XjPQP}CiH5g+syGQ2l8OQkt$6|#-5}#q`g~zb<PBxg>6tVd{-1U}9te3{fhjCmd
z#or^%pW}+sL@u@<-J;g1l*I@~zkJ-K5Hv(i-dqQwlE+7@yV64=4cg97rJa`{?)DKW
zoxt!$5S8g@*aqL?T)*`U{VNB{D{`QB$pV@VZS;gGc=2Rs3{r1(DEQ>&B<d<@!&Cdv
z+*7cCQ^yRSa1f3zJFKZ}T@P|WYq5;M-W?_!(YXjUNer_mj(`Z8u|6#XGFJxUm<n%$
zDYT^+V~+sBHaz*rse)9P1Gfy@r{&a@6v<j>cc6PF^zVy_SbOz7?N1vq+y<t8`=Ho~
z)({G`+6&C7GDs+M*)~X935(<P)lDE7ce8yo5QID)37Fc?Zp}s<Ap=5AA~w5p?HjY3
zB^Lt`-X^9qUx<_9dW$n%76?#kvT|*Rn%`-;h{W!jeM^9nToAb!P#LQJ<PnT>6i`hv
z37d=Wbe5_PcY+dHwxKDu$tFmw-v%rEEkgV;%*$9ZBo6R<EYGyYq3nax8I2*bSNN>o
z^H0La&wjr6+#}dkvV(eee848@<s{%3D&I;dQC@As<%~jjpJT7Ap{JXp&SGyI*^)dU
zbHpTjHhS<b<rW7@7}QH4&&M0TT-F$`=N~@z>Pz?J(mYHURMeLM3c;sfF{&f3%Bxvp
zF3CV31_`ib|KCn4ggtvA@ipXq7@HO)CJtte%_q%orx|XYj``;K%-uP^2cp?M4A~!7
z_aj(k<^~)S%k;uc1v~}tT=HjH&O`Qokd#mt=2fNMnC9hHL+{TVI&gv+egz-~x;3hI
zd_Mzk1Xph&#)-L^bfq}_rR>Ga#rfP+(^zaW36`1z+}!6p@hQgrR8l0=lguFA&GJcm
z1lQ7&3vpsAN?=&;qDRi{{o1=oE?bBjvu@i>KNR&1yHOkSn^ij!`|R_?&^HlEvuE4c
zA#Z5nJ+>sh71!jhVOUMXaVA&<r%>aCFHBF}$if~^ie9aNL|yoqV@^G@4m(QBc&#{C
zqD<lI*Hf9#A&N)RF2`L-fC1Hi3E$phE~;GJDR;&!w;v#BC2&fURDVp2e-;ePSpN7$
zOC7IjnxJn9MTKOTjGG<26bbXMc>RKGf?qf7A+-&Nq!;X7ZiNTl%{-3(yn4R#eQjl?
zK(GJtnxSg{LCu^(?OYi;jC?q{S23IN7KW8WyRW%(a)@d`b4n4HLl57uJDw(v-KuKz
z@2SgD{r7YYwVuz5_vGu`D;Zq=8DsD3FRaz;jZsB0CBb`J+GFE>q92)8R*fhN?*Gqw
zpK9l#^g}1uc)YmuPx(`~5!e|ojO<pZ>WzR+Th@>}dYxl1MT0GA+y@QvN_7MO4RYkO
zJzF2*uiRb09Xom)iuU>1T0$Xn6E=i=sO{7P4iXKQW!M`+=4{e8jYRT(kP3&~pnJL{
z-lMq|?AU7D6z8BhMTs@QT#<_21M5>Ozwo2oqNZm5G0?To6~<AGJ*wtiDG5QN9_jvW
z8xzp{UsUeNM|urz-D~2$;}<t#&1I6`n5Ny>mu4S`LI*W1HQjLqA(>QK+9UPzHMF6M
zf^}5mc5*CzJzsF=3^F`Mh{hC|T2L+8%!4=Mq+|n6uQd=wRa0pwSoBbzBP_{W(Y76B
zzAy{FTgL{+#$5n_+PcZE^rU*E+Y-al45ktiBl2k*Ad&QUuvEc9)ZQ%juA9)X<EdmS
z6KY8FI%tycITgr1=e_~slj&qL<Ys$a==*vk=R+(|z7OM`9)osM?ujNsP3o3vHia?U
zFaxA4?ElS+2GX6OD?=Og<60*tv(47+Mf_C{Tf;I0-EAw|z1}Oko->nJN|7bS79R^8
z3K@wAj<-(L?3~)=p9DwrkqZ4EWJjvV_$E9{3bnVXsle_?3ak~J?eN{@WugL!@B~q`
z`5=A1>KJBe(uwV1<7nsooV=V7=QDuIfQ+HnBJD<NP<o<^@mK;yP>t@U0FPr@Z7QtM
z_^QEnBMtGUD|1!emG%6=^+-o35rltyDO9D(Ww5%@S;O;nP-vc|_8lwreFf;AL3<Z;
zMx%}yh9h27l?<G>=Fg5|>KOL`x?5$rz75iVgUCBZp!g8=jm%*5UbFS#UB#{N!0}t!
z^HO_Op#EJR?hmi};mBWdp*5?UOb><A*@N~YQpSk$@<w~OyVHs8!pyfC5FckJu>7rM
z`32cut3~L7zzG}ico9#BKxKKH)Cm4mvmA3E3br+K0o6a}k7!Oi>;ZR%J{lw6T%d@g
zPMaoJ0Kjgt1j+$;ooDRdIU!i3uqOT!69AB|wwgv+^i=BGb8I;e=*Y;Z3J6_KB*C7~
z-*mS0<qPd!Jz~?s!7+}o2z=OHf~20?T=9?4753K)16%o@?$s0}Vo|st^P_YJ&mW(Y
zG;dO`d%>lMD6d%~M3JgFlbxmg^`-SWA%G{8`mpxG+l{$E3vujz&X6i3X0G7Cde`ox
zP*3?QE1`A39ec+B*<qT|)VKm$9yE#?4LRxdGXrrH{eSxpnIOg;32m~^1%etawwt?b
zaKpyel7Tp)wG4esEN2CX^FKYOFX&o$|0G9qHtjTLe!Ue-nFOw{FNJ~^Qv^2hSz`jS
zLb`HB=O{=lW4<4k9So+->(b)U8``0wI*CodmNr0Gz+YZ{o+O+%XdDH!RgelNzL>?$
z;=^f$jM}fz#mL)PK8TpK&D<4}E~P&<YM05Gaw1YrH2lUd<M*@yl-psA852;I041Nj
z*~#U;{D}bcA1_CzXrwv#4x`}z^cDQydba;l5BGmMS1*}8d*Rwr{O`MsvL;V-x`H=S
zhuHNsai=+_*U&!{NOdEa!SpJ3hj)AR-@fL7@P>`*h3Fy8rhnOfY%}D)o|}WrV}w74
zr4)DrhOH_edr)=U5ezk@+{N6c@r7XtYf<JI6SlWhdvH<{O>;D?!(B|0aVIYIUeSVI
zw9~<~d||lHj{=(xti#lZBc2&#_G>TEv_v@%lO0^_e1GjUtU@ERDW=@bP`g0_J6_+E
zU&a_h+Uho+HcoxPa0S{sN)7s>lCqa@a!^B32SSkdV$LabIE#ph%>dx|=NZnwz?1F<
zmqih&jwteyB)9hiECP#+Sl&jSoWz@Mrm66aQtvK0ob>4IjVAtmUW_8c8V&u7eg!))
zBQou4^c6WKZ_#)!qhbh9{MUbe7M2_WYgvd^bDpfhyOkLbS~DHv-j&<Ig>i#Y_K7~!
z<8T0&L(io;fdBT#*1=u%M&z@E)3M1blU&rstN349+<J4LbdfIgMJ;epR|4@gdDV-l
z4GoKRg4}-G71h~GCNeU}ZK9BG2f7ryNX*m7&Y=AK8NcE+$n&T#T#5$VQ1G+#4)+nM
z79|cz^u|dqXuq&Dwx)2EmAx_Om%T8wem6ONDzc_qivGvL0J(3JWo0S{1|BtrdsnL;
zPxZlQPUdNpBdE}1l+IZ?3-&#0=^IATqhD3spTRi3d$Mi@-;s!T?o;VSZRXN*pMOtw
zJ}gU_t@K2w-&zmqdMQgfc+o!15wE2By~)VRg=pe!TlN(hyW9mHc^9Lh^BN9$bE-C=
zOq=w5dp8-VYe0WcgTX?7mU+5=c>^&N+OH-vmhh1o?L6;wQfLBg;4}_v?w28ecd45)
zgmo+~%2&WPp&{;`*{+ii0i>*2(GCOt3N~^Rs7pXMRj!;E!ve)ZQc0<Exp9(d3ndE2
zW_obFZzn9BhGJZ?9rU6?u)~m>F!eaE1l*6_8oC7TQKQBj_;%SizDxRdP^$FK));7A
zF$73MQ+k*ay?!Dv)(<4RTINMbI5IVr{d)zB=?*;*g@rYWIyG(ELsb~W`dPI3jz48%
zp)NOIbC%dTNqzF-sUnHgiq_zAc)RUbPY2k>Ka#gYB|=@ZO3)0Wv<MO*^iCK=Mje&Z
zg7&&f?{$CGJw)kyN6RQ+JKv}_Y2}Rlxv&gFYwd&}bq89Ime4NVTEmh1wh{+49HGNY
z&9gIXA=QE#WeYaf{DSQ;8dUxH+_we0Z?t1E(H~?akeU=%p#t{e3=Y}#f~Lrz-vKzq
zfh`8v%R{av51Y`#4%vr7x~6Bb?)k-;Qxt}jG8Jv&MLMFPNoOXSY4k1y1Lre~$_?ks
z8&Q*(-!lR6W~HQc(36MOoi-Xq?4nT@4o<sEnY~r+@f?A2_uK`xotUy>^TM;gmzZ=O
z6wyOwr#d2msX;LCCnH3)>rTp(M}`N}xD%ubZs%pBQ>u?libz3d0%41(>;%C^D$oje
z62`qpXPhL#faXS8)-wJW#-Uf+)%7y|@~SyD^0>BLyVE|#M*va#R+pX@K>H_Ag#4j6
zh~BO?0NZVQ_vTyll@HR*@>{*At&tRm-5!g=bjrO9B6@+0K!Yrwk<5ePg_@agGuA`$
zM^S@Y!Jzxuac=s?S>RbjO-^R?pd>r9p!p$VFIB%00;CJr$^kaB>;F~@k?n0t@8FNI
zkLkc5c+ygUD62cpsceIfFUAz`9{O=0E%FEHyPL1bAi0Qv1~=L+p0GBnB;nK6F&enB
z`)_XuW%#C0AH|;fasdtD^7Ddc+^~N$-5`$r&<(T`o@n0^$M!JG9~D;XI4DQw<A4tj
z^N!Kzp?jm=(z$a%vI%yYl_F8i7vpUVE7Vb%11eh!V;MmIM?WMG21=8BS%w9V_!!3u
z81ks~fOd8S`8|G11&IFXL5|w$9YO#~5vdgm|4@yDd6N9BeOyD+E*esX0ztV&8KX!^
z7@n1Bw4iQ&jBNB`9&NX~_nQEXbN75v!D?<e_srMsgpNK#ryYmpltoqW-kkjV4{l}c
z%1d06PffLLvl(Jm%q6(u<FE`!L&wbt5{3ZB(LQ*noM8J8MY`*DSU&m2S=p;uSN@E`
zFBIyVhS7@Xh@2QCC44Pnwp}S1*a_CB-NhfuMk-d%t(B!ozyJ)IIx!cQ2|)*2w5E2t
zzdA>u-&ef=cA_L2C8g{BWE>d>rS8~BhKX9#f3+lZSLU@%il$1T4Qb?Q7T9i%CFI<<
z#QGxel-gtaz5+@B?0YpJ%ZDrNbNOk^y!PP%NYd@oB~yf22mh9H!t~cjL37qMG}-PW
z2#Yj3W_r~0a9A2FdA&8!Kl6%N7H-$a+6}>4K#DBA;m8}^7kVa5sj4y(>dw;<<XRxl
zqCpNyQctZa4d01Md<mkezy+5Sga=QJ`-^qkGmTAf_{2y;issUBf_b8Peqsx8SyN47
z_VB(==))v(i2N-j7VZT2_LkYn8w&yGDI{gl;bu)s@U{p{YlOR{ECYm)!5R?gCw0}p
z;Yp`Y!U9;5*1uk?i$$yh62`|29f6u?p)ck}&<37V-sK<qNEPu5<xX{trkV6@Djh0W
zT>C8Ic)}D>(EdA<vQ~jBBA6@c9<L1)y7tfjucGF|qYa}<aq(h`2S7E|J>N~5-E~OI
zDr7~ZQId{4e}F@I_9jdz)DI+e88l4WcDR+zhN7$SG0z1T#`>60WxiP!0ri}br@Ov~
z{Wb;xKmKPLFR`%M-XDF}DiP!!5WZ&wrA@d4Pz#Xh0YIk9Qo`S>R3~GWK_6gRBEMeW
zC|~uwSMUMbsLl%&g4i63^gV?A6hw!tbN%8~D4(l3;I){nuXy$T{g-+5yg}31ZkQG+
z{v%B<TLPrK$-xW|Fvw$h^A`Z84-=$L+trHtNYlb0#46-{jI?#!CmdhY|I|IqQnfuK
zOMtJWNNTpFLyhv1sH|u`kLC9T&aN1bbBwxn{LgOd$q7Y12o7OBnhA;040<4cX|nir
zEFHauG5k}PX==1yln;%4L-c68!O0|Zpd()Mh>@-%`*>Uy@uxR%7or3!Ql4~y^u7xQ
zQfXZ!fJi~1BMH$lktQacQ#SLDl>}a#!=v)PoL?=Mv5Ynl%deBWZ%cu@!g1nKl_M#*
zK{-#X75MAXTFR9!WhF_j^d6oDW#^NcyNwR2^@a1WIKpYJ4KF)+{j*py)^+zHU9sJ;
zLIM>ljY)^L)JzxspHpxtP)un|G3MwjVH6yIkj#Dgr8#Vn1vQ3Np1cf}?}*=VY0)3O
zhsd_RvhsaqgzjlYYNBzaTy2v)_`zz6Jc1jeLlUR$KKQ&62jF-gTQ+O7Y-5(G*lt5$
zzTF8`$wtDrX<!oJ`|V;R1FLWT_+N76SgkXJiq}1EM$t6+#0J24TX?$~dwC!HP46!G
z3T?x<FxciyW&=dQ15flYG1FTRZJRw&8iJU+EJ#s>W3a|khWhN^Fxb%hzuU!^%Qv8G
zgk+zGHfD;~38IsXvhrxJ)bg_jV$@xQm#~U@LC;oE5tT7O_KiPj-uTV-mT#rsobwlp
z@bk#8T6OGeNSq>>tPa<H51n2bfs|OWpQ1z{^Q-C(u$2+dd0ptyjxFK+ikokzq=x*U
z*726Q5Ux!5dhtOY;=GDK#~&Nw^3U3e@@$!S@qrasm-_w?n4Aq~fYhyyeMDwsQmp@~
zZbHbJ@cQxw-GF4yUr8HheS!$1a2siBz}+GO2BR=nWvup*YA5dt`pm<30r(Y-9DF?j
zLy=$?p$z~cLOW1J*&R5Pw&aBR4sn9j7{3I@ys{kfzbuP})E+51ECP}Q&D7P-v@u=w
zEcMTFL&Pg_-U`7m6~ICSLa(wN!ibH^dT;~Nc&vJB6vRd*A!_p!4+2N(DmTmllM&VE
zvfgJ6H3v2`;EyBalIF)(kZ5RD&f)xLI<C4r%!v8SA)m|25`2sn>xXF)-HfinQh4E0
zrHBoNuli4anvgC`<zHd^SoxTKHNb&aYtg2!&}9P!<x4ED;M98;r$A7RX0~?}dZu*g
z7lOKTP3i}JuH>}w@AYC-A011QEe9a#*D!xwq26AvgX-Yh*4>U0N@Q^$;Bo*R-UMe`
zlb?c-pt>HCVc*tMR^A-C9FBdvVu?JQP0GVy%=;c3mpm;DQ_0E~Gdwh*a3`qsrq@b$
zH_p;Gdz$yeIyJtaNgcRfR+<c@ST`U^d@?j^D{I_Y2L%=|@EaDt0WuoqKtaPN9bzh3
z^RY*PJV|E9{i)DCzUGB%hQZMCAdpc_J$F{Ez?TS%{M9drgNZl`;C&INj3B$<!AE{R
zpbux60*j{rey(T`sNGNP*U@FOJ+n;&kKLwQ@_lSALKIb6d7&rvNI3!t^xMMwL{#J(
z*2r`TE(#27Kn$$hg)V$ZzcVOi1(ZaY-1eM;A9B~|UO7v}cibuz5Yj&~fR+B3gQZv7
zDL4UM#{uVpU-pdBsQIen1z@ppX@vg((OSe^4@~=uu;2yQnBv?=YezGzDOgGm+(1Mu
zE%A_a`j*>^U+w6MkWY>wXOg1rWP9~xPt@thvG|N=EhJcDRm~xJ$82&%A=I8tNd8C>
zLH~)8Fg<z_pD30i9jbWEHx|?`?|JclDkXcVAzVGeHfFC`#`<OyM++fP@cKO4YJA<t
z+|G+TsZ53~T4JYzEQXx7Uw3IS#~jv9EQoWirwwv&O;d%`Q@$jiaY*z~_${{4g0!uC
z^Ri1UIu>#LxZ9+`goSvRbO2Nmi6y~SoA!^?C!h^@jNhUcc1HDehlHn+F{_WSW&A~n
zw(c#S02R&#2IJ{AKxr%<$6c|nUn%yV?I%{GeVS<#rf9h5QAzuKDzrp}51lXky1N_I
zKjF8&SPhbp6O)`Dd(GW!#a)CR9q(S4`1{KmSjV@<++;NzvA(@jzYyyx42|PDn@`gE
zGUxiY3G!**Mhx4wKJp!Yr%Foo9Qc2Gt{XTIFi5y4%eww)4m==E_wu;Xd5`%bjk<rO
z+hU5sn(*ltNO~t5Doh0!aSf5>wbCgdGE_AYgs1~TPm7L!pLn%c2*)eBYZI~LtCD(+
zHb?q5Hw|Qu`}B|h6$RL=8UepnKee7&^iSqq<&d*ZXoIL4z;iTa@0tW_D1j*2zT3~C
z<YX%9D4Snar-lMfF-@M?=11WTT*5TP{yvugZER5qI`p>e4Z*Y)Xqc+r>FYX%O1_YL
z1eNiC2+nuSS+t9~p5gnjIBISAnLf}Y#asT@T=eQ7EhI(&hoN`AvJ*TbvL@aSKCzyC
z>!zV;y!Tay>HRVMhZ7Hmg@=9&J;;(%d|a)K{2w$8m<xH)&n(L=HGX@cXwT}QrRgsb
ziz66^4LR2{64xg^kET%`c;M4wMyO~@JP2OnF#e)=(#~apnzORe%{B8SnXabO)%*y*
zLq%!wI~<^`!yt&{R(IWprc<b!k_o)F60i0b)BJ9XNz+&wd+%^*8-SKz*YjrYlbs#p
zk2;u;9XCj;)umNvoj;gv<$<d2Up?n(I9B(3xkZia8DpSQona^z5A<^TRr*Ak&#kzR
zBVp1-oI7%)mZ_<iSuz~C7(Eb?{XP2vgv1D6J@6h+6r=RSD1Z+dI?`<Ucj!jPVjSHA
z7@3e+74I(r4&V>4J!$V>_SvDTFY=2BUtAKbU0ca$Uusyt#Btui^B6pj#(D%--!$)r
zKM`EEyhJ=kaOT(X53_Mb4s#KT-mw2TwEA`~99a4;Bx82-=1|{>>YkWr*g686^5i!g
ziD7(WifHkg#+~fiE7a&fhp8bc7!`J;A_G=VDI4ZpZWcUnpEym945<yKGQf}&!Ckbz
zR1(fK@kvszE&N$)+k-X~4o7?{Nj2f;%V2;de&i+K(qdv$WXm;YP@=Ml=T=ReJEyVW
zwx2-gxFTMIlTHN4Qgl07mEkX2a}HccDosxOOlPzAATIfQv0}(RexQyWX5fB7QPS`g
zS%mxXs-T*gI^l?0L9$<n=Q3ecQ%S-*1Q`4ei8-C~O#cWNl;Gvxr7AwM+cit~KT@e+
zq9}&}4$}ddp%6c~hRpVbV|f0UbJ@a-o<vpq$1{klziKBXl&Bbr)C)GqCy|&I=8#Y!
zdH9dAHiq?v*TgqLFM3Vo;iFPtJa?sWv)lZ0ifEOVj8|n3M9FzQ8?}TRTjYSFwoJTU
z#Q*B2ii{Db47F&UZ{i1s!d}US{Lwr4I-uLsWr6)xpJ97<2~H0EaPX+hcc}zhXzmAM
zVO5c>`qes?sahTEZ?)&9G=XKe-FfxDvhF7Md5VZOd>1$Ey-Hw*4wLk0L_Cv_57H1O
zS@kVf+D_rTURi+D#-T;4p5Ug0r7c%EnTr*Y;qgWM>#lNIf?*6Y0IR9)9uKPa#L(WX
zouw%McFtXjKe0~a*zv@~A4^7Y#Lb9oV6`XaLJDhF@eOE<h$Sh_#+3xT$ERRML99S<
ze^22au#biXMCXwHh5W!6ie)YoakR%G97PeBbU^Sc0bS6lLY8_x{skk<fShGb5?yW_
zC>nNlN`kI_+p{K8)B2T}!0OrW2K1<{7E~j^C;o(Z7S=aMZ$QeJ4Vs}^@dd9O(Z8sS
z#-<44057dhdm+$w0M(Oq@`#$MfX~N)?)R?P8(`lF-P(93qC;JlgzD0KuCG@H@50$E
z1nfMIo0mLqvP`wh?xV$?(K2a?)h<4D-&=^*QEc(|39j#m2f&Vfq&}K6(9S%sB>B6Y
zG^Do8aBRy+0+B-{eTp71pc`-D+)$Wncmb+f!P<u-!1zSF5-DFp+JHp49_HAS6oBA*
z=GzT}e_#<^V7qe~YY-Rzy%Rv|y%KeBv~|76qo|QL)5h2+qNd#zD6~>P3`<6RZe4YP
z(q=GoC#q*pf$rb=<iS-xW>4T$MOc!t5TBS&WT{ij`WGEaqK7%ZKHne_l2N)$!Jtbk
zS(DmNy5Tb*C;nhm)j%+anU0vLs@o08eIpj2SfcV1S*;pI`WVMBfx~!RRuy%@m5X($
zq5w@^$jdm<?Y1!w*ticB5w_|qYtcOcM4!;RATvC!tLtTla%UAqX;Knuo8FNds?u+P
zVI%xV)MNb)tL?_hm{zDoYo576L~-_6@z#-Rl|j%Ep_*Fi$JEOA8MIXJKt5B5R3<kr
z>OiY>V)XFKf^{9auNLo7rt|%(=uU&G7{re-w69J^8WeikD48&ZF6}su=1g-!2%yp0
zDbIyDaIPHe`1{6_q(vpp|H>S*5XPt2MgbJu&r^@j-teRxFqhhC>K2avWPqhE!$MQ{
zoZa!A-+M$ZvAdvI<CJJ&%DH2@;C9St;%t*sKf~w<Q_w#k4R|6b{^f>R5N%yjlQ$ED
z`@05Pk=R2z3I}tcgPvmOaK1}q(E^o!uzCmfc3Ru72ufk!Qm3J;Un$0G-?=Jv*iRSA
z%LY=6eH?TNiNdhdiekjlaV;<77p|Ci&<V2Y+aH@44G6U(AZscAVhG?*c_(2U4)@C(
zYj|@m;E0k26iX~1QXC*_%R%X9362{5OE-LFDFQ_?Ji=R%UMkvjhHLBSw_i<3<l=2=
zNW&;fJZx%de5REsb>IM*6-YZ8D@q{ZVDuSn3cBIZ<h;IeH2>JUEcWHKs83jw839KC
z0{qe9f$Y$qgCv%%%}Nwwo)-Dnt!omQY+Wo~8{yTY{0+W9?BV4F%xgLF0h>aYE~JKm
zuQWnu*6}bAR$Tg5O$+($atm)+GnKJkN7@vB9R(B`CJbf)A(W29#D2;9pg11^8-cJh
z_ce>dbu@W_wqx1~M?t)#Zr%D&8fgTE^GPZsW^@6TI!FLoXzu`dk+9-d=n>01O5PS0
z?Q?|(3zWT7j!Td>baQj&ur^_^S3Q8NOfPfguffilm4%tj=C2A3<Xwt8&1Ke*@5kSd
z^Oo$l#NhIe#;{;fk4&_jA^;G42_w3NOWEpB*wYu6-5fykeWJ?ETSK<ML-uFf$9i!{
zYTQ5XFQ&Sk(s;_TV}JD@@LZyGM|Jc<#Kz$vZUMEKOoVI$v4nBHd3;9q;T?9WY)+fG
zf#_#S$`27vrX=aI;T-m~^mx<+zrw4=A4Be9`x-!o;ta@TM^{VI_N_7}-gH$$M2@m-
zZ)@x*yoGCkk&9Kb(H6)*JW>~#godsu3U@%lF8F{X=J>Y|&iR@sL}n7T8rD6CdBZp}
zO~5e@d*JtRoAE5}#5Ox^d|nm3oE<y&**luXSpPygW|Oi4i*M!V)m)$KcW{j)ROW9s
zew;*f5<Wq?7taZ1x-SVvz*5O8pS^ThlvozQaS;eml_p&k{L0K9Tyceu9jcr|$dDJW
zPJ7Z4KL*AriM8~3)0SG`K@wv8^&F9<4*#qjTVV6=6q$ePJxZ$E6>V3bR?uWs<y6IM
z=q9P--g*1h<q*<#s@r;mIP{#>u3}w|DABrc2?(JcL5>cCyq1hDVl}*mb}o%wm3P^{
zD_}gnj*naVo|8!FaYWofASnIC`NFU&+cz4#$jy2vc5quq1J5<IB07F$$sY9*FuL~*
zFg3rApDr&2Y{fb8DND@lDlEi^7Q=|Kht*acE?a_vS2sFi%+Z4%ai4}gvK0FZ?d)gB
z!~x}ux{p*emc@6&{6pAZnl}4k&WkI3^8f$>jt1!lKtNCP{4~@7dZJVD1XW5p5EcGU
z;e8vq4P*$!(1Hc6tzVV25OZSdM9zaN!qSFXlU|`_&2_`m)fB%|3%mq1UKs+w#z*7E
zdWOQy#o9rRz2Gv1d47ZNXLGhX{YlmkxdtSWL|3^*i6&R9kb$90$VRio0hF#tt(){@
zZ(R`I>&?$~xOZvyQ8I%E<ip1)hW5c&*4Dub)hfx`$TihFFOGYh?;wg5Ai8B2OC=2Z
z&nIu5tGQm~7mNMZo;#-#WQxI~_`EXdkDoT~w&;Vq&8>!W9+eMBK*HB8S;&3F9|`?b
zeFGg8g&P-7RCF)BD}unTxth5Dzs`4u5j%M{n1;R|xq_U5^zQ`9YNI}gTvWj{RN`U|
zx8r?>m<3@JT{^fSm9X4v9-)q9>^p<)&g~sI1EA1;ir#En#KS?!%s8qZ^x4@bcWJzi
zAc8_*fHGR`bw{~M73*ml?w#xIc_;Fp|B5Wv+%hcn{LHj<5Be`t>H33-e`!4p1N`lw
zn2uK4Rav70qjjqZPMn~Ab?L9tAwrlmrDo_CdH*GmRm_otav4TIS-wO!q+aYrlK$|?
zji47-u!Gk~5{<`)oPq7hyM@@jVY2>IZCeo6YOWgUxBJe^W4uL=(E0Y)A^JKWrP>gm
zUhBdiD5=zUmh2;E_W|3%6uB4J&{CiRM7+U~^VMfG5n+)0_7vtj41U$D4K^?mW(x_<
zl2+@1xnjcmWu^#p23-6vpV2$eQ$k?d7^@27F5hPA8(MW|MSd|;DshM90b1Jx4|Wb_
zDD+{S?vt8T9AqT!jR1Q#AX42&)be4UBavh6@`$fAP}?!>6Mq0APk!!Q_T}4-HPU&O
z9!c7+JsvIXo^w4Jp4+Fc#opD-^UvYE!MRhlG;6D*P=%*839*>piRxdy*GT8tk4V*Z
zw`(8Bw$+ofP1u^61P~$?s8_?lDQpu0z3^K}13+p$w@-K`u@@Z_))5q(D1?6I_>!gv
z3RkpJv{F1OfyJL3t{A`M6r2rql8QsWO6cz)`m&N%b>&mev2d%jL7F#L-4w+iGakV;
z9%#@qSXj91L6ca0bD94ULLo(?71Xo(sWHvW_|5_2Cz6m-3b520e)SDdqh&AN#ar&x
z8Z%bSNy8?9CJ3BB!=D)gj%4`CPU)?<&QRxANRnx;O2mxl?P;z1Gk>Cmp9J=rmp35r
zaXrgq3NKLWHlTbw38!@jJ*pY!)>d!Z-hKvgk~<_QiM&2@31u(gHlHz^J;Ce1Oj1DA
z)N`J5^XIF3(ul@&+w7?AAKjK@9B#R$B&P8a{hfSfUjG(RO;VSWw`%6FBSLvobP|C9
zhW%g?k<=HUg;8mBa8u7~Q_ex1ydvZ&-~ap)pChMN^022f9oWnz1({??BPODq7D4F~
zJOLfF^D9-;ki&#+utnMQ0FMsvVY-=>xVQn$9{=wFwR$OJ3~IsvLZT+1E4auySR!%u
zKZ6FsP&~PxI2gt9uyh*4W~86QkV-Lz5unK9yw(!}F~;+=Z96HukL^gJNg77*x&Vqs
zz@3DX*R#<BRb14sSgF7!2|aj&M0u9DcAEQOj$-WFwpRNwVlBCRufs{yhJFZzcaCdR
zoq4=QZPPSMAqB-Sq2Tl6iky{0^%6g3<hE&uUJ+#pV+<g-vV+7`cO)~)`nHcI)1y}C
zqOeu#@0tlAgizUcm1_xR*7$=Me*j@k-H+8R<|MfS)9w{=)B=8GyfDy(@=v>l{+@=8
z+9%7Wnjv^WuQdaGficN9l#k^mlBc&r0cZUYHdW_zRO>`nppZDB<AP-r>BHGkP|3-?
z?Y^$LPphMo6Obc;&bjf6P2kYnirFiIfVZ0oWk6>)B^fI2cnM@Ol<BdGy>#FjhU=tQ
zL`2feX+5PIS)k%}!R~MtnC$TCR+C8pwQP79LZET8Os}4iHUR|*DwMf`$6daiQ%kYQ
zABe0>qU1jG<W6d+hW*nP<y{K@?#F;#r%!omxaWZEd$nB3%X1A24Q7#!G-u@R8v0*y
zf4)I)Sm`&8Z)jg8V`6L==#eVrc=wPen^b{sn=AoA6GPX#cKH~R_<(Q~aM|p|{qAal
z;-K#O_oZoo>-t%PS_IjS1lGze8$kx&i?eqY-dc+WM>m_!@3=%C91F}YW)ZZz8|Q+u
zY+I~4SELYT7~X*+DClvNDIJ4PU3DrncZ!7rbu5LDcCt3UZIT^08~e16@MR?ZVyBv!
zzXq@Iz+!86XmN_6P%;!&4z)|IemyAp<RO`C@4cY(vc?e-j>3S?SI5B5m~P*)QRp-0
zwM+Bh%FT&b1vd8cW*YQ`=JEx8wj+S3CmNEUD-xTVdGgiM$+k!_C3rh4Zw&bD!YWmz
z+IrNRk8q1|LxVj;YJFMdG=+=u$8&RLw?deP<0AK%^9+(uVx4z@8dyITwdKU_dJw!P
zw^)zgExwiLaXs@<b5Ovq)_E0p#nf}$=D2h1c9+%qM{ri!YjEQ$$i{u7b@i2tZknS(
zTJ1d2p4O`+(4C0f0V-K_t=aTp*gupPLi%#6Z9PqH3irqkp@-+@4bg)6)BU6*058uD
z(ew9}9fS#|nS#$+%19I7F*yzl_@HB~-!;H+=y*N8O!wdZKd=>LY)~xiZ$h<$lF&2(
zkJe^d5^H<!9D-tV>2y>LAgl%R*gu8TP>Jnl8`3{d#>iq;WRRRg8zX8kJ^6{0ML@r2
z*O%CVrJXzZX2M6wL$+RX7aOoRr^klUQW=b{SYDA3RsP#dZQ@eP?}pLNk3C%_hTTZV
z=7_fzx)O9d98m8$MOpd{yp+w|+0$=!FHq#?tO`}$vu|Y;cZHOLD9))~yoTX9zV<5T
z@6H{qPiKmN(c^8U#1a2_+D)eAt3q~==3mCe<xRy^TWN|A1E`3xgw(l|LONodXccSU
zoDymGUc(?so*`DX4PYS=Qwvdua*-;Jbbz%)trq=&2e)a7v`|eKzxdV+nXGuX?V4zK
zpn8#a9k9OGdvyI<G+#7WBiw5&Hn(&xa1sPCf$|bFcJ&w>P98@wy<9_%RQ6E{#mA~7
zTmO7_wR@rGR|*G_rv#60K0U^i2Ch>`FE6HF4Q`145@SZdc(R0PZ3Oo0q1Zu-qmpF6
zay-T-rokk4{04QPW1#)qNa1YwcOIMRSozgjPTx*Lym|YM(H^jTG6G^0KG0%5=uRn5
zMX$?EXN`V&vPyatG%0}D##Cm}=Ax`{0Eh+~J6P;V)!+=5!P|(6f%XwcN<~itFb_NB
z9X4#aK%LpU3D5O9d1n>u#?WwmWUL}^LopRB<X90}2S3GLbZTU|B##;H@oTu>M#uP_
zrWHMlALm$$UK^9Ze=j{;sY928XSCt;Y&{yJ-POwi1Yb}}z)GRPp0&T92hJ8&#}z?Y
zM?~6U$`RAadF6Q4%1u2}38Z^Xqf%nONe_$+{)vLauW&Z+PP`HQ_7zkC*o5!|<n5LM
zqE#v&tHXP)dtiBy;D?P`-FY;4BW7kRGRKRzH8I-&`L;SrE?8+Y=I}zbA)bg4su*wy
z6BpKriIX2ir~1{4?6Bc4gx$B!9R@lojnR^WD@l<OkZW-NQzjjz12OWK)ZHs+59EF#
zdn0xgF4aCp;a9_H%P}n0U=x?RjvA!U4{<BN^1@qU(^Nu+cNnnIDoO2Oa<uT^;tZB{
zb;dmix2g=gq{iSucE_%|H?KybdQ~7c4_5)JFk{(|o_^>CUGB(I$ZeO6a;aD6tVqzi
z<`%?%ZlWkE1KS*H)CdmSsB`@8;b;iC&GQ9o`E4O3TWPTO?uv8W2E5Kxb6XK(9w9Af
zX5HE`-|eQqe;0j0((uu7gN?4`ZUv{2eZ8}Y+pP?<q<vdy4roQI-d|oqc6+)vSy_X=
zC6edNnABtjj$O_?GbCm@DdyQzP-XqcSjq!>$53tJ0z!2t$})S~+@~D#29|>hosi*}
zN0=ZaQ~lSqDcVsIGewME&N|1YY2?}nJ$I3A@Bq|QaQ>M_MDA>{8126tSfdY0#XYpd
zHTdy4**kFXWMGXsJn!Bw1s`Esymw@!GhBKF`tM8K@X$IDH>`X1ffOc8Cjln>>z(&d
z-GU#u@UV7YtQE)RwUq&q<+gI(aH-*t+hc)h%Z6norj8fIp?T!gql%w=D%4Ep_Q2Wg
zV_Beg3ecdTYwh$nAr}H4w*8+l9Ru)9#A{$Kb9vY{(%Qp!Wyr~J!~ZR(<Nx(}4-~Z!
z$idZuA?Lm7j;Y>@BKzVm{5PxA0?A?F_UWs>|MveG*wAiNc($UaJkx|2*g<)^vY&`+
zd6^xthH&@Q{NJ)cb={^#9M%1<%6Ywr=hUl^3Z6>^3o$LMJA*g+(!5w4_I7a;9doVm
z|G+&zRR6@@XB)3*6EQHZwIRP~B!EW#^7!2qOe_d);(>~;9e89PA(!_rsZ*WNnOszX
zLQN?>6bY9vlIKgPHgL3M0iT+yOgd_E7uFztY0D26;`?~O0rpjKLEvuTB<P!q04B3A
zjf2hWbDqdp)-v>3T~z+tOISs0a9D46Vcmx*Z&}8Q=2ym=$3eEEd2U_%N=vQtf3GD?
z<Od68DI8uLAp+KZmfvPs)Uu?X^i{p7;0o@A*dQS=O_!vBO>iw`00;x1nJ(87Lt4V&
zn7<*`uG+K~;)=vfLZEoDbI?!5C?kjS3X2ODQP+i*!?{9mnBZ+%E_S^duR=VW{c3XJ
zzC^JrF8$)Tp%e_$<(BCh=+^o|aqTlQXEh#RnQgzrW-4<##Qiv+7olRAu!(I>A$DA0
zw>2jO7CA^NHke4-zvE{?$()d@?|k60_B6W9pE_*($1qHEHBsMxBe5p{_FrEgYNyzt
z_Td5Zfi>z{^@qogvbL)~Yd$ylIE%T_aIe{1J`kTUkFGa0)*-04hqPc93oSB~*jq_J
zgGB0wX7dh`1VNx)c0pi%p5=>nyt<oCg7Fp(3*yS}f90u6)KSnBnBr}6%X?9gwTfow
z&If9xVVw+;eg#4Hu*To5BvbI!1wqo-$oh)(gicK}7?rPJpCktWT`9riVVKJFD}<#F
zfM~@Q9r~BHISZpCjt5_I3k}0A!)8H{A+#sOx=?VHWU3&0rC07X(2!e@2^g!g=o9Yg
zo?h_<Vb=OBln_*DS8gqCNy-ox1}Rq9C1yv~vE%f7pQz+L9Ce$2EQj0>9m5uEQx_-X
zgLti%hErhnEIn;~zscGTBNKwxSXG-39xUPMD}7awuBw2_@);#Tn=*I~DMf*~hOs<C
zETy+<H0m@k+;)wKpmR>>4XjgEbHS%9QLC8=t6CcG)+{df6$OP(ZCWp1tO0IK)J|UM
zv4bOV>w_e~LQ(>S=WnUfh$W^{XQ9!sxm=#@$&)?`|DmvYrCWv>SiI(E;FGJ)so}N_
zr*O;s4eKSqF%&Nh&6b5<N3$XVTEYNORq?{O54$h|Q)!UHhv@`P#iq=Iu*%givY0<Z
za#gIWa@%&7--bYx@(h&59(!epxLTDa%&<4`Edm*mi4E35K?CnzbeD=!N32K>fE+F0
z&<R~L#;vi+V^!V5N<+^ncSrrJyK~U6W1in0BXgqCUHJuN6_{le17A@Lc$@bjxGMsV
zri$N{%DHJ-*}wGIf+iH$2l=amLT9e;mi1N_8QZ9hDW`zSt{qij+$bJeFNevTiV(0v
zi*3;wHyHTVQuTuVl3L_bI)H#tx<k~1c4AOywo=}B@h){G5zZN;Nez$sahDG<ctuPn
zpYej}+t*Qy+GJs@(xUewEMy6RDx_3gWGQ?x_CqjhIOVI~b=^V(Q_E?U=wLmy(pSE_
zqcg)w;+qG%7AmY`jmAcyxdvWo_HVvPBPJ~Q0gzdJzRPA4y7t4jrW#C$iN)j1)8z(>
zxEQR$wUMPW>8!q703Z2%yLoBELA!TEH<o3VC}A`|+Ej_IS0qfi;X`{IBia2y1#uU$
zC`QiJpNQRVW5=c`4)-R4+^jc#Oy46S#=Vy%)v0m^Isd~mZG?qRk!@e5$b0(|4WUDk
z#G&z9I_jr`d8BA)$LAg7XdxDv2~BCA$uSQfrV%@LSJ!<>4z!8HN*ME2Ud%bB=|pZU
zTYZQq^xZO;_+E>Z9;4o03)(+`5SG>JuD-xy)Yxf28QF*peUNz$Z`Ls|n;#Uzfpa?#
z=4Br(U}`Dz@qhwmh2@ofj2>@<^8z?<Z*x&uE*&x2G;LMqAAdLH-C9JMTlK`8S%ZMh
z!?8b=yR5bBs(@0)<l#6Gf|2x40ATZnSvK}3CImnPO${6#7a{a=&@yHb?p6>edO2UG
z{xo5Ji$AQ6+06`1sH}NJuY>pzP&ji=BkpV|>HTkg4E1Y`j>*`eq5Hc5?;M4M8yA-`
z4ml6$&CLT2;rBn4!nn`L`^aoPs=gPQfpWS-yq*6R4u8!e{qW5K3YJ-u?i;z&Smd0t
zP7_yS@SyyR^hrgtB3NH}OV-Sz*e|gam3(MQM}<1t@8&v(z$0hzZc{D$f$h0&Tx`${
z?nc83N}3AnQc5(h_Zm$4^a8>PhmRUUlS!5%skDYAPfpH3aCyStO_236$N)G;+Oj4^
z8A4@wq1K0;Srn`xm2TpgxeqE>F$u7qH9!&H3-%TZ7&`!shZ=4%8TJXC^y5Zkpj-(w
zVX9qhkuNZ6EcDcyl7z>KDn=aIxCD1mR}k?a9&9!nPZx&{Dg<kTFSlc1biJ3#=WlhU
zNKMj-euo2a;Ta2?Fg&_pQGrb|9L#L@baDbg)tRy&REjBDa4h%6m-RUY&NZ44Xvl~O
zKw16-t|V~lTk@tily;U+yryuPKGn8s6j#Drt?E%4qjSQfKI>X%%1aoBavOjkr2h8T
zc=uajhZqRJh|6{daP(*cHOEvtWlR`&$J>uhw181Zb0b>yCV*gMhPhk&D+9Qd0WSfW
z8B{Y*?oOMK;&U-ekO>80H`jgw_aUwPf7mzem%-$HBw(CBp$a6-puFH~3iI4a@@%n@
zFR7rCZ2UzU<ELCcX@)q=QjRDEEWK+g+}gQ-jV(`C3ZLvlxM>`yI(D=9?Ilzj=PF|U
zzBh~(d%J29Dhj~kL&lGd9NG-fL!%e??Y)v{$+NIUY1keH@_l9>ICYnA<zxgEXOyzY
zemAKC<x~^LOB_(!@T4!y3CQXMLH$!yv5;M?WqEa|yu6C(fkAZ(kZ{?}X(}(jL;JM|
z_|fQ-?o*rZfOZBB^IDt5<&eAqRyUgEe-^e515EoxrYFt;cm6dFu|OtYb~QA*M)6a|
z^%G5wSqxoLv!><k>IgCC|M}6hA@Gg&VS%GUt&VWz(;U^GK#E3pJsFtbdWth?ubfb-
z3!3>>j1`>E)OS#K3rL)V4+KMArGzsGvnQS-#C~c`SjkW4TX8UzLnoAu+Rsov(A>^s
z2;Fogu1;YyR0iw-59dfCIiumYc%gE|L1m(L{5RI_X<6JB$lk1@MZ;WYZ)LUBZ=Gb_
z75L4e`IyEscV+JXsyd4o#%w*iPZ|ijDW$h9ltK<f=zm8mUV=a{_X6+`Ji{Itv~3X=
zF}Z6GCZ?U8W8i6R&w354<msOh2TpG${MSbaEVSUaE1IASl?Oa`d_%HIpDboU?bM$x
z_jN21o|MucA!gJEPj7}__w~)67)`=-5)$)3a=wj9S!&%Hde}*Dk*n%!!pcim)DV+M
zjfITrOqvOc!Ehw|f1Nk~w_G}YuSy>z$v>k9j1B`_kF8<<&8wVaj<2__2AbKd-iDlM
z<9B_^1R}o{V6}KXCO>%IQ%y5~1dog)D$9h|IyA2~G2?Fg?`}^ERbcFPop=??)e5+)
zHG$lsJIHC2>+%=wLD}1etQ0};8ul-d*eaDqj5XBc4k0p;lOi44{WQ`i_lUvjhXH3#
zd9z`S!KtwilhoHH)u_?tkl7FXWx&H0Ut;9aMdpbvMNM)GwSjdK384p682R8HR67-%
zt6>I7tr}S))b&-@YAw8j3$D^X5{4^dK#F3ZTAvu<gl?C$!Ko5=%1C=hY0!?{S9{B$
z&exZVmOLNzAa}-}y~~oGb<83*Rz9bd2^KQSo|)XmxC;|8&oslG+p`T`I-L2wBw&V-
z4A&xuikKi~HFt!-l%h>p*0{Rs{6`IUceOadUZU3|wETUWR30)t@bVB*3o%cm#XaEA
z)RsK31bqbk<py}hoF8bf&g{T*fz9nJOez{%<<60B&br`k?)l%3AAt7N!}sPZB`#@o
zm|@Dv#zBO~i<?}Vb$G(1D<$i<P(sn~H|N<ML0OA~sZ}LOZmyW#@pXfGtW_+&5EL0H
zUqn&hFUlfR91xQAk@>2=8Ahp($Vr2j$UH=56-K=odjel&MFR}C{{8i^;0*u{uBPGo
z+u;#7thO~CI61-C<=aE>kd12671lYJXJ0r%P)<WVm*ZWz1<L((Dd+>qj|x}{xQ+8k
zCbhAh=$LuN0z2I;eg24Sq3*~QEKV8o(}PeMw3G@lUj2Vq9*8Q?H&mtmgtsyDo6^1_
zh-5ym!}r%%QN3*|2KHUlQ9$Lv;VLL^U5^814R6;WpS&pCloUh*N%MqsgWj3%-EzGO
zrl(wrudBitWglBfb4ClIXL3Z(`5E3k1;e#`(qj0l2;zaCcZW3RQz=Wv)1;uRmlH{U
zV-C$kGnypcW;DJ#dz8?~^ae2+WsJaYcq$`dF_B4PG<V~EP4p+KVJ%&Zm;3!{g?aHp
z?k{%~;!r{n?4goxcNqW_HJKpfip4YE65TI&)CygJ?EhMN+%V<>rd3i^-%om4dhrr}
zr<$swkI+d*!B+{pc-H<MYQ<W6O0!T?NS`i14^4NARy}pSMpZohx}^hjhvo2=F8eak
zl8-C7!K1o5x<V|b;v#dt{yTkb01JgK<H7w;BcV(BX0S6Jq$Z+Y{BIhe8zlFM1eWOu
z8oC2W)ji!^#nnX$s(TiD?vO-|Wy%ckEz%!<{Fz(u3@deI5$N?*6lvQr*)e8*K<VZA
z(=y-0)-avuIaae?pbnjFKKcvW19x@b8Pd;on35V(TIGF3{m#z^9p)9Mw+ki@y^&An
z$<PbjGEFYyJkN8-eCoiBg4joRo_7l=AHzk#(;Q<CS(g+(qekxT^nO$yNWd`LD_3*e
zzH!Rf)p|u_&_H}U6`X+6bhwmfLgd*^`qMPRD_NSe_6hI{falS#<h>faRK*lGc{2+w
z14pPFNJBqqsSe>?T*})bIc5PSCSrjUbFH$C62Q~ODVeC#yh)knsFjw#KT{MN4jMRQ
zq8`mr+SRR13&_vxf+SozYoXX9+P7iy@v*T7zff`<Hk*X<G7XT&GsmjbLtBqTpBm~#
z2ayi5U%sHgFWO<B?!?<s0(=0(`TlGUTECi*N7Y-$Cm3<l9BoEyr;1oepraL#7dKiV
zm|Xf7sK7f+B8Ld(3}5*#f!PfZ<3+@@wq+5yG&^Jx3;6>0C>U(P3EPzQ1_PcwVU>53
zb2@OrEi)QBe0|q#wi}PgEm4q#Qc#LH7%s`(B=|Sy0r>PB&uL#H-mJMjWmU)fBJ_AA
z>0K9Pw^~;AZRG`3T%P5d52Wcf2sI6a7)omDFY!fmJxb{+zWoh6baeZru=M!dRfZT@
zBK#sUt?opM#=*`-<EqTjpEUvz?@~wl67cOEeQ$P`jpgn}misW52B+`Wc4o#l!%A?w
zsgHUx<=4bHWLPEjd-RrK>Tp!+rjnujAvVW*(-OqXkCNs>DNvm&2A+DzZ8HY83qObj
z!ST0fk>E*o@4vFo=3389+VBy%0?0u&kYnFW1JUK=>0;?D&0aK{L=Xu8Ud{3-E~gA4
zC4~&(wpCLy$3gV`zdypJbULKES5c-(IF6=e%ogCf@&q-1p3W8+E?^0nx&FWQzA`GV
ztXUg(cZWc5C%6SC5ZoOaXdD_ECs=|9w?Kjimmonyupq%*gS)#sA4w*ecjnH#Gk4wh
z-ap^;VzJKIr|PNN&#qmkPj}be^2jpu7XFUg513k6Epnt|&EO>=954-LIOnIs?V&e#
zKlD&N%VV^9t)M{0J_tJHf9#V=9a!j0{8312xuae&ar*kw1nmRYvEc2<uH5F2y0<CX
zafp)vegb-cYY%3%b9i3M)z&!kax_~=b^{Ez`*2t&GTjgvuasC}DHfj-sC%=~la^jC
zxzL{+S+<lxQdtYr%nBp15Ocp9yd!mn8e796ZB{jm<PI%wFJ}139LI1^vNIz(%<az6
zvrE1mJ%uQcW=l%;63+`-9i*2X%@yHv1wz?|sD_BjD>h>+=Ra=Gxo(6>q_IGIi?Un#
zVUx+2J@(OP9BokdWJ`k5m&+t8;!i3<3JLQWnI%w&X`I28XRMw{!~+ho3L=1K=_jnC
zkd@ZY-X?bQ@dn)1o<6!H+LGVm6EoPO8s<>H9JEXh6xADZby%dHMf{?<PrfG9C0xz9
zG&c^!)&!t>>FkEEPvWN)@!u%P?KdJKg~K3=3CA)|9%!ja_bhhwTJ_G#Oyy#mjB?Mr
zJS!|R`a<BrNCwchd@dR^<4R#{lJ|%|uLlR2V7pLllQTpTy3<hJqzw^y^-v5C2CZuH
zP<fzsKou?v#8*~-RIiuxF{j;nH1m4%kp*<aNc~8=xQXbpcsrs_)lquEVF(|*avqKr
zrUp7;s9SJOtYN^Ji7wpPo_UQMHg}OUr9VRt9Iix6ja!!S3bFzW{413T;+mnY{C&|f
zt@eO6>-+UR+!mRTA_`g@ka6$7TTS)U)2u3nxL7XIeC!m2z?@&{c}#L6+qnuROsXbo
zCExGJR^2I+icGSX*L7h2_*~}IXK9`s@`$*HeH^SOif<r_5){)m+fdxI3?>WPv=#LB
zY_K-DN1FsT+T}*H)6lY3tSGCcl9RDjJ3uApAvrY6fKLo}D+c)KOC;m%!CL3@k6tX9
zLQHFoM7lWZj?xU7p<55CESIn&%Q;r!2;(C{89d#7Y=!9qeA{Z%%+uRLn5O`ZD2hAE
zAVU@C3{G`)7TtvlPi3^C)#wSv@Tp;F<0QXAo~3U0)0g5X*4XKJDlvoGCk_Z$Snh|5
zEt!C}kLwOfWeg1+V{psN&k8yrgEhLAila%#u%toTDjXQqv2I*rihTpa%#eiq5&;c#
zfa*F3_r?>2i`cGC!?2^VJHnVDz#NAzd5v-C<jKc3B^}NgASX~JV|nS(v%<T<CLD`I
zAKfmBwqVc8gt7PWs{H&3wu3_EUHJP>hd0L2=$-w14quKpLI}{8)6J~B1d)?UcDRb#
zD;+inaUUbQsRUX)4I&LVm9QQ>4V>H_8HTe_RZaHZ2Jnjp(y{98MVg*ge$E~yP$S$1
zjMg|*Q6vlb*>;3U-qP8<T~fy)!WbcR8nm05%$O)k{-RRoxkNv`{%Xcgvr|1nfEp%b
z<S7v2xB-&`r!4oSnOaqxJa$(yc6z20S0-LX6pvlUVe8Al)%C^6o@aJGr6V*Kx)1w~
zg3zi=pQxlD7>2h!sjo^E!)DpPTqTEViX%3ACD{ZTm=As*NUA#aL9tYCMwE6aky_;$
z(YffzP1R84NK${!*pV82E?h9r!BGaR_HwQeXcaP$0ZUQ>_aTh6#gL^LdBEZQ))H5@
zU!GYTZU@xBfhb5=dY5%3Gz1j7HO(6KXd|5jc#w8;f<B9}^$0j5cys6EcEstgQ<w4p
zx&(#!ip82|{8J&=g{C6e$^-8hVG@KAMkm-%w7ZAY^@TmALWB>rR@l}uq-S=nO;gpt
zN1-?`IoI?s3}tIG=7+C#Rx404iQ|bvWA1lP^62qe%FtTaG+<vwBc=Q>ZOkIgqg300
zb_?<F!uR(0cF46c5oe(cO5qmkE`>Va_xmXS_}u<~tNt5YLiFW{)EDgRQj}m?|2S_8
za`#u`>gzoxQtsd<v@zXkP0>A?@gd7ha)9~x@!S|6CBhvMXXzQ*s0{FSQCy?38ycJw
zqtPwQfspOQleg|NK0G)Yl7xCveH1SdyU^ET;oL$vbxqzoBb634x9PAZKoZCG^P)l^
zBHtITK}LaDl<^i{H_)%B1JW_EVFH%+A2FR%z8M(-1>H4~e>mc;*;!a@tBY<4-B{V`
zDhO)d4uaIHmDsu}{!~}{n0bpuLy@bjny#kY1WNA;@Oiwv?+%78HuOxKBfmD#E?37}
zenmFx85#Zrce{OPS~-2vgG64Qi!-q}#AM8#CUQiWrzzT0*m*tdJ;d6x+1paqk*TAz
zO=~i+cS8k+5%M-1%eX~aZIzh*y37bzBHPAAt=ktxLx>kmmqJJF*=(H8CvA*x=c3(V
z92*~3XJFL33n*Y*tV%MAH?^+DmECXQj+2aqA%K@c6oAYuG=9<zPG6H?=kp;T<&9Cf
z(9lWUlhE+w*f44;L(x?`Y>Fs5pq)-&EpFiL5;hxNIb5x;XOs3#ihAfZXEW6Mc_j4o
z44x=_HHCzCh)(Wxv3_feC;iN$qTvNJf0z>u$z_!HcUzPsJ@GkljF1juw{uoRho5L)
z-LdTibBHN2PgDhBjuoc(PQe{e33{p?@XfB$lKB{H<0e|;%;cv9cZu@do=jz=mvk7D
z50nU$W3vxn`g<4ZDz9hLZq;bK8N_P6Dek(%tjBif<0?IiQ72G2?HHnXYmp5(X2jAI
zjZW606G1M>{4gz%BRs^K8-CZyO?a8FPKjpf);QS%$AZ|BvV>3UEEy+ksI%-ft1cpA
z7DwQU-Q)LYJ0{Vw8|+$|A6Oir7JCxuUNyS$)r*Rr>_!z68JVCkL+||f{Sz$vN510?
zE>LxgFX0w|uJ1>CZYm~DZ9W^CD(ohhB{`dbILDRUZuo#*%l{5HgIhN*sDmo~9pqYD
z?W%=H+xte9ccSm&@#HLMfXC*SFA<ttn!8UHsVAc~W*!D9D;(=fRAneZk>S;Moyi2<
z&{Q1VcKWK0@*SQc5iEMLOYDtSioP(&Q0Iyl2w}gi3V@H(nSwQc%)}FsbPbR1dHBUc
zhL<q>?J>2S`=K+MRL_;-BU}F4-Qf9m8EKRL(s#WthLI6!nC_@m@fI6DNH3rxdTA}d
z@$DrJqN;S(r)C%~Kj?th!m%=Vu&h4SQh68lYUvp+&!ycCw3-0paFlcncFc?U+RFps
zjb^Fr`cW!~0>}5<#z2l9s6mvf4<%rAz!Bc+GY)qb#j~g3wBpc*U-qyZ8W-PXdU5T}
zP3tT3=bg&*>&vB}Dm%xrJr9A+oEtWXYfIh+0e3#k8?NDhQTHjBi-8Lvrs_oC6O%$~
zedL9|7^uCDS!r*#bk=>$A4(8_NEm(ndKhh;lOITe_^_vO=OqzM-yS*-bZGS0)SA^M
z41Lt1zM!<1mp_y2V9(}=>LHyQE@04*Y4<kIQh+040)GcQ=LEZftzL|>U4HD=ft{Oz
z*lc`o=^(?Jc_%}*KJnh!RYGz`=~LzgFEP<wJARiUXP}l=Crf2@K4wCDf&@Y}l>ehd
z6(L^zY_j{`j7-`mmdfpcQ4aHzo)&&ADau^0l)zIsprs8HpnfS|X%yVzk;@{7f9=n0
zds(|D<S~}xAbFgMLdMhcz^rB>=|EANyTOm=Qhg)nGwKNQr6XwpvF!61!DmG4d7&tB
z#XM1zyb-jypWCXnspq)e-@<398VU*JxOGv(t3vpXuNpVxx13uWFijLZH@NQmG|_2l
z({R*r+y-mns`9xpLCAF3Qeb6P9A2y;KEw7wLpURxqc<TfHqL~`F(SPy9S&8yY8^&V
z|B>!F;Lg$y{7&R^BLCs|@B?-YbanoG&?})GsFd}oG{4ueYu5M-xxwQH_(+>4qR^Kw
z-@Ta(^{R%ea!2-xhS_zh{Z!zSUwC=eq~+s(!b&<kJ22O{`AKQwqfV`42L_3Qt<6;7
zV221fvt%D}YOzb=j3J{f>hu-QBqUOiI(2Lx`m;L%B7d5Ee8~w7@g;{>m`%};OOk`x
zCc6(MM;&j<vI;+uLa>ipE~jpphibW8Y+p@^t6--e4-_H1q+rzE!H=|r?iDT|I-n+h
z0_V6;4;y*mU}QzIGzq?RiCS7p_bZBD(`)sLt?&ITj1Vd5Rhjl)!HU7LL^U=FYF!bC
z^NwJHU+lV*YUY}MX%aTdUD5RxPxE@Q->|H+O;^2%SiqLeVo{hO0`ZY`Glqp3<3M+;
zu1XYME{A`tT$Y~7U_bQH4zTdr9?A^wlG@oLC*l-LM;mSg`3&vQkbU9enlRde>sH;#
zdE_H}N2P#4J~#@EN|Dl!gjveS9DyCGVGzg9lGE>nG~L?;+T02Wg=u}F`F6jsw;IMV
zQ3x6(7iFHbiu-1dPbCwZr-oi<QcA3ui9&`!h<uSmJ<+CK%zyH-k8AdrIY_z<Z-79H
zCh?stwPe8&*Tq4Os-DUrOP-5NFe5;F%^{m<*c@)(pXB8l#?qMVS(GH(b0Cc^@R>w}
zN<PTbLx$)e#udsqRkJlTS)g#(OAoa+&fu)#op04?w1CEWo{dNTz&<Puf4Q@0$=#5&
zMbM<{*%PP>w0?A}Rwf8IsGf+T+s_CWuUS3mcU>!~)~9Ecu#FmKKt@_GOP3v450@HL
zP_^QD0E)?lGb#EDG8$6-!uwnmy$mfHNhcuGHv*`<Y_>DKMlJI(lZP5?_Quc@QP_p=
zvlON&T{Fa{&zGD04h<@YWrIm>RY5Ws?#^;Kj#z-;BD9RL1P*&Wsty9G=&0;4UYYZ(
zW|1}nrQHTn<=Y~U+{W3-(ww1pAwgFbKFi(40SEBwxqOJke3~oukZP`>yWPs3Wr#}Z
zv@4uem}+#6J60U!1rVI-)!Ox+vvsxma@N?>u-Hb2>>)fJM3`uV#?SXc1RF!1rmw`m
z6_1~LOCAKRRpRv#$#$88lzf_?0W<l%AMr!^7D7z8YwxuHIFk$10jF*5CY$gF?LxX_
zS#-fYqufWhZBmv8AM{bn?!SdQxl@s+uGE4V#YTCclT0I5k!6CI5m^#<)~-}gg7mUz
z%>xn|B(i>(L`D|c<09C_5pz%{t}y*Ei+ZsoL^`e@Ui&4y@6{yROcse^cVfsfzLCRQ
zX;GhI*-Bv#etfj+?W(A43}b31_UkKavjZ**GPu^pe5#k{SCQh7kuN`Tl$qDsY}Sgo
z%q*%|+8r=7@K@FN<@qB_p$#N#rf|jcm22C@@ifIr2R^z&e8?j4jDSt0LD)C)fjS8w
z?Tg<MpGd+h!y(`Ky&~8q-z1*r=AO|zR39?aW6MLbD8=?JD-i)b)Py{t{Idf&Hc98#
zE~}HfOnHxqY!G%wtxR`#pFDXf1QxvRBB?Ar{gC571Up=mGz_uoc;J-=H{Kn%p``Hm
zlFdP$JLiR7yx^x%)aLHD-hvd$qXKF(bk<6zNP?E&1PVSB^7xBr=1?&bIiu`Wc%LmT
ziv}`}8Zo~4s!1FeFoK_K?_=GF@E2Ts2?b+=;=COT_`auc@eit(l)~7W&x>zec`Bh)
zIyLs=LXL(CvukTIyU|ykp=uKpiOJ?6a`$7e*uIId%l))><hHMOovNe4HB@<C`Xb))
z0T&YxCDx=E`RHWGg4#ltSz$xn|6{EFYbjLumBI)0nQGJxqD68GL08Dus%dBtESnld
zyO5dz+8Utx$hM&x3{`TZ`+`qiGkBk7Rr1>LLl+g%u-TEK*&!ZH{1=tpZExq6ve8$U
z9t?f7#`d`;d4Q73epg8yq;s$-f0sptqKyf2x_HZTB6H;-@QE1?-CAuW!~HqrxPp##
z0cO@at4+&I=#7RooUNWun0!~#j2Rbp4ppGbavh)GVF8TV=2O3C&_j=qOA({#J5L&e
zIwOKkiL9p=6a6@fuhXiE6rjRSBKVS;DzhC5;Bg*IFPThPgH^aXrsvgsEk;=6AH@#D
zBCUQhmeX=hXRS<-;(q8_P#|m}2VL~zIbuV<U^Xbav(D!ImO?oXoWSU76xsN;rsK3r
zC}#47df@WG?B>zxxXOR}`bZ7f8{Qd*A@B00+y23^>GK}Fo6y45`_dJ**p@uU0uOhz
z%6Wpx?p^n>aQzCIYSe(YjY(3_Zfmk99ctKdcHs9J&94o1KCzexYc>>_%52kZPu&-k
z+41t+r9;AVKO=F{c1PAXNe^e+p}7Cq?^xccuj^$LDuG-!K><|G2!PcyAD>D>z-|ql
zvc;SUZ-yTei-9|K%&MBd|3o!CDeiSgp6Htm4#jji75Y{i5izNULT0JaAp)oEuP|0L
zOD)oICatdu$gU{jpWCe6v1kb9du!?(1fWmJz!g9BBuj}SJuVO|iyG6b^!@Y>Bm|K$
zpx_8m`y?;Hn8nkY)*6AN?JhAaZSLl?>hylls`BHT2OI3Xj#WqMI!1U_P_f{<C)md(
zT|79{7%M#Up;)bE{&>3~vu-V_Qh50<`%6w177rp`TXp*O8x8X`KBiD|uka;2>o~q4
zdFPop-V)KmI((kGuBG5KQ?!rJ(MwB7zrRj%`a(pCSND0a*ZVL6K^(EzieB&T$8ByH
zZkDkhCGZ2O(eCD`eKPS-Id}%*yr<c2tv}H1s^&r7kXK3`BQG#2Jrkt~eeCLr>AaJd
zj~3w05a<^{Z;eP_zq9xh9SY~h-_{rK%%K*;*t@}3hsmwE)lFzPN<(Lkb8<{XAo%?v
zu8U%YkZf8>Yp7pL{+<jK)RT}6En`@h)sS&JOgQ`0QW`?({!#~RvSN>vw>jS7tkg`V
zi`B3a^G{}G&=T<wM|cG#$5EDjad6*>ypBp~&S2VFebj((S)lh;cZu6-*6BU(^R8ar
zK8$`uCL%^YvPoDbB`R{bx*JoN=rjgBwV3|3;mz6!4$^XN34#X}%|aO>GY>CTUe^p#
zfeW4NCAUQoVWZ-&v|h*+7j4sQiFkCu`{S+dla*)|&Eb5IM+BFG_5m&x)E#90l+yE7
zv-TUbuug6)(vz<p!VXN7m(-JaMzSH5VC#0%S$RSnH4%Al?;gD)N_te?x#hDCt)ieN
zpuZw5s9N+Tq3m+XasR#tm!2nai3cH~{twH~EADq_sl0{fGQ+(Py#~I&-&HdB8F*@i
zY@-ZG-x7=jt6GF!G28%%vV~F_X7*2Ayv&+0M(pz6;S@;!ER>$5<;}1ahEjTHU4dR!
ziZ#NWe|WddEH-NFHdnXx==$|2fpO6$5GH;C4nC1(_?^dDhg#u++L4Wt47I1Yyh>hW
zBW5~+3v_>uy^v`=ocMqcM&x||V;zdl*G&wogu#onH0nhs;94B!z=t}qJ$EYR4e31j
zecj7VY+CtVa}KIT+~nBzi=sV&EK=ky27%$ZZ?r-&da+p4LDO%>Zr(CZTd2mVo@G<Y
z&UXg;AAkhji|-7-x_TgaV#l7q6^4&fx5WHG@I?s6kypPTIihu?v=!7f_cr$tTGebz
zvl}uak~vY+&HULIUo`nMa`cJOc5{2i>Kcae)0Z@px@H)8fe8Ad(sita4_xEYQ(wGL
zrfPd{O<lJuDY3`!PTC&VIZiCHc%$iyR>!O!@$SUu?6~`Kh`=Y%wByDP<!r~^uxg2j
zqrd6@$Y+k8Wh!JfkNYaEWu#*;gujG90gfY#26)NIf6X^by2^c@l#KA@^wd`BoD1~H
z$zwj_q)BIa+**&u^xaqLM=%r}WVTiXo7-|iggVC!?VA!uR{{u<#)BRVDvrxEEa$JR
zon9%Kg+N6&*6lv3hq`7t7GS>V35|D-J+IotE^DHS*fC5%nkS6ZT@l{Gdx+tW*Y!BK
zsY_DjL#9TL+C_iXG>3|Tu~G-aS_8#GQ8Wczi;JPhz=V%_s1?+i^oMnZjr7Oli7(sa
zqF`Shk)q|qV@r9cE_2Ce;zJCX8+Mf&=^No-%j;L0_Ci1IX`9G>{6&Zj@}T>{0{VxB
z1kg&@bqzi&+G-SkjehB4;f}PPEbcw>QDBh3E6^07x;EPx^G7T>io}?ujZ}MWGd4k0
zLGl*1wozjKSmG3;i!k{ydF?)E-P9{qq}+!m&fb8z1=nNtl}9GY#}{0csH3OIV5sLP
z!?E5-EqtxmpF7%*BHxW-;D;+RXUn=jaDkemlfALBToa?nEG}R3VdjWTm6SNzHvjA;
zRD?F-OGiO%eYYph?tnWkh@HvpVYoC+*U)FMG0xL^+7xOx9<9%BIG1zbxaQY6%2Qop
ze&ohai=v`ei?-gf;%i*p@ph7Mk%cI8llpyZ?72j1l<N8&xfZVJqV^+*x5vTZpV}aa
zr*wV7gl5j4FJu9#7X4E*gX<1J><tuXP$YM*#g?;){!gD)-?7kJ`>*(qU#srE-5cR`
zs(l2)EvZj)GEMG!9Pm2I5m8Ug;Fy&sGStM(`!QpX6T-Ae_yTV9Sz<Pl0Ck+UIvp7v
z$NOk$eOlAxE9kC8sO*eph!VH)^S%+2K{;Q$u=Cxn28)WvTg61TtfHNP?k=+Y7C$}@
zoa)CQlG)&B-OQU#MxKSUBaZ7DjcOI9_7Hv$a_Os#C3*!QCmwykqp3lf;%fcb!+Qs<
zst?#=isi4{Zad%~*hyFQ<ZR($(~wrm641SKL)j!;Gs?=~xNlt3#!S=dLGQT`=*p)b
zTOz=sZj;ILk<L$h^MvEY!%L(pnIwhG3F!*?SN`dca<-p<4qe2lsg_c-1CBb(+~<!7
zBn@)|Q~Kwe+32y>CSK6+W2E>fbG?9(5;0ku5eUDENc1T+8v8V9od(U1=TH8uV5IJW
zlqz04RIrN^Ar^cXf~JKQlK>`X^9RP4w{OHk@W&I}BX5kMavwqAP;6q_ppB>)=ECl!
zXPlueOUj$J)|QH9oR*r9wr*qN@7Y@IByy3tyqSU6?ox6<cs(!{a7#Qc&@@TMi9hE}
z=i}#D_vzuyf#8i6LDtoC!N;b}$u7-E(zE9)_8$fI6$YI1kU)2C&p&Z2cC{-n<Cl}!
z9>36OP8MSPzuK>ztP@agl0V4uBHMrn3B}g9Uaj{r!??V~5BsD^C&9t(*1>h2aEcO$
z^W(|s^US#hteke_bN!#9lH@L`r-tozb6AUdEs#^>PG%U@nV+MORt^k=`v|H9oi`!2
zrw1U0E_o?;>kN#p97mk%FNCH9246~-5_#*TLy2*j%uEFicKCKQhh#s$Sb{@IqBaP$
zTX<FhVIj0-ScGKktsBGui8}oeS_HyoYQN5^4f9q#Y0Wj+pHE;;>WsnX6%I%=+;-`?
z6{<yBVaM2Z^oHj`JXu_5OJR<$h83r-sca->TfVca4Ov`yN<q9y+S6V5GySmmDx1LE
zNI^-P^q@hk^`69WSeoad?9XQE{F3*?+&&t@GK26tJ{o+ay5=30a4dn%7JGfz#z&*v
zKa^^#oB(UgU6)d>6I3Mhe^nRyqwdtVyBGo*V^n3aWgIKAXL}bq)0{}u7^&otL|@^w
zAfWa|wt1Uoe46nBV!+@cE*EiJZht73th!s?bLi8M+49I@X;kmZiSznGU&nGtx6$Bv
z_zv85bVJKeC^4JdAsZe)_NN$ic4lxfN8Z-pinY;wqW&NlJiLnA(S=<wWp>AfgH7n#
zsF55uy@9I|j=u;4JnB8oHOZOsYhw6-qunO97b~zE3@Ca}i+7p7bD6ZV8g^7o-e(M%
zF2wSmUPtGDx(?4j`v1G@9R2^!FTqkOgFByy|8tPoyYy1}MrTxwnOCMI?4_<$!~(lp
zuLKr75d}+#3u~gKKcB3uR8e=dsuA);F`}mK8h<FmbVt%muHH=nK!PN{d}QfAzZv1A
zM<weRdI8MSSVI|WrrJhRn%F2gtx7F!r44q;t*p|!E9>Or$@y^XUMvzT7Jm1h_oEAY
zhsv_|TfWlN_#5eWO-9sWUt$N@hHz|S5~ocYxg{!>9V=Q>#*yqo8_j~nt;<;tbPaC<
zB$Q^?UDV9Gq%g^)%Szw}P!Q#64(-_zFP}i2vK6=5p^cM$B2r_xNa;1t-N_2?3mrM@
zbJqC1zuhi+K4_`lC>o{v7d&t*#RH?#A-ChiM_GI;ku7KlKvGoK2u;6|EbRT1e1@5l
zcX}JQtew>hlorQP;|5-<!+BWsOodL*7oD^zNyv?SHtD;*@IA~-_~Nz^z#@<CJiJwL
za_w5Sv-xfphUC(G3N{O|Ep-!a1n1%<|JyCLt~eQthY`9aFy{I%&P}q$YGX3E)6(lt
z8`(@uM5Hf5MbXb85b=DnUWib+Bldcq?H}w#I&se6ruESQY{!afqk~{T*JZCdNfmn<
z8MoI&SXv(UR~(b7O{5DNUDmF@x-Siv>7nhq5lcG$blR?S_)rJ-Jl*b%<IdCp%^mWl
zYMClhoDa`ZpwD8xb}HflHPJ=Vp<u>}Uh^K<D{Qf@t%>|d7%G#veI=CJ)j~89iku}u
z+BvGz9M;c;h`1kR^h53n%4e;x)`XHK{Q^(MgQFp<{MY8_PL121@E**GQ7pC1O3t|K
z9p0QrjrhJ@iXdg8PzOA-kS5lf-~nouwnEarnn9W3j?(j$L=wVFq<US*Ct&FzbxsJh
zD4rY@>AcpWPq-pH3erATRlDy%Z0WNP`5Fv**OzaMFt>~OEw+Zee1-8;mLs2Ba9-If
zMD}ci1c7cJvFP0ybBIJ!dr{Td^6IW$@S%+wde*zHYA%gqK!h0;OKHuiZSs_^i9oNV
z50ueW<HMEwRb0SrX<qhrMNA-Sq`XQ&ScIoQ8}mN%Rc-5dHei{PT1haf-<Z)gRr2Dm
zaLOgvH3J>U@FsSGZ*7gM<+4s6<{=cNs45I`rxHsUkJu1!p)$L>G@AyM3R=xeY%bd3
z5OhLSYpDlvLzzip4~m!akUNRN1(_G@%U%sK#jb6w%<G7f>fxIv*S={v)DZ{f<qSIL
zx10lR6ijaz&avPlu4|?$n4bz33}qr2yJ#0*Asr@A<^my$b;qGzJ8!>%8=J!e=1cX^
zCN#?)-<2Q9hF6)~ub=Pia=0esCSq2~I<|fXt(=9O%Z0ptgUgRgwOMoAM&eK+09O*p
zCCnY>IOAAa!LKoXnqR~hDqi@kFzE%MHe85Qw#*Pjidv&)xJ*<KJNd1@Z)B0b<nk#$
zK-tvL>UPiBl)Q~vWc{oI!^}hc<Bjv_@wMgw+@3qeat#aR+Kr}j*VClN-F6WN#oo*c
zk{vR!I|u3LI@|bbd}ySSEHTgfn&`@{(XAiz(C9-ZL6TFO>G{~*HVxCLUdgaQA%1hN
zb<)CfW9Eq1+C14?e6#ko8o0#^#oRYtwfv28Gi@+NzLI&{!e>~oky%P^N^4yvH=*G<
z+MHsibw!0ok^79v-z3{<-7o&QWLI$88x~yi?t^mMJKH@!dnS6dA~)WABfa#5TwM6=
zV8$M}7f1>zUdKQ5a#<Pe-@Xr|Y38`DV#I+CvM&{5%ubw5J#XeSzA5fxis+cGjJHQt
z!?8aTA1*d+mK6hZ7AY#|iu4F{e_5@FW!XY`U-p^L%9Hti^G(U4+5GrJw?;Xnfmepv
zY;ka!Ia5lJ<xNWq@Y>v)r{zjLtLIouV1sR(r4qZL%eCh;Jb%S&bR1V^eBYGP+Kd)9
z-SC%w^ug2?ny?P4&S0?t!<^2>?JFWG9#6s<p^3_Aj<Tkkzrs_<{emSV<lOvP(g%Gz
zN+QWYFTyQTH?^JKl5UAaH|B7Cb@miT*r!CE`U3nG>s6{avn(FfwS$=Cszl31$!N?~
zcpIsS+mVIxF{*cnt9n~b+q%i-LZ-s>3H%-hj8gm$|CYUBGH1t1J^eyS(=|TpQZR)t
z$M_HIN&T7J7Nr3x$7UoxpCaJ-j^bL`w!NU;?#HOok$pZR|C90QRY9Uym+=ZHgmVnt
z_jSF^exXX|2#X03VL*zi)U!s@87W+0DG>l^aA~}4*ppjyg8feK{XCpZRlCvI@Q2nM
z*Ly`6P`0s}4hVEku56PhWk{I24Gx9Kx&!7o@}6t-)b5C$=Nu{g|I_>4kNX_kI5~71
zUJIE1WeA%GS4z)ta~9q+k{+4A;y0*y3uBV&{QaCHl=YK_fK#_l&w2cLCzLp-X2dL=
zO+JB2t!a$g;rO@U1Xmsmo?I<LRt$gHmVNlg&f&$v9xTNS6u6{_GR$&iw<NQH;LfN>
zR4?Rhy}Wek#EdIQWu17PRzesz9DGr3S?<)RWU3Jc`8WD3{CI66Hssz$b%!*$vl$6u
z{5jLUmOw<kEdD=>f8xD9^*b+tj1vpio2{wP%`3tTRi>LF1sSADyHeIpcAajW3t|=r
z7WMWQI^#6%_!dPEWWw^7I6Oq5NP-ZY3;qn3&C89Abx&2MdulGYEMq76$9y_&YdNzn
zVjn&@Ao&a(M+m@QI#D&P8#n!og5?c?lF(&wviQknW^n)*+r2m>{&eTMjXwb!cP4@i
z_eDph$aPgq$u`~cfiutOGNxVx^cKV|r+LaAkK|?>TwC~|4|9?7c_lw&fAt}+7^bq0
z0$b|~m-<tuy@T}(YfJjNH;iO1%rY`-a&Mki8gs`Lp~}T#u41RB#hdbl$CPOCK72<R
zvxUPd6NnDX^1giIf-_yVu5LMPKdPkq`+UtxtzZbFEgn~ob`ZCjWbYnAcdVsYkk9&8
zay12o^URVOZsfheKD$g?1P53VZE-Um97#my?mglV`?L9)VtuLOah5)O=E3~NK_qn(
z4;yYqf`89P)zwy5fCkmOTLlTL@K@@40v3K_V{@vZx^p2OMV}d@$+e0G1K&Xe9N@>m
zM#eMqH#xfqiq#qGXw~M=we-bf8K3wD&C9aXVe#p=KhfJRDU#{CC<!5LJqvF=dMUNg
zkyvZ3@2DWB{IMDy2^TAm_^<A>KknB}ZHat4W|`^k(mmJoJuv=1;_0vSeIcY~1mk&}
zb5lL%HeRn?!N3id`AY?{{>Zn0*XRST*^IqnwFym6>B=wuie~|YRnQr~j!9vklag}f
zt9NbjiIfOyr7xz_qL5{<d?)05&hySAYYTAD-<)JJW@UwqeHc)<kPq*j&!_zSuzW~)
zrlcaN0l)l*{RrQgXJ@hRD}CM?*dIc{dDtTAzj0K>IgqA7(^QZi3ruHowjq6kl@0ZR
z3g^x%fgLvTb%E<4@_BgNa-@IeNGN-yy3Yklj+tsVc??J-q^nEMP*#t|G%1|?@?(Om
zu1hc=0Iw5RK4Zo%zV8|J)HU(IDu^6eDU;AtGz^$}U>{f+jzNFt_UQl|W8Y0upJ^E6
zU>Mq-jHBx_M1^PfwsWz>f8>N<ele-~h8;^EdFGa4!ImC{z@eDpTCwQbX~q|uchoF#
zG#lkO<2q^ez8>#J`K>|d)6+k@KS-E4KPD$}JERqzpWz;XZ7A3_@sGJqn<Bi4A%rto
zZ3-KSpJrwZjOTKuekmYFn$3LG<Mq=2OQGef*PIu+h`p#(&7hFZ_aE*|`jo3uNqD0$
z@Xa?B7!lhX891Ke%PCH3%i%Zlz<UirNS^UFqzRw|Q&2KRZ1S;4u<=(MK}-($pGAyH
z`po{BJ$&@xEecz79+ac;S5_33FohvE#tBpbRb-zhuetlygbX!zTK%W;+lJuvv*BY~
z6l!j6k>79zn3aDS$u;ztS+VrwBue&5(B0MN(o(Kyfcdle#qHrzvlsj69exZqF6&f<
z@L$Qf%5w9!^;W13D~y@lAm&ME)?Y|7%dt5^Dbfx(CZxq&YRb?I3BAktF&}ftYRZ(=
z?G8mK<3BblPL%(M@76M3en{2lmpWsxD)nazj$_G>GVESoW~S(*29c%Mh1tUn*NJ(x
zLCyB_QBJNm`_boFGM<OC!H2($q$a+m3)GK>fG{+LqgJPMEHvItZ)C<RWIR#a<s{XM
z*w)%7&D3D@F&UM4sJM!*S5dbfVL1?D-dU%2{|yTwRGxAwo-ZPM5z79d^x9|UUW6dY
zY&}@ga#;W6{;9yB#{6W)%TX+F_jJ^a1FAhjER7v5UGwktktO#kc`>O}5u98WmI|S7
zLCB{DQcjf3WI(#om|OqmKa1~yOPV)iPlk19hz?Hc5%glOVsX)*erB*pGF=bG%I$hy
z^U}bye^0&kpS=F>^ZJkXZ|g9}tpb{JbRU%6801e|4BQ(&MTB(uxLoemcI8lk;rWj?
z_Z%yi$m5$7RjX3DBtBF=D{7jckA*AE8Fz%Nhp2gETOl@v(swC9;o^?bXyYhO<QM^i
zL3M?tK^{l8d$hc1H6M=J7@XvCwq6>^`sqLQ{;N;gY1HZDQB&lhiB`b6@txoMfEcs*
zH;hHuwDELzBHXb-N5?&tIoI^uN;!miEz7^Zzl>e%anQT89p$dZMlhptiVl9kz^C1|
z1)8Pcen#v?BL4CDgk09;P|*twR!Yyj*X9MA8hmLnsg>ERAdLAv(#lG8)Zfc9;_!3f
ziG>|{mMB3t!Vo;*89_hK<|A#BlTlS;gM@&PQIJxUkycPafPjDy2Y{VGAUg;dQ57|j
z`*TTqOA`uJCy<FXg*?#I62L?u4FrMBffP@i&Flc?HcS-aAR8M?I|@}3XH!!kn2ACb
zWbyOt9$Q>qP3;~>&BD@=;{Fdn;RtfJGo=8UnE_3lD9pehTM8!&AjR+PP)NGj+W;)>
zfM5y@OH&|-LRCuZ7gZZeV=w^h&T@~fsPyC>n}dy=@4o`j{Q&|!g@u!oy(2#>EAYNw
zj$gZF`?XgrCLr5;Usa{lQ10<mzj|o<)%I8aRV2Q)eYL^N#=*?N4gq1QB`>!N1py%_
zrYUuQC@d&*|KCtUQbkopQ9+oUg_~WF^*2p|s%nxl3SyEf(!zqGYHBKmUzz`YC@iQT
zDlaMgja#|z9TQ~z)+DH=tt2Vz=mfU3GZ$q2b|R=DDyJ?f{0AKqWc_|gko7D6e}xtY
zI04N;V0R^uqtjpF{}Ka#h53uS@&G$$Gk}ScGZ+X~0N4Wm68`r?{cr4uI-6R8z72<@
zsihML{NKj@?}h8X@#Nb8iGyryfp&jQ;QvCf|2x;59W6}&Ha~{=FFE>?;r$jlzeFbM
zzXUAnFHvr&B(L=l?LO)syV(OwtbtAx#z1pRJ0Z%wkByWRmZn0Knq2a1^7i6D3(F@S
zV4$jpf|`kkwF#do<zrzaK{tLkTYFoe6M(|a*2d0}-%W@TU<xt@^4}kSZDysU_$K0H
zEkvm$uXLYQz(5Kv7A_VxN?{}l3JO86sTseDgw!wU_h&+sUnleZTy}MJWpRDPa-Wu1
z+4=bRSlKvOIXIZ_C72!E?VJE^%yy1c-$8!hNB|v8z?Sw-mLNNduebnXkh7BzCFNH`
zKVQH2X>0$}kewsTH=n<z3syIPJu5p48|xn_nVS66v3CaBd~?mzgcWE5{2D)w_j>Gq
zsCQ41g#1s{-<q@iZcf784q$6(@+}@&fA;F$X~BDCesM4ma6eDfKp-38U(*<c3#Sqo
zB*^-EiC??>O<Dea7)$|90Ezo#A^dB?Q)B1mf5gep{)m~4o1cyCJIrrne~$w)wKQ}8
zTPVLu{tg2SaJtWX!fY&T-(KI1{?hm_qNXPNroWEmw?O$he%~TS)W+$ztzVh?I^;H%
zUn7a%24H6{MCrzC3N!;a+c;4Q|F6v5?*{*dBS1T5b=ChvCj?o)y7pU=1X=%-Rl)l!
z_RhvOmW~!c@Nc{GjZ`s!`EOf)Wt;W47rq<*t^7B`e+2*4tdpga4e)mu|JC>Jga7Xa
z_;-H%>fpbG!}n46o#dZV^?T30&Ls(X{`(y9b+Z2}$}d*{Hpb4jf7A|kvUL0-g?lJ_
zkRuTM2Ri0JJ1|iAXG;HW`g`NQOq1`;mUj2=CY=AoDQlqnPx$X${g)*9jrZ@Z_bK>3
zo3s8*=f542@BIJg|Nq*T|2+0j#D9$Zq~h-!{6p8@Vd<yLKXm=1;_n>%L)YJ7>8H#;
jbp52_?;QL?*WY33r_8^j3+dMfLZIFKQ=sep<KF)R$vpAs

literal 0
HcmV?d00001

diff --git a/public/audio/sending2.mp3 b/public/audio/sending2.mp3
new file mode 100644
index 0000000000000000000000000000000000000000..88a767493163b019abfc3eda6cb1517aa7aa86c7
GIT binary patch
literal 17180
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%0A^QMOs*R{r0E4uCDH<
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
UBARIX|Nb|H|IOF_&%O130c3l?Q2+n{

literal 0
HcmV?d00001

diff --git a/tailwind.config.ts b/tailwind.config.ts
index 8f49684..46c601e 100644
--- a/tailwind.config.ts
+++ b/tailwind.config.ts
@@ -5,76 +5,98 @@ export default {
 	content: ['./pages/**/*.{js,ts,jsx,tsx,mdx}', './components/**/*.{js,ts,jsx,tsx,mdx}', './app/**/*.{js,ts,jsx,tsx,mdx}'],
 	theme: {
 		extend: {
-			container: {
-				center: true,
-				padding: '1rem',
-				screens: {
-					sm: '100%',
-					md: '100%',
-					lg: '1024px',
-					xl: '1280px',
-				},
-			},
-			colors: {
-				background: 'hsl(var(--background))',
-				foreground: 'hsl(var(--foreground))',
-				card: {
-					DEFAULT: 'hsl(var(--card))',
-					foreground: 'hsl(var(--card-foreground))',
-				},
-				popover: {
-					DEFAULT: 'hsl(var(--popover))',
-					foreground: 'hsl(var(--popover-foreground))',
-				},
-				primary: {
-					DEFAULT: 'hsl(var(--primary))',
-					foreground: 'hsl(var(--primary-foreground))',
-				},
-				secondary: {
-					DEFAULT: 'hsl(var(--secondary))',
-					foreground: 'hsl(var(--secondary-foreground))',
-				},
-				muted: {
-					DEFAULT: 'hsl(var(--muted))',
-					foreground: 'hsl(var(--muted-foreground))',
-				},
-				accent: {
-					DEFAULT: 'hsl(var(--accent))',
-					foreground: 'hsl(var(--accent-foreground))',
-				},
-				destructive: {
-					DEFAULT: 'hsl(var(--destructive))',
-					foreground: 'hsl(var(--destructive-foreground))',
-				},
-				border: 'hsl(var(--border))',
-				input: 'hsl(var(--input))',
-				ring: 'hsl(var(--ring))',
-				chart: {
-					'1': 'hsl(var(--chart-1))',
-					'2': 'hsl(var(--chart-2))',
-					'3': 'hsl(var(--chart-3))',
-					'4': 'hsl(var(--chart-4))',
-					'5': 'hsl(var(--chart-5))',
-				},
-			},
-			fontFamily: {
-				spaceGrotesk: ['var(--font-spaceGrotesk)', 'sans-serif'],
-			},
-			borderRadius: {
-				lg: 'var(--radius)',
-				md: 'calc(var(--radius) - 2px)',
-				sm: 'calc(var(--radius) - 4px)',
-			},
-			keyframes: {
-				'caret-blink': {
-					'0%,70%,100%': { opacity: '1' },
-					'20%,50%': { opacity: '0' },
-				},
-			},
-			animation: {
-				'caret-blink': 'caret-blink 1.25s ease-out infinite',
-			},
-		},
-	},
+    		container: {
+    			center: 'true',
+    			padding: '1rem',
+    			screens: {
+    				sm: '100%',
+    				md: '100%',
+    				lg: '1024px',
+    				xl: '1280px'
+    			}
+    		},
+    		colors: {
+    			background: 'hsl(var(--background))',
+    			foreground: 'hsl(var(--foreground))',
+    			card: {
+    				DEFAULT: 'hsl(var(--card))',
+    				foreground: 'hsl(var(--card-foreground))'
+    			},
+    			popover: {
+    				DEFAULT: 'hsl(var(--popover))',
+    				foreground: 'hsl(var(--popover-foreground))'
+    			},
+    			primary: {
+    				DEFAULT: 'hsl(var(--primary))',
+    				foreground: 'hsl(var(--primary-foreground))'
+    			},
+    			secondary: {
+    				DEFAULT: 'hsl(var(--secondary))',
+    				foreground: 'hsl(var(--secondary-foreground))'
+    			},
+    			muted: {
+    				DEFAULT: 'hsl(var(--muted))',
+    				foreground: 'hsl(var(--muted-foreground))'
+    			},
+    			accent: {
+    				DEFAULT: 'hsl(var(--accent))',
+    				foreground: 'hsl(var(--accent-foreground))'
+    			},
+    			destructive: {
+    				DEFAULT: 'hsl(var(--destructive))',
+    				foreground: 'hsl(var(--destructive-foreground))'
+    			},
+    			border: 'hsl(var(--border))',
+    			input: 'hsl(var(--input))',
+    			ring: 'hsl(var(--ring))',
+    			chart: {
+    				'1': 'hsl(var(--chart-1))',
+    				'2': 'hsl(var(--chart-2))',
+    				'3': 'hsl(var(--chart-3))',
+    				'4': 'hsl(var(--chart-4))',
+    				'5': 'hsl(var(--chart-5))'
+    			}
+    		},
+    		fontFamily: {
+    			spaceGrotesk: ['var(--font-spaceGrotesk)', 'sans-serif']
+    		},
+    		borderRadius: {
+    			lg: 'var(--radius)',
+    			md: 'calc(var(--radius) - 2px)',
+    			sm: 'calc(var(--radius) - 4px)'
+    		},
+    		keyframes: {
+    			'caret-blink': {
+    				'0%,70%,100%': {
+    					opacity: '1'
+    				},
+    				'20%,50%': {
+    					opacity: '0'
+    				}
+    			},
+    			'accordion-down': {
+    				from: {
+    					height: '0'
+    				},
+    				to: {
+    					height: 'var(--radix-accordion-content-height)'
+    				}
+    			},
+    			'accordion-up': {
+    				from: {
+    					height: 'var(--radix-accordion-content-height)'
+    				},
+    				to: {
+    					height: '0'
+    				}
+    			}
+    		},
+    		animation: {
+    			'caret-blink': 'caret-blink 1.25s ease-out infinite',
+    			'accordion-down': 'accordion-down 0.2s ease-out',
+    			'accordion-up': 'accordion-up 0.2s ease-out'
+    		}
+    	}
+    },
 	plugins: [require('tailwindcss-animate')],
 } satisfies Config
\ No newline at end of file
-- 
2.41.0


From e77eebcac56db8b7aaada73b111ca4b7fb341c6d Mon Sep 17 00:00:00 2001
From: oscar-bek <salamov.behzod@gmail.com>
Date: Wed, 6 Aug 2025 13:00:58 +0900
Subject: [PATCH 10/16] feat(client): develop Next Auth

---
 app/(chat)/_components/settings.tsx       |  11 +-
 app/(chat)/layout.tsx                     |  14 ++
 app/api/auth/[...nextauth]/route.ts       |   5 +
 app/auth/_components/sign-in.tsx          |  33 +++-
 app/auth/_components/state.tsx            |   2 -
 app/auth/_components/verify.tsx           | 215 ++++++++++------------
 app/auth/page.tsx                         |   7 +-
 app/layout.tsx                            |  33 ++--
 components/providers/query.provider.tsx   |  13 ++
 components/providers/session.provider.tsx |  11 ++
 components/ui/toast.tsx                   | 129 +++++++++++++
 components/ui/toaster.tsx                 |  43 +++++
 hooks/use-toast.ts                        | 194 +++++++++++++++++++
 http/axios.ts                             |   8 +
 lib/auth-options.ts                       |  39 ++++
 lib/mongoose.ts                           |  22 +++
 models/user.model.ts                      |  18 ++
 package.json                              |   3 +-
 types/index.ts                            |  15 +-
 types/next-auth.d.ts                      |   9 +
 20 files changed, 675 insertions(+), 149 deletions(-)
 create mode 100644 app/(chat)/layout.tsx
 create mode 100644 app/api/auth/[...nextauth]/route.ts
 create mode 100644 components/providers/query.provider.tsx
 create mode 100644 components/providers/session.provider.tsx
 create mode 100644 components/ui/toast.tsx
 create mode 100644 components/ui/toaster.tsx
 create mode 100644 hooks/use-toast.ts
 create mode 100644 http/axios.ts
 create mode 100644 lib/auth-options.ts
 create mode 100644 lib/mongoose.ts
 create mode 100644 models/user.model.ts
 create mode 100644 types/next-auth.d.ts

diff --git a/app/(chat)/_components/settings.tsx b/app/(chat)/_components/settings.tsx
index c19536f..8020b75 100644
--- a/app/(chat)/_components/settings.tsx
+++ b/app/(chat)/_components/settings.tsx
@@ -34,12 +34,14 @@ import {
   UserPlus,
   VolumeOff,
 } from "lucide-react";
+import { signOut, useSession } from 'next-auth/react'
 import { useTheme } from "next-themes";
 import { useState } from "react";
 
 const Settings = () => {
   const [isProfileOpen, setIsProfileOpen] = useState(false);
   const { resolvedTheme, setTheme } = useTheme();
+  const { data: session } = useSession()
 
   return (
     <>
@@ -50,9 +52,9 @@ const Settings = () => {
           </Button>
         </PopoverTrigger>
         <PopoverContent className="p-0 w-80">
-          <h2 className="pt-2 pl-2 text-muted-foreground">
-            Settings: <span className="text-white">info@beggi.ac</span>
-          </h2>
+         <h2 className='pt-2 pl-2 text-muted-foreground text-sm'>
+            Settings: <span className='text-white'>{session?.user?.email}</span>
+					</h2>
           <div className="my-2">
             <Separator />
           </div>
@@ -100,8 +102,7 @@ const Settings = () => {
                 }
               />
             </div>
-
-            <div className="flex justify-between items-center bg-destructive p-2 cursor-pointer">
+              <div className='flex justify-between items-center bg-destructive p-2 cursor-pointer' onClick={() => signOut()}>
               <div className="flex items-center gap-1">
                 <LogIn size={16} />
                 <span className="text-sm">Logout</span>
diff --git a/app/(chat)/layout.tsx b/app/(chat)/layout.tsx
new file mode 100644
index 0000000..9a0ef49
--- /dev/null
+++ b/app/(chat)/layout.tsx
@@ -0,0 +1,14 @@
+import { authOptions } from '@/lib/auth-options'
+import { ChildProps } from '@/types'
+import { getServerSession } from 'next-auth'
+import { redirect } from 'next/navigation'
+import { FC } from 'react'
+
+const Layout: FC<ChildProps> = async ({ children }) => {
+	const session = await getServerSession(authOptions)
+	if (!session) return redirect('/auth')
+
+	return <div>{children}</div>
+}
+
+export default Layout
\ No newline at end of file
diff --git a/app/api/auth/[...nextauth]/route.ts b/app/api/auth/[...nextauth]/route.ts
new file mode 100644
index 0000000..5e16b0a
--- /dev/null
+++ b/app/api/auth/[...nextauth]/route.ts
@@ -0,0 +1,5 @@
+import { authOptions } from "@/lib/auth-options"
+import NextAuth from "next-auth"
+
+const handler = NextAuth(authOptions)
+export { handler as GET, handler as POST }
\ No newline at end of file
diff --git a/app/auth/_components/sign-in.tsx b/app/auth/_components/sign-in.tsx
index 6a24e5d..354b946 100644
--- a/app/auth/_components/sign-in.tsx
+++ b/app/auth/_components/sign-in.tsx
@@ -3,8 +3,12 @@ import { Form, FormControl, FormField, FormItem, FormMessage } from '@/component
 import { Input } from '@/components/ui/input'
 import { Label } from '@/components/ui/label'
 import { useAuth } from '@/hooks/use-auth'
+import { toast } from '@/hooks/use-toast'
+import { axiosClient } from '../../../http/axios'
 import { emailSchema } from '@/lib/validation'
+import { IError } from '@/types'
 import { zodResolver } from '@hookform/resolvers/zod'
+import { useMutation } from '@tanstack/react-query'
 import React from 'react'
 import { useForm } from 'react-hook-form'
 import { z } from 'zod'
@@ -17,11 +21,26 @@ const SignIn = () => {
 		defaultValues: { email: '' },
 	})
 
+	const { mutate, isPending } = useMutation({
+		mutationFn: async (email: string) => {
+			const { data } = await axiosClient.post<{ email: string }>('/api/auth/login', { email })
+			return data
+		},
+		onSuccess: res => {
+			setEmail(res.email)
+			setStep('verify')
+			toast({ description: 'Email sent' })
+		},
+		onError: (error: IError) => {
+			if (error.response?.data?.message) {
+				return toast({ description: error.response.data.message, variant: 'destructive' })
+			}
+			return toast({ description: 'Something went wrong', variant: 'destructive' })
+		},
+	})
+
 	function onSubmit(values: z.infer<typeof emailSchema>) {
-		console.log(values)
-		// API call to send email
-		setStep('verify')
-		setEmail(values.email)
+		mutate(values.email)
 	}
 
 	return (
@@ -38,13 +57,15 @@ const SignIn = () => {
 							<FormItem>
 								<Label>Email</Label>
 								<FormControl>
-									<Input placeholder='info@beggi.ac' className='h-10 bg-secondary' {...field} />
+						
+									<Input placeholder='info@sammi.ac' disabled={isPending} className='h-10 bg-secondary' {...field} />
 								</FormControl>
 								<FormMessage className='text-xs text-red-500' />
 							</FormItem>
 						)}
 					/>
-					<Button type='submit' className='w-full' size={'lg'}>
+				
+					<Button type='submit' className='w-full' size={'lg'} disabled={isPending}>
 						Submit
 					</Button>
 				</form>
diff --git a/app/auth/_components/state.tsx b/app/auth/_components/state.tsx
index cf3b854..aa36ff3 100644
--- a/app/auth/_components/state.tsx
+++ b/app/auth/_components/state.tsx
@@ -9,8 +9,6 @@ const StateAuth = () => {
 
 	return (
 		<>
-			{/* <SignIn /> */}
-			<Verify />
 			{step === 'login' && <SignIn />}
 			{step === 'verify' && <Verify />}
 		</>
diff --git a/app/auth/_components/verify.tsx b/app/auth/_components/verify.tsx
index 4041965..fa0c754 100644
--- a/app/auth/_components/verify.tsx
+++ b/app/auth/_components/verify.tsx
@@ -1,125 +1,104 @@
-import { Button } from "@/components/ui/button";
-import {
-  Form,
-  FormControl,
-  FormField,
-  FormItem,
-  FormMessage,
-} from "@/components/ui/form";
-import { Input } from "@/components/ui/input";
-import {
-  InputOTP,
-  InputOTPGroup,
-  InputOTPSeparator,
-  InputOTPSlot,
-} from "@/components/ui/input-otp";
-import { Label } from "@/components/ui/label";
-import { useAuth } from "@/hooks/use-auth";
-import { otpSchema } from "@/lib/validation";
-import { zodResolver } from "@hookform/resolvers/zod";
-import { REGEXP_ONLY_DIGITS } from "input-otp";
-import { useForm } from "react-hook-form";
-import { z } from "zod";
+import { Button } from '@/components/ui/button'
+import { Form, FormControl, FormField, FormItem, FormMessage } from '@/components/ui/form'
+import { Input } from '@/components/ui/input'
+import { InputOTP, InputOTPGroup, InputOTPSeparator, InputOTPSlot } from '@/components/ui/input-otp'
+import { Label } from '@/components/ui/label'
+import { useAuth } from '@/hooks/use-auth'
+import { toast } from '@/hooks/use-toast'
+import { axiosClient } from '@/http/axios'
+import { otpSchema } from '@/lib/validation'
+import { IError, IUser } from '@/types'
+import { zodResolver } from '@hookform/resolvers/zod'
+import { useMutation } from '@tanstack/react-query'
+import { REGEXP_ONLY_DIGITS } from 'input-otp'
+import React from 'react'
+import { useForm } from 'react-hook-form'
+import { z } from 'zod'
+import { signIn } from 'next-auth/react'
 
 const Verify = () => {
-  const { email } = useAuth();
+	const { email } = useAuth()
 
-  const form = useForm<z.infer<typeof otpSchema>>({
-    resolver: zodResolver(otpSchema),
-    defaultValues: { email, otp: "	" },
-  });
+	const form = useForm<z.infer<typeof otpSchema>>({
+		resolver: zodResolver(otpSchema),
+		defaultValues: { email, otp: '	' },
+	})
 
-  function onSubmit(values: z.infer<typeof otpSchema>) {
-    // API call to verify OTP
-    console.log(values);
-    window.open("/", "_self");
-  }
+	const { mutate, isPending } = useMutation({
+		mutationFn: async (otp: string) => {
+			const { data } = await axiosClient.post<{ user: IUser }>('/api/auth/verify', { email, otp })
+			return data
+		},
+		onSuccess: ({ user }) => {
+			signIn('credentials', { email: user.email, callbackUrl: '/' })
+			toast({ description: 'Successfully verified' })
+		},
+		onError: (error: IError) => {
+			if (error.response?.data?.message) {
+				return toast({ description: error.response.data.message, variant: 'destructive' })
+			}
+			return toast({ description: 'Something went wrong', variant: 'destructive' })
+		},
+	})
 
-  return (
-    <div className="w-full">
-      <p className="text-center text-muted-foreground text-sm">
-        We have sent you an email with a verification code to your email
-        address. Please enter the code below.
-      </p>
-      <Form {...form}>
-        <form
-          onSubmit={form.handleSubmit(onSubmit)}
-          className="w-full space-y-2"
-        >
-          <FormField
-            control={form.control}
-            name="email"
-            render={({ field }) => (
-              <FormItem>
-                <Label>Email</Label>
-                <FormControl>
-                  <Input
-                    placeholder="info@beggi.ac"
-                    disabled
-                    className="h-10 bg-secondary"
-                    {...field}
-                  />
-                </FormControl>
-                <FormMessage className="text-xs text-red-500" />
-              </FormItem>
-            )}
-          />
-          <FormField
-            control={form.control}
-            name="otp"
-            render={({ field }) => (
-              <FormItem>
-                <Label>One-Time Password</Label>
-                <FormControl>
-                  <InputOTP
-                    maxLength={6}
-                    className="w-full"
-                    pattern={REGEXP_ONLY_DIGITS}
-                    {...field}
-                  >
-                    <InputOTPGroup className="w-full ">
-                      <InputOTPSlot
-                        index={0}
-                        className="w-full dark:bg-primary-foreground bg-secondary"
-                      />
-                      <InputOTPSlot
-                        index={1}
-                        className="w-full dark:bg-primary-foreground bg-secondary"
-                      />
-                      <InputOTPSlot
-                        index={2}
-                        className="w-full dark:bg-primary-foreground bg-secondary"
-                      />
-                    </InputOTPGroup>
-                    <InputOTPSeparator />
-                    <InputOTPGroup className="w-full ">
-                      <InputOTPSlot
-                        index={3}
-                        className="w-full dark:bg-primary-foreground bg-secondary"
-                      />
-                      <InputOTPSlot
-                        index={4}
-                        className="w-full dark:bg-primary-foreground bg-secondary"
-                      />
-                      <InputOTPSlot
-                        index={5}
-                        className="w-full dark:bg-primary-foreground bg-secondary"
-                      />
-                    </InputOTPGroup>
-                  </InputOTP>
-                </FormControl>
-                <FormMessage className="text-xs text-red-500" />
-              </FormItem>
-            )}
-          />
+	function onSubmit(values: z.infer<typeof otpSchema>) {
+		mutate(values.otp)
+	}
 
-          <Button type="submit" className="w-full" size={"lg"}>
-            Submit
-          </Button>
-        </form>
-      </Form>
-    </div>
-  );
-};
+	return (
+		<div className='w-full'>
+			<p className='text-center text-muted-foreground text-sm'>
+				We have sent you an email with a verification code to your email address. Please enter the code below.
+			</p>
+			<Form {...form}>
+				<form onSubmit={form.handleSubmit(onSubmit)} className='w-full space-y-2'>
+					<FormField
+						control={form.control}
+						name='email'
+						render={({ field }) => (
+							<FormItem>
+								<Label>Email</Label>
+								<FormControl>
+									<Input placeholder='info@sammi.ac' disabled className='h-10 bg-secondary' {...field} />
+								</FormControl>
+								<FormMessage className='text-xs text-red-500' />
+							</FormItem>
+						)}
+					/>
+					<FormField
+						control={form.control}
+						name='otp'
+						render={({ field }) => (
+							<FormItem>
+								<Label>One-Time Password</Label>
+								<FormControl>
+									<InputOTP maxLength={6} className='w-full' pattern={REGEXP_ONLY_DIGITS} disabled={isPending} {...field}>
+										<InputOTPGroup className='w-full '>
+											<InputOTPSlot index={0} className='w-full dark:bg-primary-foreground bg-secondary' />
+											<InputOTPSlot index={1} className='w-full dark:bg-primary-foreground bg-secondary' />
+											<InputOTPSlot index={2} className='w-full dark:bg-primary-foreground bg-secondary' />
+										</InputOTPGroup>
+										<InputOTPSeparator />
+										<InputOTPGroup className='w-full '>
+											<InputOTPSlot index={3} className='w-full dark:bg-primary-foreground bg-secondary' />
+											<InputOTPSlot index={4} className='w-full dark:bg-primary-foreground bg-secondary' />
+											<InputOTPSlot index={5} className='w-full dark:bg-primary-foreground bg-secondary' />
+										</InputOTPGroup>
+									</InputOTP>
+								</FormControl>
+								<FormMessage className='text-xs text-red-500' />
+							</FormItem>
+						)}
+					/>
 
-export default Verify;
+				
+					<Button type='submit' className='w-full' size={'lg'} disabled={isPending}>
+						Submit
+					</Button>
+				</form>
+			</Form>
+		</div>
+	)
+}
+
+export default Verify
\ No newline at end of file
diff --git a/app/auth/page.tsx b/app/auth/page.tsx
index 63408a7..292067c 100644
--- a/app/auth/page.tsx
+++ b/app/auth/page.tsx
@@ -3,8 +3,13 @@ import StateAuth from './_components/state'
 import Social from './_components/social'
 
 import { ModeToggle } from '@/components/shared/mode-toggle'
+import { getServerSession } from 'next-auth'
+import { authOptions } from '@/lib/auth-options'
+import { redirect } from 'next/navigation'
 
-const Page = () => {
+const Page = async () => {
+	const session = await getServerSession(authOptions)
+	if (session) return redirect('/')
 	return (
 		<div className='bg-background flex flex-col items-center justify-center h-screen'>
 		<div className='container max-w-md w-full h-screen flex justify-center items-center flex-col space-y-4'>
diff --git a/app/layout.tsx b/app/layout.tsx
index 29e1969..7cc7cc8 100644
--- a/app/layout.tsx
+++ b/app/layout.tsx
@@ -3,6 +3,12 @@ import "./globals.css";
 
 import type { Metadata } from "next";
 import { Space_Grotesk } from "next/font/google";
+import QueryProvider from '@/components/providers/query.provider'
+// import { Toaster } from '@/components/ui/toaster'
+// Update the import path below if the file exists elsewhere, for example:
+import { Toaster } from '@/components/ui/toaster'
+// Or create the missing file at 'components/ui/toaster.tsx' if it does not exist.
+import SessionProvider from '@/components/providers/session.provider'
 
 const spaceGrotesk = Space_Grotesk({
   weight: ["400", "500", "600", "700", "300"],
@@ -22,20 +28,17 @@ export default function RootLayout({
   children: React.ReactNode;
 }>) {
   return (
-    <html lang="en" suppressHydrationWarning>
-      <body
-        className={`${spaceGrotesk.variable} antialiased`}
-        suppressHydrationWarning
-      >
-        <ThemeProvider
-          attribute="class"
-          defaultTheme="system"
-          enableSystem
-          disableTransitionOnChange
-        >
-          {children}
-        </ThemeProvider>
-      </body>
-    </html>
+<SessionProvider>
+			<QueryProvider>
+				<html lang='en' suppressHydrationWarning>
+					<body className={`${spaceGrotesk.variable} antialiased`} suppressHydrationWarning>
+						<ThemeProvider attribute='class' defaultTheme='system' enableSystem disableTransitionOnChange>
+							<main>{children}</main>
+							<Toaster />
+						</ThemeProvider>
+					</body>
+				</html>
+			</QueryProvider>
+		</SessionProvider>
   );
 }
diff --git a/components/providers/query.provider.tsx b/components/providers/query.provider.tsx
new file mode 100644
index 0000000..b0631a5
--- /dev/null
+++ b/components/providers/query.provider.tsx
@@ -0,0 +1,13 @@
+'use client'
+
+import { ChildProps } from '@/types'
+import { QueryClient, QueryClientProvider } from '@tanstack/react-query'
+import { FC } from 'react'
+
+const queryClient = new QueryClient()
+
+const QueryProvider: FC<ChildProps> = ({ children }) => {
+	return <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>
+}
+
+export default QueryProvider
\ No newline at end of file
diff --git a/components/providers/session.provider.tsx b/components/providers/session.provider.tsx
new file mode 100644
index 0000000..b03b937
--- /dev/null
+++ b/components/providers/session.provider.tsx
@@ -0,0 +1,11 @@
+'use client'
+
+import { ChildProps } from '@/types'
+import { SessionProvider as Session } from 'next-auth/react'
+import { FC } from 'react'
+
+const SessionProvider: FC<ChildProps> = ({ children }) => {
+	return <Session>{children}</Session>
+}
+
+export default SessionProvider
\ No newline at end of file
diff --git a/components/ui/toast.tsx b/components/ui/toast.tsx
new file mode 100644
index 0000000..042cf52
--- /dev/null
+++ b/components/ui/toast.tsx
@@ -0,0 +1,129 @@
+"use client"
+
+import * as React from "react"
+import * as ToastPrimitives from "@radix-ui/react-toast"
+import { cva, type VariantProps } from "class-variance-authority"
+import { X } from "lucide-react"
+
+import { cn } from "@/lib/utils"
+
+const ToastProvider = ToastPrimitives.Provider
+
+const ToastViewport = React.forwardRef<
+  React.ElementRef<typeof ToastPrimitives.Viewport>,
+  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>
+>(({ className, ...props }, ref) => (
+  <ToastPrimitives.Viewport
+    ref={ref}
+    className={cn(
+      "fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]",
+      className
+    )}
+    {...props}
+  />
+))
+ToastViewport.displayName = ToastPrimitives.Viewport.displayName
+
+const toastVariants = cva(
+  "group pointer-events-auto relative flex w-full items-center justify-between space-x-2 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full",
+  {
+    variants: {
+      variant: {
+        default: "border bg-background text-foreground",
+        destructive:
+          "destructive group border-destructive bg-destructive text-destructive-foreground",
+      },
+    },
+    defaultVariants: {
+      variant: "default",
+    },
+  }
+)
+
+const Toast = React.forwardRef<
+  React.ElementRef<typeof ToastPrimitives.Root>,
+  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &
+    VariantProps<typeof toastVariants>
+>(({ className, variant, ...props }, ref) => {
+  return (
+    <ToastPrimitives.Root
+      ref={ref}
+      className={cn(toastVariants({ variant }), className)}
+      {...props}
+    />
+  )
+})
+Toast.displayName = ToastPrimitives.Root.displayName
+
+const ToastAction = React.forwardRef<
+  React.ElementRef<typeof ToastPrimitives.Action>,
+  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>
+>(({ className, ...props }, ref) => (
+  <ToastPrimitives.Action
+    ref={ref}
+    className={cn(
+      "inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-1 focus:ring-ring disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive",
+      className
+    )}
+    {...props}
+  />
+))
+ToastAction.displayName = ToastPrimitives.Action.displayName
+
+const ToastClose = React.forwardRef<
+  React.ElementRef<typeof ToastPrimitives.Close>,
+  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>
+>(({ className, ...props }, ref) => (
+  <ToastPrimitives.Close
+    ref={ref}
+    className={cn(
+      "absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600",
+      className
+    )}
+    toast-close=""
+    {...props}
+  >
+    <X className="h-4 w-4" />
+  </ToastPrimitives.Close>
+))
+ToastClose.displayName = ToastPrimitives.Close.displayName
+
+const ToastTitle = React.forwardRef<
+  React.ElementRef<typeof ToastPrimitives.Title>,
+  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>
+>(({ className, ...props }, ref) => (
+  <ToastPrimitives.Title
+    ref={ref}
+    className={cn("text-sm font-semibold [&+div]:text-xs", className)}
+    {...props}
+  />
+))
+ToastTitle.displayName = ToastPrimitives.Title.displayName
+
+const ToastDescription = React.forwardRef<
+  React.ElementRef<typeof ToastPrimitives.Description>,
+  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>
+>(({ className, ...props }, ref) => (
+  <ToastPrimitives.Description
+    ref={ref}
+    className={cn("text-sm opacity-90", className)}
+    {...props}
+  />
+))
+ToastDescription.displayName = ToastPrimitives.Description.displayName
+
+type ToastProps = React.ComponentPropsWithoutRef<typeof Toast>
+
+type ToastActionElement = React.ReactElement<typeof ToastAction>
+
+export {
+  type ToastProps,
+  type ToastActionElement,
+  ToastProvider,
+  ToastViewport,
+  Toast,
+  ToastTitle,
+  ToastDescription,
+  ToastClose,
+  ToastAction,
+}
\ No newline at end of file
diff --git a/components/ui/toaster.tsx b/components/ui/toaster.tsx
new file mode 100644
index 0000000..e159426
--- /dev/null
+++ b/components/ui/toaster.tsx
@@ -0,0 +1,43 @@
+"use client"
+
+import { useToast } from "@/hooks/use-toast"
+import {
+  Toast,
+  ToastClose,
+  ToastDescription,
+  ToastProvider,
+  ToastTitle,
+  ToastViewport,
+} from "@/components/ui/toast"
+
+type ToastType = {
+  id: string;
+  title?: React.ReactNode;
+  description?: React.ReactNode;
+  action?: React.ReactNode;
+  [key: string]: unknown;
+};
+
+export function Toaster() {
+  const { toasts } = useToast()
+
+  return (
+    <ToastProvider>
+      {toasts.map(function ({ id, title, description, action, ...props }: ToastType) {
+        return (
+          <Toast key={id} {...props}>
+            <div className="grid gap-1">
+              {title && <ToastTitle>{title}</ToastTitle>}
+              {description && (
+                <ToastDescription>{description}</ToastDescription>
+              )}
+            </div>
+            {action}
+            <ToastClose />
+          </Toast>
+        )
+      })}
+      <ToastViewport />
+    </ToastProvider>
+  )
+}
\ No newline at end of file
diff --git a/hooks/use-toast.ts b/hooks/use-toast.ts
new file mode 100644
index 0000000..f7b511e
--- /dev/null
+++ b/hooks/use-toast.ts
@@ -0,0 +1,194 @@
+"use client"
+
+// Inspired by react-hot-toast library
+import * as React from "react"
+
+import type {
+  ToastActionElement,
+  ToastProps,
+} from "@/components/ui/toast"
+
+const TOAST_LIMIT = 1
+const TOAST_REMOVE_DELAY = 1000000
+
+type ToasterToast = ToastProps & {
+  id: string
+  title?: React.ReactNode
+  description?: React.ReactNode
+  action?: ToastActionElement
+}
+
+const actionTypes = {
+  ADD_TOAST: "ADD_TOAST",
+  UPDATE_TOAST: "UPDATE_TOAST",
+  DISMISS_TOAST: "DISMISS_TOAST",
+  REMOVE_TOAST: "REMOVE_TOAST",
+} as const
+
+let count = 0
+
+function genId() {
+  count = (count + 1) % Number.MAX_SAFE_INTEGER
+  return count.toString()
+}
+
+type ActionType = typeof actionTypes
+
+type Action =
+  | {
+      type: ActionType["ADD_TOAST"]
+      toast: ToasterToast
+    }
+  | {
+      type: ActionType["UPDATE_TOAST"]
+      toast: Partial<ToasterToast>
+    }
+  | {
+      type: ActionType["DISMISS_TOAST"]
+      toastId?: ToasterToast["id"]
+    }
+  | {
+      type: ActionType["REMOVE_TOAST"]
+      toastId?: ToasterToast["id"]
+    }
+
+interface State {
+  toasts: ToasterToast[]
+}
+
+const toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()
+
+const addToRemoveQueue = (toastId: string) => {
+  if (toastTimeouts.has(toastId)) {
+    return
+  }
+
+  const timeout = setTimeout(() => {
+    toastTimeouts.delete(toastId)
+    dispatch({
+      type: "REMOVE_TOAST",
+      toastId: toastId,
+    })
+  }, TOAST_REMOVE_DELAY)
+
+  toastTimeouts.set(toastId, timeout)
+}
+
+export const reducer = (state: State, action: Action): State => {
+  switch (action.type) {
+    case "ADD_TOAST":
+      return {
+        ...state,
+        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),
+      }
+
+    case "UPDATE_TOAST":
+      return {
+        ...state,
+        toasts: state.toasts.map((t) =>
+          t.id === action.toast.id ? { ...t, ...action.toast } : t
+        ),
+      }
+
+    case "DISMISS_TOAST": {
+      const { toastId } = action
+
+      // ! Side effects ! - This could be extracted into a dismissToast() action,
+      // but I'll keep it here for simplicity
+      if (toastId) {
+        addToRemoveQueue(toastId)
+      } else {
+        state.toasts.forEach((toast) => {
+          addToRemoveQueue(toast.id)
+        })
+      }
+
+      return {
+        ...state,
+        toasts: state.toasts.map((t) =>
+          t.id === toastId || toastId === undefined
+            ? {
+                ...t,
+                open: false,
+              }
+            : t
+        ),
+      }
+    }
+    case "REMOVE_TOAST":
+      if (action.toastId === undefined) {
+        return {
+          ...state,
+          toasts: [],
+        }
+      }
+      return {
+        ...state,
+        toasts: state.toasts.filter((t) => t.id !== action.toastId),
+      }
+  }
+}
+
+const listeners: Array<(state: State) => void> = []
+
+let memoryState: State = { toasts: [] }
+
+function dispatch(action: Action) {
+  memoryState = reducer(memoryState, action)
+  listeners.forEach((listener) => {
+    listener(memoryState)
+  })
+}
+
+type Toast = Omit<ToasterToast, "id">
+
+function toast({ ...props }: Toast) {
+  const id = genId()
+
+  const update = (props: ToasterToast) =>
+    dispatch({
+      type: "UPDATE_TOAST",
+      toast: { ...props, id },
+    })
+  const dismiss = () => dispatch({ type: "DISMISS_TOAST", toastId: id })
+
+  dispatch({
+    type: "ADD_TOAST",
+    toast: {
+      ...props,
+      id,
+      open: true,
+      onOpenChange: (open: boolean) => {
+        if (!open) dismiss()
+      },
+    },
+  })
+
+  return {
+    id: id,
+    dismiss,
+    update,
+  }
+}
+
+function useToast() {
+  const [state, setState] = React.useState<State>(memoryState)
+
+  React.useEffect(() => {
+    listeners.push(setState)
+    return () => {
+      const index = listeners.indexOf(setState)
+      if (index > -1) {
+        listeners.splice(index, 1)
+      }
+    }
+  }, [state])
+
+  return {
+    ...state,
+    toast,
+    dismiss: (toastId?: string) => dispatch({ type: "DISMISS_TOAST", toastId }),
+  }
+}
+
+export { useToast, toast }
\ No newline at end of file
diff --git a/http/axios.ts b/http/axios.ts
new file mode 100644
index 0000000..675248c
--- /dev/null
+++ b/http/axios.ts
@@ -0,0 +1,8 @@
+import axios from 'axios'
+
+export const SERVER_URL = process.env.NEXT_PUBLIC_SERVER_URL
+
+export const axiosClient = axios.create({
+	baseURL: SERVER_URL,
+	headers: { 'Content-Type': 'application/json' },
+})
\ No newline at end of file
diff --git a/lib/auth-options.ts b/lib/auth-options.ts
new file mode 100644
index 0000000..5f7f7a8
--- /dev/null
+++ b/lib/auth-options.ts
@@ -0,0 +1,39 @@
+import { NextAuthOptions } from 'next-auth'
+import Credentials from 'next-auth/providers/credentials'
+import { connectToDatabase } from './mongoose'
+import User from '@/models/user.model'
+
+export const authOptions: NextAuthOptions = {
+	providers: [
+		Credentials({
+			name: 'Credentials',
+			credentials: { email: { label: 'Email', type: 'email' } },
+			async authorize(credentials) {
+				await connectToDatabase()
+				const user = await User.findOne({ email: credentials?.email })
+				return user
+			},
+		}),
+	],
+	callbacks: {
+		async session({ session }) {
+			await connectToDatabase()
+			const isExistingUser = await User.findOne({ email: session.user?.email })
+			if (!isExistingUser) {
+				const user = await User.create({
+					email: session.user?.email,
+					isVerified: true,
+					avatar: session.user?.image,
+				})
+				session.currentUser = user
+				return session
+			}
+			session.currentUser = isExistingUser
+			return session
+		},
+	},
+	session: { strategy: 'jwt' },
+	jwt: { secret: process.env.NEXT_PUBLIC_JWT_SECRET },
+	secret: process.env.NEXTAUTH_SECRET,
+	pages: { signIn: '/auth', signOut: '/auth' },
+}
\ No newline at end of file
diff --git a/lib/mongoose.ts b/lib/mongoose.ts
new file mode 100644
index 0000000..3d4f4cb
--- /dev/null
+++ b/lib/mongoose.ts
@@ -0,0 +1,22 @@
+import mongoose from 'mongoose'
+
+let isConnected: boolean = false
+
+export const connectToDatabase = async () => {
+	mongoose.set('strictQuery', true)
+
+	if (!process.env.MONGO_URI) {
+		return console.error('MONGO_URI is not defined')
+	}
+
+	if (isConnected) {
+		return
+	}
+
+	try {
+		await mongoose.connect(process.env.MONGO_URI, { autoCreate: true })
+		isConnected = true
+	} catch {
+		console.log('Error connecting to database')
+	}
+}
\ No newline at end of file
diff --git a/models/user.model.ts b/models/user.model.ts
new file mode 100644
index 0000000..d3a3403
--- /dev/null
+++ b/models/user.model.ts
@@ -0,0 +1,18 @@
+import { IUser } from '@/types'
+import { Schema, models, model } from 'mongoose'
+
+const userSchema = new Schema<IUser>({
+	email: { type: String, required: true, unique: true },
+	isVerified: { type: Boolean, default: false },
+	firstName: { type: String },
+	lastName: { type: String },
+	bio: { type: String },
+	avatar: { type: String },
+	muted: { type: Boolean, default: false },
+	notificationSound: { type: String, default: 'notification.mp3' },
+	sendingSound: { type: String, default: 'sending.mp3' },
+	contacts: [{ type: Schema.Types.ObjectId, ref: 'User' }],
+})
+
+const User = models.User || model<IUser>('User', userSchema)
+export default User
\ No newline at end of file
diff --git a/package.json b/package.json
index 001c094..2315ba1 100644
--- a/package.json
+++ b/package.json
@@ -18,9 +18,10 @@
     "@radix-ui/react-popover": "^1.1.14",
     "@radix-ui/react-separator": "^1.1.7",
     "@radix-ui/react-slot": "^1.2.3",
+    "@radix-ui/react-toast": "^1.2.14",
     "@tanstack/react-query": "^5.83.0",
     "add": "^2.0.6",
-    "axios": "^1.10.0",
+    "axios": "^1.11.0",
     "class-variance-authority": "^0.7.1",
     "clsx": "^2.1.1",
     "form": "^0.2.5",
diff --git a/types/index.ts b/types/index.ts
index a268b08..5ff19c3 100644
--- a/types/index.ts
+++ b/types/index.ts
@@ -1,8 +1,21 @@
+export interface ChildProps {
+	children: React.ReactNode
+}
+
+export interface IError {
+	response: { data: { message: string } }
+}
+
 export interface IUser {
 	email: string
 	_id: string
 	avatar: string
-  firstName: string
+	firstName: string
 	lastName: string
 	bio: string
+	isVerified: boolean
+	muted: boolean
+	notificationSound: string
+	sendingSound: string
+	contacts: IUser[]
 }
\ No newline at end of file
diff --git a/types/next-auth.d.ts b/types/next-auth.d.ts
new file mode 100644
index 0000000..9608a53
--- /dev/null
+++ b/types/next-auth.d.ts
@@ -0,0 +1,9 @@
+import { DefaultSession } from 'next-auth'
+import { IUser } from '.'
+
+declare module 'next-auth' {
+	interface Session {
+		currentUser?: IUser
+		user: {} & DefaultSession['user']
+	}
+}
\ No newline at end of file
-- 
2.41.0


From 52c88e3b9468010d27e57c23d68824a0d9fa6312 Mon Sep 17 00:00:00 2001
From: oscar-bek <salamov.behzod@gmail.com>
Date: Wed, 6 Aug 2025 16:49:36 +0900
Subject: [PATCH 11/16] feat(client): develop Api implement settings

---
 app/(chat)/_components/settings.tsx     |  29 +++-
 app/auth/_components/sign-in.tsx        |  11 +-
 app/auth/_components/verify.tsx         |  12 +-
 components/forms/danger-zone.form.tsx   | 165 ++++++++++++--------
 components/forms/email.form.tsx         |  61 ++++++--
 components/forms/information.form.tsx   | 192 ++++++++++++++++--------
 components/forms/notification.form.tsx  |  94 +++++++++---
 components/providers/query.provider.tsx |  16 +-
 http/axios.ts                           |  11 +-
 lib/generate-token.ts                   |  15 ++
 lib/utils.ts                            |  19 ++-
 types/index.ts                          |   2 +-
 12 files changed, 440 insertions(+), 187 deletions(-)
 create mode 100644 lib/generate-token.ts

diff --git a/app/(chat)/_components/settings.tsx b/app/(chat)/_components/settings.tsx
index 8020b75..eb21de5 100644
--- a/app/(chat)/_components/settings.tsx
+++ b/app/(chat)/_components/settings.tsx
@@ -24,6 +24,10 @@ import {
   SheetTitle,
 } from "@/components/ui/sheet";
 import { Switch } from "@/components/ui/switch";
+import { toast } from '@/hooks/use-toast'
+import { axiosClient } from '@/http/axios'
+import { generateToken } from '@/lib/generate-token'
+import { useMutation } from '@tanstack/react-query'
 import {
   LogIn,
   Menu,
@@ -41,7 +45,19 @@ import { useState } from "react";
 const Settings = () => {
   const [isProfileOpen, setIsProfileOpen] = useState(false);
   const { resolvedTheme, setTheme } = useTheme();
-  const { data: session } = useSession()
+ const { data: session, update } = useSession()
+
+	const { mutate, isPending } = useMutation({
+		mutationFn: async (muted: boolean) => {
+			const token = await generateToken(session?.currentUser?._id)
+			const { data } = await axiosClient.put('/api/user/profile', { muted }, { headers: { Authorization: `Bearer ${token}` } })
+			return data
+		},
+		onSuccess: () => {
+			toast({ description: 'Profile updated successfully' })
+			update()
+		},
+	})
 
   return (
     <>
@@ -69,7 +85,10 @@ const Settings = () => {
               </div>
             </div>
 
-            <div className="flex justify-between items-center p-2 hover:bg-secondary cursor-pointer">
+           <div
+							className='flex justify-between items-center p-2 hover:bg-secondary cursor-pointer'
+							onClick={() => window.location.reload()}
+						>
               <div className="flex items-center gap-1">
                 <UserPlus size={16} />
                 <span className="text-sm">Create contact</span>
@@ -81,7 +100,11 @@ const Settings = () => {
                 <VolumeOff size={16} />
                 <span className="text-sm">Mute</span>
               </div>
-              <Switch />
+             <Switch
+								checked={!session?.currentUser?.muted}
+								onCheckedChange={() => mutate(!session?.currentUser?.muted)}
+								disabled={isPending}
+							/>
             </div>
 
             <div className="flex justify-between items-center p-2 hover:bg-secondary">
diff --git a/app/auth/_components/sign-in.tsx b/app/auth/_components/sign-in.tsx
index 354b946..e987efc 100644
--- a/app/auth/_components/sign-in.tsx
+++ b/app/auth/_components/sign-in.tsx
@@ -6,7 +6,6 @@ import { useAuth } from '@/hooks/use-auth'
 import { toast } from '@/hooks/use-toast'
 import { axiosClient } from '../../../http/axios'
 import { emailSchema } from '@/lib/validation'
-import { IError } from '@/types'
 import { zodResolver } from '@hookform/resolvers/zod'
 import { useMutation } from '@tanstack/react-query'
 import React from 'react'
@@ -30,13 +29,7 @@ const SignIn = () => {
 			setEmail(res.email)
 			setStep('verify')
 			toast({ description: 'Email sent' })
-		},
-		onError: (error: IError) => {
-			if (error.response?.data?.message) {
-				return toast({ description: error.response.data.message, variant: 'destructive' })
-			}
-			return toast({ description: 'Something went wrong', variant: 'destructive' })
-		},
+		}
 	})
 
 	function onSubmit(values: z.infer<typeof emailSchema>) {
@@ -58,7 +51,7 @@ const SignIn = () => {
 								<Label>Email</Label>
 								<FormControl>
 						
-									<Input placeholder='info@sammi.ac' disabled={isPending} className='h-10 bg-secondary' {...field} />
+									<Input placeholder='info@beggi.ac' disabled={isPending} className='h-10 bg-secondary' {...field} />
 								</FormControl>
 								<FormMessage className='text-xs text-red-500' />
 							</FormItem>
diff --git a/app/auth/_components/verify.tsx b/app/auth/_components/verify.tsx
index fa0c754..3e0c5f4 100644
--- a/app/auth/_components/verify.tsx
+++ b/app/auth/_components/verify.tsx
@@ -7,7 +7,7 @@ import { useAuth } from '@/hooks/use-auth'
 import { toast } from '@/hooks/use-toast'
 import { axiosClient } from '@/http/axios'
 import { otpSchema } from '@/lib/validation'
-import { IError, IUser } from '@/types'
+import { IUser } from '@/types'
 import { zodResolver } from '@hookform/resolvers/zod'
 import { useMutation } from '@tanstack/react-query'
 import { REGEXP_ONLY_DIGITS } from 'input-otp'
@@ -32,13 +32,7 @@ const Verify = () => {
 		onSuccess: ({ user }) => {
 			signIn('credentials', { email: user.email, callbackUrl: '/' })
 			toast({ description: 'Successfully verified' })
-		},
-		onError: (error: IError) => {
-			if (error.response?.data?.message) {
-				return toast({ description: error.response.data.message, variant: 'destructive' })
-			}
-			return toast({ description: 'Something went wrong', variant: 'destructive' })
-		},
+		}
 	})
 
 	function onSubmit(values: z.infer<typeof otpSchema>) {
@@ -59,7 +53,7 @@ const Verify = () => {
 							<FormItem>
 								<Label>Email</Label>
 								<FormControl>
-									<Input placeholder='info@sammi.ac' disabled className='h-10 bg-secondary' {...field} />
+									<Input placeholder='info@beggi.ac' disabled className='h-10 bg-secondary' {...field} />
 								</FormControl>
 								<FormMessage className='text-xs text-red-500' />
 							</FormItem>
diff --git a/components/forms/danger-zone.form.tsx b/components/forms/danger-zone.form.tsx
index c635396..fe00f30 100644
--- a/components/forms/danger-zone.form.tsx
+++ b/components/forms/danger-zone.form.tsx
@@ -1,67 +1,108 @@
-import React from 'react'
-import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '../ui/dialog'
-import { Button } from '../ui/button'
-import { Separator } from '../ui/separator'
-import { useForm } from 'react-hook-form'
-import { z } from 'zod'
-import { confirmTextSchema } from '@/lib/validation'
-import { zodResolver } from '@hookform/resolvers/zod'
-import { Form, FormControl, FormDescription, FormField, FormItem, FormMessage } from '../ui/form'
-import { Input } from '../ui/input'
+import React from "react";
+import {
+  Dialog,
+  DialogContent,
+  DialogDescription,
+  DialogHeader,
+  DialogTitle,
+  DialogTrigger,
+} from "../ui/dialog";
+import { Button } from "../ui/button";
+import { Separator } from "../ui/separator";
+import { useForm } from "react-hook-form";
+import { z } from "zod";
+import { confirmTextSchema } from "@/lib/validation";
+import { zodResolver } from "@hookform/resolvers/zod";
+import {
+  Form,
+  FormControl,
+  FormDescription,
+  FormField,
+  FormItem,
+  FormMessage,
+} from "../ui/form";
+import { Input } from "../ui/input";
+import { generateToken } from "@/lib/generate-token";
+import { signOut, useSession } from "next-auth/react";
+import { useMutation } from "@tanstack/react-query";
+import { axiosClient } from "@/http/axios";
 
 const DangerZoneForm = () => {
-	const form = useForm<z.infer<typeof confirmTextSchema>>({
-		resolver: zodResolver(confirmTextSchema),
-		defaultValues: { confirmText: '' },
-	})
+  const { data: session } = useSession();
+  const form = useForm<z.infer<typeof confirmTextSchema>>({
+    resolver: zodResolver(confirmTextSchema),
+    defaultValues: { confirmText: "" },
+  });
 
-	function onSubmit(values: z.infer<typeof confirmTextSchema>) {
-		console.log(values)
-	}
-	return (
-		<>
-			<p className='text-xs text-muted-foreground text-center'>
-				Are you sure you want to delete your account? This action cannot be undone.
-			</p>
+  const { mutate, isPending } = useMutation({
+    mutationFn: async () => {
+      const token = await generateToken(session?.currentUser?._id);
+      const { data } = await axiosClient.delete("/api/user", {
+        headers: { Authorization: `Bearer ${token}` },
+      });
+      return data;
+    },
+    onSuccess: () => {
+      signOut();
+    },
+  });
 
-			<Dialog>
-				<DialogTrigger asChild>
-					<Button className='mt-2 w-full font-spaceGrotesk font-bold' variant={'destructive'}>
-						Delete permenantly
-					</Button>
-				</DialogTrigger>
-				<DialogContent>
-					<DialogHeader>
-						<DialogTitle>Are you absolutely sure?</DialogTitle>
-						<DialogDescription>
-							This action cannot be undone. This will permanently delete your account and remove your data from our servers.
-						</DialogDescription>
-					</DialogHeader>
-					<Separator />
-					<Form {...form}>
-						<form onSubmit={form.handleSubmit(onSubmit)} className='space-y-2'>
-							<FormField
-								control={form.control}
-								name='confirmText'
-								render={({ field }) => (
-									<FormItem>
-										<FormDescription>
-											Please type <span className='font-bold'>DELETE</span> to confirm.
-										</FormDescription>
-										<FormControl>
-											<Input className='bg-secondary' {...field} />
-										</FormControl>
-										<FormMessage className='text-xs text-red-500' />
-									</FormItem>
-								)}
-							/>
-							<Button className='w-full font-bold'>Submit</Button>
-						</form>
-					</Form>
-				</DialogContent>
-			</Dialog>
-		</>
-	)
-}
+  function onSubmit() {
+    mutate();
+  }
 
-export default DangerZoneForm
\ No newline at end of file
+  return (
+    <>
+      <p className="text-xs text-muted-foreground text-center">
+        Are you sure you want to delete your account? This action cannot be
+        undone.
+      </p>
+
+      <Dialog>
+        <DialogTrigger asChild>
+          <Button
+            className="mt-2 w-full font-spaceGrotesk font-bold"
+            variant={"destructive"}
+          >
+            Delete permenantly
+          </Button>
+        </DialogTrigger>
+        <DialogContent>
+          <DialogHeader>
+            <DialogTitle>Are you absolutely sure?</DialogTitle>
+            <DialogDescription>
+              This action cannot be undone. This will permanently delete your
+              account and remove your data from our servers.
+            </DialogDescription>
+          </DialogHeader>
+          <Separator />
+          <Form {...form}>
+            <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-2">
+              <FormField
+                control={form.control}
+                name="confirmText"
+                render={({ field }) => (
+                  <FormItem>
+                    <FormDescription>
+                      Please type <span className="font-bold">DELETE</span> to
+                      confirm.
+                    </FormDescription>
+                    <FormControl>
+                     <Input className='bg-secondary' disabled={isPending} {...field} />
+                    </FormControl>
+                    <FormMessage className="text-xs text-red-500" />
+                  </FormItem>
+                )}
+              />
+             <Button className='w-full font-bold' disabled={isPending}>
+								Submit
+							</Button>
+            </form>
+          </Form>
+        </DialogContent>
+      </Dialog>
+    </>
+  );
+};
+
+export default DangerZoneForm;
diff --git a/components/forms/email.form.tsx b/components/forms/email.form.tsx
index c9e9133..8f27e60 100644
--- a/components/forms/email.form.tsx
+++ b/components/forms/email.form.tsx
@@ -9,13 +9,19 @@ import { Label } from '../ui/label'
 import { Button } from '../ui/button'
 import { REGEXP_ONLY_DIGITS } from 'input-otp'
 import { InputOTP, InputOTPGroup, InputOTPSeparator, InputOTPSlot } from '../ui/input-otp'
+import { useMutation } from '@tanstack/react-query'
+import { generateToken } from '@/lib/generate-token'
+import { signOut, useSession } from 'next-auth/react'
+import { axiosClient } from '@/http/axios'
+import { toast } from '@/hooks/use-toast'
 
 const EmailForm = () => {
 	const [verify, setVerify] = useState(false)
+const { data: session } = useSession()
 
 	const emailForm = useForm<z.infer<typeof oldEmailSchema>>({
 		resolver: zodResolver(oldEmailSchema),
-		defaultValues: { email: '', oldEmail: 'info@beggi.ac' },
+		defaultValues: { email: '', oldEmail: session?.currentUser?.email },
 	})
 
 	const otpForm = useForm<z.infer<typeof otpSchema>>({
@@ -23,14 +29,45 @@ const EmailForm = () => {
 		defaultValues: { otp: '', email: '' },
 	})
 
+	const otpMutation = useMutation({
+		mutationFn: async (email: string) => {
+			const token = await generateToken(session?.currentUser?._id)
+			const { data } = await axiosClient.post<{ email: string }>(
+				'/api/user/send-otp',
+				{ email },
+				{ headers: { Authorization: `Bearer ${token}` } }
+			)
+			return data
+		},
+		onSuccess: ({ email }) => {
+			toast({ description: 'OTP sent to your email' })
+			otpForm.setValue('email', email)
+			setVerify(true)
+		},
+	})
+
 	function onEmailSubmit(values: z.infer<typeof oldEmailSchema>) {
-		console.log(values)
-		otpForm.setValue('email', values.email)
-		setVerify(true)
+	otpMutation.mutate(values.email)
 	}
 
+	const verifyMutation = useMutation({
+		mutationFn: async (otp: string) => {
+			const token = await generateToken(session?.currentUser?._id)
+			const { data } = await axiosClient.put(
+				'/api/user/email',
+				{ email: otpForm.getValues('email'), otp },
+				{ headers: { Authorization: `Bearer ${token}` } }
+			)
+			return data
+		},
+		onSuccess: () => {
+			toast({ description: 'Email updated successfully' })
+			signOut()
+		},
+	})
+
 	function onVerifySubmit(values: z.infer<typeof otpSchema>) {
-		console.log(values)
+		verifyMutation.mutate(values.otp)
 	}
 
 	return !verify ? (
@@ -56,13 +93,13 @@ const EmailForm = () => {
 						<FormItem>
 							<Label>Enter a new email</Label>
 							<FormControl>
-								<Input placeholder='info@beggi.ac' className='h-10 bg-secondary' {...field} />
+						<Input placeholder='info@beggi.ac' className='h-10 bg-secondary' disabled={otpMutation.isPending} {...field} />
 							</FormControl>
 							<FormMessage className='text-xs text-red-500' />
 						</FormItem>
 					)}
 				/>
-				<Button type='submit' className='w-full'>
+			<Button type='submit' className='w-full' disabled={otpMutation.isPending}>
 					Verify email
 				</Button>
 			</form>
@@ -79,7 +116,13 @@ const EmailForm = () => {
 						<FormItem>
 							<Label>One-Time Password</Label>
 							<FormControl>
-								<InputOTP maxLength={6} className='w-full' pattern={REGEXP_ONLY_DIGITS} {...field}>
+							<InputOTP
+									maxLength={6}
+									className='w-full'
+									pattern={REGEXP_ONLY_DIGITS}
+									disabled={verifyMutation.isPending}
+									{...field}
+								>
 									<InputOTPGroup className='w-full '>
 										<InputOTPSlot index={0} className='w-full dark:bg-primary-foreground bg-secondary' />
 										<InputOTPSlot index={1} className='w-full dark:bg-primary-foreground bg-secondary' />
@@ -97,7 +140,7 @@ const EmailForm = () => {
 						</FormItem>
 					)}
 				/>
-				<Button type='submit' className='w-full'>
+				<Button type='submit' className='w-full' disabled={verifyMutation.isPending}>
 					Submit
 				</Button>
 			</form>
diff --git a/components/forms/information.form.tsx b/components/forms/information.form.tsx
index 385449a..0eea00a 100644
--- a/components/forms/information.form.tsx
+++ b/components/forms/information.form.tsx
@@ -1,70 +1,132 @@
-import { profileSchema } from '@/lib/validation'
-import { zodResolver } from '@hookform/resolvers/zod'
-import { useForm } from 'react-hook-form'
-import { z } from 'zod'
-import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '../ui/form'
-import { Input } from '../ui/input'
-import { Label } from '../ui/label'
-import { Textarea } from '../ui/textarea'
-import { Button } from '../ui/button'
+import { profileSchema } from "@/lib/validation";
+import { zodResolver } from "@hookform/resolvers/zod";
+import { useForm } from "react-hook-form";
+import { z } from "zod";
+import {
+  Form,
+  FormControl,
+  FormField,
+  FormItem,
+  FormLabel,
+  FormMessage,
+} from "../ui/form";
+import { Input } from "../ui/input";
+import { Label } from "../ui/label";
+import { Textarea } from "../ui/textarea";
+import { Button } from "../ui/button";
+import { useMutation } from "@tanstack/react-query";
+import { axiosClient } from "@/http/axios";
+import { toast } from "@/hooks/use-toast";
+import { useSession } from "next-auth/react";
+import { generateToken } from "@/lib/generate-token";
 
 const InformationForm = () => {
-	const form = useForm<z.infer<typeof profileSchema>>({
-		resolver: zodResolver(profileSchema),
-		defaultValues: { firstName: '', lastName: '', bio: '' },
-	})
+  const { data: session, update } = useSession();
 
-	const onSubmit = (data: z.infer<typeof profileSchema>) => {
-		// Handle form submission
-		console.log(data)
-	}
+  const form = useForm<z.infer<typeof profileSchema>>({
+    resolver: zodResolver(profileSchema),
+    defaultValues: {
+      firstName: session?.currentUser?.firstName || "",
+      lastName: session?.currentUser?.lastName || "",
+      bio: session?.currentUser?.bio || "",
+    },
+  });
 
-	return (
-		<Form {...form}>
-			<form onSubmit={form.handleSubmit(onSubmit)} className='space-y-2'>
-				<FormField
-					control={form.control}
-					name='firstName'
-					render={({ field }) => (
-						<FormItem>
-							<Label>First name</Label>
-							<FormControl>
-								<Input placeholder='Oman' className='bg-secondary' {...field} />
-							</FormControl>
-							<FormMessage className='text-xs text-red-500' />
-						</FormItem>
-					)}
-				/>
-				<FormField
-					control={form.control}
-					name='lastName'
-					render={({ field }) => (
-						<FormItem>
-							<Label>Last name</Label>
-							<FormControl>
-								<Input placeholder='Ali' className='bg-secondary' {...field} />
-							</FormControl>
-						</FormItem>
-					)}
-				/>
-				<FormField
-					control={form.control}
-					name='bio'
-					render={({ field }) => (
-						<FormItem>
-							<FormLabel>Bio</FormLabel>
-							<FormControl>
-								<Textarea placeholder='Enter anyhting about yourself' className='bg-secondary' {...field} />
-							</FormControl>
-						</FormItem>
-					)}
-				/>
-				<Button type='submit' className='w-full'>
-					Submit
-				</Button>
-			</form>
-		</Form>
-	)
-}
+  const { mutate, isPending } = useMutation({
+    mutationFn: async (payload: z.infer<typeof profileSchema>) => {
+      if (!session?.currentUser?._id) {
+        throw new Error("User not authenticated");
+      }
 
-export default InformationForm
\ No newline at end of file
+      const token = await generateToken(session.currentUser._id);
+      
+      if (!token) {
+        throw new Error("Failed to generate token");
+      }
+
+      const { data } = await axiosClient.put(
+        "/api/user/profile", 
+        payload, 
+        {
+          headers: { 
+            Authorization: `Bearer ${token}`,
+            'Content-Type': 'application/json'
+          }
+        }
+      );
+      return data;
+    },
+    onSuccess: () => {
+      toast({ description: "Profile updated successfully" });
+      update();
+    },
+  });
+
+  const onSubmit = (data: z.infer<typeof profileSchema>) => {
+    mutate(data);
+  };
+
+  return (
+    <Form {...form}>
+      <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-2">
+        <FormField
+          control={form.control}
+          name="firstName"
+          render={({ field }) => (
+            <FormItem>
+              <Label>First name</Label>
+              <FormControl>
+                <Input
+                  placeholder="Oman"
+                  className="bg-secondary"
+                  disabled={isPending}
+                  {...field}
+                />
+              </FormControl>
+              <FormMessage className="text-xs text-red-500" />
+            </FormItem>
+          )}
+        />
+        <FormField
+          control={form.control}
+          name="lastName"
+          render={({ field }) => (
+            <FormItem>
+              <Label>Last name</Label>
+              <FormControl>
+                <Input
+                  placeholder="Ali"
+                  className="bg-secondary"
+                  disabled={isPending}
+                  {...field}
+                />
+              </FormControl>
+            </FormItem>
+          )}
+        />
+        <FormField
+          control={form.control}
+          name="bio"
+          render={({ field }) => (
+            <FormItem>
+              <FormLabel>Bio</FormLabel>
+              <FormControl>
+                <Textarea
+                  placeholder="Enter anyhting about yourself"
+                  className="bg-secondary"
+                  disabled={isPending}
+                  {...field}
+                />
+              </FormControl>
+            </FormItem>
+          )}
+        />
+        <Button type="submit" className="w-full" disabled={isPending}>
+          Submit
+        </Button>
+      </form>
+    </Form>
+  );
+};
+
+export default InformationForm;
diff --git a/components/forms/notification.form.tsx b/components/forms/notification.form.tsx
index 97e6c8e..7383ba4 100644
--- a/components/forms/notification.form.tsx
+++ b/components/forms/notification.form.tsx
@@ -1,18 +1,40 @@
 import React, { useState } from "react";
 import { Popover, PopoverContent, PopoverTrigger } from "../ui/popover";
 import { Button } from "../ui/button";
-import { ChevronDown, PlayCircle } from "lucide-react";
+import { ChevronDown, Ghost, PlayCircle } from 'lucide-react'
 import { SOUNDS } from "@/lib/constants";
-import { cn } from "@/lib/utils";
+import { cn, getSoundLabel } from '@/lib/utils'
 import useAudio from "@/hooks/use-audio";
 import { Separator } from "../ui/separator";
 import { Switch } from "../ui/switch";
+import { useMutation } from '@tanstack/react-query'
+import { useSession } from 'next-auth/react'
+import { generateToken } from '@/lib/generate-token'
+import { axiosClient } from '@/http/axios'
+import { toast } from '@/hooks/use-toast'
 
 const NotificationForm = () => {
+  const [isNotification, setIsNotification] = useState(false)
+	const [isSounding, setIsSounding] = useState(false)
   const [selectedSound, setSelectedSound] = useState("");
 
+  const { data: session, update } = useSession()
   const { playSound } = useAudio();
 
+  const { mutate, isPending } = useMutation({
+		mutationFn: async (payload: IPayload) => {
+			const token = await generateToken(session?.currentUser?._id)
+			const { data } = await axiosClient.put('/api/user/profile', payload, { headers: { Authorization: `Bearer ${token}` } })
+			return data
+		},
+		onSuccess: () => {
+			toast({ description: 'Profile updated successfully' })
+			update()
+			setIsNotification(false)
+			setIsSounding(false)
+		},
+	})
+
   const onPlaySound = (value: string) => {
     setSelectedSound(value);
     playSound(value);
@@ -23,12 +45,12 @@ const NotificationForm = () => {
       <div className="flex items-center justify-between relative">
         <div className="flex flex-col">
           <p className="font-spaceGrotesk">Notification Sound</p>
-          <p className="font-spaceGrotesk text-muted-foreground text-xs">
-            Apple
-          </p>
+       <p className='font-spaceGrotesk text-muted-foreground text-xs'>
+						{getSoundLabel(session?.currentUser?.notificationSound)}
+					</p>
         </div>
 
-        <Popover>
+       <Popover open={isNotification} onOpenChange={setIsNotification}>
           <PopoverTrigger asChild>
             <Button variant="outline" size="sm">
               Select <ChevronDown />
@@ -52,13 +74,25 @@ const NotificationForm = () => {
                   >
                     {sound.label}
                   </Button>
-                  <Button size={"icon"} variant={"ghost"}>
-                    <PlayCircle />
-                  </Button>
+                 {session?.currentUser?.notificationSound === sound.value ? (
+										<Button size={'icon'}>
+											<Ghost />
+										</Button>
+									) : (
+										<Button size={'icon'} variant={'ghost'}>
+											<PlayCircle />
+										</Button>
+									)}
                 </div>
               ))}
             </div>
-            <Button className="w-full mt-2 font-bold">Submit</Button>
+           <Button
+							className='w-full mt-2 font-bold'
+							disabled={isPending}
+							onClick={() => mutate({ notificationSound: selectedSound })}
+						>
+							Submit
+						</Button>
           </PopoverContent>
         </Popover>
       </div>
@@ -66,12 +100,10 @@ const NotificationForm = () => {
       <div className="flex items-center justify-between relative">
         <div className="flex flex-col">
           <p className="font-spaceGrotesk">Sending Sound</p>
-          <p className="font-spaceGrotesk text-muted-foreground text-xs">
-            Apple
-          </p>
+          <p className='font-spaceGrotesk text-muted-foreground text-xs'>{getSoundLabel(session?.currentUser?.sendingSound)}</p>
         </div>
 
-        <Popover>
+       <Popover open={isSounding} onOpenChange={setIsSounding}>
           <PopoverTrigger asChild>
             <Button size={"sm"}>
               Select <ChevronDown />
@@ -95,13 +127,25 @@ const NotificationForm = () => {
                   >
                     {sound.label}
                   </Button>
-                  <Button size={"icon"} variant={"ghost"}>
-                    <PlayCircle />
-                  </Button>
+                 {session?.currentUser?.sendingSound === sound.value ? (
+										<Button size={'icon'}>
+											<Ghost />
+										</Button>
+									) : (
+										<Button size={'icon'} variant={'ghost'}>
+											<PlayCircle />
+										</Button>
+									)}
                 </div>
               ))}
             </div>
-            <Button className="w-full mt-2 font-bold">Submit</Button>
+           <Button
+							className='w-full mt-2 font-bold'
+							disabled={isPending}
+							onClick={() => mutate({ sendingSound: selectedSound })}
+						>
+							Submit
+						</Button>
           </PopoverContent>
         </Popover>
       </div>
@@ -111,12 +155,22 @@ const NotificationForm = () => {
       <div className="flex items-center justify-between relative">
         <div className="flex flex-col">
           <p>Mode Mute</p>
-          <p className="text-muted-foreground text-xs">Muted</p>
+         <p className='text-muted-foreground text-xs'>{!session?.currentUser?.muted ? 'Muted' : 'Unmuted'}</p>
         </div>
-        <Switch />
+      <Switch
+					checked={!session?.currentUser?.muted}
+					onCheckedChange={() => mutate({ muted: !session?.currentUser?.muted })}
+					disabled={isPending}
+				/>
       </div>
     </>
   );
 };
 
 export default NotificationForm;
+
+interface IPayload {
+	notificationSound?: string
+	sendingSound?: string
+	muted?: boolean
+}
\ No newline at end of file
diff --git a/components/providers/query.provider.tsx b/components/providers/query.provider.tsx
index b0631a5..8edaf88 100644
--- a/components/providers/query.provider.tsx
+++ b/components/providers/query.provider.tsx
@@ -1,10 +1,22 @@
 'use client'
 
-import { ChildProps } from '@/types'
+import { toast } from '@/hooks/use-toast'
+import { ChildProps, IError } from '@/types'
 import { QueryClient, QueryClientProvider } from '@tanstack/react-query'
 import { FC } from 'react'
 
-const queryClient = new QueryClient()
+const handleQueryError = (error: Error | IError) => {
+	if ((error as IError).response?.data?.message) {
+		return toast({ description: (error as IError).response.data.message, variant: 'destructive' })
+	}
+	return toast({ description: 'Something went wrong', variant: 'destructive' })
+}
+
+const queryClient = new QueryClient({
+	defaultOptions: {
+		mutations: { onError: handleQueryError },
+	},
+})
 
 const QueryProvider: FC<ChildProps> = ({ children }) => {
 	return <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>
diff --git a/http/axios.ts b/http/axios.ts
index 675248c..5b5e1b6 100644
--- a/http/axios.ts
+++ b/http/axios.ts
@@ -1,8 +1,9 @@
-import axios from 'axios'
+import axios from "axios";
 
-export const SERVER_URL = process.env.NEXT_PUBLIC_SERVER_URL
+export const SERVER_URL = process.env.NEXT_PUBLIC_SERVER_URL;
 
 export const axiosClient = axios.create({
-	baseURL: SERVER_URL,
-	headers: { 'Content-Type': 'application/json' },
-})
\ No newline at end of file
+  baseURL: SERVER_URL,
+  headers: { "Content-Type": "application/json" },
+  withCredentials: true,
+});
diff --git a/lib/generate-token.ts b/lib/generate-token.ts
new file mode 100644
index 0000000..a5efeb6
--- /dev/null
+++ b/lib/generate-token.ts
@@ -0,0 +1,15 @@
+import { axiosClient } from '@/http/axios';
+
+export const generateToken = async (userId?: string) => {
+  if (!userId) {
+    throw new Error("User ID is required");
+  }
+
+  try {
+    const { data } = await axiosClient.post('/api/auth/token', { userId });
+    return data.token;
+  } catch (error) {
+    console.error('Error generating token:', error);
+    throw new Error('Failed to generate token');
+  }
+};
diff --git a/lib/utils.ts b/lib/utils.ts
index a7dc3a1..faaf2a1 100644
--- a/lib/utils.ts
+++ b/lib/utils.ts
@@ -1,6 +1,21 @@
-import { clsx, type ClassValue } from "clsx"
-import { twMerge } from "tailwind-merge"
+import { clsx, type ClassValue } from 'clsx'
+import { twMerge } from 'tailwind-merge'
 
 export function cn(...inputs: ClassValue[]) {
   return twMerge(clsx(inputs))
+}
+
+export const getSoundLabel = (value?: string) => {
+	switch (value) {
+		case 'notification.mp3':
+			return 'Apple'
+		case 'notification2.mp3':
+			return 'Sammish'
+		case 'sending.mp3':
+			return 'Belli'
+		case 'sending2.mp3':
+			return 'Oranger'
+		default:
+			return ''
+	}
 }
\ No newline at end of file
diff --git a/types/index.ts b/types/index.ts
index 5ff19c3..81ada99 100644
--- a/types/index.ts
+++ b/types/index.ts
@@ -2,7 +2,7 @@ export interface ChildProps {
 	children: React.ReactNode
 }
 
-export interface IError {
+export interface IError extends Error {
 	response: { data: { message: string } }
 }
 
-- 
2.41.0


From 2b9e8dd0d392a530ab2560c8c943ffbb301cfe41 Mon Sep 17 00:00:00 2001
From: oscar-bek <salamov.behzod@gmail.com>
Date: Thu, 7 Aug 2025 11:31:58 +0900
Subject: [PATCH 12/16] feat(client): develop Add Contact && Image Uploader

---
 app/(chat)/_components/add-contact.tsx  |   7 +-
 app/(chat)/_components/contact-list.tsx | 158 ++++++++++---------
 app/(chat)/_components/settings.tsx     |  28 +++-
 app/(chat)/page.tsx                     |  92 +++++++----
 app/api/uploadthing/core.ts             |  20 +++
 app/api/uploadthing/route.ts            |   5 +
 eslintrc.json                           |   3 +-
 hooks/use-loading.ts                    |  15 ++
 lib/uploadthing.ts                      |   5 +
 package.json                            |   2 +
 tailwind.config.ts                      | 195 ++++++++++++------------
 11 files changed, 323 insertions(+), 207 deletions(-)
 create mode 100644 app/api/uploadthing/core.ts
 create mode 100644 app/api/uploadthing/route.ts
 create mode 100644 hooks/use-loading.ts
 create mode 100644 lib/uploadthing.ts

diff --git a/app/(chat)/_components/add-contact.tsx b/app/(chat)/_components/add-contact.tsx
index f3c2e99..da5ac71 100644
--- a/app/(chat)/_components/add-contact.tsx
+++ b/app/(chat)/_components/add-contact.tsx
@@ -2,6 +2,7 @@ import { Button } from '@/components/ui/button'
 import { Form, FormControl, FormField, FormItem, FormMessage } from '@/components/ui/form'
 import { Input } from '@/components/ui/input'
 import { Label } from '@/components/ui/label'
+import { useLoading } from '@/hooks/use-loading'
 import { emailSchema } from '@/lib/validation'
 import { FC } from 'react'
 import { UseFormReturn } from 'react-hook-form'
@@ -13,6 +14,8 @@ interface Props {
 	onCreateContact: (values: z.infer<typeof emailSchema>) => void
 }
 const AddContact: FC<Props> = ({ contactForm, onCreateContact }) => {
+	const { isCreating } = useLoading()
+
 	return (
 		<div className='h-screen w-full flex z-40 relative'>
 			<div className='flex justify-center items-center z-50 w-full'>
@@ -28,13 +31,13 @@ const AddContact: FC<Props> = ({ contactForm, onCreateContact }) => {
 									<FormItem>
 										<Label>Email</Label>
 										<FormControl>
-											<Input placeholder='info@beggi.ac' className='h-10 bg-secondary' {...field} />
+										<Input placeholder='email@example.com' disabled={isCreating} className='h-10 bg-secondary' {...field} />
 										</FormControl>
 										<FormMessage className='text-xs text-red-500' />
 									</FormItem>
 								)}
 							/>
-							<Button type='submit' className='w-full' size={'lg'}>
+						<Button type='submit' className='w-full' size={'lg'} disabled={isCreating}>
 								Submit
 							</Button>
 						</form>
diff --git a/app/(chat)/_components/contact-list.tsx b/app/(chat)/_components/contact-list.tsx
index 2eb9048..afcfabc 100644
--- a/app/(chat)/_components/contact-list.tsx
+++ b/app/(chat)/_components/contact-list.tsx
@@ -1,81 +1,103 @@
-'use client'
+"use client";
 
-import { IUser } from '@/types'
-import React, { FC } from 'react'
-import Settings from './settings'
-import { Input } from '@/components/ui/input'
-import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
-import { useRouter } from 'next/navigation'
-import { useCurrentContact } from '@/hooks/use-current'
-import { cn } from '@/lib/utils'
+import { IUser } from "@/types";
+import React, { FC, useState } from "react";
+import Settings from "./settings";
+import { Input } from "@/components/ui/input";
+import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
+import { useRouter } from "next/navigation";
+import { useCurrentContact } from "@/hooks/use-current";
+import { cn } from "@/lib/utils";
 
 interface Props {
-	contacts: IUser[]
+  contacts: IUser[];
 }
 const ContactList: FC<Props> = ({ contacts }) => {
-	const router = useRouter()
-	const { setCurrentContact, currentContact } = useCurrentContact()
+  const [query, setQuery] = useState("");
+  const router = useRouter();
+  const { setCurrentContact, currentContact } = useCurrentContact();
 
-	const renderContact = (contact: IUser) => {
-		const onChat = () => {
-			if (currentContact?._id === contact._id) return
-			console.log('chatting with', contact.email)
-			setCurrentContact(contact)
-			router.push(`/?chat=${contact._id}`)
-		}
+  const filteredContacts = contacts.filter((contact) =>
+    contact.email.toLowerCase().includes(query.toLowerCase())
+  );
 
-		return (
-			<div
-				className={cn(
-					'flex justify-between items-center cursor-pointer hover:bg-secondary/50 p-2',
-					currentContact?._id === contact._id && 'bg-secondary/50'
-				)}
-				onClick={onChat}
-			>
-				<div className='flex items-center gap-2'>
-					<div className='relative'>
-						<Avatar className='z-40'>
-							<AvatarImage src={contact.avatar} alt={contact.email} className='object-cover' />
-							<AvatarFallback className='uppercase'>{contact.email[0]}</AvatarFallback>
-						</Avatar>
-						<div className='size-3 bg-green-500 absolute rounded-full bottom-0 right-0 !z-50' />
-					</div>
+  const renderContact = (contact: IUser) => {
+    const onChat = () => {
+      if (currentContact?._id === contact._id) return;
+      console.log("chatting with", contact.email);
+      setCurrentContact(contact);
+      router.push(`/?chat=${contact._id}`);
+    };
 
-					<div>
-						<h2 className='capitalize line-clamp-1 text-sm'>{contact.email.split('@')[0]}</h2>
-						<p className='text-xs line-clamp-1 text-muted-foreground'>No message yet</p>
-					</div>
-				</div>
+    return (
+      <div
+        className={cn(
+          "flex justify-between items-center cursor-pointer hover:bg-secondary/50 p-2",
+          currentContact?._id === contact._id && "bg-secondary/50"
+        )}
+        onClick={onChat}
+      >
+        <div className="flex items-center gap-2">
+          <div className="relative">
+            <Avatar className="z-40">
+              <AvatarImage
+                src={contact.avatar}
+                alt={contact.email}
+                className="object-cover"
+              />
+              <AvatarFallback className="uppercase">
+                {contact.email[0]}
+              </AvatarFallback>
+            </Avatar>
+            <div className="size-3 bg-green-500 absolute rounded-full bottom-0 right-0 !z-50" />
+          </div>
 
-				<div className='self-end'>
-					<p className='text-xs text-muted-foreground'>19:20 pm</p>
-				</div>
-			</div>
-		)
-	}
+          <div>
+            <h2 className="capitalize line-clamp-1 text-sm">
+              {contact.email.split("@")[0]}
+            </h2>
+            <p className="text-xs line-clamp-1 text-muted-foreground">
+              No message yet
+            </p>
+          </div>
+        </div>
 
-	return (
-		<>
-			{/* Top bar */}
-			<div className='flex items-center bg-background pl-2 sticky top-0'>
-				<Settings />
-				<div className='m-2 w-full'>
-					<Input className='bg-secondary' type='text' placeholder='Search...' />
-				</div>
-			</div>
+        <div className="self-end">
+          <p className="text-xs text-muted-foreground">19:20 pm</p>
+        </div>
+      </div>
+    );
+  };
 
-			{/* Contacts */}
-			{contacts.length === 0 && (
-				<div className='w-full h-[95vh] flex justify-center items-center text-center text-muted-foreground'>
-					<p>Contact list is empty</p>
-				</div>
-			)}
+  return (
+    <>
+      {/* Top bar */}
+      <div className="flex items-center bg-background pl-2 sticky top-0">
+        <Settings />
+        <div className="m-2 w-full">
+          <Input
+            className="bg-secondary"
+            value={query}
+            onChange={(e) => setQuery(e.target.value)}
+            type="text"
+            placeholder="Search..."
+          />
+        </div>
+      </div>
 
-			{contacts.map(contact => (
-				<div key={contact._id}>{renderContact(contact)}</div>
-			))}
-		</>
-	)
-}
+      {/* Contacts */}
+      {filteredContacts.length === 0 ? (
+        <div className="w-full h-[95vh] flex justify-center items-center text-center text-muted-foreground">
+          <p>Contact list is empty</p>
+        </div>
+      ) : (
+        filteredContacts.map((contact) => (
+          <div key={contact._id}>{renderContact(contact)}</div>
+        ))
+      )}
+
+    </>
+  );
+};
 
-export default ContactList
\ No newline at end of file
+export default ContactList;
diff --git a/app/(chat)/_components/settings.tsx b/app/(chat)/_components/settings.tsx
index eb21de5..67a18a4 100644
--- a/app/(chat)/_components/settings.tsx
+++ b/app/(chat)/_components/settings.tsx
@@ -8,7 +8,7 @@ import {
   AccordionItem,
   AccordionTrigger,
 } from "@/components/ui/accordion";
-import { Avatar, AvatarFallback } from "@/components/ui/avatar";
+import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
 import { Button } from "@/components/ui/button";
 import {
   Popover,
@@ -27,6 +27,7 @@ import { Switch } from "@/components/ui/switch";
 import { toast } from '@/hooks/use-toast'
 import { axiosClient } from '@/http/axios'
 import { generateToken } from '@/lib/generate-token'
+import { UploadButton } from '@/lib/uploadthing'
 import { useMutation } from '@tanstack/react-query'
 import {
   LogIn,
@@ -48,9 +49,9 @@ const Settings = () => {
  const { data: session, update } = useSession()
 
 	const { mutate, isPending } = useMutation({
-		mutationFn: async (muted: boolean) => {
+	mutationFn: async (payload: IPayload) => {
 			const token = await generateToken(session?.currentUser?._id)
-			const { data } = await axiosClient.put('/api/user/profile', { muted }, { headers: { Authorization: `Bearer ${token}` } })
+			const { data } = await axiosClient.put('/api/user/profile', payload, { headers: { Authorization: `Bearer ${token}` } })
 			return data
 		},
 		onSuccess: () => {
@@ -102,7 +103,7 @@ const Settings = () => {
               </div>
              <Switch
 								checked={!session?.currentUser?.muted}
-								onCheckedChange={() => mutate(!session?.currentUser?.muted)}
+								onCheckedChange={() => mutate({ muted: !session?.currentUser?.muted })}
 								disabled={isPending}
 							/>
             </div>
@@ -151,13 +152,21 @@ const Settings = () => {
 
             <div className="mx-auto w-1/2 h-36 relative">
               <Avatar className="w-full h-36">
+                <AvatarImage src={session?.currentUser?.avatar} alt={session?.currentUser?.email} className='object-cover' />
                 <AvatarFallback className="text-6xl uppercase font-spaceGrotesk">
                   SB
                 </AvatarFallback>
               </Avatar>
-              <Button size={"icon"} className="absolute right-0 bottom-0">
-                <Upload size={16} />
-              </Button>
+             <UploadButton
+							endpoint='imageUploader'
+              onClientUploadComplete={(res: Array<{ url: string }>) => {
+                mutate({ avatar: res[0].url })
+              }}
+							config={{ appendOnPaste: true, mode: 'auto' }}
+							className='absolute right-0 bottom-0'
+							appearance={{ allowedContent: { display: 'none' }, button: { width: 40, height: 40, borderRadius: '100%' } }}
+							content={{ button: <Upload size={16} /> }}
+						/>
             </div>
 
             <Accordion type="single" collapsible className="mt-4">
@@ -205,3 +214,8 @@ const Settings = () => {
 };
 
 export default Settings;
+
+interface IPayload {
+	muted?: boolean
+	avatar?: string
+}
\ No newline at end of file
diff --git a/app/(chat)/page.tsx b/app/(chat)/page.tsx
index e45eb5d..699a4b3 100644
--- a/app/(chat)/page.tsx
+++ b/app/(chat)/page.tsx
@@ -2,7 +2,7 @@
 
 import { Loader2 } from "lucide-react";
 import ContactList from "./_components/contact-list";
-import { useEffect } from "react";
+import { useEffect, useState } from "react";
 import { useRouter } from "next/navigation";
 import AddContact from "./_components/add-contact";
 import { useCurrentContact } from "@/hooks/use-current";
@@ -12,9 +12,19 @@ import { emailSchema, messageSchema } from "@/lib/validation";
 import { zodResolver } from "@hookform/resolvers/zod";
 import TopChat from "./_components/top-chat";
 import Chat from "./_components/chat";
+import { useLoading } from '@/hooks/use-loading'
+import { axiosClient } from '@/http/axios'
+import { useSession } from 'next-auth/react'
+import { generateToken } from '@/lib/generate-token'
+import { IError, IUser } from '@/types'
+import { toast } from '@/hooks/use-toast'
 
 const HomePage = () => {
-  const { currentContact } = useCurrentContact();
+const [contacts, setContacts] = useState<IUser[]>([])
+
+	const { setCreating, setLoading, isLoading } = useLoading()
+	const { currentContact } = useCurrentContact()
+	const { data: session } = useSession()
   const router = useRouter();
 
   const contactForm = useForm<z.infer<typeof emailSchema>>({
@@ -22,6 +32,21 @@ const HomePage = () => {
     defaultValues: { email: "" },
   });
 
+  const getContacts = async () => {
+		setLoading(true)
+		const token = await generateToken(session?.currentUser?._id)
+		try {
+			const { data } = await axiosClient.get<{ contacts: IUser[] }>('/api/user/contacts', {
+				headers: { Authorization: `Bearer ${token}` },
+			})
+			setContacts(data.contacts)
+		} catch {
+			toast({ description: 'Cannot fetch contacts', variant: 'destructive' })
+		} finally {
+			setLoading(false)
+		}
+	}
+
   const messageForm = useForm<z.infer<typeof messageSchema>>({
     resolver: zodResolver(messageSchema),
     defaultValues: { text: "", image: "" },
@@ -31,10 +56,32 @@ const HomePage = () => {
     router.replace("/");
   }, []);
 
-  const onCreateContact = (values: z.infer<typeof emailSchema>) => {
-    // API call to create contact
-    console.log(values);
-  };
+  useEffect(() => {
+		if (session?.currentUser?._id) {
+			getContacts()
+		}
+	}, [session?.currentUser])
+
+	const onCreateContact = async (values: z.infer<typeof emailSchema>) => {
+		setCreating(true)
+		const token = await generateToken(session?.currentUser?._id)
+		try {
+			const { data } = await axiosClient.post<{ contact: IUser }>('/api/user/contact', values, {
+				headers: { Authorization: `Bearer ${token}` },
+			})
+			setContacts(prev => [...prev, data.contact])
+			toast({ description: 'Contact added successfully' })
+			contactForm.reset()
+    } catch (error: unknown) {
+      if (error && typeof error === 'object' && 'response' in error && (error as IError).response?.data?.message) {
+        return toast({ description: (error as IError).response.data.message, variant: 'destructive' })
+      }
+      return toast({ description: 'Something went wrong', variant: 'destructive' })
+    } finally {
+      setCreating(false)
+    }
+	}
+
 
   const onSendMessage = (values: z.infer<typeof messageSchema>) => {
     // API call to send message
@@ -46,12 +93,14 @@ const HomePage = () => {
       {/* Sidebar */}
       <div className="w-80 h-screen border-r fixed inset-0 z-50">
         {/* Loading */}
-        {/* <div className='w-full h-[95vh] flex justify-center items-center'>
-					<Loader2 size={50} className='animate-spin' />
-				</div> */}
+       {isLoading && (
+					<div className='w-full h-[95vh] flex justify-center items-center'>
+						<Loader2 size={50} className='animate-spin' />
+					</div>
+				)}
 
         {/* Contact list */}
-        <ContactList contacts={contacts} />
+       {!isLoading && <ContactList contacts={contacts} />}
       </div>
       {/* Chat area */}
       <div className="pl-80 w-full">
@@ -77,27 +126,4 @@ const HomePage = () => {
   );
 };
 
-const contacts = [
-  {
-    email: "john@gmail.com",
-    _id: "1",
-    avatar: "https://github.com/shadcn.png",
-    firstName: "John",
-    lastName: "Doe",
-    bio: "",
-  },
-  {
-    email: "jane@gmail.com",
-    _id: "6",
-    avatar: "https://github.com/shadcn.png",
-    firstName: "Jane",
-    lastName: "Doe",
-    bio: "Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quis repellat blanditiis hic reiciendis quibusdam voluptatem necessitatibus, minus sint maxime iste impedit cupiditate ab provident doloremque sed dicta, molestias nemo cum.",
-  },
-  { email: "amile@gmail.com", _id: "2", avatar: "", firstName: "Amile", lastName: "", bio: "" },
-  { email: "faris@gmail.com", _id: "3", avatar: "", firstName: "Faris", lastName: "", bio: "" },
-  { email: "abdo@gmail.com", _id: "4", avatar: "", firstName: "Abdo", lastName: "", bio: "" },
-  { email: "billi@gmail.com", _id: "5", avatar: "", firstName: "Billi", lastName: "", bio: "" },
-];
-
 export default HomePage;
diff --git a/app/api/uploadthing/core.ts b/app/api/uploadthing/core.ts
new file mode 100644
index 0000000..51185eb
--- /dev/null
+++ b/app/api/uploadthing/core.ts
@@ -0,0 +1,20 @@
+import { authOptions } from '@/lib/auth-options'
+import { getServerSession } from 'next-auth'
+import { createUploadthing, type FileRouter } from 'uploadthing/next'
+import { UploadThingError } from 'uploadthing/server'
+
+const f = createUploadthing()
+
+export const ourFileRouter = {
+	imageUploader: f({ image: { maxFileSize: '4MB' } })
+		.middleware(async () => {
+			const token = await getServerSession(authOptions)
+			if (!token) throw new UploadThingError('Unauthorized')
+			return { token }
+		})
+		.onUploadComplete(async ({ file }) => {
+			return { ...file }
+		}),
+} satisfies FileRouter
+
+export type OurFileRouter = typeof ourFileRouter
\ No newline at end of file
diff --git a/app/api/uploadthing/route.ts b/app/api/uploadthing/route.ts
new file mode 100644
index 0000000..5b18b95
--- /dev/null
+++ b/app/api/uploadthing/route.ts
@@ -0,0 +1,5 @@
+import { createRouteHandler } from 'uploadthing/next'
+
+import { ourFileRouter } from './core'
+
+export const { GET, POST } = createRouteHandler({ router: ourFileRouter })
\ No newline at end of file
diff --git a/eslintrc.json b/eslintrc.json
index b82673a..e2c1854 100644
--- a/eslintrc.json
+++ b/eslintrc.json
@@ -1,6 +1,7 @@
 {
 	"extends": ["next/core-web-vitals", "next/typescript"],
 	"rules": {
-		"react-hooks/exhaustive-deps": "off"
+			"react-hooks/exhaustive-deps": "off",
+		"@typescript-eslint/no-explicit-any": "off"
 	}
 }
\ No newline at end of file
diff --git a/hooks/use-loading.ts b/hooks/use-loading.ts
new file mode 100644
index 0000000..20ef4a8
--- /dev/null
+++ b/hooks/use-loading.ts
@@ -0,0 +1,15 @@
+import { create } from 'zustand'
+
+type Store = {
+	isCreating: boolean
+	setCreating: (isCreating: boolean) => void
+	isLoading: boolean
+	setLoading: (isLoading: boolean) => void
+}
+
+export const useLoading = create<Store>()(set => ({
+	isCreating: false,
+	setCreating: isCreating => set({ isCreating }),
+	isLoading: false,
+	setLoading: isLoading => set({ isLoading }),
+}))
\ No newline at end of file
diff --git a/lib/uploadthing.ts b/lib/uploadthing.ts
new file mode 100644
index 0000000..05b96cb
--- /dev/null
+++ b/lib/uploadthing.ts
@@ -0,0 +1,5 @@
+import { OurFileRouter } from '@/app/api/uploadthing/core'
+import { generateUploadButton, generateUploadDropzone } from '@uploadthing/react'
+
+export const UploadButton = generateUploadButton<OurFileRouter>()
+export const UploadDropzone = generateUploadDropzone<OurFileRouter>()
\ No newline at end of file
diff --git a/package.json b/package.json
index 2315ba1..19aa7ce 100644
--- a/package.json
+++ b/package.json
@@ -20,6 +20,7 @@
     "@radix-ui/react-slot": "^1.2.3",
     "@radix-ui/react-toast": "^1.2.14",
     "@tanstack/react-query": "^5.83.0",
+    "@uploadthing/react": "^7.3.2",
     "add": "^2.0.6",
     "axios": "^1.11.0",
     "class-variance-authority": "^0.7.1",
@@ -38,6 +39,7 @@
     "shadcn": "^2.9.2",
     "sonner": "^2.0.6",
     "tailwind-merge": "^3.3.1",
+    "uploadthing": "^7.7.3",
     "zod": "^3.25.76",
     "zustand": "^5.0.6"
   },
diff --git a/tailwind.config.ts b/tailwind.config.ts
index 46c601e..0a1071c 100644
--- a/tailwind.config.ts
+++ b/tailwind.config.ts
@@ -1,102 +1,105 @@
 import type { Config } from 'tailwindcss'
+import { withUt } from 'uploadthing/tw'
 
-export default {
-	darkMode: ['class'],
+const config = {
+	darkMode: 'class',
 	content: ['./pages/**/*.{js,ts,jsx,tsx,mdx}', './components/**/*.{js,ts,jsx,tsx,mdx}', './app/**/*.{js,ts,jsx,tsx,mdx}'],
 	theme: {
 		extend: {
-    		container: {
-    			center: 'true',
-    			padding: '1rem',
-    			screens: {
-    				sm: '100%',
-    				md: '100%',
-    				lg: '1024px',
-    				xl: '1280px'
-    			}
-    		},
-    		colors: {
-    			background: 'hsl(var(--background))',
-    			foreground: 'hsl(var(--foreground))',
-    			card: {
-    				DEFAULT: 'hsl(var(--card))',
-    				foreground: 'hsl(var(--card-foreground))'
-    			},
-    			popover: {
-    				DEFAULT: 'hsl(var(--popover))',
-    				foreground: 'hsl(var(--popover-foreground))'
-    			},
-    			primary: {
-    				DEFAULT: 'hsl(var(--primary))',
-    				foreground: 'hsl(var(--primary-foreground))'
-    			},
-    			secondary: {
-    				DEFAULT: 'hsl(var(--secondary))',
-    				foreground: 'hsl(var(--secondary-foreground))'
-    			},
-    			muted: {
-    				DEFAULT: 'hsl(var(--muted))',
-    				foreground: 'hsl(var(--muted-foreground))'
-    			},
-    			accent: {
-    				DEFAULT: 'hsl(var(--accent))',
-    				foreground: 'hsl(var(--accent-foreground))'
-    			},
-    			destructive: {
-    				DEFAULT: 'hsl(var(--destructive))',
-    				foreground: 'hsl(var(--destructive-foreground))'
-    			},
-    			border: 'hsl(var(--border))',
-    			input: 'hsl(var(--input))',
-    			ring: 'hsl(var(--ring))',
-    			chart: {
-    				'1': 'hsl(var(--chart-1))',
-    				'2': 'hsl(var(--chart-2))',
-    				'3': 'hsl(var(--chart-3))',
-    				'4': 'hsl(var(--chart-4))',
-    				'5': 'hsl(var(--chart-5))'
-    			}
-    		},
-    		fontFamily: {
-    			spaceGrotesk: ['var(--font-spaceGrotesk)', 'sans-serif']
-    		},
-    		borderRadius: {
-    			lg: 'var(--radius)',
-    			md: 'calc(var(--radius) - 2px)',
-    			sm: 'calc(var(--radius) - 4px)'
-    		},
-    		keyframes: {
-    			'caret-blink': {
-    				'0%,70%,100%': {
-    					opacity: '1'
-    				},
-    				'20%,50%': {
-    					opacity: '0'
-    				}
-    			},
-    			'accordion-down': {
-    				from: {
-    					height: '0'
-    				},
-    				to: {
-    					height: 'var(--radix-accordion-content-height)'
-    				}
-    			},
-    			'accordion-up': {
-    				from: {
-    					height: 'var(--radix-accordion-content-height)'
-    				},
-    				to: {
-    					height: '0'
-    				}
-    			}
-    		},
-    		animation: {
-    			'caret-blink': 'caret-blink 1.25s ease-out infinite',
-    			'accordion-down': 'accordion-down 0.2s ease-out',
-    			'accordion-up': 'accordion-up 0.2s ease-out'
-    		}
-    	}
-    },
+			container: {
+				center: true,
+				padding: '1rem',
+				screens: {
+					sm: '100%',
+					md: '100%',
+					lg: '1024px',
+					xl: '1280px',
+				},
+			},
+			colors: {
+				background: 'hsl(var(--background))',
+				foreground: 'hsl(var(--foreground))',
+				card: {
+					DEFAULT: 'hsl(var(--card))',
+					foreground: 'hsl(var(--card-foreground))',
+				},
+				popover: {
+					DEFAULT: 'hsl(var(--popover))',
+					foreground: 'hsl(var(--popover-foreground))',
+				},
+				primary: {
+					DEFAULT: 'hsl(var(--primary))',
+					foreground: 'hsl(var(--primary-foreground))',
+				},
+				secondary: {
+					DEFAULT: 'hsl(var(--secondary))',
+					foreground: 'hsl(var(--secondary-foreground))',
+				},
+				muted: {
+					DEFAULT: 'hsl(var(--muted))',
+					foreground: 'hsl(var(--muted-foreground))',
+				},
+				accent: {
+					DEFAULT: 'hsl(var(--accent))',
+					foreground: 'hsl(var(--accent-foreground))',
+				},
+				destructive: {
+					DEFAULT: 'hsl(var(--destructive))',
+					foreground: 'hsl(var(--destructive-foreground))',
+				},
+				border: 'hsl(var(--border))',
+				input: 'hsl(var(--input))',
+				ring: 'hsl(var(--ring))',
+				chart: {
+					'1': 'hsl(var(--chart-1))',
+					'2': 'hsl(var(--chart-2))',
+					'3': 'hsl(var(--chart-3))',
+					'4': 'hsl(var(--chart-4))',
+					'5': 'hsl(var(--chart-5))',
+				},
+			},
+			fontFamily: {
+				spaceGrotesk: ['var(--font-spaceGrotesk)', 'sans-serif'],
+			},
+			borderRadius: {
+				lg: 'var(--radius)',
+				md: 'calc(var(--radius) - 2px)',
+				sm: 'calc(var(--radius) - 4px)',
+			},
+			keyframes: {
+				'caret-blink': {
+					'0%,70%,100%': {
+						opacity: '1',
+					},
+					'20%,50%': {
+						opacity: '0',
+					},
+				},
+				'accordion-down': {
+					from: {
+						height: '0',
+					},
+					to: {
+						height: 'var(--radix-accordion-content-height)',
+					},
+				},
+				'accordion-up': {
+					from: {
+						height: 'var(--radix-accordion-content-height)',
+					},
+					to: {
+						height: '0',
+					},
+				},
+			},
+			animation: {
+				'caret-blink': 'caret-blink 1.25s ease-out infinite',
+				'accordion-down': 'accordion-down 0.2s ease-out',
+				'accordion-up': 'accordion-up 0.2s ease-out',
+			},
+		},
+	},
 	plugins: [require('tailwindcss-animate')],
-} satisfies Config
\ No newline at end of file
+} satisfies Config
+
+export default withUt(config)
\ No newline at end of file
-- 
2.41.0


From 8bc4b07d7cd4c5e3db835cd8e5ff848c3f0d3811 Mon Sep 17 00:00:00 2001
From: oscar-bek <salamov.behzod@gmail.com>
Date: Fri, 8 Aug 2025 10:17:13 +0900
Subject: [PATCH 13/16] feat(client): develop Real Time Chatting

---
 app/(chat)/_components/chat.tsx          |  26 ++-
 app/(chat)/_components/contact-list.tsx  |  13 +-
 app/(chat)/_components/top-chat.tsx      |  15 +-
 app/(chat)/page.tsx                      | 228 +++++++++++++++--------
 components/cards/message.card.tsx        |  49 +++--
 components/providers/socket.provider.tsx |   0
 hooks/use-auth.ts                        |   5 +
 hooks/use-loading.ts                     |   4 +
 next.config.ts                           |   2 +
 package.json                             |   1 +
 types/index.ts                           |  11 ++
 11 files changed, 242 insertions(+), 112 deletions(-)
 create mode 100644 components/providers/socket.provider.tsx

diff --git a/app/(chat)/_components/chat.tsx b/app/(chat)/_components/chat.tsx
index ce14f2d..d2b3d38 100644
--- a/app/(chat)/_components/chat.tsx
+++ b/app/(chat)/_components/chat.tsx
@@ -12,12 +12,18 @@ import emojies from '@emoji-mart/data'
 import Picker from '@emoji-mart/react'
 import { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover'
 import { useTheme } from 'next-themes'
+import { useLoading } from '@/hooks/use-loading'
+import { IMessage } from '@/types'
 
 interface Props {
 	onSendMessage: (values: z.infer<typeof messageSchema>) => void
 	messageForm: UseFormReturn<z.infer<typeof messageSchema>>
+	messages: IMessage[]
 }
-const Chat: FC<Props> = ({ onSendMessage, messageForm }) => {
+
+const Chat: FC<Props> = ({ onSendMessage, messageForm, messages }) => {
+	const { loadMessages } = useLoading()
+
 	const { resolvedTheme } = useTheme()
 	const inputRef = useRef<HTMLInputElement | null>(null)
 
@@ -40,17 +46,19 @@ const Chat: FC<Props> = ({ onSendMessage, messageForm }) => {
 	return (
 		<div className='flex flex-col justify-end z-40 min-h-[92vh]'>
 			{/* Loading */}
-			{/* <ChatLoading /> */}
-
+			{loadMessages && <ChatLoading />}
 			{/* Messages */}
-			{/* <MessageCard isReceived /> */}
-
+			{messages.map((message, index) => (
+				<MessageCard key={index} message={message} />
+			))}
 			{/* Start conversation */}
-			{/* <div className='w-full h-[88vh] flex items-center justify-center'>
-				<div className='text-[100px] cursor-pointer' onClick={() => onSendMessage({ text: '✋' })}>
-					✋
+			{messages.length === 0 && (
+				<div className='w-full h-[88vh] flex items-center justify-center'>
+					<div className='text-[100px] cursor-pointer' onClick={() => onSendMessage({ text: '✋' })}>
+						✋
+					</div>
 				</div>
-			</div> */}
+			)}
 
 			{/* Message input */}
 			<Form {...messageForm}>
diff --git a/app/(chat)/_components/contact-list.tsx b/app/(chat)/_components/contact-list.tsx
index afcfabc..be4513b 100644
--- a/app/(chat)/_components/contact-list.tsx
+++ b/app/(chat)/_components/contact-list.tsx
@@ -6,14 +6,17 @@ import Settings from "./settings";
 import { Input } from "@/components/ui/input";
 import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
 import { useRouter } from "next/navigation";
-import { useCurrentContact } from "@/hooks/use-current";
 import { cn } from "@/lib/utils";
+import { useCurrentContact } from "@/hooks/use-current";
+import { useAuth } from "@/hooks/use-auth";
 
 interface Props {
   contacts: IUser[];
 }
 const ContactList: FC<Props> = ({ contacts }) => {
   const [query, setQuery] = useState("");
+
+  const { onlineUsers } = useAuth();
   const router = useRouter();
   const { setCurrentContact, currentContact } = useCurrentContact();
 
@@ -24,7 +27,6 @@ const ContactList: FC<Props> = ({ contacts }) => {
   const renderContact = (contact: IUser) => {
     const onChat = () => {
       if (currentContact?._id === contact._id) return;
-      console.log("chatting with", contact.email);
       setCurrentContact(contact);
       router.push(`/?chat=${contact._id}`);
     };
@@ -49,7 +51,10 @@ const ContactList: FC<Props> = ({ contacts }) => {
                 {contact.email[0]}
               </AvatarFallback>
             </Avatar>
-            <div className="size-3 bg-green-500 absolute rounded-full bottom-0 right-0 !z-50" />
+
+            {onlineUsers.some((user) => user._id === contact._id) && (
+              <div className="size-3 bg-green-500 absolute rounded-full bottom-0 right-0 !z-50" />
+            )}
           </div>
 
           <div>
@@ -85,7 +90,6 @@ const ContactList: FC<Props> = ({ contacts }) => {
         </div>
       </div>
 
-      {/* Contacts */}
       {filteredContacts.length === 0 ? (
         <div className="w-full h-[95vh] flex justify-center items-center text-center text-muted-foreground">
           <p>Contact list is empty</p>
@@ -95,7 +99,6 @@ const ContactList: FC<Props> = ({ contacts }) => {
           <div key={contact._id}>{renderContact(contact)}</div>
         ))
       )}
-
     </>
   );
 };
diff --git a/app/(chat)/_components/top-chat.tsx b/app/(chat)/_components/top-chat.tsx
index 033f19f..7668193 100644
--- a/app/(chat)/_components/top-chat.tsx
+++ b/app/(chat)/_components/top-chat.tsx
@@ -2,12 +2,14 @@ import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
 import { Button } from '@/components/ui/button'
 import { Separator } from '@/components/ui/separator'
 import { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from '@/components/ui/sheet'
+import { useAuth } from '@/hooks/use-auth'
 import { useCurrentContact } from '@/hooks/use-current'
 import { Settings2 } from 'lucide-react'
 import Image from 'next/image'
 
 const TopChat = () => {
 	const { currentContact } = useCurrentContact()
+	const { onlineUsers } = useAuth()
 
 	return (
 		<div className='w-full flex items-center justify-between sticky top-0 z-50 h-[8vh] p-2 border-b bg-background'>
@@ -30,10 +32,15 @@ const TopChat = () => {
 						</div>
 					</div> */}
 					<p className='text-xs'>
-						{/* Online */}
-						{/* <span className='text-green-500'>●</span> Online */}
-						{/* Offline */}
-						<span className='text-muted-foreground'>●</span> Last seen recently
+						{onlineUsers.some(user => user._id === currentContact?._id) ? (
+							<>
+								<span className='text-green-500'>●</span> Online
+							</>
+						) : (
+							<>
+								<span className='text-muted-foreground'>●</span> Last seen recently
+							</>
+						)}
 					</p>
 				</div>
 			</div>
diff --git a/app/(chat)/page.tsx b/app/(chat)/page.tsx
index 699a4b3..556870e 100644
--- a/app/(chat)/page.tsx
+++ b/app/(chat)/page.tsx
@@ -1,38 +1,65 @@
-"use client";
-
-import { Loader2 } from "lucide-react";
-import ContactList from "./_components/contact-list";
-import { useEffect, useState } from "react";
-import { useRouter } from "next/navigation";
-import AddContact from "./_components/add-contact";
-import { useCurrentContact } from "@/hooks/use-current";
-import { useForm } from "react-hook-form";
-import { z } from "zod";
-import { emailSchema, messageSchema } from "@/lib/validation";
-import { zodResolver } from "@hookform/resolvers/zod";
-import TopChat from "./_components/top-chat";
-import Chat from "./_components/chat";
+'use client'
+
+import { Loader2 } from 'lucide-react'
+import ContactList from './_components/contact-list'
+import { useEffect, useRef, useState } from 'react'
+import { useRouter } from 'next/navigation'
+import AddContact from './_components/add-contact'
+import { useCurrentContact } from '@/hooks/use-current'
+import { useForm } from 'react-hook-form'
+import { z } from 'zod'
+import { emailSchema, messageSchema } from '@/lib/validation'
+import { zodResolver } from '@hookform/resolvers/zod'
+import TopChat from './_components/top-chat'
+import Chat from './_components/chat'
 import { useLoading } from '@/hooks/use-loading'
 import { axiosClient } from '@/http/axios'
 import { useSession } from 'next-auth/react'
 import { generateToken } from '@/lib/generate-token'
-import { IError, IUser } from '@/types'
+import { IError, IMessage, IUser } from '@/types'
 import { toast } from '@/hooks/use-toast'
+import { io } from 'socket.io-client'
+import { useAuth } from '@/hooks/use-auth'
+import useAudio from '@/hooks/use-audio'
 
 const HomePage = () => {
-const [contacts, setContacts] = useState<IUser[]>([])
-
-	const { setCreating, setLoading, isLoading } = useLoading()
+	const [contacts, setContacts] = useState<IUser[]>([])
+const [messages, setMessages] = useState<IMessage[]>([])
+	const { setCreating, setLoading, isLoading, setLoadMessages } = useLoading()
 	const { currentContact } = useCurrentContact()
-	const { data: session } = useSession()
-  const router = useRouter();
+	const { data: session } = useSession()  
+	const { setOnlineUsers } = useAuth()
+  const { playSound } = useAudio()
 
-  const contactForm = useForm<z.infer<typeof emailSchema>>({
-    resolver: zodResolver(emailSchema),
-    defaultValues: { email: "" },
-  });
+	const router = useRouter()
+	const socket = useRef<ReturnType<typeof io> | null>(null)
 
-  const getContacts = async () => {
+  const getMessages = async () => {
+		setLoadMessages(true)
+		const token = await generateToken(session?.currentUser?._id)
+		try {
+			const { data } = await axiosClient.get<{ messages: IMessage[] }>(`/api/user/messages/${currentContact?._id}`, {
+				headers: { Authorization: `Bearer ${token}` },
+			})
+			setMessages(data.messages)
+		} catch {
+			toast({ description: 'Cannot fetch messages', variant: 'destructive' })
+		} finally {
+			setLoadMessages(false)
+		}
+	}
+  
+	const contactForm = useForm<z.infer<typeof emailSchema>>({
+		resolver: zodResolver(emailSchema),
+		defaultValues: { email: '' },
+	})
+
+	const messageForm = useForm<z.infer<typeof messageSchema>>({
+		resolver: zodResolver(messageSchema),
+		defaultValues: { text: '', image: '' },
+	})
+
+	const getContacts = async () => {
 		setLoading(true)
 		const token = await generateToken(session?.currentUser?._id)
 		try {
@@ -47,21 +74,49 @@ const [contacts, setContacts] = useState<IUser[]>([])
 		}
 	}
 
-  const messageForm = useForm<z.infer<typeof messageSchema>>({
-    resolver: zodResolver(messageSchema),
-    defaultValues: { text: "", image: "" },
-  });
+	useEffect(() => {
+		router.replace('/')
+		socket.current = io('ws://localhost:5000')
+	}, [])
 
-  useEffect(() => {
-    router.replace("/");
-  }, []);
-
-  useEffect(() => {
+	useEffect(() => {
 		if (session?.currentUser?._id) {
+			socket.current?.emit('addOnlineUser', session.currentUser)
+			socket.current?.on('getOnlineUsers', (data: { socketId: string; user: IUser }[]) => {
+				setOnlineUsers(data.map(item => item.user))
+			})
 			getContacts()
 		}
 	}, [session?.currentUser])
 
+  useEffect(() => {
+		if (session?.currentUser) {
+			socket.current?.on('getCreatedUser', user => {
+				setContacts(prev => {
+					const isExist = prev.some(item => item._id === user._id)
+					return isExist ? prev : [...prev, user]
+				})
+			})
+
+			socket.current?.on('getNewMessage', ({ newMessage, sender, receiver }: GetSocketType) => {
+				setMessages(prev => {
+					const isExist = prev.some(item => item._id === newMessage._id)
+					return isExist ? prev : [...prev, newMessage]
+				})
+				toast({ title: 'New message', description: `${sender?.email.split('@')[0]} sent you a message` })
+				if (!receiver.muted) {
+					playSound(receiver.notificationSound)
+				}
+			})
+		}
+	}, [session?.currentUser, socket])
+
+	useEffect(() => {
+		if (currentContact?._id) {
+			getMessages()
+		}
+	}, [currentContact])
+
 	const onCreateContact = async (values: z.infer<typeof emailSchema>) => {
 		setCreating(true)
 		const token = await generateToken(session?.currentUser?._id)
@@ -70,60 +125,75 @@ const [contacts, setContacts] = useState<IUser[]>([])
 				headers: { Authorization: `Bearer ${token}` },
 			})
 			setContacts(prev => [...prev, data.contact])
+      socket.current?.emit('createContact', { currentUser: session?.currentUser, receiver: data.contact })
 			toast({ description: 'Contact added successfully' })
 			contactForm.reset()
-    } catch (error: unknown) {
-      if (error && typeof error === 'object' && 'response' in error && (error as IError).response?.data?.message) {
-        return toast({ description: (error as IError).response.data.message, variant: 'destructive' })
-      }
-      return toast({ description: 'Something went wrong', variant: 'destructive' })
-    } finally {
-      setCreating(false)
-    }
+		} catch (error: unknown) {
+			if ((error as IError).response?.data?.message) {
+				return toast({ description: (error as IError).response.data.message, variant: 'destructive' })
+			}
+			return toast({ description: 'Something went wrong', variant: 'destructive' })
+		} finally {
+			setCreating(false)
+		}
 	}
 
+	const onSendMessage = async (values: z.infer<typeof messageSchema>) => {
+		setCreating(true)
+		const token = await generateToken(session?.currentUser?._id)
+		try {
+			const { data } = await axiosClient.post<GetSocketType>(
+				'/api/user/message',
+				{ ...values, receiver: currentContact?._id },
+				{ headers: { Authorization: `Bearer ${token}` } }
+			)
+			setMessages(prev => [...prev, data.newMessage])
+			messageForm.reset()
+			socket.current?.emit('sendMessage', { newMessage: data.newMessage, receiver: data.receiver, sender: data.sender })
+		} catch {
+			toast({ description: 'Cannot send message', variant: 'destructive' })
+		} finally {
+			setCreating(false)
+		}
+	}
 
-  const onSendMessage = (values: z.infer<typeof messageSchema>) => {
-    // API call to send message
-    console.log(values);
-  };
-
-  return (
-    <>
-      {/* Sidebar */}
-      <div className="w-80 h-screen border-r fixed inset-0 z-50">
-        {/* Loading */}
-       {isLoading && (
+	return (
+		<>
+			{/* Sidebar */}
+			<div className='w-80 h-screen border-r fixed inset-0 z-50'>
+				{/* Loading */}
+				{isLoading && (
 					<div className='w-full h-[95vh] flex justify-center items-center'>
 						<Loader2 size={50} className='animate-spin' />
 					</div>
 				)}
 
-        {/* Contact list */}
-       {!isLoading && <ContactList contacts={contacts} />}
-      </div>
-      {/* Chat area */}
-      <div className="pl-80 w-full">
-        {/* Add contact */}
-        {!currentContact?._id && (
-          <AddContact
-            contactForm={contactForm}
-            onCreateContact={onCreateContact}
-          />
-        )}
-
-        {/* Chat */}
-        {currentContact?._id && (
-          <div className="w-full relative">
-            {/*Top Chat  */}
-            <TopChat />
-            {/* Chat messages */}
-            <Chat messageForm={messageForm} onSendMessage={onSendMessage} />
-          </div>
-        )}
-      </div>
-    </>
-  );
-};
+				{/* Contact list */}
+				{!isLoading && <ContactList contacts={contacts} />}
+			</div>
+			{/* Chat area */}
+			<div className='pl-80 w-full'>
+				{/* Add contact */}
+				{!currentContact?._id && <AddContact contactForm={contactForm} onCreateContact={onCreateContact} />}
+
+				{/* Chat */}
+				{currentContact?._id && (
+					<div className='w-full relative'>
+						{/*Top Chat  */}
+						<TopChat />
+						{/* Chat messages */}
+					<Chat messageForm={messageForm} onSendMessage={onSendMessage} messages={messages} />
+					</div>
+				)}
+			</div>
+		</>
+	)
+}
 
 export default HomePage;
+
+interface GetSocketType {
+	receiver: IUser
+	sender: IUser
+	newMessage: IMessage
+}
\ No newline at end of file
diff --git a/components/cards/message.card.tsx b/components/cards/message.card.tsx
index f0176c0..c1f0a84 100644
--- a/components/cards/message.card.tsx
+++ b/components/cards/message.card.tsx
@@ -1,19 +1,38 @@
-
-import { cn } from '@/lib/utils'
-import { FC } from 'react'
+import { useCurrentContact } from "@/hooks/use-current";
+import { cn } from "@/lib/utils";
+import { IMessage } from "@/types";
+import { FC } from "react";
 
 interface Props {
-	isReceived?: boolean
-}
-const MessageCard: FC<Props> = ({ isReceived }) => {
-	return (
-		<div className={cn('m-2.5 font-medium text-xs flex', isReceived ? 'justify-start' : 'justify-end')}>
-			<div className={cn('relative inline p-2 pl-2.5 pr-12 max-w-full', isReceived ? 'bg-primary' : 'bg-secondary')}>
-				<p className='text-sm text-white'>Hello world</p>
-				<span className='text-xs right-1 bottom-0 absolute opacity-60'>✓</span>
-			</div>
-		</div>
-	)
+  isReceived?: boolean;
+  message: IMessage;
 }
 
-export default MessageCard
\ No newline at end of file
+const MessageCard: FC<Props> = ({ message }) => {
+  const { currentContact } = useCurrentContact();
+
+  return (
+    <div
+      className={cn(
+        "m-2.5 font-medium text-xs flex",
+        message.receiver._id === currentContact?._id
+          ? "justify-start"
+          : "justify-end"
+      )}
+    >
+      <div
+        className={cn(
+          "relative inline p-2 pl-2.5 pr-12 max-w-full",
+          message.receiver._id === currentContact?._id
+            ? "bg-primary"
+            : "bg-secondary"
+        )}
+      >
+        <p className="text-sm text-white">{message.text}</p>
+        <span className="text-xs right-1 bottom-0 absolute opacity-60">✓</span>
+      </div>
+    </div>
+  );
+};
+
+export default MessageCard;
diff --git a/components/providers/socket.provider.tsx b/components/providers/socket.provider.tsx
new file mode 100644
index 0000000..e69de29
diff --git a/hooks/use-auth.ts b/hooks/use-auth.ts
index d23ba42..09a0ab3 100644
--- a/hooks/use-auth.ts
+++ b/hooks/use-auth.ts
@@ -1,3 +1,4 @@
+import { IUser } from '@/types'
 import { create } from 'zustand'
 
 type Store = {
@@ -5,6 +6,8 @@ type Store = {
 	setStep: (step: 'login' | 'verify') => void
 	email: string
 	setEmail: (email: string) => void
+	onlineUsers: IUser[]
+	setOnlineUsers: (users: IUser[]) => void
 }
 
 export const useAuth = create<Store>()(set => ({
@@ -12,4 +15,6 @@ export const useAuth = create<Store>()(set => ({
 	setStep: step => set({ step }),
 	email: '',
 	setEmail: email => set({ email }),
+	onlineUsers: [],
+	setOnlineUsers: users => set({ onlineUsers: users }),
 }))
\ No newline at end of file
diff --git a/hooks/use-loading.ts b/hooks/use-loading.ts
index 20ef4a8..9aecaa4 100644
--- a/hooks/use-loading.ts
+++ b/hooks/use-loading.ts
@@ -5,6 +5,8 @@ type Store = {
 	setCreating: (isCreating: boolean) => void
 	isLoading: boolean
 	setLoading: (isLoading: boolean) => void
+	loadMessages: boolean
+	setLoadMessages: (loadMessages: boolean) => void
 }
 
 export const useLoading = create<Store>()(set => ({
@@ -12,4 +14,6 @@ export const useLoading = create<Store>()(set => ({
 	setCreating: isCreating => set({ isCreating }),
 	isLoading: false,
 	setLoading: isLoading => set({ isLoading }),
+	loadMessages: false,
+	setLoadMessages: loadMessages => set({ loadMessages }),
 }))
\ No newline at end of file
diff --git a/next.config.ts b/next.config.ts
index 7ad42e6..6491b60 100644
--- a/next.config.ts
+++ b/next.config.ts
@@ -1,6 +1,8 @@
 import type { NextConfig } from "next";
 
 const nextConfig: NextConfig = {
+	reactStrictMode: false,
+	
  images: {
 		remotePatterns: [{ protocol: 'https', hostname: 'github.com', pathname: '**' }],
 	},
diff --git a/package.json b/package.json
index 19aa7ce..c1c81cf 100644
--- a/package.json
+++ b/package.json
@@ -37,6 +37,7 @@
     "react-icons": "^5.5.0",
     "react-no-ssr": "^1.1.0",
     "shadcn": "^2.9.2",
+    "socket.io-client": "^4.8.1",
     "sonner": "^2.0.6",
     "tailwind-merge": "^3.3.1",
     "uploadthing": "^7.7.3",
diff --git a/types/index.ts b/types/index.ts
index 81ada99..f6cbbb2 100644
--- a/types/index.ts
+++ b/types/index.ts
@@ -18,4 +18,15 @@ export interface IUser {
 	notificationSound: string
 	sendingSound: string
 	contacts: IUser[]
+}
+
+export interface IMessage {
+	_id: string
+	text: string
+	image: string
+	reaction: string
+	sender: IUser
+	receiver: IUser
+	createdAt: string
+	updatedAt: string
 }
\ No newline at end of file
-- 
2.41.0


From 76023359e0329dc438e9759f9de9a3080d853a74 Mon Sep 17 00:00:00 2001
From: oscar-bek <salamov.behzod@gmail.com>
Date: Sun, 10 Aug 2025 13:07:38 +0900
Subject: [PATCH 14/16] feat(client): develop react/edit/delete message

---
 app/(chat)/_components/chat.tsx          | 282 +++++++----
 app/(chat)/_components/contact-list.tsx  | 185 ++++---
 app/(chat)/page.tsx                      | 589 ++++++++++++++++-------
 components/cards/message.card.tsx        | 113 +++--
 components/providers/socket.provider.tsx |   0
 components/ui/context-menu.tsx           | 200 ++++++++
 hooks/use-current.tsx                    |   7 +-
 lib/constants.ts                         |   8 +-
 lib/utils.ts                             |   4 +
 package.json                             |   1 +
 types/index.ts                           |   2 +
 11 files changed, 995 insertions(+), 396 deletions(-)
 delete mode 100644 components/providers/socket.provider.tsx
 create mode 100644 components/ui/context-menu.tsx

diff --git a/app/(chat)/_components/chat.tsx b/app/(chat)/_components/chat.tsx
index d2b3d38..bc1da8f 100644
--- a/app/(chat)/_components/chat.tsx
+++ b/app/(chat)/_components/chat.tsx
@@ -1,111 +1,181 @@
-import MessageCard from '@/components/cards/message.card'
-import ChatLoading from '@/components/loadings/chat.loading'
-import { Button } from '@/components/ui/button'
-import { Form, FormControl, FormField, FormItem } from '@/components/ui/form'
-import { Input } from '@/components/ui/input'
-import { messageSchema } from '@/lib/validation'
-import { Paperclip, Send, Smile } from 'lucide-react'
-import { FC, useRef } from 'react'
-import { UseFormReturn } from 'react-hook-form'
-import { z } from 'zod'
-import emojies from '@emoji-mart/data'
-import Picker from '@emoji-mart/react'
-import { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover'
-import { useTheme } from 'next-themes'
-import { useLoading } from '@/hooks/use-loading'
-import { IMessage } from '@/types'
+import MessageCard from "@/components/cards/message.card";
+import ChatLoading from "@/components/loadings/chat.loading";
+import { Button } from "@/components/ui/button";
+import { Form, FormControl, FormField, FormItem } from "@/components/ui/form";
+import { Input } from "@/components/ui/input";
+import { messageSchema } from "@/lib/validation";
+import { Paperclip, Send, Smile } from "lucide-react";
+import { FC, useEffect, useRef } from "react";
+import { UseFormReturn } from "react-hook-form";
+import { z } from "zod";
+import emojies from "@emoji-mart/data";
+import Picker from "@emoji-mart/react";
+import {
+  Popover,
+  PopoverContent,
+  PopoverTrigger,
+} from "@/components/ui/popover";
+import { useTheme } from "next-themes";
+import { useLoading } from "@/hooks/use-loading";
+import { IMessage } from "@/types";
+import { useSession } from "next-auth/react";
+import { useCurrentContact } from "@/hooks/use-current";
+
 
 interface Props {
-	onSendMessage: (values: z.infer<typeof messageSchema>) => void
-	messageForm: UseFormReturn<z.infer<typeof messageSchema>>
-	messages: IMessage[]
+ onSubmitMessage: (values: z.infer<typeof messageSchema>) => Promise<void>
+	onReadMessages: () => Promise<void>
+	onReaction: (reaction: string, messageId: string) => Promise<void>
+	onDeleteMessage: (messageId: string) => Promise<void>
+  messageForm: UseFormReturn<z.infer<typeof messageSchema>>;
+  messages: IMessage[];
 }
 
-const Chat: FC<Props> = ({ onSendMessage, messageForm, messages }) => {
-	const { loadMessages } = useLoading()
-
-	const { resolvedTheme } = useTheme()
-	const inputRef = useRef<HTMLInputElement | null>(null)
-
-	const handleEmojiSelect = (emoji: string) => {
-		const input = inputRef.current
-		if (!input) return
-
-		const text = messageForm.getValues('text')
-		const start = input.selectionStart ?? 0
-		const end = input.selectionEnd ?? 0
-
-		const newText = text.slice(0, start) + emoji + text.slice(end)
-		messageForm.setValue('text', newText)
-
-		setTimeout(() => {
-			input.setSelectionRange(start + emoji.length, start + emoji.length)
-		}, 0)
-	}
-
-	return (
-		<div className='flex flex-col justify-end z-40 min-h-[92vh]'>
-			{/* Loading */}
-			{loadMessages && <ChatLoading />}
-			{/* Messages */}
-			{messages.map((message, index) => (
-				<MessageCard key={index} message={message} />
-			))}
-			{/* Start conversation */}
-			{messages.length === 0 && (
-				<div className='w-full h-[88vh] flex items-center justify-center'>
-					<div className='text-[100px] cursor-pointer' onClick={() => onSendMessage({ text: '✋' })}>
-						✋
-					</div>
-				</div>
-			)}
-
-			{/* Message input */}
-			<Form {...messageForm}>
-				<form onSubmit={messageForm.handleSubmit(onSendMessage)} className='w-full flex relative'>
-					<Button size={'icon'} type='button' variant={'secondary'}>
-						<Paperclip />
-					</Button>
-					<FormField
-						control={messageForm.control}
-						name='text'
-						render={({ field }) => (
-							<FormItem className='w-full'>
-								<FormControl>
-									<Input
-										className='bg-secondary border-l border-l-muted-foreground border-r border-r-muted-foreground h-9'
-										placeholder='Type a message'
-										value={field.value}
-										onBlur={() => field.onBlur()}
-										onChange={e => field.onChange(e.target.value)}
-										ref={inputRef}
-									/>
-								</FormControl>
-							</FormItem>
-						)}
-					/>
-					<Popover>
-						<PopoverTrigger asChild>
-							<Button size='icon' type='button' variant='secondary'>
-								<Smile />
-							</Button>
-						</PopoverTrigger>
-						<PopoverContent className='p-0 border-none rounded-md absolute right-6 bottom-0'>
-							<Picker
-								data={emojies}
-								theme={resolvedTheme === 'dark' ? 'dark' : 'light'}
-								onEmojiSelect={(emoji: { native: string }) => handleEmojiSelect(emoji.native)}
-							/>
-						</PopoverContent>
-					</Popover>
-
-					<Button type='submit' size={'icon'}>
-						<Send />
-					</Button>
-				</form>
-			</Form>
-		</div>
-	)
-}
+const Chat: FC<Props> = ({ onSubmitMessage, messageForm, messages, onReadMessages, onReaction, onDeleteMessage }) => {
+  const { loadMessages } = useLoading();
+  	const { editedMessage } = useCurrentContact()
+  const { data: session } = useSession();
+  const { currentContact } = useCurrentContact();
+  const { resolvedTheme } = useTheme();
+
+  const inputRef = useRef<HTMLInputElement | null>(null);
+  const scrollRef = useRef<HTMLFormElement | null>(null);
+  const prevContactIdRef = useRef<string | null>(null);
+
+  // Just current user and current contact's messages filtering
+  const filteredMessages = messages.filter((message) => {
+    const currentUserId = session?.currentUser?._id;
+    const contactId = currentContact?._id;
+
+    // Check if the message is between current user and current contact
+    const isRelevantMessage =
+      (message.sender._id === currentUserId &&
+        message.receiver._id === contactId) ||
+      (message.sender._id === contactId &&
+        message.receiver._id === currentUserId);
+
+    return isRelevantMessage;
+  });
+
+  useEffect(() => {
+		if (editedMessage) {
+			messageForm.setValue('text', editedMessage.text)
+			scrollRef.current?.scrollIntoView({ behavior: 'smooth' })
+		}
+	}, [editedMessage])
+
+  // FIXED: UseEffect for scrolling and message input
+  useEffect(() => {
+    scrollRef.current?.scrollIntoView({ behavior: "smooth" });
+  }, [filteredMessages]);
+
+  // FIXED: When Contact is updated and new messages arrive, change status to read messages
+  useEffect(() => {
+    const currentContactId = currentContact?._id;
+    // Contact is updated or new messages arrive
+    if (currentContactId && (
+      prevContactIdRef.current !== currentContactId || // Contact is updated
+      filteredMessages.length > 0 // New messages are available
+    )) {
+      onReadMessages();
+      prevContactIdRef.current = currentContactId;
+    }
+  }, [currentContact?._id, filteredMessages.length]); // use length
+
+  // FIXED: Cleanup when Component unmounts
+  useEffect(() => {
+    return () => {
+      prevContactIdRef.current = null;
+    };
+  }, []);
+
+  const handleEmojiSelect = (emoji: string) => {
+    const input = inputRef.current;
+    if (!input) return;
+
+    const text = messageForm.getValues("text");
+    const start = input.selectionStart ?? 0;
+    const end = input.selectionEnd ?? 0;
+
+    const newText = text.slice(0, start) + emoji + text.slice(end);
+    messageForm.setValue("text", newText);
+
+    setTimeout(() => {
+      input.setSelectionRange(start + emoji.length, start + emoji.length);
+    }, 0);
+  };
+  
+  return (
+    <div className="flex flex-col justify-end z-40 min-h-[92vh]">
+      {/* Loading */}
+      {loadMessages && <ChatLoading />}
+
+      {/* Messages - just filtered messages*/}
+      {filteredMessages.map((message) => (
+       <MessageCard key={message._id} message={message} onReaction={onReaction} onDeleteMessage={onDeleteMessage} />
+      ))}
+
+      {/* Start conversation */}
+      {filteredMessages.length === 0 && (
+        <div className="w-full h-[88vh] flex items-center justify-center">
+         <div className='text-[100px] cursor-pointer' onClick={() => onSubmitMessage({ text: '✋' })}>
+            ✋
+          </div>
+        </div>
+      )}
+
+      {/* Message input */}
+      <Form {...messageForm}>
+        <form
+          onSubmit={messageForm.handleSubmit(onSubmitMessage)}
+          className="w-full flex relative"
+          ref={scrollRef}
+        >
+          <Button size={"icon"} type="button" variant={"secondary"}>
+            <Paperclip />
+          </Button>
+          <FormField
+            control={messageForm.control}
+            name="text"
+            render={({ field }) => (
+              <FormItem className="w-full">
+                <FormControl>
+                  <Input
+                    className="bg-secondary border-l border-l-muted-foreground border-r border-r-muted-foreground h-9"
+                    placeholder="Type a message"
+                    value={field.value}
+                    onBlur={() => field.onBlur()}
+                    onChange={(e) => field.onChange(e.target.value)}
+                    ref={inputRef}
+                  />
+                </FormControl>
+              </FormItem>
+            )}
+          />
+          <Popover>
+            <PopoverTrigger asChild>
+              <Button size="icon" type="button" variant="secondary">
+                <Smile />
+              </Button>
+            </PopoverTrigger>
+            <PopoverContent className="p-0 border-none rounded-md absolute right-6 bottom-0">
+              <Picker
+                data={emojies}
+                theme={resolvedTheme === "dark" ? "dark" : "light"}
+                onEmojiSelect={(emoji: { native: string }) =>
+                  handleEmojiSelect(emoji.native)
+                }
+              />
+            </PopoverContent>
+          </Popover>
+
+          <Button type="submit" size={"icon"}>
+            <Send />
+          </Button>
+        </form>
+      </Form>
+    </div>
+  );
+};
 
-export default Chat
\ No newline at end of file
+export default Chat;
\ No newline at end of file
diff --git a/app/(chat)/_components/contact-list.tsx b/app/(chat)/_components/contact-list.tsx
index be4513b..c739f53 100644
--- a/app/(chat)/_components/contact-list.tsx
+++ b/app/(chat)/_components/contact-list.tsx
@@ -1,106 +1,105 @@
-"use client";
+'use client'
 
-import { IUser } from "@/types";
-import React, { FC, useState } from "react";
-import Settings from "./settings";
-import { Input } from "@/components/ui/input";
-import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
-import { useRouter } from "next/navigation";
-import { cn } from "@/lib/utils";
-import { useCurrentContact } from "@/hooks/use-current";
-import { useAuth } from "@/hooks/use-auth";
+import { IUser } from '@/types'
+import React, { FC, useState } from 'react'
+import Settings from './settings'
+import { Input } from '@/components/ui/input'
+import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
+import { useRouter } from 'next/navigation'
+import { cn, sliceText } from '@/lib/utils'
+import { useCurrentContact } from '@/hooks/use-current'
+import { useAuth } from '@/hooks/use-auth'
+import { format } from 'date-fns'
+import { CONST } from '@/lib/constants'
 
 interface Props {
-  contacts: IUser[];
+	contacts: IUser[]
 }
 const ContactList: FC<Props> = ({ contacts }) => {
-  const [query, setQuery] = useState("");
+	const [query, setQuery] = useState('')
 
-  const { onlineUsers } = useAuth();
-  const router = useRouter();
-  const { setCurrentContact, currentContact } = useCurrentContact();
+	const { onlineUsers } = useAuth()
+	const router = useRouter()
+	const { setCurrentContact, currentContact } = useCurrentContact()
 
-  const filteredContacts = contacts.filter((contact) =>
-    contact.email.toLowerCase().includes(query.toLowerCase())
-  );
+	const filteredContacts = contacts.filter(contact => contact.email.toLowerCase().includes(query.toLowerCase()))
 
-  const renderContact = (contact: IUser) => {
-    const onChat = () => {
-      if (currentContact?._id === contact._id) return;
-      setCurrentContact(contact);
-      router.push(`/?chat=${contact._id}`);
-    };
+	const renderContact = (contact: IUser) => {
+		const onChat = () => {
+			if (currentContact?._id === contact._id) return
+			setCurrentContact(contact)
+			router.push(`/?chat=${contact._id}`)
+		}
 
-    return (
-      <div
-        className={cn(
-          "flex justify-between items-center cursor-pointer hover:bg-secondary/50 p-2",
-          currentContact?._id === contact._id && "bg-secondary/50"
-        )}
-        onClick={onChat}
-      >
-        <div className="flex items-center gap-2">
-          <div className="relative">
-            <Avatar className="z-40">
-              <AvatarImage
-                src={contact.avatar}
-                alt={contact.email}
-                className="object-cover"
-              />
-              <AvatarFallback className="uppercase">
-                {contact.email[0]}
-              </AvatarFallback>
-            </Avatar>
+		return (
+			<div
+				className={cn(
+					'flex justify-between items-center cursor-pointer hover:bg-secondary/50 p-2',
+					currentContact?._id === contact._id && 'bg-secondary/50'
+				)}
+				onClick={onChat}
+			>
+				<div className='flex items-center gap-2'>
+					<div className='relative'>
+						<Avatar className='z-40'>
+							<AvatarImage src={contact.avatar} alt={contact.email} className='object-cover' />
+							<AvatarFallback className='uppercase'>{contact.email[0]}</AvatarFallback>
+						</Avatar>
+						{onlineUsers.some(user => user._id === contact._id) && (
+							<div className='size-3 bg-green-500 absolute rounded-full bottom-0 right-0 !z-50' />
+						)}
+					</div>
 
-            {onlineUsers.some((user) => user._id === contact._id) && (
-              <div className="size-3 bg-green-500 absolute rounded-full bottom-0 right-0 !z-50" />
-            )}
-          </div>
+					<div>
+						<h2 className='capitalize line-clamp-1 text-sm'>{contact.email.split('@')[0]}</h2>
+						<p
+							className={cn(
+								'text-xs line-clamp-1',
+								contact.lastMessage
+									? contact.lastMessage.status !== CONST.READ
+										? 'text-foreground'
+										: 'text-muted-foreground'
+									: 'text-muted-foreground'
+							)}
+						>
+							{contact.lastMessage ? sliceText(contact.lastMessage.text, 25) : 'No messages yet'}
+						</p>
+					</div>
+				</div>
+				{contact.lastMessage && (
+					<div className='self-end'>
+						<p className='text-xs text-muted-foreground'>{format(contact.lastMessage.updatedAt, 'hh:mm a')}</p>
+					</div>
+				)}
+			</div>
+		)
+	}
 
-          <div>
-            <h2 className="capitalize line-clamp-1 text-sm">
-              {contact.email.split("@")[0]}
-            </h2>
-            <p className="text-xs line-clamp-1 text-muted-foreground">
-              No message yet
-            </p>
-          </div>
-        </div>
+	return (
+		<>
+			{/* Top bar */}
+			<div className='flex items-center bg-background pl-2 sticky top-0'>
+				<Settings />
+				<div className='m-2 w-full'>
+					<Input
+						className='bg-secondary'
+						value={query}
+						onChange={e => setQuery(e.target.value)}
+						type='text'
+						placeholder='Search...'
+					/>
+				</div>
+			</div>
 
-        <div className="self-end">
-          <p className="text-xs text-muted-foreground">19:20 pm</p>
-        </div>
-      </div>
-    );
-  };
-
-  return (
-    <>
-      {/* Top bar */}
-      <div className="flex items-center bg-background pl-2 sticky top-0">
-        <Settings />
-        <div className="m-2 w-full">
-          <Input
-            className="bg-secondary"
-            value={query}
-            onChange={(e) => setQuery(e.target.value)}
-            type="text"
-            placeholder="Search..."
-          />
-        </div>
-      </div>
-
-      {filteredContacts.length === 0 ? (
-        <div className="w-full h-[95vh] flex justify-center items-center text-center text-muted-foreground">
-          <p>Contact list is empty</p>
-        </div>
-      ) : (
-        filteredContacts.map((contact) => (
-          <div key={contact._id}>{renderContact(contact)}</div>
-        ))
-      )}
-    </>
-  );
-};
+			{filteredContacts.length === 0 ? (
+				<div className='w-full h-[95vh] flex justify-center items-center text-center text-muted-foreground'>
+					<p>Contact list is empty</p>
+				</div>
+			) : (
+				filteredContacts.map(contact => <div key={contact._id}>{renderContact(contact)}</div>)
+			)}
+		</>
+	)
+}
 
-export default ContactList;
+export default ContactList
\ No newline at end of file
diff --git a/app/(chat)/page.tsx b/app/(chat)/page.tsx
index 556870e..1fe7245 100644
--- a/app/(chat)/page.tsx
+++ b/app/(chat)/page.tsx
@@ -1,199 +1,464 @@
-'use client'
-
-import { Loader2 } from 'lucide-react'
-import ContactList from './_components/contact-list'
-import { useEffect, useRef, useState } from 'react'
-import { useRouter } from 'next/navigation'
-import AddContact from './_components/add-contact'
-import { useCurrentContact } from '@/hooks/use-current'
-import { useForm } from 'react-hook-form'
-import { z } from 'zod'
-import { emailSchema, messageSchema } from '@/lib/validation'
-import { zodResolver } from '@hookform/resolvers/zod'
-import TopChat from './_components/top-chat'
-import Chat from './_components/chat'
-import { useLoading } from '@/hooks/use-loading'
-import { axiosClient } from '@/http/axios'
-import { useSession } from 'next-auth/react'
-import { generateToken } from '@/lib/generate-token'
-import { IError, IMessage, IUser } from '@/types'
-import { toast } from '@/hooks/use-toast'
-import { io } from 'socket.io-client'
-import { useAuth } from '@/hooks/use-auth'
-import useAudio from '@/hooks/use-audio'
+"use client";
+
+import { Loader2 } from "lucide-react";
+import ContactList from "./_components/contact-list";
+import { useEffect, useRef, useState } from "react";
+import { useRouter, useSearchParams } from "next/navigation";
+import AddContact from "./_components/add-contact";
+import { useCurrentContact } from "@/hooks/use-current";
+import { useForm } from "react-hook-form";
+import { z } from "zod";
+import { emailSchema, messageSchema } from "@/lib/validation";
+import { zodResolver } from "@hookform/resolvers/zod";
+import TopChat from "./_components/top-chat";
+import Chat from "./_components/chat";
+import { useLoading } from "@/hooks/use-loading";
+import { axiosClient } from "@/http/axios";
+import { useSession } from "next-auth/react";
+import { generateToken } from "@/lib/generate-token";
+import { IError, IMessage, IUser } from "@/types";
+import { toast } from "@/hooks/use-toast";
+import { io } from "socket.io-client";
+import { useAuth } from "@/hooks/use-auth";
+import useAudio from "@/hooks/use-audio";
+import { CONST } from "@/lib/constants";
 
 const HomePage = () => {
-	const [contacts, setContacts] = useState<IUser[]>([])
-const [messages, setMessages] = useState<IMessage[]>([])
-	const { setCreating, setLoading, isLoading, setLoadMessages } = useLoading()
-	const { currentContact } = useCurrentContact()
-	const { data: session } = useSession()  
-	const { setOnlineUsers } = useAuth()
-  const { playSound } = useAudio()
+  const [contacts, setContacts] = useState<IUser[]>([]);
+  const [messages, setMessages] = useState<IMessage[]>([]);
+
+  const { setCreating, setLoading, isLoading, setLoadMessages } = useLoading();
+const { currentContact, editedMessage, setEditedMessage } = useCurrentContact()
+  const { data: session } = useSession();
+  const { setOnlineUsers } = useAuth();
+  const { playSound } = useAudio();
+
+  const router = useRouter();
+  const searchParams = useSearchParams();
+  const socket = useRef<ReturnType<typeof io> | null>(null);
+
+  const CONTACT_ID = searchParams.get("chat");
 
-	const router = useRouter()
-	const socket = useRef<ReturnType<typeof io> | null>(null)
+  const contactForm = useForm<z.infer<typeof emailSchema>>({
+    resolver: zodResolver(emailSchema),
+    defaultValues: { email: "" },
+  });
+
+  const messageForm = useForm<z.infer<typeof messageSchema>>({
+    resolver: zodResolver(messageSchema),
+    defaultValues: { text: "", image: "" },
+  });
+
+  const getContacts = async () => {
+    setLoading(true);
+    const token = await generateToken(session?.currentUser?._id);
+    try {
+      const { data } = await axiosClient.get<{ contacts: IUser[] }>(
+        "/api/user/contacts",
+        {
+          headers: { Authorization: `Bearer ${token}` },
+        }
+      );
+      setContacts(data.contacts);
+    } catch {
+      toast({ description: "Cannot fetch contacts", variant: "destructive" });
+    } finally {
+      setLoading(false);
+    }
+  };
 
   const getMessages = async () => {
-		setLoadMessages(true)
-		const token = await generateToken(session?.currentUser?._id)
-		try {
-			const { data } = await axiosClient.get<{ messages: IMessage[] }>(`/api/user/messages/${currentContact?._id}`, {
-				headers: { Authorization: `Bearer ${token}` },
+    setLoadMessages(true);
+    const token = await generateToken(session?.currentUser?._id);
+    try {
+      const { data } = await axiosClient.get<{ messages: IMessage[] }>(
+        `/api/user/messages/${currentContact?._id}`,
+        {
+          headers: { Authorization: `Bearer ${token}` },
+        }
+      );
+
+      setMessages((prev) => {
+        const merged = [...prev, ...data.messages];
+        const unique = merged.filter(
+          (m, i, arr) => i === arr.findIndex((x) => x._id === m._id)
+        );
+        return unique;
+      });
+
+      setContacts((prev) =>
+        prev.map((item) =>
+          item._id === currentContact?._id
+            ? {
+                ...item,
+                lastMessage: item.lastMessage
+                  ? { ...item.lastMessage, status: CONST.READ }
+                  : null,
+              }
+            : item
+        )
+      );
+    } catch (error) {
+      console.error("Xabarlarni olishda xatolik:", error);
+      toast({ description: "Cannot fetch messages", variant: "destructive" });
+    } finally {
+      setLoadMessages(false);
+    }
+  };
+
+  useEffect(() => {
+    router.replace("/");
+    socket.current = io("ws://localhost:5000");
+  }, []);
+
+  useEffect(() => {
+    if (session?.currentUser?._id) {
+      socket.current?.emit("addOnlineUser", session.currentUser);
+      socket.current?.on(
+        "getOnlineUsers",
+        (data: { socketId: string; user: IUser }[]) => {
+          setOnlineUsers(data.map((item) => item.user));
+        }
+      );
+      getContacts();
+    }
+  }, [session?.currentUser]);
+
+  useEffect(() => {
+    if (session?.currentUser) {
+      socket.current?.on("getCreatedUser", (user) => {
+        setContacts((prev) => {
+          const isExist = prev.some((item) => item._id === user._id);
+          return isExist ? prev : [...prev, user];
+        });
+      });
+
+      socket.current?.on(
+        "getNewMessage",
+        ({ newMessage, sender, receiver }: GetSocketType) => {
+          setMessages((prev) => {
+            const exists = prev.some((item) => item._id === newMessage._id);
+            return exists ? prev : [...prev, newMessage];
+          });
+          if (CONTACT_ID === sender._id) {
+            onReadMessages();
+          }
+          setContacts((prev) => {
+            return prev.map((contact) => {
+              if (contact._id === sender._id) {
+                return {
+                  ...contact,
+                  lastMessage: {
+                    ...newMessage,
+                    status:
+                      CONTACT_ID === sender._id
+                        ? CONST.READ
+                        : newMessage.status,
+                  },
+                };
+              }
+              return contact;
+            });
+          });
+          toast({
+            title: "New message",
+            description: `${sender?.email.split("@")[0]} sent you a message`,
+          });
+          if (!receiver.muted) {
+            playSound(receiver.notificationSound);
+          }
+        }
+      );
+
+      socket.current?.on("getReadMessages", (readMessages: IMessage[]) => {
+        setMessages((prev) => {
+          const updatedMessages = prev.map((item) => {
+            const readMessage = readMessages.find(
+              (msg) => msg._id === item._id
+            );
+            if (readMessage) {
+              return { ...item, status: CONST.READ };
+            }
+            return item;
+          });
+          return updatedMessages;
+        });
+      });
+
+      socket.current?.on('getUpdatedMessage', ({ updatedMessage, sender }: GetSocketType) => {
+				setMessages(prev =>
+					prev.map(item =>
+						item._id === updatedMessage._id ? { ...item, reaction: updatedMessage.reaction, text: updatedMessage.text } : item
+					)
+				)
+				setContacts(prev =>
+					prev.map(item =>
+						item._id === sender._id
+							? { ...item, lastMessage: item.lastMessage?._id === updatedMessage._id ? updatedMessage : item.lastMessage }
+							: item
+					)
+				)
 			})
-			setMessages(data.messages)
-		} catch {
-			toast({ description: 'Cannot fetch messages', variant: 'destructive' })
-		} finally {
-			setLoadMessages(false)
+
+			socket.current?.on('getDeletedMessage', ({ deletedMessage, sender, filteredMessages }: GetSocketType) => {
+				setMessages(prev => prev.filter(item => item._id !== deletedMessage._id))
+				const lastMessage = filteredMessages.length ? filteredMessages[filteredMessages.length - 1] : null
+				setContacts(prev =>
+					prev.map(item =>
+						item._id === sender._id
+							? { ...item, lastMessage: item.lastMessage?._id === deletedMessage._id ? lastMessage : item.lastMessage }
+							: item
+					)
+				)
+			})
+    }
+  }, [session?.currentUser, socket, CONTACT_ID]);
+
+  useEffect(() => {
+    if (currentContact?._id) {
+      getMessages();
+    }
+  }, [currentContact]);
+
+  const onCreateContact = async (values: z.infer<typeof emailSchema>) => {
+    setCreating(true);
+    const token = await generateToken(session?.currentUser?._id);
+    try {
+      const { data } = await axiosClient.post<{ contact: IUser }>(
+        "/api/user/contact",
+        values,
+        {
+          headers: { Authorization: `Bearer ${token}` },
+        }
+      );
+      setContacts((prev) => [...prev, data.contact]);
+      socket.current?.emit("createContact", {
+        currentUser: session?.currentUser,
+        receiver: data.contact,
+      });
+      toast({ description: "Contact added successfully" });
+      contactForm.reset();
+    } catch (error: unknown) {
+      if ((error as IError).response?.data?.message) {
+        return toast({
+          description: (error as IError).response.data.message,
+          variant: "destructive",
+        });
+      }
+      return toast({
+        description: "Something went wrong",
+        variant: "destructive",
+      });
+    } finally {
+      setCreating(false);
+    }
+  };
+
+  const onSubmitMessage = async (values: z.infer<typeof messageSchema>) => {
+		setCreating(true)
+		if (editedMessage?._id) {
+			onEditMessage(editedMessage._id, values.text)
+		} else {
+			onSendMessage(values)
 		}
 	}
-  
-	const contactForm = useForm<z.infer<typeof emailSchema>>({
-		resolver: zodResolver(emailSchema),
-		defaultValues: { email: '' },
-	})
-
-	const messageForm = useForm<z.infer<typeof messageSchema>>({
-		resolver: zodResolver(messageSchema),
-		defaultValues: { text: '', image: '' },
-	})
-
-	const getContacts = async () => {
-		setLoading(true)
+
+  const onSendMessage = async (values: z.infer<typeof messageSchema>) => {
+    setCreating(true);
+    const token = await generateToken(session?.currentUser?._id);
+    try {
+      const { data } = await axiosClient.post<GetSocketType>(
+        "/api/user/message",
+        { ...values, receiver: currentContact?._id },
+        { headers: { Authorization: `Bearer ${token}` } }
+      );
+      setMessages((prev) => {
+        const exists = prev.some((item) => item._id === data.newMessage._id);
+        return exists ? prev : [...prev, data.newMessage];
+      });
+
+      setContacts((prev) =>
+        prev.map((item) =>
+          item._id === currentContact?._id
+            ? {
+                ...item,
+                lastMessage: { ...data.newMessage, status: CONST.READ },
+              }
+            : item
+        )
+      );
+      messageForm.reset();
+      socket.current?.emit("sendMessage", {
+        newMessage: data.newMessage,
+        receiver: data.receiver,
+        sender: data.sender,
+      });
+    } catch {
+      toast({ description: "Cannot send message", variant: "destructive" });
+    } finally {
+      setCreating(false);
+    }
+  };
+
+  const onEditMessage = async (messageId: string, text: string) => {
 		const token = await generateToken(session?.currentUser?._id)
 		try {
-			const { data } = await axiosClient.get<{ contacts: IUser[] }>('/api/user/contacts', {
-				headers: { Authorization: `Bearer ${token}` },
+			const { data } = await axiosClient.put<{ updatedMessage: IMessage }>(
+				`/api/user/message/${messageId}`,
+				{ text },
+				{ headers: { Authorization: `Bearer ${token}` } }
+			)
+			setMessages(prev =>
+				prev.map(item => (item._id === data.updatedMessage._id ? { ...item, text: data.updatedMessage.text } : item))
+			)
+			socket.current?.emit('updateMessage', {
+				updatedMessage: data.updatedMessage,
+				receiver: currentContact,
+				sender: session?.currentUser,
 			})
-			setContacts(data.contacts)
+			messageForm.reset()
+			setContacts(prev =>
+				prev.map(item =>
+					item._id === currentContact?._id
+						? { ...item, lastMessage: item.lastMessage?._id === messageId ? data.updatedMessage : item.lastMessage }
+						: item
+				)
+			)
+			setEditedMessage(null)
 		} catch {
-			toast({ description: 'Cannot fetch contacts', variant: 'destructive' })
-		} finally {
-			setLoading(false)
+			toast({ description: 'Cannot edit message', variant: 'destructive' })
 		}
 	}
 
-	useEffect(() => {
-		router.replace('/')
-		socket.current = io('ws://localhost:5000')
-	}, [])
 
-	useEffect(() => {
-		if (session?.currentUser?._id) {
-			socket.current?.emit('addOnlineUser', session.currentUser)
-			socket.current?.on('getOnlineUsers', (data: { socketId: string; user: IUser }[]) => {
-				setOnlineUsers(data.map(item => item.user))
-			})
-			getContacts()
-		}
-	}, [session?.currentUser])
+  const onReadMessages = async () => {
+    const receivedMessages = messages
+      .filter((message) => message.receiver._id === session?.currentUser?._id)
+      .filter((message) => message.status !== CONST.READ);
 
-  useEffect(() => {
-		if (session?.currentUser) {
-			socket.current?.on('getCreatedUser', user => {
-				setContacts(prev => {
-					const isExist = prev.some(item => item._id === user._id)
-					return isExist ? prev : [...prev, user]
-				})
-			})
+    if (receivedMessages.length === 0) return;
 
-			socket.current?.on('getNewMessage', ({ newMessage, sender, receiver }: GetSocketType) => {
-				setMessages(prev => {
-					const isExist = prev.some(item => item._id === newMessage._id)
-					return isExist ? prev : [...prev, newMessage]
-				})
-				toast({ title: 'New message', description: `${sender?.email.split('@')[0]} sent you a message` })
-				if (!receiver.muted) {
-					playSound(receiver.notificationSound)
-				}
-			})
-		}
-	}, [session?.currentUser, socket])
+    const token = await generateToken(session?.currentUser?._id);
+    try {
+      const { data } = await axiosClient.post<{ messages: IMessage[] }>(
+        "/api/user/message-read",
+        { messages: receivedMessages },
+        { headers: { Authorization: `Bearer ${token}` } }
+      );
 
-	useEffect(() => {
-		if (currentContact?._id) {
-			getMessages()
-		}
-	}, [currentContact])
+      // Show message if sending to Socket
+      const socketData = {
+        messages: data.messages,
+        receiver: currentContact, // This is the receiver (A user)
+      };
 
-	const onCreateContact = async (values: z.infer<typeof emailSchema>) => {
-		setCreating(true)
+      socket.current?.emit("readMessages", socketData);
+
+      setMessages((prev) => {
+        return prev.map((item) => {
+          const message = data.messages.find((msg) => msg._id === item._id);
+          return message ? { ...item, status: CONST.READ } : item;
+        });
+      });
+    } catch (error) {
+      console.error("onReadMessages xatolik:", error);
+      toast({ description: "Cannot read messages", variant: "destructive" });
+    }
+  };
+
+  const onReaction = async (reaction: string, messageId: string) => {
 		const token = await generateToken(session?.currentUser?._id)
 		try {
-			const { data } = await axiosClient.post<{ contact: IUser }>('/api/user/contact', values, {
-				headers: { Authorization: `Bearer ${token}` },
+			const { data } = await axiosClient.post<{ updatedMessage: IMessage }>(
+				'/api/user/reaction',
+				{ reaction, messageId },
+				{ headers: { Authorization: `Bearer ${token}` } }
+			)
+			setMessages(prev =>
+				prev.map(item => (item._id === data.updatedMessage._id ? { ...item, reaction: data.updatedMessage.reaction } : item))
+			)
+			socket.current?.emit('updateMessage', {
+				updatedMessage: data.updatedMessage,
+				receiver: currentContact,
+				sender: session?.currentUser,
 			})
-			setContacts(prev => [...prev, data.contact])
-      socket.current?.emit('createContact', { currentUser: session?.currentUser, receiver: data.contact })
-			toast({ description: 'Contact added successfully' })
-			contactForm.reset()
-		} catch (error: unknown) {
-			if ((error as IError).response?.data?.message) {
-				return toast({ description: (error as IError).response.data.message, variant: 'destructive' })
-			}
-			return toast({ description: 'Something went wrong', variant: 'destructive' })
-		} finally {
-			setCreating(false)
+		} catch {
+			toast({ description: 'Cannot react to message', variant: 'destructive' })
 		}
 	}
 
-	const onSendMessage = async (values: z.infer<typeof messageSchema>) => {
-		setCreating(true)
+	const onDeleteMessage = async (messageId: string) => {
 		const token = await generateToken(session?.currentUser?._id)
 		try {
-			const { data } = await axiosClient.post<GetSocketType>(
-				'/api/user/message',
-				{ ...values, receiver: currentContact?._id },
-				{ headers: { Authorization: `Bearer ${token}` } }
+			const { data } = await axiosClient.delete<{ deletedMessage: IMessage }>(`/api/user/message/${messageId}`, {
+				headers: { Authorization: `Bearer ${token}` },
+			})
+			const filteredMessages = messages.filter(item => item._id !== data.deletedMessage._id)
+			const lastMessage = filteredMessages.length ? filteredMessages[filteredMessages.length - 1] : null
+			setMessages(filteredMessages)
+			socket.current?.emit('deleteMessage', {
+				deletedMessage: data.deletedMessage,
+				sender: session?.currentUser,
+				receiver: currentContact,
+				filteredMessages,
+			})
+			setContacts(prev =>
+				prev.map(item =>
+					item._id === currentContact?._id
+						? { ...item, lastMessage: item.lastMessage?._id === messageId ? lastMessage : item.lastMessage }
+						: item
+				)
 			)
-			setMessages(prev => [...prev, data.newMessage])
-			messageForm.reset()
-			socket.current?.emit('sendMessage', { newMessage: data.newMessage, receiver: data.receiver, sender: data.sender })
 		} catch {
-			toast({ description: 'Cannot send message', variant: 'destructive' })
-		} finally {
-			setCreating(false)
+			toast({ description: 'Cannot delete message', variant: 'destructive' })
 		}
 	}
 
-	return (
-		<>
-			{/* Sidebar */}
-			<div className='w-80 h-screen border-r fixed inset-0 z-50'>
-				{/* Loading */}
-				{isLoading && (
-					<div className='w-full h-[95vh] flex justify-center items-center'>
-						<Loader2 size={50} className='animate-spin' />
-					</div>
-				)}
-
-				{/* Contact list */}
-				{!isLoading && <ContactList contacts={contacts} />}
-			</div>
-			{/* Chat area */}
-			<div className='pl-80 w-full'>
-				{/* Add contact */}
-				{!currentContact?._id && <AddContact contactForm={contactForm} onCreateContact={onCreateContact} />}
-
-				{/* Chat */}
-				{currentContact?._id && (
-					<div className='w-full relative'>
-						{/*Top Chat  */}
-						<TopChat />
-						{/* Chat messages */}
-					<Chat messageForm={messageForm} onSendMessage={onSendMessage} messages={messages} />
-					</div>
-				)}
-			</div>
-		</>
-	)
-}
+
+  return (
+    <>
+      <div className="w-80 h-screen border-r fixed inset-0 z-50">
+        {isLoading && (
+          <div className="w-full h-[95vh] flex justify-center items-center">
+            <Loader2 size={50} className="animate-spin" />
+          </div>
+        )}
+
+        {!isLoading && <ContactList contacts={contacts} />}
+      </div>
+      <div className="pl-80 w-full">
+        {!currentContact?._id && (
+          <AddContact
+            contactForm={contactForm}
+            onCreateContact={onCreateContact}
+          />
+        )}
+
+        {currentContact?._id && (
+          <div className="w-full relative">
+            <TopChat />
+           <Chat
+							messageForm={messageForm}
+							onSubmitMessage={onSubmitMessage}
+							messages={messages}
+							onReadMessages={onReadMessages}
+							onReaction={onReaction}
+							onDeleteMessage={onDeleteMessage}
+						/>
+          </div>
+        )}
+      </div>
+    </>
+  );
+};
 
 export default HomePage;
 
 interface GetSocketType {
-	receiver: IUser
-	sender: IUser
-	newMessage: IMessage
-}
\ No newline at end of file
+  receiver: IUser;
+  sender: IUser;
+  newMessage: IMessage;
+  updatedMessage: IMessage
+	deletedMessage: IMessage
+	filteredMessages: IMessage[]
+}
diff --git a/components/cards/message.card.tsx b/components/cards/message.card.tsx
index c1f0a84..dd37ba5 100644
--- a/components/cards/message.card.tsx
+++ b/components/cards/message.card.tsx
@@ -1,38 +1,87 @@
-import { useCurrentContact } from "@/hooks/use-current";
-import { cn } from "@/lib/utils";
-import { IMessage } from "@/types";
-import { FC } from "react";
+import { useCurrentContact } from '@/hooks/use-current'
+import { CONST } from '@/lib/constants'
+import { cn } from '@/lib/utils'
+import { IMessage } from '@/types'
+import { format } from 'date-fns'
+import { Check, CheckCheck, Edit2, Trash } from 'lucide-react'
+import { useSession } from 'next-auth/react'
+import { FC } from 'react'
+import { ContextMenu, ContextMenuContent, ContextMenuItem, ContextMenuSeparator, ContextMenuTrigger } from '@/components/ui/context-menu'
 
 interface Props {
-  isReceived?: boolean;
-  message: IMessage;
+	message: IMessage
+	onReaction: (reaction: string, messageId: string) => Promise<void>
+	onDeleteMessage: (messageId: string) => Promise<void>
 }
 
-const MessageCard: FC<Props> = ({ message }) => {
-  const { currentContact } = useCurrentContact();
+const MessageCard: FC<Props> = ({ message, onReaction, onDeleteMessage }) => {
+	const { currentContact, setEditedMessage } = useCurrentContact()
+	const reactions = ['👍', '😂', '❤️', '😍', '👎']
+	const { data: session } = useSession()
 
-  return (
-    <div
-      className={cn(
-        "m-2.5 font-medium text-xs flex",
-        message.receiver._id === currentContact?._id
-          ? "justify-start"
-          : "justify-end"
-      )}
-    >
-      <div
-        className={cn(
-          "relative inline p-2 pl-2.5 pr-12 max-w-full",
-          message.receiver._id === currentContact?._id
-            ? "bg-primary"
-            : "bg-secondary"
-        )}
-      >
-        <p className="text-sm text-white">{message.text}</p>
-        <span className="text-xs right-1 bottom-0 absolute opacity-60">✓</span>
-      </div>
-    </div>
-  );
-};
+	// Check if the message is sent by me
+	const isSentByMe = message.sender._id === session?.currentUser?._id
 
-export default MessageCard;
+	return (
+		<ContextMenu>
+			<ContextMenuTrigger asChild>
+				<div
+					className={cn(
+						'm-2.5 font-medium text-xs flex',
+						message.receiver._id === currentContact?._id ? 'justify-start' : 'justify-end'
+					)}
+				>
+					<div
+						className={cn(
+							'relative inline p-2 pl-2.5 pr-12 max-w-full',
+							message.receiver._id === currentContact?._id ? 'bg-primary' : 'bg-secondary'
+						)}
+					>
+						<p className='text-sm text-white'>{message.text}</p>
+						<div className='right-1 bottom-0 absolute opacity-60 text-[9px] flex gap-[3px]'>
+							<p>{format(message.updatedAt, 'hh:mm')}</p>
+							<div className='self-end'>
+								{message.receiver._id === currentContact?._id &&
+									(message.status === CONST.READ ? <CheckCheck size={12} /> : <Check size={12} />)}
+							</div>
+						</div>
+
+						<span className='absolute -right-2 -bottom-2'>{message.reaction}</span>
+					</div>
+				</div>
+		
+			</ContextMenuTrigger>
+			<ContextMenuContent className='w-56 p-0 mb-10'>
+				<ContextMenuItem className='grid grid-cols-5'>
+					{reactions.map(reaction => (
+						<div
+							key={reaction}
+							className={cn(
+								'text-xl cursor-pointer p-1 hover:bg-primary/50 transition-all',
+								message.reaction === reaction && 'bg-primary/50'
+							)}
+							onClick={() => onReaction(reaction, message._id)}
+						>
+							{reaction}
+						</div>
+					))}
+				</ContextMenuItem>
+				{message.sender._id !== currentContact?._id && (
+					<>
+						<ContextMenuSeparator />
+						<ContextMenuItem className='cursor-pointer' onClick={() => setEditedMessage(message)}>
+							<Edit2 size={14} className='mr-2' />
+							<span>Edit</span>
+						</ContextMenuItem>
+						<ContextMenuItem className='cursor-pointer' onClick={() => onDeleteMessage(message._id)}>
+							<Trash size={14} className='mr-2' />
+							<span>Delete</span>
+						</ContextMenuItem>
+					</>
+				)}
+			</ContextMenuContent>
+		</ContextMenu>
+	)
+}
+
+export default MessageCard
\ No newline at end of file
diff --git a/components/providers/socket.provider.tsx b/components/providers/socket.provider.tsx
deleted file mode 100644
index e69de29..0000000
diff --git a/components/ui/context-menu.tsx b/components/ui/context-menu.tsx
new file mode 100644
index 0000000..62432d6
--- /dev/null
+++ b/components/ui/context-menu.tsx
@@ -0,0 +1,200 @@
+"use client"
+
+import * as React from "react"
+import * as ContextMenuPrimitive from "@radix-ui/react-context-menu"
+import { Check, ChevronRight, Circle } from "lucide-react"
+
+import { cn } from "@/lib/utils"
+
+const ContextMenu = ContextMenuPrimitive.Root
+
+const ContextMenuTrigger = ContextMenuPrimitive.Trigger
+
+const ContextMenuGroup = ContextMenuPrimitive.Group
+
+const ContextMenuPortal = ContextMenuPrimitive.Portal
+
+const ContextMenuSub = ContextMenuPrimitive.Sub
+
+const ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup
+
+const ContextMenuSubTrigger = React.forwardRef<
+  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,
+  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {
+    inset?: boolean
+  }
+>(({ className, inset, children, ...props }, ref) => (
+  <ContextMenuPrimitive.SubTrigger
+    ref={ref}
+    className={cn(
+      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground",
+      inset && "pl-8",
+      className
+    )}
+    {...props}
+  >
+    {children}
+    <ChevronRight className="ml-auto h-4 w-4" />
+  </ContextMenuPrimitive.SubTrigger>
+))
+ContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName
+
+const ContextMenuSubContent = React.forwardRef<
+  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,
+  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>
+>(({ className, ...props }, ref) => (
+  <ContextMenuPrimitive.SubContent
+    ref={ref}
+    className={cn(
+      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
+      className
+    )}
+    {...props}
+  />
+))
+ContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName
+
+const ContextMenuContent = React.forwardRef<
+  React.ElementRef<typeof ContextMenuPrimitive.Content>,
+  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>
+>(({ className, ...props }, ref) => (
+  <ContextMenuPrimitive.Portal>
+    <ContextMenuPrimitive.Content
+      ref={ref}
+      className={cn(
+        "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
+        className
+      )}
+      {...props}
+    />
+  </ContextMenuPrimitive.Portal>
+))
+ContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName
+
+const ContextMenuItem = React.forwardRef<
+  React.ElementRef<typeof ContextMenuPrimitive.Item>,
+  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {
+    inset?: boolean
+  }
+>(({ className, inset, ...props }, ref) => (
+  <ContextMenuPrimitive.Item
+    ref={ref}
+    className={cn(
+      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
+      inset && "pl-8",
+      className
+    )}
+    {...props}
+  />
+))
+ContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName
+
+const ContextMenuCheckboxItem = React.forwardRef<
+  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,
+  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>
+>(({ className, children, checked, ...props }, ref) => (
+  <ContextMenuPrimitive.CheckboxItem
+    ref={ref}
+    className={cn(
+      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
+      className
+    )}
+    checked={checked}
+    {...props}
+  >
+    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
+      <ContextMenuPrimitive.ItemIndicator>
+        <Check className="h-4 w-4" />
+      </ContextMenuPrimitive.ItemIndicator>
+    </span>
+    {children}
+  </ContextMenuPrimitive.CheckboxItem>
+))
+ContextMenuCheckboxItem.displayName =
+  ContextMenuPrimitive.CheckboxItem.displayName
+
+const ContextMenuRadioItem = React.forwardRef<
+  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,
+  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>
+>(({ className, children, ...props }, ref) => (
+  <ContextMenuPrimitive.RadioItem
+    ref={ref}
+    className={cn(
+      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
+      className
+    )}
+    {...props}
+  >
+    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
+      <ContextMenuPrimitive.ItemIndicator>
+        <Circle className="h-4 w-4 fill-current" />
+      </ContextMenuPrimitive.ItemIndicator>
+    </span>
+    {children}
+  </ContextMenuPrimitive.RadioItem>
+))
+ContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName
+
+const ContextMenuLabel = React.forwardRef<
+  React.ElementRef<typeof ContextMenuPrimitive.Label>,
+  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {
+    inset?: boolean
+  }
+>(({ className, inset, ...props }, ref) => (
+  <ContextMenuPrimitive.Label
+    ref={ref}
+    className={cn(
+      "px-2 py-1.5 text-sm font-semibold text-foreground",
+      inset && "pl-8",
+      className
+    )}
+    {...props}
+  />
+))
+ContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName
+
+const ContextMenuSeparator = React.forwardRef<
+  React.ElementRef<typeof ContextMenuPrimitive.Separator>,
+  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>
+>(({ className, ...props }, ref) => (
+  <ContextMenuPrimitive.Separator
+    ref={ref}
+    className={cn("-mx-1 my-1 h-px bg-border", className)}
+    {...props}
+  />
+))
+ContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName
+
+const ContextMenuShortcut = ({
+  className,
+  ...props
+}: React.HTMLAttributes<HTMLSpanElement>) => {
+  return (
+    <span
+      className={cn(
+        "ml-auto text-xs tracking-widest text-muted-foreground",
+        className
+      )}
+      {...props}
+    />
+  )
+}
+ContextMenuShortcut.displayName = "ContextMenuShortcut"
+
+export {
+  ContextMenu,
+  ContextMenuTrigger,
+  ContextMenuContent,
+  ContextMenuItem,
+  ContextMenuCheckboxItem,
+  ContextMenuRadioItem,
+  ContextMenuLabel,
+  ContextMenuSeparator,
+  ContextMenuShortcut,
+  ContextMenuGroup,
+  ContextMenuPortal,
+  ContextMenuSub,
+  ContextMenuSubContent,
+  ContextMenuSubTrigger,
+  ContextMenuRadioGroup,
+}
\ No newline at end of file
diff --git a/hooks/use-current.tsx b/hooks/use-current.tsx
index fcc036b..73a30cb 100644
--- a/hooks/use-current.tsx
+++ b/hooks/use-current.tsx
@@ -1,13 +1,16 @@
-import { IUser } from '@/types'
+import { IMessage, IUser } from '@/types'
 import { create } from 'zustand'
 
-
 type Store = {
 	currentContact: IUser | null
 	setCurrentContact: (contact: IUser | null) => void
+	editedMessage: IMessage | null
+	setEditedMessage: (message: IMessage | null) => void
 }
 
 export const useCurrentContact = create<Store>()(set => ({
 	currentContact: null,
 	setCurrentContact: contact => set({ currentContact: contact }),
+	editedMessage: null,
+	setEditedMessage: message => set({ editedMessage: message }),
 }))
\ No newline at end of file
diff --git a/lib/constants.ts b/lib/constants.ts
index 7e5a132..2fab042 100644
--- a/lib/constants.ts
+++ b/lib/constants.ts
@@ -3,4 +3,10 @@ export const SOUNDS = [
 	{ value: 'notification2.mp3', label: 'Sammish' },
 	{ value: 'sending.mp3', label: 'Belli' },
 	{ value: 'sending2.mp3', label: 'Oranger' },
-]
\ No newline at end of file
+]
+
+export const CONST = {
+	READ: 'read',
+	DELIVERED: 'delivered',
+	SENT: 'sent',
+}
\ No newline at end of file
diff --git a/lib/utils.ts b/lib/utils.ts
index faaf2a1..3d2657c 100644
--- a/lib/utils.ts
+++ b/lib/utils.ts
@@ -18,4 +18,8 @@ export const getSoundLabel = (value?: string) => {
 		default:
 			return ''
 	}
+}
+
+export const sliceText = (text: string, length: number) => {
+	return text.length > length ? `${text.slice(0, length)}...` : text
 }
\ No newline at end of file
diff --git a/package.json b/package.json
index c1c81cf..c29d422 100644
--- a/package.json
+++ b/package.json
@@ -25,6 +25,7 @@
     "axios": "^1.11.0",
     "class-variance-authority": "^0.7.1",
     "clsx": "^2.1.1",
+    "date-fns": "^4.1.0",
     "form": "^0.2.5",
     "input-otp": "^1.4.2",
     "lucide-react": "^0.525.0",
diff --git a/types/index.ts b/types/index.ts
index f6cbbb2..d6dc53f 100644
--- a/types/index.ts
+++ b/types/index.ts
@@ -18,6 +18,7 @@ export interface IUser {
 	notificationSound: string
 	sendingSound: string
 	contacts: IUser[]
+	lastMessage: IMessage | null
 }
 
 export interface IMessage {
@@ -29,4 +30,5 @@ export interface IMessage {
 	receiver: IUser
 	createdAt: string
 	updatedAt: string
+	status: string
 }
\ No newline at end of file
-- 
2.41.0


From a20dd399f50bce541b97202c8fdbcd6fd3729d70 Mon Sep 17 00:00:00 2001
From: oscar-bek <salamov.behzod@gmail.com>
Date: Sun, 10 Aug 2025 13:43:03 +0900
Subject: [PATCH 15/16] feat(client): develop real time typing status

---
 app/(chat)/_components/chat.tsx         |  46 +++-
 app/(chat)/_components/contact-list.tsx |  63 +++--
 app/(chat)/_components/top-chat.tsx     |  70 ++---
 app/(chat)/page.tsx                     | 331 ++++++++++++++----------
 app/globals.css                         |  13 +
 app/layout.tsx                          |   2 +-
 components/cards/message.card.tsx       |  14 +-
 hooks/use-loading.ts                    |   7 +-
 next.config.ts                          |   5 +-
 9 files changed, 356 insertions(+), 195 deletions(-)

diff --git a/app/(chat)/_components/chat.tsx b/app/(chat)/_components/chat.tsx
index bc1da8f..99c9975 100644
--- a/app/(chat)/_components/chat.tsx
+++ b/app/(chat)/_components/chat.tsx
@@ -5,7 +5,7 @@ import { Form, FormControl, FormField, FormItem } from "@/components/ui/form";
 import { Input } from "@/components/ui/input";
 import { messageSchema } from "@/lib/validation";
 import { Paperclip, Send, Smile } from "lucide-react";
-import { FC, useEffect, useRef } from "react";
+import { ChangeEvent, FC, useEffect, useRef, useState } from 'react'
 import { UseFormReturn } from "react-hook-form";
 import { z } from "zod";
 import emojies from "@emoji-mart/data";
@@ -20,7 +20,8 @@ import { useLoading } from "@/hooks/use-loading";
 import { IMessage } from "@/types";
 import { useSession } from "next-auth/react";
 import { useCurrentContact } from "@/hooks/use-current";
-
+import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'
+import { UploadDropzone } from '@/lib/uploadthing'
 
 interface Props {
  onSubmitMessage: (values: z.infer<typeof messageSchema>) => Promise<void>
@@ -29,11 +30,14 @@ interface Props {
 	onDeleteMessage: (messageId: string) => Promise<void>
   messageForm: UseFormReturn<z.infer<typeof messageSchema>>;
   messages: IMessage[];
+  onTyping: (e: ChangeEvent<HTMLInputElement>) => void
 }
 
-const Chat: FC<Props> = ({ onSubmitMessage, messageForm, messages, onReadMessages, onReaction, onDeleteMessage }) => {
+const Chat: FC<Props> = ({ onSubmitMessage, messageForm, messages, onReadMessages, onReaction, onDeleteMessage, onTyping }) => {
+	const [open, setOpen] = useState(false)
+
   const { loadMessages } = useLoading();
-  	const { editedMessage } = useCurrentContact()
+const { editedMessage, setEditedMessage } = useCurrentContact();
   const { data: session } = useSession();
   const { currentContact } = useCurrentContact();
   const { resolvedTheme } = useTheme();
@@ -104,9 +108,9 @@ const Chat: FC<Props> = ({ onSubmitMessage, messageForm, messages, onReadMessage
       input.setSelectionRange(start + emoji.length, start + emoji.length);
     }, 0);
   };
-  
+
   return (
-    <div className="flex flex-col justify-end z-40 min-h-[92vh]">
+    <div className='flex flex-col justify-end z-40 min-h-[92vh] sidebar-custom-scrollbar overflow-y-scroll'>
       {/* Loading */}
       {loadMessages && <ChatLoading />}
 
@@ -131,9 +135,27 @@ const Chat: FC<Props> = ({ onSubmitMessage, messageForm, messages, onReadMessage
           className="w-full flex relative"
           ref={scrollRef}
         >
-          <Button size={"icon"} type="button" variant={"secondary"}>
-            <Paperclip />
-          </Button>
+         <Dialog open={open} onOpenChange={setOpen}>
+						<DialogTrigger asChild>
+							<Button size={'icon'} type='button' variant={'secondary'}>
+								<Paperclip />
+							</Button>
+						</DialogTrigger>
+						<DialogContent>
+							<DialogHeader>
+								<DialogTitle />
+							</DialogHeader>
+							<UploadDropzone
+								endpoint={'imageUploader'}
+								onClientUploadComplete={res => {
+									onSubmitMessage({ text: '', image: res[0].url })
+									setOpen(false)
+								}}
+								config={{ appendOnPaste: true, mode: 'auto' }}
+							/>
+						</DialogContent>
+					</Dialog>
+
           <FormField
             control={messageForm.control}
             name="text"
@@ -145,7 +167,11 @@ const Chat: FC<Props> = ({ onSubmitMessage, messageForm, messages, onReadMessage
                     placeholder="Type a message"
                     value={field.value}
                     onBlur={() => field.onBlur()}
-                    onChange={(e) => field.onChange(e.target.value)}
+                   onChange={e => {
+											field.onChange(e.target.value)
+											onTyping(e)
+											if (e.target.value === '') setEditedMessage(null)
+										}}
                     ref={inputRef}
                   />
                 </FormControl>
diff --git a/app/(chat)/_components/contact-list.tsx b/app/(chat)/_components/contact-list.tsx
index c739f53..1c3ae8c 100644
--- a/app/(chat)/_components/contact-list.tsx
+++ b/app/(chat)/_components/contact-list.tsx
@@ -11,7 +11,8 @@ import { useCurrentContact } from '@/hooks/use-current'
 import { useAuth } from '@/hooks/use-auth'
 import { format } from 'date-fns'
 import { CONST } from '@/lib/constants'
-
+import Image from 'next/image'
+import { useSession } from 'next-auth/react'
 interface Props {
 	contacts: IUser[]
 }
@@ -21,9 +22,14 @@ const ContactList: FC<Props> = ({ contacts }) => {
 	const { onlineUsers } = useAuth()
 	const router = useRouter()
 	const { setCurrentContact, currentContact } = useCurrentContact()
-
-	const filteredContacts = contacts.filter(contact => contact.email.toLowerCase().includes(query.toLowerCase()))
-
+const { data: session } = useSession()
+	const filteredContacts = contacts
+		.filter(contact => contact.email.toLowerCase().includes(query.toLowerCase()))
+		.sort((a, b) => {
+			const dateA = a.lastMessage?.updatedAt ? new Date(a.lastMessage.updatedAt).getTime() : 0
+			const dateB = b.lastMessage?.updatedAt ? new Date(b.lastMessage.updatedAt).getTime() : 0
+			return dateB - dateA
+		})
 	const renderContact = (contact: IUser) => {
 		const onChat = () => {
 			if (currentContact?._id === contact._id) return
@@ -46,24 +52,47 @@ const ContactList: FC<Props> = ({ contacts }) => {
 							<AvatarFallback className='uppercase'>{contact.email[0]}</AvatarFallback>
 						</Avatar>
 						{onlineUsers.some(user => user._id === contact._id) && (
-							<div className='size-3 bg-green-500 absolute rounded-full bottom-0 right-0 !z-50' />
+							<div className='size-3 bg-green-500 absolute rounded-full bottom-0 right-0 !z-40' />
 						)}
 					</div>
 
 					<div>
 						<h2 className='capitalize line-clamp-1 text-sm'>{contact.email.split('@')[0]}</h2>
-						<p
-							className={cn(
-								'text-xs line-clamp-1',
-								contact.lastMessage
-									? contact.lastMessage.status !== CONST.READ
-										? 'text-foreground'
-										: 'text-muted-foreground'
+						{contact.lastMessage?.image && (
+							<div className='flex items-center gap-1'>
+								<Image src={contact.lastMessage.image} alt={contact.email} width={20} height={20} className='object-cover' />
+								<p
+									className={cn(
+										'text-xs line-clamp-1',
+										contact.lastMessage
+											? contact.lastMessage?.sender._id === session?.currentUser?._id
+												? 'text-muted-foreground'
+												: contact.lastMessage.status !== CONST.READ
+												? 'text-foreground'
+												: 'text-muted-foreground'
+											: 'text-muted-foreground'
+									)}
+								>
+									Photo
+								</p>
+							</div>
+						)}
+						{!contact.lastMessage?.image && (
+							<p
+								className={cn(
+									'text-xs line-clamp-1',
+									contact.lastMessage
+										? contact.lastMessage?.sender._id === session?.currentUser?._id
+											? 'text-muted-foreground'
+											: contact.lastMessage.status !== CONST.READ
+											? 'text-foreground'
+											: 'text-muted-foreground'
 									: 'text-muted-foreground'
-							)}
-						>
-							{contact.lastMessage ? sliceText(contact.lastMessage.text, 25) : 'No messages yet'}
-						</p>
+								)}
+							>
+								{contact.lastMessage ? sliceText(contact.lastMessage.text, 25) : 'No messages yet'}
+							</p>
+						)}
 					</div>
 				</div>
 				{contact.lastMessage && (
@@ -78,7 +107,7 @@ const ContactList: FC<Props> = ({ contacts }) => {
 	return (
 		<>
 			{/* Top bar */}
-			<div className='flex items-center bg-background pl-2 sticky top-0'>
+			<div className='flex items-center bg-background pl-2 sticky top-0 z-50'>
 				<Settings />
 				<div className='m-2 w-full'>
 					<Input
diff --git a/app/(chat)/_components/top-chat.tsx b/app/(chat)/_components/top-chat.tsx
index 7668193..eec6d3e 100644
--- a/app/(chat)/_components/top-chat.tsx
+++ b/app/(chat)/_components/top-chat.tsx
@@ -6,10 +6,19 @@ import { useAuth } from '@/hooks/use-auth'
 import { useCurrentContact } from '@/hooks/use-current'
 import { Settings2 } from 'lucide-react'
 import Image from 'next/image'
+import { useLoading } from '@/hooks/use-loading'
+import { sliceText } from '@/lib/utils'
+import { IMessage } from '@/types'
+import { FC } from 'react'
 
-const TopChat = () => {
+interface Props {
+	messages: IMessage[]
+}
+
+const TopChat: FC<Props> = ({ messages }) => {
 	const { currentContact } = useCurrentContact()
 	const { onlineUsers } = useAuth()
+	const { typing } = useLoading()
 
 	return (
 		<div className='w-full flex items-center justify-between sticky top-0 z-50 h-[8vh] p-2 border-b bg-background'>
@@ -21,27 +30,31 @@ const TopChat = () => {
 				<div className='ml-2'>
 					<h2 className='font-medium text-sm'>{currentContact?.email}</h2>
 					{/* IsTyping */}
-					{/* <div className='text-xs flex items-center gap-1 text-muted-foreground'>
-						<p className='text-secondary-foreground animate-pulse line-clamp-1'>Hello world</p>
-						<div className='self-end mb-1'>
-							<div className='flex justify-center items-center gap-1'>
-								<div className='w-1 h-1 bg-secondary-foreground rounded-full animate-bounce [animation-delay:-0.3s]'></div>
-								<div className='w-1 h-1 bg-secondary-foreground rounded-full animate-bounce [animation-delay:-0.10s]'></div>
-								<div className='w-1 h-1 bg-secondary-foreground rounded-full animate-bounce [animation-delay:-0.15s]'></div>
+					{typing.length > 0 ? (
+						<div className='text-xs flex items-center gap-1 text-muted-foreground'>
+							<p className='text-secondary-foreground animate-pulse line-clamp-1'>{sliceText(typing, 20)}</p>
+							<div className='self-end mb-1'>
+								<div className='flex justify-center items-center gap-1'>
+									<div className='w-1 h-1 bg-secondary-foreground rounded-full animate-bounce [animation-delay:-0.3s]'></div>
+									<div className='w-1 h-1 bg-secondary-foreground rounded-full animate-bounce [animation-delay:-0.10s]'></div>
+									<div className='w-1 h-1 bg-secondary-foreground rounded-full animate-bounce [animation-delay:-0.15s]'></div>
+								</div>
 							</div>
 						</div>
-					</div> */}
-					<p className='text-xs'>
-						{onlineUsers.some(user => user._id === currentContact?._id) ? (
-							<>
-								<span className='text-green-500'>●</span> Online
-							</>
-						) : (
-							<>
-								<span className='text-muted-foreground'>●</span> Last seen recently
-							</>
-						)}
-					</p>
+					)  : (
+						<p className='text-xs'>
+							{onlineUsers.some(user => user._id === currentContact?._id) ? (
+								<>
+									<span className='text-green-500'>●</span> Online
+								</>
+							) : (
+								<>
+									<span className='text-muted-foreground'>●</span> Last seen recently
+								</>
+							)}
+						</p>
+					)}
+				
 				</div>
 			</div>
 
@@ -51,7 +64,7 @@ const TopChat = () => {
 						<Settings2 />
 					</Button>
 				</SheetTrigger>
-				<SheetContent>
+			<SheetContent className='w-80 p-2 overflow-y-scroll sidebar-custom-scrollbar'>
 					<SheetHeader>
 						<SheetTitle />
 					</SheetHeader>
@@ -91,14 +104,13 @@ const TopChat = () => {
 
 						<h2 className='text-xl'>Image</h2>
 						<div className='flex flex-col space-y-2'>
-							<div className='w-full h-36 relative'>
-								<Image
-									src={'https://github.com/shadcn.png'}
-									alt={'https://github.com/shadcn.png'}
-									fill
-									className='object-cover rounded-md'
-								/>
-							</div>
+						{messages
+								.filter(msg => msg.image)
+								.map(msg => (
+									<div className='w-full h-36 relative' key={msg._id}>
+										<Image src={msg.image} alt={msg._id} fill className='object-cover rounded-md' />
+									</div>
+								))}
 						</div>
 					</div>
 				</SheetContent>
diff --git a/app/(chat)/page.tsx b/app/(chat)/page.tsx
index 1fe7245..ff464a0 100644
--- a/app/(chat)/page.tsx
+++ b/app/(chat)/page.tsx
@@ -2,7 +2,7 @@
 
 import { Loader2 } from "lucide-react";
 import ContactList from "./_components/contact-list";
-import { useEffect, useRef, useState } from "react";
+import { ChangeEvent, useEffect, useRef, useState } from "react";
 import { useRouter, useSearchParams } from "next/navigation";
 import AddContact from "./_components/add-contact";
 import { useCurrentContact } from "@/hooks/use-current";
@@ -27,8 +27,10 @@ const HomePage = () => {
   const [contacts, setContacts] = useState<IUser[]>([]);
   const [messages, setMessages] = useState<IMessage[]>([]);
 
-  const { setCreating, setLoading, isLoading, setLoadMessages } = useLoading();
-const { currentContact, editedMessage, setEditedMessage } = useCurrentContact()
+  const { setCreating, setLoading, isLoading, setLoadMessages, setTyping } =
+    useLoading();
+  const { currentContact, editedMessage, setEditedMessage } =
+    useCurrentContact();
   const { data: session } = useSession();
   const { setOnlineUsers } = useAuth();
   const { playSound } = useAudio();
@@ -136,13 +138,14 @@ const { currentContact, editedMessage, setEditedMessage } = useCurrentContact()
       socket.current?.on(
         "getNewMessage",
         ({ newMessage, sender, receiver }: GetSocketType) => {
-          setMessages((prev) => {
-            const exists = prev.some((item) => item._id === newMessage._id);
-            return exists ? prev : [...prev, newMessage];
-          });
+          console.log(newMessage);
+          console.log("CONTACT_ID", CONTACT_ID);
+
+          setTyping("");
           if (CONTACT_ID === sender._id) {
-            onReadMessages();
+            setMessages((prev) => [...prev, newMessage]);
           }
+
           setContacts((prev) => {
             return prev.map((contact) => {
               if (contact._id === sender._id) {
@@ -160,10 +163,10 @@ const { currentContact, editedMessage, setEditedMessage } = useCurrentContact()
               return contact;
             });
           });
-          toast({
-            title: "New message",
-            description: `${sender?.email.split("@")[0]} sent you a message`,
-          });
+          // toast({
+          //   title: "New message",
+          //   description: `${sender?.email.split("@")[0]} sent you a message`,
+          // });
           if (!receiver.muted) {
             playSound(receiver.notificationSound);
           }
@@ -185,32 +188,67 @@ const { currentContact, editedMessage, setEditedMessage } = useCurrentContact()
         });
       });
 
-      socket.current?.on('getUpdatedMessage', ({ updatedMessage, sender }: GetSocketType) => {
-				setMessages(prev =>
-					prev.map(item =>
-						item._id === updatedMessage._id ? { ...item, reaction: updatedMessage.reaction, text: updatedMessage.text } : item
-					)
-				)
-				setContacts(prev =>
-					prev.map(item =>
-						item._id === sender._id
-							? { ...item, lastMessage: item.lastMessage?._id === updatedMessage._id ? updatedMessage : item.lastMessage }
-							: item
-					)
-				)
-			})
+      socket.current?.on(
+        "getUpdatedMessage",
+        ({ updatedMessage, sender }: GetSocketType) => {
+          setTyping('')
+          setMessages((prev) =>
+            prev.map((item) =>
+              item._id === updatedMessage._id
+                ? {
+                    ...item,
+                    reaction: updatedMessage.reaction,
+                    text: updatedMessage.text,
+                  }
+                : item
+            )
+          );
+          setContacts((prev) =>
+            prev.map((item) =>
+              item._id === sender._id
+                ? {
+                    ...item,
+                    lastMessage:
+                      item.lastMessage?._id === updatedMessage._id
+                        ? updatedMessage
+                        : item.lastMessage,
+                  }
+                : item
+            )
+          );
+        }
+      );
 
-			socket.current?.on('getDeletedMessage', ({ deletedMessage, sender, filteredMessages }: GetSocketType) => {
-				setMessages(prev => prev.filter(item => item._id !== deletedMessage._id))
-				const lastMessage = filteredMessages.length ? filteredMessages[filteredMessages.length - 1] : null
-				setContacts(prev =>
-					prev.map(item =>
-						item._id === sender._id
-							? { ...item, lastMessage: item.lastMessage?._id === deletedMessage._id ? lastMessage : item.lastMessage }
-							: item
-					)
-				)
+      socket.current?.on('getTyping', ({ message, sender }: GetSocketType) => {
+				if (CONTACT_ID === sender._id) {
+					setTyping(message)
+				}
 			})
+
+      socket.current?.on(
+        "getDeletedMessage",
+        ({ deletedMessage, sender, filteredMessages }: GetSocketType) => {
+          setMessages((prev) =>
+            prev.filter((item) => item._id !== deletedMessage._id)
+          );
+          const lastMessage = filteredMessages.length
+            ? filteredMessages[filteredMessages.length - 1]
+            : null;
+          setContacts((prev) =>
+            prev.map((item) =>
+              item._id === sender._id
+                ? {
+                    ...item,
+                    lastMessage:
+                      item.lastMessage?._id === deletedMessage._id
+                        ? lastMessage
+                        : item.lastMessage,
+                  }
+                : item
+            )
+          );
+        }
+      );
     }
   }, [session?.currentUser, socket, CONTACT_ID]);
 
@@ -220,6 +258,10 @@ const { currentContact, editedMessage, setEditedMessage } = useCurrentContact()
     }
   }, [currentContact]);
 
+  const onTyping = (e: ChangeEvent<HTMLInputElement>) => {
+		socket.current?.emit('typing', { receiver: currentContact, sender: session?.currentUser, message: e.target.value })
+	}
+
   const onCreateContact = async (values: z.infer<typeof emailSchema>) => {
     setCreating(true);
     const token = await generateToken(session?.currentUser?._id);
@@ -255,13 +297,13 @@ const { currentContact, editedMessage, setEditedMessage } = useCurrentContact()
   };
 
   const onSubmitMessage = async (values: z.infer<typeof messageSchema>) => {
-		setCreating(true)
-		if (editedMessage?._id) {
-			onEditMessage(editedMessage._id, values.text)
-		} else {
-			onSendMessage(values)
-		}
-	}
+    setCreating(true);
+    if (editedMessage?._id) {
+      onEditMessage(editedMessage._id, values.text);
+    } else {
+      onSendMessage(values);
+    }
+  };
 
   const onSendMessage = async (values: z.infer<typeof messageSchema>) => {
     setCreating(true);
@@ -301,35 +343,44 @@ const { currentContact, editedMessage, setEditedMessage } = useCurrentContact()
   };
 
   const onEditMessage = async (messageId: string, text: string) => {
-		const token = await generateToken(session?.currentUser?._id)
-		try {
-			const { data } = await axiosClient.put<{ updatedMessage: IMessage }>(
-				`/api/user/message/${messageId}`,
-				{ text },
-				{ headers: { Authorization: `Bearer ${token}` } }
-			)
-			setMessages(prev =>
-				prev.map(item => (item._id === data.updatedMessage._id ? { ...item, text: data.updatedMessage.text } : item))
-			)
-			socket.current?.emit('updateMessage', {
-				updatedMessage: data.updatedMessage,
-				receiver: currentContact,
-				sender: session?.currentUser,
-			})
-			messageForm.reset()
-			setContacts(prev =>
-				prev.map(item =>
-					item._id === currentContact?._id
-						? { ...item, lastMessage: item.lastMessage?._id === messageId ? data.updatedMessage : item.lastMessage }
-						: item
-				)
-			)
-			setEditedMessage(null)
-		} catch {
-			toast({ description: 'Cannot edit message', variant: 'destructive' })
-		}
-	}
-
+    const token = await generateToken(session?.currentUser?._id);
+    try {
+      const { data } = await axiosClient.put<{ updatedMessage: IMessage }>(
+        `/api/user/message/${messageId}`,
+        { text },
+        { headers: { Authorization: `Bearer ${token}` } }
+      );
+      setMessages((prev) =>
+        prev.map((item) =>
+          item._id === data.updatedMessage._id
+            ? { ...item, text: data.updatedMessage.text }
+            : item
+        )
+      );
+      socket.current?.emit("updateMessage", {
+        updatedMessage: data.updatedMessage,
+        receiver: currentContact,
+        sender: session?.currentUser,
+      });
+      messageForm.reset();
+      setContacts((prev) =>
+        prev.map((item) =>
+          item._id === currentContact?._id
+            ? {
+                ...item,
+                lastMessage:
+                  item.lastMessage?._id === messageId
+                    ? data.updatedMessage
+                    : item.lastMessage,
+              }
+            : item
+        )
+      );
+      setEditedMessage(null);
+    } catch {
+      toast({ description: "Cannot edit message", variant: "destructive" });
+    }
+  };
 
   const onReadMessages = async () => {
     const receivedMessages = messages
@@ -367,57 +418,73 @@ const { currentContact, editedMessage, setEditedMessage } = useCurrentContact()
   };
 
   const onReaction = async (reaction: string, messageId: string) => {
-		const token = await generateToken(session?.currentUser?._id)
-		try {
-			const { data } = await axiosClient.post<{ updatedMessage: IMessage }>(
-				'/api/user/reaction',
-				{ reaction, messageId },
-				{ headers: { Authorization: `Bearer ${token}` } }
-			)
-			setMessages(prev =>
-				prev.map(item => (item._id === data.updatedMessage._id ? { ...item, reaction: data.updatedMessage.reaction } : item))
-			)
-			socket.current?.emit('updateMessage', {
-				updatedMessage: data.updatedMessage,
-				receiver: currentContact,
-				sender: session?.currentUser,
-			})
-		} catch {
-			toast({ description: 'Cannot react to message', variant: 'destructive' })
-		}
-	}
-
-	const onDeleteMessage = async (messageId: string) => {
-		const token = await generateToken(session?.currentUser?._id)
-		try {
-			const { data } = await axiosClient.delete<{ deletedMessage: IMessage }>(`/api/user/message/${messageId}`, {
-				headers: { Authorization: `Bearer ${token}` },
-			})
-			const filteredMessages = messages.filter(item => item._id !== data.deletedMessage._id)
-			const lastMessage = filteredMessages.length ? filteredMessages[filteredMessages.length - 1] : null
-			setMessages(filteredMessages)
-			socket.current?.emit('deleteMessage', {
-				deletedMessage: data.deletedMessage,
-				sender: session?.currentUser,
-				receiver: currentContact,
-				filteredMessages,
-			})
-			setContacts(prev =>
-				prev.map(item =>
-					item._id === currentContact?._id
-						? { ...item, lastMessage: item.lastMessage?._id === messageId ? lastMessage : item.lastMessage }
-						: item
-				)
-			)
-		} catch {
-			toast({ description: 'Cannot delete message', variant: 'destructive' })
-		}
-	}
+    const token = await generateToken(session?.currentUser?._id);
+    try {
+      const { data } = await axiosClient.post<{ updatedMessage: IMessage }>(
+        "/api/user/reaction",
+        { reaction, messageId },
+        { headers: { Authorization: `Bearer ${token}` } }
+      );
+      setMessages((prev) =>
+        prev.map((item) =>
+          item._id === data.updatedMessage._id
+            ? { ...item, reaction: data.updatedMessage.reaction }
+            : item
+        )
+      );
+      socket.current?.emit("updateMessage", {
+        updatedMessage: data.updatedMessage,
+        receiver: currentContact,
+        sender: session?.currentUser,
+      });
+    } catch {
+      toast({ description: "Cannot react to message", variant: "destructive" });
+    }
+  };
 
+  const onDeleteMessage = async (messageId: string) => {
+    const token = await generateToken(session?.currentUser?._id);
+    try {
+      const { data } = await axiosClient.delete<{ deletedMessage: IMessage }>(
+        `/api/user/message/${messageId}`,
+        {
+          headers: { Authorization: `Bearer ${token}` },
+        }
+      );
+      const filteredMessages = messages.filter(
+        (item) => item._id !== data.deletedMessage._id
+      );
+      const lastMessage = filteredMessages.length
+        ? filteredMessages[filteredMessages.length - 1]
+        : null;
+      setMessages(filteredMessages);
+      socket.current?.emit("deleteMessage", {
+        deletedMessage: data.deletedMessage,
+        sender: session?.currentUser,
+        receiver: currentContact,
+        filteredMessages,
+      });
+      setContacts((prev) =>
+        prev.map((item) =>
+          item._id === currentContact?._id
+            ? {
+                ...item,
+                lastMessage:
+                  item.lastMessage?._id === messageId
+                    ? lastMessage
+                    : item.lastMessage,
+              }
+            : item
+        )
+      );
+    } catch {
+      toast({ description: "Cannot delete message", variant: "destructive" });
+    }
+  };
 
   return (
     <>
-      <div className="w-80 h-screen border-r fixed inset-0 z-50">
+      <div className="w-80 h-screen border-r fixed inset-0 z-50 sidebar-custom-scrollbar overflow-y-scroll">
         {isLoading && (
           <div className="w-full h-[95vh] flex justify-center items-center">
             <Loader2 size={50} className="animate-spin" />
@@ -436,15 +503,16 @@ const { currentContact, editedMessage, setEditedMessage } = useCurrentContact()
 
         {currentContact?._id && (
           <div className="w-full relative">
-            <TopChat />
-           <Chat
-							messageForm={messageForm}
-							onSubmitMessage={onSubmitMessage}
-							messages={messages}
-							onReadMessages={onReadMessages}
-							onReaction={onReaction}
-							onDeleteMessage={onDeleteMessage}
-						/>
+            <TopChat messages={messages} />
+            <Chat
+              messageForm={messageForm}
+              onSubmitMessage={onSubmitMessage}
+              messages={messages}
+              onReadMessages={onReadMessages}
+              onReaction={onReaction}
+              onDeleteMessage={onDeleteMessage}
+              onTyping={onTyping}
+            />
           </div>
         )}
       </div>
@@ -458,7 +526,8 @@ interface GetSocketType {
   receiver: IUser;
   sender: IUser;
   newMessage: IMessage;
-  updatedMessage: IMessage
-	deletedMessage: IMessage
-	filteredMessages: IMessage[]
+  updatedMessage: IMessage;
+  deletedMessage: IMessage;
+  filteredMessages: IMessage[];
+  message: string;
 }
diff --git a/app/globals.css b/app/globals.css
index a798131..b1422d4 100644
--- a/app/globals.css
+++ b/app/globals.css
@@ -121,3 +121,16 @@
     @apply bg-background text-foreground;
   }
 }
+.sidebar-custom-scrollbar::-webkit-scrollbar {
+	width: 4px;
+	height: 4px;
+	border-radius: 1px;
+}
+
+.sidebar-custom-scrollbar::-webkit-scrollbar-thumb {
+	background: linear-gradient(129deg, #2b6cb0 0%, #2b6cb0 100%);
+}
+
+.sidebar-custom-scrollbar::-webkit-scrollbar-thumb:hover {
+	background: linear-gradient(129deg, #2b6cb0 0%, #2b6cb0 100%);
+}
\ No newline at end of file
diff --git a/app/layout.tsx b/app/layout.tsx
index 7cc7cc8..0ce2419 100644
--- a/app/layout.tsx
+++ b/app/layout.tsx
@@ -31,7 +31,7 @@ export default function RootLayout({
 <SessionProvider>
 			<QueryProvider>
 				<html lang='en' suppressHydrationWarning>
-					<body className={`${spaceGrotesk.variable} antialiased`} suppressHydrationWarning>
+					<body className={`${spaceGrotesk.variable} antialiased sidebar-custom-scrollbar`} suppressHydrationWarning>
 						<ThemeProvider attribute='class' defaultTheme='system' enableSystem disableTransitionOnChange>
 							<main>{children}</main>
 							<Toaster />
diff --git a/components/cards/message.card.tsx b/components/cards/message.card.tsx
index dd37ba5..0eb467d 100644
--- a/components/cards/message.card.tsx
+++ b/components/cards/message.card.tsx
@@ -7,6 +7,7 @@ import { Check, CheckCheck, Edit2, Trash } from 'lucide-react'
 import { useSession } from 'next-auth/react'
 import { FC } from 'react'
 import { ContextMenu, ContextMenuContent, ContextMenuItem, ContextMenuSeparator, ContextMenuTrigger } from '@/components/ui/context-menu'
+import Image from 'next/image'
 
 interface Props {
 	message: IMessage
@@ -37,7 +38,8 @@ const MessageCard: FC<Props> = ({ message, onReaction, onDeleteMessage }) => {
 							message.receiver._id === currentContact?._id ? 'bg-primary' : 'bg-secondary'
 						)}
 					>
-						<p className='text-sm text-white'>{message.text}</p>
+					{message.image && <Image src={message.image} alt={message.image} width={200} height={150} />}
+						{message.text.length > 0 && <p className='text-sm text-white'>{message.text}</p>}
 						<div className='right-1 bottom-0 absolute opacity-60 text-[9px] flex gap-[3px]'>
 							<p>{format(message.updatedAt, 'hh:mm')}</p>
 							<div className='self-end'>
@@ -69,10 +71,12 @@ const MessageCard: FC<Props> = ({ message, onReaction, onDeleteMessage }) => {
 				{message.sender._id !== currentContact?._id && (
 					<>
 						<ContextMenuSeparator />
-						<ContextMenuItem className='cursor-pointer' onClick={() => setEditedMessage(message)}>
-							<Edit2 size={14} className='mr-2' />
-							<span>Edit</span>
-						</ContextMenuItem>
+						{!message.image && (
+							<ContextMenuItem className='cursor-pointer' onClick={() => setEditedMessage(message)}>
+								<Edit2 size={14} className='mr-2' />
+								<span>Edit</span>
+							</ContextMenuItem>
+						)}
 						<ContextMenuItem className='cursor-pointer' onClick={() => onDeleteMessage(message._id)}>
 							<Trash size={14} className='mr-2' />
 							<span>Delete</span>
diff --git a/hooks/use-loading.ts b/hooks/use-loading.ts
index 9aecaa4..8bcd45e 100644
--- a/hooks/use-loading.ts
+++ b/hooks/use-loading.ts
@@ -7,6 +7,8 @@ type Store = {
 	setLoading: (isLoading: boolean) => void
 	loadMessages: boolean
 	setLoadMessages: (loadMessages: boolean) => void
+	typing: string
+	setTyping: (typing: string) => void
 }
 
 export const useLoading = create<Store>()(set => ({
@@ -16,4 +18,7 @@ export const useLoading = create<Store>()(set => ({
 	setLoading: isLoading => set({ isLoading }),
 	loadMessages: false,
 	setLoadMessages: loadMessages => set({ loadMessages }),
-}))
\ No newline at end of file
+	typing: '',
+	setTyping: typing => set({ typing }),
+}))
+
diff --git a/next.config.ts b/next.config.ts
index 6491b60..dea1f46 100644
--- a/next.config.ts
+++ b/next.config.ts
@@ -4,7 +4,10 @@ const nextConfig: NextConfig = {
 	reactStrictMode: false,
 	
  images: {
-		remotePatterns: [{ protocol: 'https', hostname: 'github.com', pathname: '**' }],
+		remotePatterns: [
+			{ protocol: 'https', hostname: 'github.com', pathname: '**' },
+			{ protocol: 'https', hostname: 'utfs.io', pathname: '**' },
+		],
 	},
 };
 
-- 
2.41.0


From 2a9ebe8029a04fc4c17020ae40a2768b39cc5b01 Mon Sep 17 00:00:00 2001
From: oscar-bek <salamov.behzod@gmail.com>
Date: Sun, 10 Aug 2025 16:38:44 +0900
Subject: [PATCH 16/16] feat: develop Auth provider & media query

---
 app/(chat)/_components/chat.tsx         | 145 +++++++------
 app/(chat)/_components/contact-list.tsx | 275 +++++++++++++-----------
 app/(chat)/_components/settings.tsx     | 112 +++++-----
 app/(chat)/_components/top-chat.tsx     |  52 +++--
 app/(chat)/page.tsx                     | 103 +++------
 app/auth/_components/social.tsx         |  52 +++--
 components/cards/message.card.tsx       |   4 +-
 hooks/use-loading.ts                    |  10 +-
 lib/auth-options.ts                     |  10 +
 next.config.ts                          |   2 -
 10 files changed, 415 insertions(+), 350 deletions(-)

diff --git a/app/(chat)/_components/chat.tsx b/app/(chat)/_components/chat.tsx
index 99c9975..8dc5903 100644
--- a/app/(chat)/_components/chat.tsx
+++ b/app/(chat)/_components/chat.tsx
@@ -5,7 +5,7 @@ import { Form, FormControl, FormField, FormItem } from "@/components/ui/form";
 import { Input } from "@/components/ui/input";
 import { messageSchema } from "@/lib/validation";
 import { Paperclip, Send, Smile } from "lucide-react";
-import { ChangeEvent, FC, useEffect, useRef, useState } from 'react'
+import { ChangeEvent, FC, useEffect, useRef, useState } from "react";
 import { UseFormReturn } from "react-hook-form";
 import { z } from "zod";
 import emojies from "@emoji-mart/data";
@@ -20,24 +20,38 @@ import { useLoading } from "@/hooks/use-loading";
 import { IMessage } from "@/types";
 import { useSession } from "next-auth/react";
 import { useCurrentContact } from "@/hooks/use-current";
-import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'
-import { UploadDropzone } from '@/lib/uploadthing'
+import {
+  Dialog,
+  DialogContent,
+  DialogHeader,
+  DialogTitle,
+  DialogTrigger,
+} from "@/components/ui/dialog";
+import { UploadDropzone } from "@/lib/uploadthing";
 
 interface Props {
- onSubmitMessage: (values: z.infer<typeof messageSchema>) => Promise<void>
-	onReadMessages: () => Promise<void>
-	onReaction: (reaction: string, messageId: string) => Promise<void>
-	onDeleteMessage: (messageId: string) => Promise<void>
+  onSubmitMessage: (values: z.infer<typeof messageSchema>) => Promise<void>;
+  onReadMessages: () => Promise<void>;
+  onReaction: (reaction: string, messageId: string) => Promise<void>;
+  onDeleteMessage: (messageId: string) => Promise<void>;
   messageForm: UseFormReturn<z.infer<typeof messageSchema>>;
   messages: IMessage[];
-  onTyping: (e: ChangeEvent<HTMLInputElement>) => void
+  onTyping: (e: ChangeEvent<HTMLInputElement>) => void;
 }
 
-const Chat: FC<Props> = ({ onSubmitMessage, messageForm, messages, onReadMessages, onReaction, onDeleteMessage, onTyping }) => {
-	const [open, setOpen] = useState(false)
+const Chat: FC<Props> = ({
+  onSubmitMessage,
+  messageForm,
+  messages,
+  onReadMessages,
+  onReaction,
+  onDeleteMessage,
+  onTyping,
+}) => {
+  const [open, setOpen] = useState(false);
 
   const { loadMessages } = useLoading();
-const { editedMessage, setEditedMessage } = useCurrentContact();
+  const { editedMessage, setEditedMessage } = useCurrentContact();
   const { data: session } = useSession();
   const { currentContact } = useCurrentContact();
   const { resolvedTheme } = useTheme();
@@ -46,27 +60,21 @@ const { editedMessage, setEditedMessage } = useCurrentContact();
   const scrollRef = useRef<HTMLFormElement | null>(null);
   const prevContactIdRef = useRef<string | null>(null);
 
-  // Just current user and current contact's messages filtering
-  const filteredMessages = messages.filter((message) => {
-    const currentUserId = session?.currentUser?._id;
-    const contactId = currentContact?._id;
-
-    // Check if the message is between current user and current contact
-    const isRelevantMessage =
-      (message.sender._id === currentUserId &&
-        message.receiver._id === contactId) ||
-      (message.sender._id === contactId &&
-        message.receiver._id === currentUserId);
-
-    return isRelevantMessage;
-  });
+  const filteredMessages = messages.filter(
+    (message, index, self) =>
+      ((message.sender._id === session?.currentUser?._id &&
+        message.receiver._id === currentContact?._id) ||
+        (message.sender._id === currentContact?._id &&
+          message.receiver._id === session?.currentUser?._id)) &&
+      index === self.findIndex((m) => m._id === message._id)
+  );
 
   useEffect(() => {
-		if (editedMessage) {
-			messageForm.setValue('text', editedMessage.text)
-			scrollRef.current?.scrollIntoView({ behavior: 'smooth' })
-		}
-	}, [editedMessage])
+    if (editedMessage) {
+      messageForm.setValue("text", editedMessage.text);
+      scrollRef.current?.scrollIntoView({ behavior: "smooth" });
+    }
+  }, [editedMessage]);
 
   // FIXED: UseEffect for scrolling and message input
   useEffect(() => {
@@ -77,10 +85,11 @@ const { editedMessage, setEditedMessage } = useCurrentContact();
   useEffect(() => {
     const currentContactId = currentContact?._id;
     // Contact is updated or new messages arrive
-    if (currentContactId && (
-      prevContactIdRef.current !== currentContactId || // Contact is updated
-      filteredMessages.length > 0 // New messages are available
-    )) {
+    if (
+      currentContactId &&
+      (prevContactIdRef.current !== currentContactId || // Contact is updated
+        filteredMessages.length > 0) // New messages are available
+    ) {
       onReadMessages();
       prevContactIdRef.current = currentContactId;
     }
@@ -110,19 +119,27 @@ const { editedMessage, setEditedMessage } = useCurrentContact();
   };
 
   return (
-    <div className='flex flex-col justify-end z-40 min-h-[92vh] sidebar-custom-scrollbar overflow-y-scroll'>
+    <div className="flex flex-col justify-end z-40 min-h-[92vh] sidebar-custom-scrollbar overflow-y-scroll">
       {/* Loading */}
       {loadMessages && <ChatLoading />}
 
       {/* Messages - just filtered messages*/}
-      {filteredMessages.map((message) => (
-       <MessageCard key={message._id} message={message} onReaction={onReaction} onDeleteMessage={onDeleteMessage} />
+      {filteredMessages.map((message, index) => (
+        <MessageCard
+          key={index}
+          message={message}
+          onReaction={onReaction}
+          onDeleteMessage={onDeleteMessage}
+        />
       ))}
 
       {/* Start conversation */}
       {filteredMessages.length === 0 && (
         <div className="w-full h-[88vh] flex items-center justify-center">
-         <div className='text-[100px] cursor-pointer' onClick={() => onSubmitMessage({ text: '✋' })}>
+          <div
+            className="text-[100px] cursor-pointer"
+            onClick={() => onSubmitMessage({ text: "✋" })}
+          >
             ✋
           </div>
         </div>
@@ -135,26 +152,26 @@ const { editedMessage, setEditedMessage } = useCurrentContact();
           className="w-full flex relative"
           ref={scrollRef}
         >
-         <Dialog open={open} onOpenChange={setOpen}>
-						<DialogTrigger asChild>
-							<Button size={'icon'} type='button' variant={'secondary'}>
-								<Paperclip />
-							</Button>
-						</DialogTrigger>
-						<DialogContent>
-							<DialogHeader>
-								<DialogTitle />
-							</DialogHeader>
-							<UploadDropzone
-								endpoint={'imageUploader'}
-								onClientUploadComplete={res => {
-									onSubmitMessage({ text: '', image: res[0].url })
-									setOpen(false)
-								}}
-								config={{ appendOnPaste: true, mode: 'auto' }}
-							/>
-						</DialogContent>
-					</Dialog>
+          <Dialog open={open} onOpenChange={setOpen}>
+            <DialogTrigger asChild>
+              <Button size={"icon"} type="button" variant={"secondary"}>
+                <Paperclip />
+              </Button>
+            </DialogTrigger>
+            <DialogContent>
+              <DialogHeader>
+                <DialogTitle />
+              </DialogHeader>
+              <UploadDropzone
+                endpoint={"imageUploader"}
+                onClientUploadComplete={(res) => {
+                  onSubmitMessage({ text: "", image: res[0].url });
+                  setOpen(false);
+                }}
+                config={{ appendOnPaste: true, mode: "auto" }}
+              />
+            </DialogContent>
+          </Dialog>
 
           <FormField
             control={messageForm.control}
@@ -167,11 +184,11 @@ const { editedMessage, setEditedMessage } = useCurrentContact();
                     placeholder="Type a message"
                     value={field.value}
                     onBlur={() => field.onBlur()}
-                   onChange={e => {
-											field.onChange(e.target.value)
-											onTyping(e)
-											if (e.target.value === '') setEditedMessage(null)
-										}}
+                    onChange={(e) => {
+                      field.onChange(e.target.value);
+                      onTyping(e);
+                      if (e.target.value === "") setEditedMessage(null);
+                    }}
                     ref={inputRef}
                   />
                 </FormControl>
@@ -204,4 +221,4 @@ const { editedMessage, setEditedMessage } = useCurrentContact();
   );
 };
 
-export default Chat;
\ No newline at end of file
+export default Chat;
diff --git a/app/(chat)/_components/contact-list.tsx b/app/(chat)/_components/contact-list.tsx
index 1c3ae8c..f145102 100644
--- a/app/(chat)/_components/contact-list.tsx
+++ b/app/(chat)/_components/contact-list.tsx
@@ -1,134 +1,161 @@
-'use client'
+"use client";
 
-import { IUser } from '@/types'
-import React, { FC, useState } from 'react'
-import Settings from './settings'
-import { Input } from '@/components/ui/input'
-import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
-import { useRouter } from 'next/navigation'
-import { cn, sliceText } from '@/lib/utils'
-import { useCurrentContact } from '@/hooks/use-current'
-import { useAuth } from '@/hooks/use-auth'
-import { format } from 'date-fns'
-import { CONST } from '@/lib/constants'
-import Image from 'next/image'
-import { useSession } from 'next-auth/react'
+import { IUser } from "@/types";
+import React, { FC, useState } from "react";
+import Settings from "./settings";
+import { Input } from "@/components/ui/input";
+import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
+import { cn, sliceText } from "@/lib/utils";
+import { useCurrentContact } from "@/hooks/use-current";
+import { useAuth } from "@/hooks/use-auth";
+import { format } from "date-fns";
+import { CONST } from "@/lib/constants";
+import Image from "next/image";
+import { useSession } from "next-auth/react";
 interface Props {
-	contacts: IUser[]
+  contacts: IUser[];
 }
 const ContactList: FC<Props> = ({ contacts }) => {
-	const [query, setQuery] = useState('')
+  const [query, setQuery] = useState("");
 
-	const { onlineUsers } = useAuth()
-	const router = useRouter()
-	const { setCurrentContact, currentContact } = useCurrentContact()
-const { data: session } = useSession()
-	const filteredContacts = contacts
-		.filter(contact => contact.email.toLowerCase().includes(query.toLowerCase()))
-		.sort((a, b) => {
-			const dateA = a.lastMessage?.updatedAt ? new Date(a.lastMessage.updatedAt).getTime() : 0
-			const dateB = b.lastMessage?.updatedAt ? new Date(b.lastMessage.updatedAt).getTime() : 0
-			return dateB - dateA
-		})
-	const renderContact = (contact: IUser) => {
-		const onChat = () => {
-			if (currentContact?._id === contact._id) return
-			setCurrentContact(contact)
-			router.push(`/?chat=${contact._id}`)
-		}
+  const { onlineUsers } = useAuth();
+  const { setCurrentContact, currentContact } = useCurrentContact();
+  const { data: session } = useSession();
+  const filteredContacts = contacts
+    .filter((contact) =>
+      contact.email.toLowerCase().includes(query.toLowerCase())
+    )
+    .sort((a, b) => {
+      const dateA = a.lastMessage?.updatedAt
+        ? new Date(a.lastMessage.updatedAt).getTime()
+        : 0;
+      const dateB = b.lastMessage?.updatedAt
+        ? new Date(b.lastMessage.updatedAt).getTime()
+        : 0;
+      return dateB - dateA;
+    });
+  const renderContact = (contact: IUser) => {
+    const onChat = () => {
+      if (currentContact?._id === contact._id) return;
+      setCurrentContact(contact);
+    };
 
-		return (
-			<div
-				className={cn(
-					'flex justify-between items-center cursor-pointer hover:bg-secondary/50 p-2',
-					currentContact?._id === contact._id && 'bg-secondary/50'
-				)}
-				onClick={onChat}
-			>
-				<div className='flex items-center gap-2'>
-					<div className='relative'>
-						<Avatar className='z-40'>
-							<AvatarImage src={contact.avatar} alt={contact.email} className='object-cover' />
-							<AvatarFallback className='uppercase'>{contact.email[0]}</AvatarFallback>
-						</Avatar>
-						{onlineUsers.some(user => user._id === contact._id) && (
-							<div className='size-3 bg-green-500 absolute rounded-full bottom-0 right-0 !z-40' />
-						)}
-					</div>
+    return (
+      <div
+        className={cn(
+          "flex justify-between items-center cursor-pointer hover:bg-secondary/50 md:p-2",
+          currentContact?._id === contact._id && "bg-secondary/50"
+        )}
+        onClick={onChat}
+      >
+        <div className="flex items-center gap-2">
+          <div className="relative">
+            <Avatar className="z-40">
+              <AvatarImage
+                src={contact.avatar}
+                alt={contact.email}
+                className="object-cover"
+              />
+              <AvatarFallback className="uppercase">
+                {contact.email[0]}
+              </AvatarFallback>
+            </Avatar>
+            {onlineUsers.some((user) => user._id === contact._id) && (
+              <div className="size-3 bg-green-500 absolute rounded-full bottom-0 right-0 !z-40" />
+            )}
+          </div>
 
-					<div>
-						<h2 className='capitalize line-clamp-1 text-sm'>{contact.email.split('@')[0]}</h2>
-						{contact.lastMessage?.image && (
-							<div className='flex items-center gap-1'>
-								<Image src={contact.lastMessage.image} alt={contact.email} width={20} height={20} className='object-cover' />
-								<p
-									className={cn(
-										'text-xs line-clamp-1',
-										contact.lastMessage
-											? contact.lastMessage?.sender._id === session?.currentUser?._id
-												? 'text-muted-foreground'
-												: contact.lastMessage.status !== CONST.READ
-												? 'text-foreground'
-												: 'text-muted-foreground'
-											: 'text-muted-foreground'
-									)}
-								>
-									Photo
-								</p>
-							</div>
-						)}
-						{!contact.lastMessage?.image && (
-							<p
-								className={cn(
-									'text-xs line-clamp-1',
-									contact.lastMessage
-										? contact.lastMessage?.sender._id === session?.currentUser?._id
-											? 'text-muted-foreground'
-											: contact.lastMessage.status !== CONST.READ
-											? 'text-foreground'
-											: 'text-muted-foreground'
-									: 'text-muted-foreground'
-								)}
-							>
-								{contact.lastMessage ? sliceText(contact.lastMessage.text, 25) : 'No messages yet'}
-							</p>
-						)}
-					</div>
-				</div>
-				{contact.lastMessage && (
-					<div className='self-end'>
-						<p className='text-xs text-muted-foreground'>{format(contact.lastMessage.updatedAt, 'hh:mm a')}</p>
-					</div>
-				)}
-			</div>
-		)
-	}
+          <div className="max-md:hidden">
+            <h2 className="capitalize line-clamp-1 text-sm">
+              {contact.email.split("@")[0]}
+            </h2>
+            {contact.lastMessage?.image && (
+              <div className="flex items-center gap-1">
+                <Image
+                  src={contact.lastMessage.image}
+                  alt={contact.email}
+                  width={20}
+                  height={20}
+                  className="object-cover"
+                />
+                <p
+                  className={cn(
+                    "text-xs line-clamp-1",
+                    contact.lastMessage
+                      ? contact.lastMessage?.sender._id ===
+                        session?.currentUser?._id
+                        ? "text-muted-foreground"
+                        : contact.lastMessage.status !== CONST.READ
+                        ? "text-foreground"
+                        : "text-muted-foreground"
+                      : "text-muted-foreground"
+                  )}
+                >
+                  Photo
+                </p>
+              </div>
+            )}
+            {!contact.lastMessage?.image && (
+              <p
+                className={cn(
+                  "text-xs line-clamp-1",
+                  contact.lastMessage
+                    ? contact.lastMessage?.sender._id ===
+                      session?.currentUser?._id
+                      ? "text-muted-foreground"
+                      : contact.lastMessage.status !== CONST.READ
+                      ? "text-foreground"
+                      : "text-muted-foreground"
+                    : "text-muted-foreground"
+                )}
+              >
+                {contact.lastMessage
+                  ? sliceText(contact.lastMessage.text, 25)
+                  : "No messages yet"}
+              </p>
+            )}
+          </div>
+        </div>
+        {contact.lastMessage && (
+          <div className="self-end max-md:hidden">
+            <p className="text-xs text-muted-foreground">
+              {format(contact.lastMessage.updatedAt, "hh:mm a")}
+            </p>
+          </div>
+        )}
+      </div>
+    );
+  };
 
-	return (
-		<>
-			{/* Top bar */}
-			<div className='flex items-center bg-background pl-2 sticky top-0 z-50'>
-				<Settings />
-				<div className='m-2 w-full'>
-					<Input
-						className='bg-secondary'
-						value={query}
-						onChange={e => setQuery(e.target.value)}
-						type='text'
-						placeholder='Search...'
-					/>
-				</div>
-			</div>
+  return (
+    <>
+      {/* Top bar */}
+      <div className="flex items-center bg-background md:pl-2 sticky top-0 z-50">
+        <Settings />
+        <div className="m-2 w-full max-md:hidden">
+          <Input
+            className="bg-secondary"
+            value={query}
+            onChange={(e) => setQuery(e.target.value)}
+            type="text"
+            placeholder="Search..."
+          />
+        </div>
+      </div>
 
-			{filteredContacts.length === 0 ? (
-				<div className='w-full h-[95vh] flex justify-center items-center text-center text-muted-foreground'>
-					<p>Contact list is empty</p>
-				</div>
-			) : (
-				filteredContacts.map(contact => <div key={contact._id}>{renderContact(contact)}</div>)
-			)}
-		</>
-	)
-}
+      <div className="max-md:mt-2">
+        {filteredContacts.length === 0 ? (
+          <div className="w-full h-[95vh] flex justify-center items-center text-center text-muted-foreground">
+            <p>Contact list is empty</p>
+          </div>
+        ) : (
+          filteredContacts.map((contact) => (
+            <div key={contact._id}>{renderContact(contact)}</div>
+          ))
+        )}
+      </div>
+    </>
+  );
+};
 
-export default ContactList
\ No newline at end of file
+export default ContactList;
diff --git a/app/(chat)/_components/settings.tsx b/app/(chat)/_components/settings.tsx
index 67a18a4..4496558 100644
--- a/app/(chat)/_components/settings.tsx
+++ b/app/(chat)/_components/settings.tsx
@@ -24,11 +24,11 @@ import {
   SheetTitle,
 } from "@/components/ui/sheet";
 import { Switch } from "@/components/ui/switch";
-import { toast } from '@/hooks/use-toast'
-import { axiosClient } from '@/http/axios'
-import { generateToken } from '@/lib/generate-token'
-import { UploadButton } from '@/lib/uploadthing'
-import { useMutation } from '@tanstack/react-query'
+import { toast } from "@/hooks/use-toast";
+import { axiosClient } from "@/http/axios";
+import { generateToken } from "@/lib/generate-token";
+import { UploadButton } from "@/lib/uploadthing";
+import { useMutation } from "@tanstack/react-query";
 import {
   LogIn,
   Menu,
@@ -39,39 +39,41 @@ import {
   UserPlus,
   VolumeOff,
 } from "lucide-react";
-import { signOut, useSession } from 'next-auth/react'
+import { signOut, useSession } from "next-auth/react";
 import { useTheme } from "next-themes";
 import { useState } from "react";
 
 const Settings = () => {
   const [isProfileOpen, setIsProfileOpen] = useState(false);
   const { resolvedTheme, setTheme } = useTheme();
- const { data: session, update } = useSession()
+  const { data: session, update } = useSession();
 
-	const { mutate, isPending } = useMutation({
-	mutationFn: async (payload: IPayload) => {
-			const token = await generateToken(session?.currentUser?._id)
-			const { data } = await axiosClient.put('/api/user/profile', payload, { headers: { Authorization: `Bearer ${token}` } })
-			return data
-		},
-		onSuccess: () => {
-			toast({ description: 'Profile updated successfully' })
-			update()
-		},
-	})
+  const { mutate, isPending } = useMutation({
+    mutationFn: async (payload: IPayload) => {
+      const token = await generateToken(session?.currentUser?._id);
+      const { data } = await axiosClient.put("/api/user/profile", payload, {
+        headers: { Authorization: `Bearer ${token}` },
+      });
+      return data;
+    },
+    onSuccess: () => {
+      toast({ description: "Profile updated successfully" });
+      update();
+    },
+  });
 
   return (
     <>
       <Popover>
         <PopoverTrigger asChild>
-          <Button size={"icon"} variant={"secondary"}>
+          <Button size={"icon"} variant={"secondary"} className="max-md:w-full">
             <Menu />
           </Button>
         </PopoverTrigger>
         <PopoverContent className="p-0 w-80">
-         <h2 className='pt-2 pl-2 text-muted-foreground text-sm'>
-            Settings: <span className='text-white'>{session?.user?.email}</span>
-					</h2>
+          <h2 className="pt-2 pl-2 text-muted-foreground text-sm">
+            Settings: <span className="text-white">{session?.user?.email}</span>
+          </h2>
           <div className="my-2">
             <Separator />
           </div>
@@ -86,10 +88,10 @@ const Settings = () => {
               </div>
             </div>
 
-           <div
-							className='flex justify-between items-center p-2 hover:bg-secondary cursor-pointer'
-							onClick={() => window.location.reload()}
-						>
+            <div
+              className="flex justify-between items-center p-2 hover:bg-secondary cursor-pointer"
+              onClick={() => window.location.reload()}
+            >
               <div className="flex items-center gap-1">
                 <UserPlus size={16} />
                 <span className="text-sm">Create contact</span>
@@ -101,11 +103,13 @@ const Settings = () => {
                 <VolumeOff size={16} />
                 <span className="text-sm">Mute</span>
               </div>
-             <Switch
-								checked={!session?.currentUser?.muted}
-								onCheckedChange={() => mutate({ muted: !session?.currentUser?.muted })}
-								disabled={isPending}
-							/>
+              <Switch
+                checked={!session?.currentUser?.muted}
+                onCheckedChange={() =>
+                  mutate({ muted: !session?.currentUser?.muted })
+                }
+                disabled={isPending}
+              />
             </div>
 
             <div className="flex justify-between items-center p-2 hover:bg-secondary">
@@ -126,7 +130,10 @@ const Settings = () => {
                 }
               />
             </div>
-              <div className='flex justify-between items-center bg-destructive p-2 cursor-pointer' onClick={() => signOut()}>
+            <div
+              className="flex justify-between items-center bg-destructive p-2 cursor-pointer"
+              onClick={() => signOut()}
+            >
               <div className="flex items-center gap-1">
                 <LogIn size={16} />
                 <span className="text-sm">Logout</span>
@@ -137,7 +144,7 @@ const Settings = () => {
       </Popover>
 
       <Sheet open={isProfileOpen} onOpenChange={setIsProfileOpen}>
-        <SheetContent side={"left"} className="w-80 p-2">
+        <SheetContent side={"left"} className="w-80 p-2 max-md:w-full">
           <>
             <SheetHeader>
               <SheetTitle className="text-2xl">My profile</SheetTitle>
@@ -150,23 +157,30 @@ const Settings = () => {
               <Separator />
             </div>
 
-            <div className="mx-auto w-1/2 h-36 relative">
+            <div className="mx-auto w-1/2 max-md:w-2/5 h-36 relative">
               <Avatar className="w-full h-36">
-                <AvatarImage src={session?.currentUser?.avatar} alt={session?.currentUser?.email} className='object-cover' />
+                <AvatarImage
+                  src={session?.currentUser?.avatar}
+                  alt={session?.currentUser?.email}
+                  className="object-cover"
+                />
                 <AvatarFallback className="text-6xl uppercase font-spaceGrotesk">
-                  SB
+                  {session?.currentUser?.email.charAt(0)}
                 </AvatarFallback>
               </Avatar>
-             <UploadButton
-							endpoint='imageUploader'
-              onClientUploadComplete={(res: Array<{ url: string }>) => {
-                mutate({ avatar: res[0].url })
-              }}
-							config={{ appendOnPaste: true, mode: 'auto' }}
-							className='absolute right-0 bottom-0'
-							appearance={{ allowedContent: { display: 'none' }, button: { width: 40, height: 40, borderRadius: '100%' } }}
-							content={{ button: <Upload size={16} /> }}
-						/>
+              <UploadButton
+                endpoint="imageUploader"
+                onClientUploadComplete={(res: Array<{ url: string }>) => {
+                  mutate({ avatar: res[0].url });
+                }}
+                config={{ appendOnPaste: true, mode: "auto" }}
+                className="absolute right-0 bottom-0"
+                appearance={{
+                  allowedContent: { display: "none" },
+                  button: { width: 40, height: 40, borderRadius: "100%" },
+                }}
+                content={{ button: <Upload size={16} /> }}
+              />
             </div>
 
             <Accordion type="single" collapsible className="mt-4">
@@ -216,6 +230,6 @@ const Settings = () => {
 export default Settings;
 
 interface IPayload {
-	muted?: boolean
-	avatar?: string
-}
\ No newline at end of file
+  muted?: boolean;
+  avatar?: string;
+}
diff --git a/app/(chat)/_components/top-chat.tsx b/app/(chat)/_components/top-chat.tsx
index eec6d3e..63852ee 100644
--- a/app/(chat)/_components/top-chat.tsx
+++ b/app/(chat)/_components/top-chat.tsx
@@ -4,17 +4,16 @@ import { Separator } from '@/components/ui/separator'
 import { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from '@/components/ui/sheet'
 import { useAuth } from '@/hooks/use-auth'
 import { useCurrentContact } from '@/hooks/use-current'
-import { Settings2 } from 'lucide-react'
-import Image from 'next/image'
 import { useLoading } from '@/hooks/use-loading'
 import { sliceText } from '@/lib/utils'
 import { IMessage } from '@/types'
+import { Settings2 } from 'lucide-react'
+import Image from 'next/image'
 import { FC } from 'react'
 
 interface Props {
 	messages: IMessage[]
 }
-
 const TopChat: FC<Props> = ({ messages }) => {
 	const { currentContact } = useCurrentContact()
 	const { onlineUsers } = useAuth()
@@ -29,19 +28,35 @@ const TopChat: FC<Props> = ({ messages }) => {
 				</Avatar>
 				<div className='ml-2'>
 					<h2 className='font-medium text-sm'>{currentContact?.email}</h2>
-					{/* IsTyping */}
-					{typing.length > 0 ? (
-						<div className='text-xs flex items-center gap-1 text-muted-foreground'>
-							<p className='text-secondary-foreground animate-pulse line-clamp-1'>{sliceText(typing, 20)}</p>
-							<div className='self-end mb-1'>
-								<div className='flex justify-center items-center gap-1'>
-									<div className='w-1 h-1 bg-secondary-foreground rounded-full animate-bounce [animation-delay:-0.3s]'></div>
-									<div className='w-1 h-1 bg-secondary-foreground rounded-full animate-bounce [animation-delay:-0.10s]'></div>
-									<div className='w-1 h-1 bg-secondary-foreground rounded-full animate-bounce [animation-delay:-0.15s]'></div>
+
+					{currentContact?._id === typing?.sender?._id
+						? typing?.message.length > 0 && (
+								<div className='text-xs flex items-center gap-1 text-muted-foreground'>
+									<p className='text-secondary-foreground animate-pulse line-clamp-1'>{sliceText(typing?.message, 20)}</p>
+									<div className='self-end mb-1'>
+										<div className='flex justify-center items-center gap-1'>
+											<div className='w-1 h-1 bg-secondary-foreground rounded-full animate-bounce [animation-delay:-0.3s]'></div>
+											<div className='w-1 h-1 bg-secondary-foreground rounded-full animate-bounce [animation-delay:-0.10s]'></div>
+											<div className='w-1 h-1 bg-secondary-foreground rounded-full animate-bounce [animation-delay:-0.15s]'></div>
+										</div>
+									</div>
 								</div>
-							</div>
-						</div>
-					)  : (
+						  )
+						: typing.message && (
+								<p className='text-xs'>
+									{onlineUsers.some(user => user._id === currentContact?._id) ? (
+										<>
+											<span className='text-green-500'>●</span> Online
+										</>
+									) : (
+										<>
+											<span className='text-muted-foreground'>●</span> Last seen recently
+										</>
+									)}
+								</p>
+						  )}
+
+					{!typing.message && (
 						<p className='text-xs'>
 							{onlineUsers.some(user => user._id === currentContact?._id) ? (
 								<>
@@ -54,7 +69,6 @@ const TopChat: FC<Props> = ({ messages }) => {
 							)}
 						</p>
 					)}
-				
 				</div>
 			</div>
 
@@ -64,11 +78,11 @@ const TopChat: FC<Props> = ({ messages }) => {
 						<Settings2 />
 					</Button>
 				</SheetTrigger>
-			<SheetContent className='w-80 p-2 overflow-y-scroll sidebar-custom-scrollbar'>
+				<SheetContent className='w-80 max-md:w-full p-2 overflow-y-scroll sidebar-custom-scrollbar'>
 					<SheetHeader>
 						<SheetTitle />
 					</SheetHeader>
-					<div className='mx-auto w-1/2 h-36 relative'>
+					<div className='mx-auto w-1/2 max-md:w-1/4 h-36 relative'>
 						<Avatar className='w-full h-36'>
 							<AvatarImage src={currentContact?.avatar} alt={currentContact?.email} className='object-cover' />
 							<AvatarFallback className='text-6xl uppercase font-spaceGrotesk'>{currentContact?.email[0]}</AvatarFallback>
@@ -104,7 +118,7 @@ const TopChat: FC<Props> = ({ messages }) => {
 
 						<h2 className='text-xl'>Image</h2>
 						<div className='flex flex-col space-y-2'>
-						{messages
+							{messages
 								.filter(msg => msg.image)
 								.map(msg => (
 									<div className='w-full h-36 relative' key={msg._id}>
diff --git a/app/(chat)/page.tsx b/app/(chat)/page.tsx
index ff464a0..d6b13c3 100644
--- a/app/(chat)/page.tsx
+++ b/app/(chat)/page.tsx
@@ -3,7 +3,6 @@
 import { Loader2 } from "lucide-react";
 import ContactList from "./_components/contact-list";
 import { ChangeEvent, useEffect, useRef, useState } from "react";
-import { useRouter, useSearchParams } from "next/navigation";
 import AddContact from "./_components/add-contact";
 import { useCurrentContact } from "@/hooks/use-current";
 import { useForm } from "react-hook-form";
@@ -35,12 +34,8 @@ const HomePage = () => {
   const { setOnlineUsers } = useAuth();
   const { playSound } = useAudio();
 
-  const router = useRouter();
-  const searchParams = useSearchParams();
   const socket = useRef<ReturnType<typeof io> | null>(null);
 
-  const CONTACT_ID = searchParams.get("chat");
-
   const contactForm = useForm<z.infer<typeof emailSchema>>({
     resolver: zodResolver(emailSchema),
     defaultValues: { email: "" },
@@ -79,15 +74,7 @@ const HomePage = () => {
           headers: { Authorization: `Bearer ${token}` },
         }
       );
-
-      setMessages((prev) => {
-        const merged = [...prev, ...data.messages];
-        const unique = merged.filter(
-          (m, i, arr) => i === arr.findIndex((x) => x._id === m._id)
-        );
-        return unique;
-      });
-
+      setMessages(data.messages);
       setContacts((prev) =>
         prev.map((item) =>
           item._id === currentContact?._id
@@ -100,8 +87,7 @@ const HomePage = () => {
             : item
         )
       );
-    } catch (error) {
-      console.error("Xabarlarni olishda xatolik:", error);
+    } catch {
       toast({ description: "Cannot fetch messages", variant: "destructive" });
     } finally {
       setLoadMessages(false);
@@ -109,7 +95,6 @@ const HomePage = () => {
   };
 
   useEffect(() => {
-    router.replace("/");
     socket.current = io("ws://localhost:5000");
   }, []);
 
@@ -138,14 +123,10 @@ const HomePage = () => {
       socket.current?.on(
         "getNewMessage",
         ({ newMessage, sender, receiver }: GetSocketType) => {
-          console.log(newMessage);
-          console.log("CONTACT_ID", CONTACT_ID);
-
-          setTyping("");
-          if (CONTACT_ID === sender._id) {
+          setTyping({ message: "", sender: null });
+          if (currentContact?._id === newMessage.sender._id) {
             setMessages((prev) => [...prev, newMessage]);
           }
-
           setContacts((prev) => {
             return prev.map((contact) => {
               if (contact._id === sender._id) {
@@ -154,7 +135,7 @@ const HomePage = () => {
                   lastMessage: {
                     ...newMessage,
                     status:
-                      CONTACT_ID === sender._id
+                      currentContact?._id === sender._id
                         ? CONST.READ
                         : newMessage.status,
                   },
@@ -163,35 +144,25 @@ const HomePage = () => {
               return contact;
             });
           });
-          // toast({
-          //   title: "New message",
-          //   description: `${sender?.email.split("@")[0]} sent you a message`,
-          // });
           if (!receiver.muted) {
             playSound(receiver.notificationSound);
           }
         }
       );
 
-      socket.current?.on("getReadMessages", (readMessages: IMessage[]) => {
+      socket.current?.on("getReadMessages", (messages: IMessage[]) => {
         setMessages((prev) => {
-          const updatedMessages = prev.map((item) => {
-            const readMessage = readMessages.find(
-              (msg) => msg._id === item._id
-            );
-            if (readMessage) {
-              return { ...item, status: CONST.READ };
-            }
-            return item;
+          return prev.map((item) => {
+            const message = messages.find((msg) => msg._id === item._id);
+            return message ? { ...item, status: CONST.READ } : item;
           });
-          return updatedMessages;
         });
       });
 
       socket.current?.on(
         "getUpdatedMessage",
         ({ updatedMessage, sender }: GetSocketType) => {
-          setTyping('')
+          setTyping({ message: "", sender: null });
           setMessages((prev) =>
             prev.map((item) =>
               item._id === updatedMessage._id
@@ -219,12 +190,6 @@ const HomePage = () => {
         }
       );
 
-      socket.current?.on('getTyping', ({ message, sender }: GetSocketType) => {
-				if (CONTACT_ID === sender._id) {
-					setTyping(message)
-				}
-			})
-
       socket.current?.on(
         "getDeletedMessage",
         ({ deletedMessage, sender, filteredMessages }: GetSocketType) => {
@@ -249,8 +214,14 @@ const HomePage = () => {
           );
         }
       );
+
+      socket.current?.on("getTyping", ({ message, sender }: GetSocketType) => {
+        if (currentContact?._id === sender._id) {
+          setTyping({ message, sender });
+        }
+      });
     }
-  }, [session?.currentUser, socket, CONTACT_ID]);
+  }, [session?.currentUser, currentContact?._id]);
 
   useEffect(() => {
     if (currentContact?._id) {
@@ -258,10 +229,6 @@ const HomePage = () => {
     }
   }, [currentContact]);
 
-  const onTyping = (e: ChangeEvent<HTMLInputElement>) => {
-		socket.current?.emit('typing', { receiver: currentContact, sender: session?.currentUser, message: e.target.value })
-	}
-
   const onCreateContact = async (values: z.infer<typeof emailSchema>) => {
     setCreating(true);
     const token = await generateToken(session?.currentUser?._id);
@@ -314,11 +281,7 @@ const HomePage = () => {
         { ...values, receiver: currentContact?._id },
         { headers: { Authorization: `Bearer ${token}` } }
       );
-      setMessages((prev) => {
-        const exists = prev.some((item) => item._id === data.newMessage._id);
-        return exists ? prev : [...prev, data.newMessage];
-      });
-
+      setMessages((prev) => [...prev, data.newMessage]);
       setContacts((prev) =>
         prev.map((item) =>
           item._id === currentContact?._id
@@ -335,6 +298,9 @@ const HomePage = () => {
         receiver: data.receiver,
         sender: data.sender,
       });
+      if (!data.sender.muted) {
+        playSound(data.sender.sendingSound);
+      }
     } catch {
       toast({ description: "Cannot send message", variant: "destructive" });
     } finally {
@@ -388,7 +354,6 @@ const HomePage = () => {
       .filter((message) => message.status !== CONST.READ);
 
     if (receivedMessages.length === 0) return;
-
     const token = await generateToken(session?.currentUser?._id);
     try {
       const { data } = await axiosClient.post<{ messages: IMessage[] }>(
@@ -396,23 +361,17 @@ const HomePage = () => {
         { messages: receivedMessages },
         { headers: { Authorization: `Bearer ${token}` } }
       );
-
-      // Show message if sending to Socket
-      const socketData = {
+      socket.current?.emit("readMessages", {
         messages: data.messages,
-        receiver: currentContact, // This is the receiver (A user)
-      };
-
-      socket.current?.emit("readMessages", socketData);
-
+        receiver: currentContact,
+      });
       setMessages((prev) => {
         return prev.map((item) => {
           const message = data.messages.find((msg) => msg._id === item._id);
           return message ? { ...item, status: CONST.READ } : item;
         });
       });
-    } catch (error) {
-      console.error("onReadMessages xatolik:", error);
+    } catch {
       toast({ description: "Cannot read messages", variant: "destructive" });
     }
   };
@@ -482,9 +441,17 @@ const HomePage = () => {
     }
   };
 
+  const onTyping = (e: ChangeEvent<HTMLInputElement>) => {
+    socket.current?.emit("typing", {
+      receiver: currentContact,
+      sender: session?.currentUser,
+      message: e.target.value,
+    });
+  };
+
   return (
     <>
-      <div className="w-80 h-screen border-r fixed inset-0 z-50 sidebar-custom-scrollbar overflow-y-scroll">
+      <div className="w-80 max-md:w-16 h-screen border-r fixed inset-0 z-50">
         {isLoading && (
           <div className="w-full h-[95vh] flex justify-center items-center">
             <Loader2 size={50} className="animate-spin" />
@@ -493,7 +460,7 @@ const HomePage = () => {
 
         {!isLoading && <ContactList contacts={contacts} />}
       </div>
-      <div className="pl-80 w-full">
+      <div className="max-md:pl-16 pl-80 w-full">
         {!currentContact?._id && (
           <AddContact
             contactForm={contactForm}
diff --git a/app/auth/_components/social.tsx b/app/auth/_components/social.tsx
index 5ac1f9d..35f0f0e 100644
--- a/app/auth/_components/social.tsx
+++ b/app/auth/_components/social.tsx
@@ -1,20 +1,38 @@
-import { Button } from '@/components/ui/button'
-import React from 'react'
-import { FaGithub, FaGoogle } from 'react-icons/fa'
+"use client"
+
+import { Button } from "@/components/ui/button";
+import { signIn } from "next-auth/react";
+import React, { useState } from "react";
+import { FaGithub, FaGoogle } from "react-icons/fa";
 
 const Social = () => {
-	return (
-		<div className='grid grid-cols-2 w-full gap-1'>
-			<Button variant={'outline'}>
-				<span>Sign up with google</span>
-				<FaGoogle />
-			</Button>
-			<Button variant={'secondary'}>
-				<span>Sign up with github</span>
-				<FaGithub />
-			</Button>
-		</div>
-	)
-}
+  const [isLoading, setIsLoading] = useState(false);
+
+  const onSignIn = async (provider: string) => {
+    setIsLoading(true);
+    await signIn(provider, { callbackUrl: "/" });
+  };
+
+  return (
+    <div className="grid grid-cols-2 w-full gap-1">
+      <Button
+        variant={"outline"}
+        onClick={() => onSignIn("google")}
+        disabled={isLoading}
+      >
+        <span>Sign up with google</span>
+        <FaGoogle />
+      </Button>
+      <Button
+        variant={"secondary"}
+        onClick={() => onSignIn("github")}
+        disabled={isLoading}
+      >
+        <span>Sign up with github</span>
+        <FaGithub />
+      </Button>
+    </div>
+  );
+};
 
-export default Social
\ No newline at end of file
+export default Social;
diff --git a/components/cards/message.card.tsx b/components/cards/message.card.tsx
index 0eb467d..71ecec6 100644
--- a/components/cards/message.card.tsx
+++ b/components/cards/message.card.tsx
@@ -29,13 +29,13 @@ const MessageCard: FC<Props> = ({ message, onReaction, onDeleteMessage }) => {
 				<div
 					className={cn(
 						'm-2.5 font-medium text-xs flex',
-						message.receiver._id === currentContact?._id ? 'justify-start' : 'justify-end'
+						message.receiver._id === currentContact?._id ? 'justify-end' : 'justify-start'
 					)}
 				>
 					<div
 						className={cn(
 							'relative inline p-2 pl-2.5 pr-12 max-w-full',
-							message.receiver._id === currentContact?._id ? 'bg-primary' : 'bg-secondary'
+							message.receiver._id === currentContact?._id ? 'bg-secondary' : 'bg-primary'
 						)}
 					>
 					{message.image && <Image src={message.image} alt={message.image} width={200} height={150} />}
diff --git a/hooks/use-loading.ts b/hooks/use-loading.ts
index 8bcd45e..71f4853 100644
--- a/hooks/use-loading.ts
+++ b/hooks/use-loading.ts
@@ -1,3 +1,4 @@
+import { IUser } from '@/types'
 import { create } from 'zustand'
 
 type Store = {
@@ -7,8 +8,8 @@ type Store = {
 	setLoading: (isLoading: boolean) => void
 	loadMessages: boolean
 	setLoadMessages: (loadMessages: boolean) => void
-	typing: string
-	setTyping: (typing: string) => void
+	typing: { sender: IUser | null; message: string }
+	setTyping: (typing: { sender: IUser | null; message: string }) => void
 }
 
 export const useLoading = create<Store>()(set => ({
@@ -18,7 +19,6 @@ export const useLoading = create<Store>()(set => ({
 	setLoading: isLoading => set({ isLoading }),
 	loadMessages: false,
 	setLoadMessages: loadMessages => set({ loadMessages }),
-	typing: '',
+	typing: { sender: null, message: '' },
 	setTyping: typing => set({ typing }),
-}))
-
+}))
\ No newline at end of file
diff --git a/lib/auth-options.ts b/lib/auth-options.ts
index 5f7f7a8..99622a1 100644
--- a/lib/auth-options.ts
+++ b/lib/auth-options.ts
@@ -1,4 +1,6 @@
 import { NextAuthOptions } from 'next-auth'
+import GithubProvider from 'next-auth/providers/github'
+import GoogleProvider from 'next-auth/providers/google'
 import Credentials from 'next-auth/providers/credentials'
 import { connectToDatabase } from './mongoose'
 import User from '@/models/user.model'
@@ -14,6 +16,14 @@ export const authOptions: NextAuthOptions = {
 				return user
 			},
 		}),
+		GithubProvider({
+			clientId: process.env.GITHUB_CLIENT_ID!,
+			clientSecret: process.env.GITHUB_CLIENT_SECRET!,
+		}),
+		GoogleProvider({
+			clientId: process.env.GOOGLE_CLIENT_ID!,
+			clientSecret: process.env.GOOGLE_CLIENT_SECRET!,
+		}),
 	],
 	callbacks: {
 		async session({ session }) {
diff --git a/next.config.ts b/next.config.ts
index dea1f46..86c2e72 100644
--- a/next.config.ts
+++ b/next.config.ts
@@ -1,8 +1,6 @@
 import type { NextConfig } from "next";
 
 const nextConfig: NextConfig = {
-	reactStrictMode: false,
-	
  images: {
 		remotePatterns: [
 			{ protocol: 'https', hostname: 'github.com', pathname: '**' },
-- 
2.41.0

